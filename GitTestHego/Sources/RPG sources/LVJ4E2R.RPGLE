**FREE
       /TITLE Betaalscherm werkloosheid Edit record(2 screen)
       Ctl-Opt DATEDIT(*YMD);
        // CRTRPGPGM
        // CVTOPT(*DATETIME)

        // SYNOPSIS :
        // - Maintain DBF file records, one at a time
        // - Existing records may be updated or deleted
        // - New records may be added
        // - Key changes are not allowed

        // Generated by CA 2E release 8.7 (1632)
        // Function type : Edit record(2 screens)

        // Company       : Koning Albertlaan 95, 9000 Gent
        // System        : Testmodel ACLVB
        // User name     : ROSANNE
        // Date          : 04/02/25  Time  : 13:34:53
        // Copyright     : Koning Albertlaan 95, 9000 Gent

        //================================================================
        // Maintenance   :
        //================================================================
       Dcl-F LVHKCPL1 Usage(*Input) Keyed;
        // RTV : TW
       Dcl-F LVBSCPL1 Usage(*Input) Keyed;
       Dcl-F LVBOCPL1 Usage(*Input) Keyed;
       Dcl-F LVHZCPL1 Usage(*Input) Keyed;
       Dcl-F LVBYREL1 Usage(*Input) Keyed;
       Dcl-F LVEVREL1 Usage(*Input) Keyed;
       Dcl-F LXGOREL1 Usage(*Input) Keyed;
       Dcl-F LVB9REL1 Usage(*Input) Keyed;
       Dcl-F LYD4REL1 Usage(*Input) Keyed;
       Dcl-F LVMZREL2 Usage(*Input) Keyed;
       Dcl-F LVMZREL3 Usage(*Input) Keyed;
       Dcl-F LVBWREL0 Usage(*Input) Keyed;
        // RTV : AFHOUDING                 RETRIEVAL INDEX
       Dcl-F LVBZRELH Usage(*Input) Keyed;
       Dcl-F LVBZREL1 Usage(*Input) Keyed;
       Dcl-F Y2VLLSL0 Usage(*Input) Keyed;
        // Values list details file

       Dcl-F LVC8REL1 Usage(*Input) Keyed;
       Dcl-F LVAHCPL1 Usage(*Update:*Delete:*Output) Keyed COMMIT;
       Dcl-F LVA1CPL0 Usage(*Update:*Delete:*Output) Keyed COMMIT;
       Dcl-F LVBOCPL0 Usage(*Update:*Delete:*Output) Keyed COMMIT;
       Dcl-F LVHZCPL0 Usage(*Update:*Delete:*Output) Keyed COMMIT;
       Dcl-F LVBSCPL0 Usage(*Update:*Delete:*Output) Keyed COMMIT;
       Dcl-F LWDJCPL0 Usage(*Update:*Delete:*Output) Keyed COMMIT;
       Dcl-F LVCZCPL0 Usage(*Update:*Delete:*Output) Keyed COMMIT;
       Dcl-F LVHJCPL0 Usage(*Update:*Delete:*Output) Keyed COMMIT;
        // BLOKKEREN LID (BIJDR-LOCK) BIJ BC EN/OF X2
       Dcl-F LVAAREL0 Usage(*Input) Keyed;
       Dcl-F LVBIREL1 Usage(*Input) Keyed;
       Dcl-F LVJ4E2R# WORKSTN INFDS(INFDS#);
        // DSP: Betaalscherm werkloosheid Edit record(2 screen)

       Dcl-F LVCACPL1 Usage(*Input) Keyed INFDS(INFDS1);
        // RTV : Wkl betaling              Retrieval index

       Dcl-F LVA1CPL1 Usage(*Input) Keyed;
        // RTV : Werkloze                  Retrieval index

       Dcl-F LWB8CPL1 Usage(*Input) Keyed;
        // RTV : Programma Actief          Retrieval index

       Dcl-F LWBVCPL1 Usage(*Input) Keyed;
        // RTV : Toepassingen-Machtigingen Retrieval index

       Dcl-F LZBECPL1 Usage(*Input) Keyed;
        // RTV : Documenten BD meerdere    Retrieval index

       Dcl-F L0D0REL1 Usage(*Input) Keyed;
        // RTV : Buitenlanders niet-gepens Retrieval index

       Dcl-F LVB1REL1 Usage(*Input) Keyed;
        // RTV : Kateg suppl               Retrieval index

       Dcl-F LVCBREL0 Usage(*Input) Keyed;
        // RTV : C12 reden                 Retrieval index

       Dcl-F LVCACPL0 Usage(*Update:*Delete:*Output) Keyed COMMIT;
        // UPD : Wkl betaling              Update index

       Dcl-S DD           Packed(2:0) DIM(12) CTDATA PERRCD(12);
       Dcl-S JJV          Packed(6:0) DIM(12) CTDATA PERRCD(12); //VORIG JAAR 1994
       Dcl-S D6V          Packed(4:0) DIM(12) CTDATA PERRCD(12);
       Dcl-S MAV          Packed(4:0) DIM(12) CTDATA PERRCD(12); //LAATSTE DAG 94
       Dcl-S JJH          Packed(6:0) DIM(12) CTDATA PERRCD(12); //HUIDIG JAAR 1995
       Dcl-S D6H          Packed(4:0) DIM(12) CTDATA PERRCD(12);
       Dcl-S MAH          Packed(4:0) DIM(12) CTDATA PERRCD(12); //LAATSTE DAG 95
       Dcl-S JJK          Packed(6:0) DIM(12) CTDATA PERRCD(12); //KOMEND JAAR 1996
       Dcl-S D6K          Packed(4:0) DIM(12) CTDATA PERRCD(12);
       Dcl-S MAK          Packed(4:0) DIM(12) CTDATA PERRCD(12); //LAATSTE DAG 96
        //----------------------------------------------------------------
       Dcl-S KOD          Char(3)    DIM(6);
       Dcl-S AFH          Packed(7:2) DIM(6);
       Dcl-S DAT          Packed(6:0) DIM(6);
       Dcl-S TXX          Char(3)    DIM(6);
       Dcl-S TAS          Char(1)    DIM(6);
       Dcl-S TTT          Char(1)    DIM(6);
       Dcl-S PRI          Char(1)    DIM(6);

        // Long constants
       Dcl-S @CN#         Char(6)    DIM(36) CTDATA PERRCD(1);
       Dcl-S @CN          Char(25)   DIM(36) ALT(@CN#);
        // Screen one error indicator store
        // Screen two error indicator store
       /EJECT
        // Data structures:
       Dcl-DS PGMDS  PSDS EXTNAME('Y2PGDSP');
          // Modified Program data structure
        End-DS;
       Dcl-DS JBDTTM;
          // Job date/time
         ##JDT          Zoned(7:0) Pos(1);
         ##JCC          Zoned(1:0) Pos(1);
         ##JYY          Zoned(2:0) Pos(2);
         ##JMM          Zoned(2:0) Pos(4);
         ##JDD          Zoned(2:0) Pos(6);
         ##JTM          Zoned(6:0) Pos(8);
         ##JHH          Zoned(2:0) Pos(8);
         ##JNN          Zoned(2:0) Pos(10);
         ##JSS          Zoned(2:0) Pos(12);
          // ABO DEFINE LARGE STRING FOR CL CMD
        End-DS;
       Dcl-DS YARTCM Len(512);
         DUMMY1         Char(1)    Pos(1);
        End-DS;
       Dcl-DS INFDS#  EXTNAME('Y2I#DSP');
          // Display file information data structure

        End-DS;
       Dcl-DS INFDS1  EXTNAME('Y2I1DSP');
          // File information data structure

        End-DS;
       Dcl-DS @1DBRC  EXTNAME('LVCACPL0');
          // UPD : Wkl betaling              Update index
          // Current/previous master file format fields for change control

        End-DS;
       Dcl-DS #1DBRC Len(690);
          // Stored master file format fields
         #1DB1          Char(1)    Pos(1);

        End-DS;
       Dcl-DS @@I1;
          // Screen one error indicator store
         @I1            Char(100)  Pos(1) DIM(100);
         INSCR1         Char(8)    Pos(31);
        End-DS;
       Dcl-DS @@I2;
          // Screen two error indicator store
         @I2            Char(100)  Pos(1) DIM(100);
         INSCR2         Char(1)    Pos(31);
          // Outward parameters
        End-DS;
       Dcl-DS PARC Len(8);
          // KEY : Lid vorig geg             Retrieval index
          // I : RST Afdeling nr
         PAAACD         Char(2)    Pos(1);
          // I : RST Lid nr
         PAAFNB         Char(6)    Pos(3);

          // Outward parameters
        End-DS;
       Dcl-DS PBRC Len(8);
          // KEY : Lid vorig geg             Retrieval index
          // I : RST Afdeling nr
         PBAACD         Char(2)    Pos(1);
          // I : RST Lid nr
         PBAFNB         Char(6)    Pos(3);

        End-DS;
       Dcl-DS *N;
         V8N10C         Char(10)   Pos(1);
         DG810C         Char(2)    Pos(1);
         SL1            Char(1)    Pos(3) INZ('/');
         MD810C         Char(2)    Pos(4);
         SL2            Char(1)    Pos(6) INZ('/');
         JR810C         Char(4)    Pos(7);
          // Outward parameters
        End-DS;
       Dcl-DS PCRC Len(7);
          // KEY : Foutenlijsten pop-up      Retrieval index
          // I : RST Foutenlijsten Toepassing
         PCJECL         Char(6)    Pos(1);
          // I : RST Foutenlijsten taal
         PCJFCL         Char(1)    Pos(7);

          // Outward parameters
        End-DS;
       Dcl-DS PDRC Len(12);
          // KEY : WRK C2 Aantal dagen       Retrieval index
          // I : RST WRK C2 afd nr
         PDGK01         Char(2)    Pos(1);
          // I : RST WRK C2 lid nr
         PDGK02         Char(6)    Pos(3);
          // I : RST WRK C2 jaar
         PDGK03         Char(4)    Pos(9);

        End-DS;
       Dcl-DS *N;
         DTMBNK         Zoned(6:0) Pos(1);
         DAGBNK         Zoned(2:0) Pos(1);
         MNDBNK         Zoned(2:0) Pos(3);
         JRBNK          Zoned(2:0) Pos(5);
        End-DS;
       Dcl-DS *N;
         DT2BNK         Zoned(8:0) Pos(1);
         JR2BNK         Zoned(4:0) Pos(1);
         MD2BNK         Zoned(2:0) Pos(5);
         DG2BNK         Zoned(2:0) Pos(7);
          // Outward parameters
        End-DS;
       Dcl-DS PERC Len(2);
          // KEY : Afdeling                  Retrieval index
          // I : RST Afdeling nr
         PEAACD         Char(2)    Pos(1);

          // Outward parameters
        End-DS;
       Dcl-DS PFRC Len(3);
          // KEY : Afdeling                  Op zone,code hoofdafdeli
          // I : RST Zone code
         PFLX01         Char(2)    Pos(1);
          // I : RST Afd beheer
         PFAFST         Char(1)    Pos(3);

          // Outward parameters
        End-DS;
       Dcl-DS PGRC Len(11);
          // KEY : IBAN subbestand           Retrieval index
          // I : MAP IBAN subbest afdnr
         PGL4CH         Char(2)    Pos(1);
          // I : MAP IBAN subbest lidnr
         PGL5CH         Char(6)    Pos(3);
          // I : MAP IBAN toep.code
         PGL3CH         Char(3)    Pos(9);

          // Outward parameters
        End-DS;
       Dcl-DS PHRC Len(980);
          // RCD : Dummy file voor scherm    Physical file
          // I : MAP Dummy input
         PHBECL         Char(20)   Pos(1);
          // O : MAP Dummy tekst1
         PHJ4TT         Char(80)   Pos(21);
          // O : MAP Dummy tekst2
         PHJ5TT         Char(80)   Pos(101);
          // O : MAP Dummy tekst3
         PHJ6TT         Char(80)   Pos(181);
          // O : MAP Dummy tekst4
         PHJ7TT         Char(80)   Pos(261);
          // O : MAP Dummy tekst5
         PHJ8TT         Char(80)   Pos(341);
          // O : MAP Dummy tekst6
         PHJ9TT         Char(80)   Pos(421);
          // O : MAP Dummy tekst7
         PHKATT         Char(80)   Pos(501);
          // O : MAP Dummy tekst8
         PHKBTT         Char(80)   Pos(581);
          // O : MAP Dummy tekst9
         PHKCTT         Char(80)   Pos(661);
          // O : MAP Dummy tekst10
         PHKDTT         Char(80)   Pos(741);
          // O : MAP Dummy tekst11
         PHKETT         Char(80)   Pos(821);
          // O : MAP Dummy tekst12
         PHKFTT         Char(80)   Pos(901);

          // Outward parameters
        End-DS;
       Dcl-DS PIRC Len(690);
          // RCD : Wkl betaling              Physical file
          // I : MAP Afdeling nr
         PIAACD         Char(2)    Pos(1);
          // I : MAP Lid nr
         PIAFNB         Char(6)    Pos(3);
          // O : MAP VD5
         PIGGNB         Packed(3:0) Pos(27);
          // O : MAP HD5
         PIGHNB         Packed(3:0) Pos(29);
          // O : MAP Volle dagen BZ
         PIGPNB         Packed(3:0) Pos(70);
          // O : MAP Halve dagen BZ
         PIJNNB         Packed(3:0) Pos(72);
          // O : MAP Bedrag BZ
         PIGYNB         Packed(7:2) Pos(89);
          // O : MAP BZ1 dagen
         PIIYNB         Packed(3:1) Pos(240);
          // O : MAP BZ1 bedrag
         PIJHNB         Packed(7:2) Pos(242);
          // O : MAP BZ1 kode
         PIL0CD         Char(2)    Pos(246);
          // O : MAP BZ2 dagen
         PIIZNB         Packed(3:1) Pos(248);
          // O : MAP BZ2 bedrag
         PIJGNB         Packed(7:2) Pos(250);
          // O : MAP BZ2 kode
         PIL8CD         Char(2)    Pos(254);
          // O : MAP BZ3 dagen
         PII0NB         Packed(3:1) Pos(256);
          // O : MAP BZ3 bedrag
         PIJFNB         Packed(7:2) Pos(258);
          // O : MAP BZ3 kode
         PIL9CD         Char(2)    Pos(262);
          // O : MAP BZ4 dagen
         PII1NB         Packed(3:1) Pos(264);
          // O : MAP BZ4 bedrag
         PIJENB         Packed(7:2) Pos(266);
          // O : MAP BZ4 kode
         PIL1CD         Char(2)    Pos(270);
          // O : MAP BZ5 dagen
         PII2NB         Packed(3:1) Pos(272);
          // O : MAP BZ5 bedrag
         PII8NB         Packed(7:2) Pos(274);
          // O : MAP BZ5 kode
         PIL2CD         Char(2)    Pos(278);

        End-DS;
       Dcl-DS UDTME;
         UEDTM          Zoned(6:0) Pos(1);
         UDTMMM         Zoned(2:0) Pos(1);
         UDTMCC         Zoned(2:0) Pos(3);
         UDTMYY         Zoned(2:0) Pos(5);
        End-DS;
       Dcl-DS UDTMI;
         UIDTM          Zoned(6:0) Pos(1);
         UDTM1          Zoned(2:0) Pos(1);
         UDTM2          Zoned(2:0) Pos(3);
         UDTM3          Zoned(2:0) Pos(5);
          // Outward parameters
        End-DS;
       Dcl-DS PJRC Len(2);
          // KEY : Afdeling                  Retrieval index
          // I : RST Afdeling nr
         PJAACD         Char(2)    Pos(1);

          // Outward parameters
        End-DS;
       Dcl-DS PKRC Len(2);
          // KEY : Afdeling                  Retrieval index
          // I : RST Afdeling nr
         PKAACD         Char(2)    Pos(1);

          // Outward parameters
        End-DS;
       Dcl-DS PLRC Len(9);
          // KEY : GWB                       Retrieval index
          // I : RST Afdeling nr
         PLAACD         Char(2)    Pos(1);
          // I : RST GWB nr
         PLA2CD         Char(2)    Pos(3);
          // I : RST Gemeente nr
         PLBTNB         Char(5)    Pos(5);

          // Outward parameters
        End-DS;
       Dcl-DS PMRC Len(1);
          // KEY : Stoprecord                Retrieval index
          // I : RST Stoprecord kode
         PMHW01         Char(1)    Pos(1);

        End-DS;
       Dcl-DS *N;
         DTMDT1         Char(10)   Pos(1);
         DDDT1A         Char(2)    Pos(1);
         SLDT11         Char(1)    Pos(3);
         MMDT1A         Char(2)    Pos(4);
         SLDT12         Char(1)    Pos(6);
         JRDT1A         Char(4)    Pos(7);
          // Outward parameters
        End-DS;
       Dcl-DS PNRC Len(1);
          // KEY : Stoprecord                Retrieval index
          // I : RST Stoprecord kode
         PNHW01         Char(1)    Pos(1);

          // Outward parameters
        End-DS;
       Dcl-DS PORC Len(16);
          // KEY : Programma Actief          Retrieval index
          // I : RST Program Act - Jobnr
         POA7NN         Zoned(6:0) Pos(1);
          // I : RST Program Act - Program
         PORACO         Char(10)   Pos(7);

          // Outward parameters
        End-DS;
       Dcl-DS PPRC Len(8);
          // KEY : Lid                       Retrieval index
          // I : RST Afdeling nr
         PPAACD         Char(2)    Pos(1);
          // I : RST Lid nr
         PPAFNB         Char(6)    Pos(3);

          // Outward parameters
        End-DS;
       Dcl-DS PQRC Len(10);
          // KEY : Wkl betaling              Op afd/lidnr/betaaldag
          // I : RST Afdeling nr
         PQAACD         Char(2)    Pos(1);
          // I : RST Lid nr
         PQAFNB         Char(6)    Pos(3);
          // I : RST Wkl bet betaaldag
         PQCA01         Char(2)    Pos(9);

        End-DS;
       Dcl-DS UDTME2;
         UEDTM2         Zoned(6:0) Pos(1);
         UDTMM2         Zoned(2:0) Pos(1);
         UDTMC2         Zoned(2:0) Pos(3);
         UDTMY2         Zoned(2:0) Pos(5);
        End-DS;
       Dcl-DS UDTMI2;
         UIDTM2         Zoned(6:0) Pos(1);
         UDTM12         Zoned(2:0) Pos(1);
         UDTM22         Zoned(2:0) Pos(3);
         UDTM32         Zoned(2:0) Pos(5);
          // Outward parameters
        End-DS;
       Dcl-DS PRRC Len(13);
          // KEY : Dos.beheer-Aanvr.Werksch. Afd/lidnr/aanvr.D
          // I : RST Afdeling nr
         PRAACD         Char(2)    Pos(1);
          // I : RST Lid nr
         PRAFNB         Char(6)    Pos(3);
          // I : RST DOS WrkSchrm-Dat.Aanvr.UI
         PRTGDD         Packed(9:0) Pos(9);

          // Outward parameters
        End-DS;
       Dcl-DS PSRC Len(8);
          // KEY : Werkloze brugpensioen     Retrieval index
          // I : RST Afdeling nr
         PSAACD         Char(2)    Pos(1);
          // I : RST Lid nr
         PSAFNB         Char(6)    Pos(3);

        End-DS;
       Dcl-DS *N;
         DTMSAN         Char(10)   Pos(1);
         DD001A         Char(2)    Pos(1);
         SLSAN1         Char(1)    Pos(3);
         MM001A         Char(2)    Pos(4);
         SLSAN2         Char(1)    Pos(6);
         JR001A         Char(4)    Pos(7);
          // Outward parameters
        End-DS;
       Dcl-DS PTRC Len(8);
          // KEY : Gebruiker                 Retrieval index
          // I : RST Gebruiker signon
         PTBLCD         Char(8)    Pos(1);

          // Outward parameters
        End-DS;
       Dcl-DS PURC Len(2);
          // KEY : Gewest zone afdeling      Op afdelingsnr.
          // I : RST Afdeling nr
         PUAACD         Char(2)    Pos(1);

          // Outward parameters
        End-DS;
       Dcl-DS PVRC Len(8);
          // KEY : Wkl rekening              Retrieval index
          // I : MAP Afdeling nr
         PVAACD         Char(2)    Pos(1);
          // I : MAP Lid nr
         PVAFNB         Char(6)    Pos(3);

          // Outward parameters
        End-DS;
       Dcl-DS PWRC Len(16);
          // KEY : Programma Actief          Retrieval index
          // I : RST Program Act - Jobnr
         PWA7NN         Zoned(6:0) Pos(1);
          // I : RST Program Act - Program
         PWRACO         Char(10)   Pos(7);

        End-DS;
       Dcl-DS UDTDE;
         UEDTD          Zoned(8:0) Pos(1);
         UDTDDD         Zoned(2:0) Pos(1);
         UDTDMM         Zoned(2:0) Pos(3);
         UDTDCC         Zoned(2:0) Pos(5);
         UDTDYY         Zoned(2:0) Pos(7);
        End-DS;
       Dcl-DS UDTDI;
         UIDTD          Zoned(8:0) Pos(1);
         UDTD1          Zoned(2:0) Pos(1);
         UDTD2          Zoned(2:0) Pos(3);
         UDTD3          Zoned(2:0) Pos(5);
         UDTD4          Zoned(2:0) Pos(7);
          // Outward parameters
        End-DS;
       Dcl-DS PXRC Len(690);
          // RCD : Wkl betaling              Physical file
          // I : MAP Afdeling nr
         PXAACD         Char(2)    Pos(1);
          // I : MAP Lid nr
         PXAFNB         Char(6)    Pos(3);
          // I : MAP Datum achterstal
         PXGWNB         Packed(7:0) Pos(9);
          // I : MAP Kateg kode
         PXCLCD         Char(2)    Pos(13);
          // I : MAP Kateg jjmm
         PXE9NB         Packed(7:0) Pos(15);
          // I : MAP Taal kode
         PXARNB         Char(1)    Pos(19);
          // I : MAP C12 reden kode
         PXEGCD         Char(4)    Pos(20);
          // I : MAP Wkl bet. zone
         PXN8CE         Char(2)    Pos(24);
          // I : MAP Wkl bet. gewest
         PXN9CE         Char(1)    Pos(26);
          // I : MAP VD5
         PXGGNB         Packed(3:0) Pos(27);
          // I : MAP HD5
         PXGHNB         Packed(3:0) Pos(29);
          // I : MAP Uren ged.wkl.
         PXGINB         Packed(5:2) Pos(31);
          // I : MAP Geen uren ged. wkl.
         PXISCD         Char(1)    Pos(34);
          // I : MAP Y
         PXGJNB         Packed(7:2) Pos(35);
          // I : MAP Yft
         PXGKNB         Packed(7:2) Pos(39);
          // I : MAP VW
         PXGRNB         Packed(3:1) Pos(43);
          // I : MAP Min
         PXGSNB         Packed(3:1) Pos(45);
          // I : MAP Z+A
         PXGTNB         Packed(3:1) Pos(47);
          // I : MAP C3.2
         PXGUNB         Packed(3:1) Pos(49);
          // I : MAP Volle BZ C3.2
         PXJJNB         Packed(3:0) Pos(51);
          // I : MAP Halve BZ C3.2
         PXJKNB         Packed(3:0) Pos(53);
          // I : MAP Uren BV
         PXGVNB         Packed(5:2) Pos(55);
          // I : MAP VD6
         PXGLNB         Packed(3:0) Pos(58);
          // I : MAP HD6
         PXGMNB         Packed(3:0) Pos(60);
          // I : MAP Volle dagen verlof
         PXGNNB         Packed(3:0) Pos(62);
          // I : MAP Halve dagen verlof
         PXJLNB         Packed(3:0) Pos(64);
          // I : MAP Volle dagen vorst
         PXGONB         Packed(3:0) Pos(66);
          // I : MAP Halve dagen vorst
         PXJMNB         Packed(3:0) Pos(68);
          // I : MAP Volle dagen BZ
         PXGPNB         Packed(3:0) Pos(70);
          // I : MAP Halve dagen BZ
         PXJNNB         Packed(3:0) Pos(72);
          // I : MAP Volle dagen BZ2
         PXMINB         Packed(3:0) Pos(74);
          // I : MAP Halve dagen BZ2
         PXMJNB         Packed(3:0) Pos(76);
          // I : MAP Volle dagen BV
         PXG7NB         Packed(3:0) Pos(78);
          // I : MAP Halve dagen BV
         PXJONB         Packed(3:0) Pos(80);
          // I : MAP Dagen kbf sanktie
         PXGXNB         Packed(3:1) Pos(82);
          // I : MAP Bedrag wkl
         PXHPNB         Packed(7:2) Pos(84);
          // I : MAP Geen bedrag wklh
         PXBDST         Char(1)    Pos(88);
          // I : MAP Bedrag BZ
         PXGYNB         Packed(7:2) Pos(89);
          // I : MAP Geen dagen/bedrag BZ
         PXBCST         Char(1)    Pos(93);
          // I : MAP Taks
         PXHCNB         Packed(7:2) Pos(94);
          // I : MAP X2
         PXJQNB         Packed(5:2) Pos(98);
          // I : MAP RWP
         PXJRNB         Packed(7:2) Pos(101);
          // I : MAP BC aantal
         PXLPNB         Zoned(2:0) Pos(105);
          // I : MAP BC bedrag
         PXLQNB         Packed(7:2) Pos(107);
          // I : MAP Taks wkl
         PXT4NB         Packed(7:2) Pos(111);
          // I : MAP Taks BZ
         PXT5NB         Packed(7:2) Pos(115);
          // I : MAP Netto
         PXGQNB         Zoned(8:2) Pos(119);
          // I : MAP Netto wkl
         PXT6NB         Zoned(8:2) Pos(127);
          // I : MAP Netto BZ
         PXT7NB         Zoned(8:2) Pos(135);
          // I : MAP Afh1 kode
         PXDVCD         Char(3)    Pos(143);
          // I : MAP Afh1 bedrag
         PXGZNB         Packed(7:2) Pos(146);
          // I : MAP Afh1 datum
         PXG0NB         Packed(7:0) Pos(150);
          // I : MAP Afh1 kode TV
         PXOYCD         Char(3)    Pos(154);
          // I : MAP Afh1 laatste maal
         PXO5CD         Char(1)    Pos(157);
          // I : MAP Afh2 kode
         PXDWCD         Char(3)    Pos(158);
          // I : MAP Afh2 bedrag
         PXG1NB         Packed(7:2) Pos(161);
          // I : MAP Afh2 datum
         PXG2NB         Packed(7:0) Pos(165);
          // I : MAP Afh2 kode TV
         PXOZCD         Char(3)    Pos(169);
          // I : MAP Afh2 laatste maal
         PXO6CD         Char(1)    Pos(172);
          // I : MAP Afh3 kode
         PXDXCD         Char(3)    Pos(173);
          // I : MAP Afh3 bedrag
         PXG3NB         Packed(7:2) Pos(176);
          // I : MAP Afh3 datum
         PXG4NB         Packed(7:0) Pos(180);
          // I : MAP Afh3 kode TV
         PXO0CD         Char(3)    Pos(184);
          // I : MAP Afh3 laatste maal
         PXO7CD         Char(1)    Pos(187);
          // I : MAP Afh4 kode
         PXDYCD         Char(3)    Pos(188);
          // I : MAP Afh4 bedrag
         PXG5NB         Packed(7:2) Pos(191);
          // I : MAP Afh4 datum
         PXG6NB         Packed(7:0) Pos(195);
          // I : MAP Afh4 kode TV
         PXO1CD         Char(3)    Pos(199);
          // I : MAP Afh4 laatste maal
         PXO8CD         Char(1)    Pos(202);
          // I : MAP Afh5 kode
         PXEDCD         Char(3)    Pos(203);
          // I : MAP Afh5 bedrag
         PXHDNB         Packed(7:2) Pos(206);
          // I : MAP Afh5 datum
         PXHENB         Packed(7:0) Pos(210);
          // I : MAP Afh5 kode TV
         PXO2CD         Char(3)    Pos(214);
          // I : MAP Afh5 laatste maal
         PXO9CD         Char(1)    Pos(217);
          // I : MAP Afh6 kode
         PXEECD         Char(3)    Pos(218);
          // I : MAP Afh6 bedrag
         PXHFNB         Packed(7:2) Pos(221);
          // I : MAP Afh6 datum
         PXHGNB         Packed(7:0) Pos(225);
          // I : MAP Afh6 kode TV
         PXO3CD         Char(3)    Pos(229);
          // I : MAP Afh6 laatste maal
         PXPACD         Char(1)    Pos(232);
          // I : MAP DOK periode
         PXHJNB         Packed(7:0) Pos(233);
          // I : MAP DOK kategorie
         PXWUCD         Char(3)    Pos(237);
          // I : MAP BZ1 dagen
         PXIYNB         Packed(3:1) Pos(240);
          // I : MAP BZ1 bedrag
         PXJHNB         Packed(7:2) Pos(242);
          // I : MAP BZ1 kode
         PXL0CD         Char(2)    Pos(246);
          // I : MAP BZ2 dagen
         PXIZNB         Packed(3:1) Pos(248);
          // I : MAP BZ2 bedrag
         PXJGNB         Packed(7:2) Pos(250);
          // I : MAP BZ2 kode
         PXL8CD         Char(2)    Pos(254);
          // I : MAP BZ3 dagen
         PXI0NB         Packed(3:1) Pos(256);
          // I : MAP BZ3 bedrag
         PXJFNB         Packed(7:2) Pos(258);
          // I : MAP BZ3 kode
         PXL9CD         Char(2)    Pos(262);
          // I : MAP BZ4 dagen
         PXI1NB         Packed(3:1) Pos(264);
          // I : MAP BZ4 bedrag
         PXJENB         Packed(7:2) Pos(266);
          // I : MAP BZ4 kode
         PXL1CD         Char(2)    Pos(270);
          // I : MAP BZ5 dagen
         PXI2NB         Packed(3:1) Pos(272);
          // I : MAP BZ5 bedrag
         PXI8NB         Packed(7:2) Pos(274);
          // I : MAP BZ5 kode
         PXL2CD         Char(2)    Pos(278);
          // I : MAP Zone vorig barema1
         PXA7ST         Char(1)    Pos(280);
          // I : MAP Zone vorig barema2
         PXKBCD         Char(1)    Pos(281);
          // I : MAP Zone vorig barema3
         PXKCCD         Char(1)    Pos(282);
          // I : MAP Zone vorig barema4
         PXKDCD         Char(1)    Pos(283);
          // I : MAP Zone vorig barema5
         PXKECD         Char(1)    Pos(284);
          // I : MAP RVA indieningsmaand
         PXA5DM         Packed(7:0) Pos(285);
          // I : MAP RVA UI-afdeling
         PXLONB         Zoned(4:0) Pos(289);
          // I : MAP RVA type C10
         PXBIST         Char(1)    Pos(293);
          // I : MAP RVA Gewestelijk bureau
         PXMCCD         Char(2)    Pos(294);
          // I : MAP RVA identificatienr
         PXMNCD         Zoned(9:0) Pos(296);
          // I : MAP Nr betaler
         PXMDCD         Char(3)    Pos(305);
          // I : MAP Type werkloosheid
         PXMBCD         Char(2)    Pos(308);
          // I : MAP Kode beroep
         PXMECD         Char(2)    Pos(310);
          // I : MAP Kode subberoep
         PXRQCD         Char(1)    Pos(312);
          // I : MAP Barema
         PXMFCD         Char(7)    Pos(313);
          // I : MAP Complement
         PXMGCD         Zoned(2:0) Pos(320);
          // I : MAP Kode BZ
         PXMOCD         Char(2)    Pos(322);
          // I : MAP Wkl adres opdrachtg.
         PXT5CD         Char(26)   Pos(324);
          // I : MAP Wkl postnr opdrachtg.
         PXT6CD         Char(4)    Pos(350);
          // I : MAP Wkl lokaliteit opdrachtg.
         PXT7CD         Char(22)   Pos(354);
          // I : MAP Wkl taal opdrachtg.
         PXT8CD         Char(1)    Pos(376);
          // I : MAP Wkl naam begunst.
         PXMICD         Char(30)   Pos(377);
          // I : MAP Wkl adres begunst.
         PXMJCD         Char(30)   Pos(407);
          // I : MAP Wkl postnr begunst.
         PXMKCD         Char(4)    Pos(437);
          // I : MAP Wkl post subkode begunst.
         PXVCCD         Char(1)    Pos(441);
          // I : MAP Wkl lokaliteit begunst.
         PXMLCD         Char(25)   Pos(442);
          // I : MAP Wkl banknr begunst.
         PXMMCD         Zoned(12:0) Pos(467);
          // I : MAP Wkl taalkode begunst.
         PXMUCD         Char(1)    Pos(479);
          // I : MAP Wkl bankkode
         PXV6CD         Char(1)    Pos(480);
          // I : MAP Wkl INDIR-indieningsmnd
         PXLJNB         Zoned(6:0) Pos(481);
          // I : MAP Wkl INDIR-UI-afdeling
         PXLKNB         Zoned(4:0) Pos(487);
          // I : MAP Wkl INDIR-type
         PXM4CD         Char(1)    Pos(491);
          // I : MAP Wkl INDIR-GWB-nr
         PXLLNB         Zoned(2:0) Pos(492);
          // I : MAP Wkl INDIR-identificatienr
         PXLMNB         Zoned(9:0) Pos(494);
          // I : MAP Wkl INDIR-maand F.O.
         PXLNNB         Zoned(6:0) Pos(503);
          // I : MAP Wkl datum laatste stempel
         PXAKDD         Packed(9:0) Pos(509);
          // I : MAP Wkl Yuur
         PXBANR         Packed(7:4) Pos(514);
          // I : MAP Wkl n-verg. n-gecont. dgn
         PXBBNR         Packed(3:1) Pos(518);
          // I : MAP Wie heeft wklh berekend ?
         PXBKCE         Char(1)    Pos(520);
          // I : MAP Wie heeft BZ berekend ?
         PXBLCE         Char(1)    Pos(521);
          // I : MAP Verlof 6 dagen BV
         PXBMCE         Char(1)    Pos(522);
          // I : MAP Verlof 6 dagen V
         PXBNCE         Char(1)    Pos(523);
          // I : MAP Wkl vorstzone
         PXBOCE         Char(2)    Pos(524);
          // I : MAP Wkl inhoudingspct.
         PXBCNR         Packed(5:3) Pos(526);
          // I : MAP Wkl dagbedrag
         PXBDNR         Packed(7:2) Pos(529);
          // I : MAP Wkl gemiddeld maandbedr.
         PXBENR         Packed(9:2) Pos(533);
          // I : MAP Wkl Q
         PXBFNR         Packed(5:2) Pos(538);
          // I : MAP Wkl S
         PXBGNR         Packed(5:2) Pos(541);
          // I : MAP Wkl verif.05/98(ind.RVA)
         PXBPCE         Char(1)    Pos(544);
          // I : MAP Wkl C10bis
         PXBQCE         Char(2)    Pos(545);
          // I : MAP Wkl vergoedbaarh. artikel
         PXBRCE         Char(6)    Pos(547);
          // I : MAP Wkl toelaatbaarh. artikel
         PXBSCE         Char(11)   Pos(553);
          // I : MAP Wkl datum begin wklh.
         PXM7DD         Packed(9:0) Pos(564);
          // I : MAP Wkl laatst vergoede dag
         PXM8DD         Packed(9:0) Pos(569);
          // I : MAP Wkl laatst gecontr. dag
         PXM9DD         Packed(9:0) Pos(574);
          // I : MAP Wkl sanctiecode1
         PXBTCE         Char(9)    Pos(579);
          // I : MAP Wkl begindatum sanctie1
         PXNADD         Packed(9:0) Pos(588);
          // I : MAP Wkl einddatum sanctie1
         PXNBDD         Packed(9:0) Pos(593);
          // I : MAP Wkl sanctiecode2
         PXBUCE         Char(9)    Pos(598);
          // I : MAP Wkl begindatum sanctie2
         PXNCDD         Packed(9:0) Pos(607);
          // I : MAP Wkl einddatum sanctie2
         PXNDDD         Packed(9:0) Pos(612);
          // I : MAP Wkl add-user
         PXPICD         Char(8)    Pos(617);
          // I : MAP Wkl add-datum
         PXASDD         Packed(9:0) Pos(625);
          // I : MAP Wkl add-time
         PXALTM         Packed(7:0) Pos(630);
          // I : MAP Wkl bet betaaldag
         PXCA01         Char(2)    Pos(634);
          // I : MAP Wkl bet Uitv.datum bank
         PXY4NB         Zoned(6:0) Pos(636);
          // I : MAP Wkl bet NBR vrij1
         PXFXNR         Zoned(2:0) Pos(642);
          // I : MAP Wkl bet NBR vrij2
         PXFYNR         Zoned(2:0) Pos(644);
          // I : MAP Wkl bet NBR vrij3
         PXFZNR         Packed(3:1) Pos(646);
          // I : MAP Wkl bet NBR vrij4
         PXF0NR         Packed(7:2) Pos(648);
          // I : MAP Wkl bet NBR vrij5
         PXF1NR         Packed(7:2) Pos(652);
          // I : MAP Wkl bet CDE vrij1
         PXMOCE         Char(1)    Pos(656);
          // I : MAP Wkl bet CDE vrij2
         PXMPCE         Char(2)    Pos(657);
          // I : MAP Wkl bet CDE vrij3
         PXMQCE         Char(3)    Pos(659);
          // I : MAP Wkl bet CDE vrij10
         PXMRCE         Char(10)   Pos(662);
          // I : MAP Wkl bet DTM vrij1
         PXIVDM         Packed(7:0) Pos(672);
          // I : MAP Wkl bet DTM vrij2
         PXIWDM         Packed(7:0) Pos(676);
          // I : MAP Wkl bet DTD vrij1
         PXPWDD         Packed(9:0) Pos(680);
          // I : MAP Wkl bet DTD vrij2
         PXPXDD         Packed(9:0) Pos(685);
          // I : MAP Wkl betaling BEF/EURO
         PXGDCE         Char(1)    Pos(690);

          // Outward parameters
        End-DS;
       Dcl-DS PYRC Len(27);
          // KEY : MFA WECH update           Retrieval index
          // I : RST WECHupd 00222 Handl.refnr
         PYZ8CC         Char(20)   Pos(1);
          // I : RST WECHupd 00296 soort form
         PYY2CC         Char(7)    Pos(21);

          // Outward parameters
        End-DS;
       Dcl-DS PZRC Len(8);
          // KEY : Lid                       Retrieval index
          // I : MAP Afdeling nr
         PZAACD         Char(2)    Pos(1);
          // I : MAP Lid nr
         PZAFNB         Char(6)    Pos(3);

          // Outward parameters
        End-DS;
       Dcl-DS AARC Len(38);
          // KEY : Documenten BD meerdere    Retrieval index
          // I : MAP Afdeling nr
         AAAACD         Char(2)    Pos(1);
          // I : MAP Lid nr
         AAAFNB         Char(6)    Pos(3);
          // I : MAP Doc BD meer betaaldag
         AAY0CJ         Char(2)    Pos(9);
          // I : MAP Doc BD meer RM
         AAQLDM         Packed(7:0) Pos(11);
          // I : MAP Doc BD meer IM
         AAQMDM         Packed(7:0) Pos(15);
          // I : MAP Doc BD meer toepassing
         AAY1CJ         Char(10)   Pos(19);
          // I : MAP Doc BD meer docsoort
         AAY2CJ         Char(10)   Pos(29);

          // Outward parameters
        End-DS;
       Dcl-DS ABRC Len(18);
          // KEY : Wkl betaling meerdere bar Retrieval index
          // B : MAP Afdeling nr
         ABAACD         Char(2)    Pos(1);
          // B : MAP Lid nr
         ABAFNB         Char(6)    Pos(3);
          // B : MAP Wkl bet meer betaaldag
         ABRNCJ         Char(2)    Pos(9);
          // B : MAP Wkl bet meer RM
         ABQADM         Packed(7:0) Pos(11);
          // B : MAP Wkl bet meer IM
         ABQBDM         Packed(7:0) Pos(15);

          // Outward parameters
        End-DS;
       Dcl-DS ACRC Len(18);
          // KEY : Wkl betaling meerdere bar Retrieval index
          // I : MAP Afdeling nr
         ACAACD         Char(2)    Pos(1);
          // I : MAP Lid nr
         ACAFNB         Char(6)    Pos(3);
          // I : MAP Wkl bet meer betaaldag
         ACRNCJ         Char(2)    Pos(9);
          // I : MAP Wkl bet meer RM
         ACQADM         Packed(7:0) Pos(11);
          // I : MAP Wkl bet meer IM
         ACQBDM         Packed(7:0) Pos(15);

        End-DS;
       Dcl-DS *N;
         F24DGN         Zoned(12:0) Pos(1);
         F24R6          Zoned(2:0) Pos(1);
         F24HR6         Zoned(2:0) Pos(3);
         F24V           Zoned(2:0) Pos(5);
         F24HV          Zoned(2:0) Pos(7);
         F24BV          Zoned(2:0) Pos(9);
         F24HBV         Zoned(2:0) Pos(11);
          // Outward parameters
        End-DS;
       Dcl-DS ADRC Len(21);
          // KEY : Documenten Betaaldossier  Toep/taal/schermnr
          // I : RST Documenten BD Toepassing
         ADYVCJ         Char(10)   Pos(1);
          // I : RST Documenten BD taal
         ADYXCJ         Char(1)    Pos(11);

          // Outward parameters
        End-DS;
       Dcl-DS AERC Len(141);
          // RCD : Documenten BD meerdere    Retrieval index
          // I : MAP Afdeling nr
         AEAACD         Char(2)    Pos(1);
          // I : MAP Lid nr
         AEAFNB         Char(6)    Pos(3);
          // I : MAP Doc BD meer betaaldag
         AEY0CJ         Char(2)    Pos(9);
          // I : MAP Doc BD meer RM
         AEQLDM         Packed(7:0) Pos(11);
          // I : MAP Doc BD meer IM
         AEQMDM         Packed(7:0) Pos(15);
          // I : MAP Doc BD meer toepassing
         AEY1CJ         Char(10)   Pos(19);
          // I : MAP Doc BD meer docsoort
         AEY2CJ         Char(10)   Pos(29);
          // I : MAP Doc BD meer doctekst
         AEW3TN         Char(70)   Pos(39);
          // I : MAP Doc BD meer C12 reden
         AEY3CJ         Char(4)    Pos(109);
          // I : MAP Doc BD meer dtm betaling
         AEQ4DE         Packed(9:0) Pos(113);
          // I : MAP Doc BD meer dok periode
         AEQNDM         Packed(7:0) Pos(118);
          // I : MAP Doc BD meer dagbst/hist
         AEY4CJ         Char(1)    Pos(122);

        End-DS;
       Dcl-DS *N;
         BARC10         Char(7)    Pos(1);
         P14            Char(4)    Pos(1);
         P12            Char(2)    Pos(1);
         P33            Char(1)    Pos(3);
         P34            Char(2)    Pos(3);
         P35            Char(3)    Pos(3);
         P45            Char(2)    Pos(4);
         P55            Char(1)    Pos(5);
         P36            Char(4)    Pos(3);
         P46            Char(3)    Pos(4);
         P67            Char(2)    Pos(6);
         P77            Char(1)    Pos(7);
         P16            Char(6)    Pos(1);
          // Outward parameters
        End-DS;
       Dcl-DS AFRC Len(16);
          // KEY : S44 verblijfsbewijs       Retrieval index
          // I : RST S44 INSZ lid
         AFLFCJ         Char(11)   Pos(1);
          // I : RST S44 volgnr
         AFQ9ND         Zoned(5:0) Pos(12);

        End-DS;
       Dcl-DS *N;
         P01T32         Char(32)   Pos(1);
         DG0102         Char(2)    Pos(1);
         DG0304         Char(2)    Pos(3);
         DG0506         Char(2)    Pos(5);
         DG0708         Char(2)    Pos(7);
         DG0910         Char(2)    Pos(9);
         DG1112         Char(2)    Pos(11);
         DG1314         Char(2)    Pos(13);
         DG1516         Char(2)    Pos(15);
         DG1718         Char(2)    Pos(17);
         DG1920         Char(2)    Pos(19);
         DG2122         Char(2)    Pos(21);
         DG2324         Char(2)    Pos(23);
         DG2526         Char(2)    Pos(25);
         DG2728         Char(2)    Pos(27);
         DG2930         Char(2)    Pos(29);
         DG3132         Char(2)    Pos(31);
          // Outward parameters
        End-DS;
       Dcl-DS AGRC Len(20);
          // KEY : Maandoverzicht            Retrieval index
          // I : RST Maandov INSZ
         AGR7CH         Char(11)   Pos(1);
          // I : RST Maandov RM
         AGPPDM         Packed(7:0) Pos(12);
          // I : RST Maandov volgnr
         AGJ7ND         Zoned(5:0) Pos(16);

        End-DS;
       Dcl-DS UDTDE2;
         UEDTD2         Zoned(8:0) Pos(1);
         UDTDD2         Zoned(2:0) Pos(1);
         UDTDM2         Zoned(2:0) Pos(3);
         UDTDC2         Zoned(2:0) Pos(5);
         UDTDY2         Zoned(2:0) Pos(7);
        End-DS;
       Dcl-DS UDTDI2;
         UIDTD2         Zoned(8:0) Pos(1);
         UDTD12         Zoned(2:0) Pos(1);
         UDTD22         Zoned(2:0) Pos(3);
         UDTD32         Zoned(2:0) Pos(5);
         UDTD42         Zoned(2:0) Pos(7);
          // Outward parameters
        End-DS;
       Dcl-DS AHRC Len(2);
          // KEY : Type maximum bedrag       Retrieval index
          // I : RST Max : Type wklh
         AHS0CO         Char(2)    Pos(1);

          // Outward parameters
        End-DS;
       Dcl-DS AIRC Len(10);
          // KEY : Metaal attesten           Afd/lidnr/type
          // I : RST Afdeling nr
         AIAACD         Char(2)    Pos(1);
          // I : RST Lid nr
         AIAFNB         Char(6)    Pos(3);
          // I : RST Metaal type kaart
         AIEICO         Char(2)    Pos(9);

          // Outward parameters
        End-DS;
       Dcl-DS AJRC Len(12);
          // KEY : OV betaling wklh.         Op afd/lidnr/Ref.maand A
          // I : RST Afdeling nr
         AJAACD         Char(2)    Pos(1);
          // I : RST Lid nr
         AJAFNB         Char(6)    Pos(3);
          // I : RST OVW refertemaand
         AJK5NB         Packed(7:0) Pos(9);

          // Outward parameters
        End-DS;
       Dcl-DS AKRC Len(12);
          // KEY : Wkl betaling              Retrieval index
          // I : RST Afdeling nr
         AKAACD         Char(2)    Pos(1);
          // I : RST Lid nr
         AKAFNB         Char(6)    Pos(3);
          // I : RST Datum achterstal
         AKGWNB         Packed(7:0) Pos(9);

          // Outward parameters
        End-DS;
       Dcl-DS ALRC Len(787);
          // RCD : Werkloze baremas          Physical file
          // I : MAP Afdeling nr
         ALAACD         Char(2)    Pos(1);
          // I : MAP Lid nr
         ALAFNB         Char(6)    Pos(3);
          // I : MAP Werkloze baremas volgnr
         ALNFND         Zoned(6:0) Pos(9);
          // I : MAP Werkloze baremas RVA-ACLV
         ALPPCJ         Char(1)    Pos(15);
          // I : MAP Werkloze baremas geld.dtm
         ALNEDE         Packed(9:0) Pos(16);
          // I : MAP Werkloze baremas RRNRd1d2
         ALDVCJ         Char(9)    Pos(21);
          // I : MAP Werkloze baremas dat UA
         ALQIDE         Packed(9:0) Pos(30);
          // I : MAP Werkloze baremas UA volgr
         ALX0ND         Zoned(5:0) Pos(35);
          // I : MAP Werkloze baremas risico
         ALVKCJ         Char(1)    Pos(40);
          // I : MAP 1ste periode Datum1
         ALKJDE         Packed(9:0) Pos(41);
          // I : MAP Taal kode
         ALARNB         Char(1)    Pos(46);
          // I : MAP Type wklh. kode
         ALA1CD         Char(2)    Pos(47);
          // I : MAP Barema RVAkode
         ALDOCD         Char(7)    Pos(49);
          // I : MAP 1ste periode Datum2
         ALKKDE         Packed(9:0) Pos(56);
          // I : MAP 1ste periode type2 Type w
         ALY0CI         Char(2)    Pos(61);
          // I : MAP 1ste periode barema2 Bare
         ALY1CI         Char(7)    Pos(63);
          // I : MAP 1ste periode Datum3
         ALKLDE         Packed(9:0) Pos(70);
          // I : MAP 1ste periode type3 Type w
         ALY2CI         Char(2)    Pos(75);
          // I : MAP 1ste periode barema3 Bare
         ALY3CI         Char(7)    Pos(77);
          // I : MAP 1ste periode datum4
         ALLCDE         Packed(9:0) Pos(84);
          // I : MAP 1ste periode type4 079113
         ALGTCJ         Char(2)    Pos(89);
          // I : MAP 1ste periode barema079115
         ALGUCJ         Char(7)    Pos(91);
          // I : MAP 1ste periode datum5
         ALLDDE         Packed(9:0) Pos(98);
          // I : MAP 1ste periode type5 079119
         ALGVCJ         Char(2)    Pos(103);
          // I : MAP 1ste periode barema079121
         ALGWCJ         Char(7)    Pos(105);
          // I : MAP 1ste periode datum6
         ALLEDE         Packed(9:0) Pos(112);
          // I : MAP 1ste periode type6 079125
         ALGXCJ         Char(2)    Pos(117);
          // I : MAP 1ste periode barema079127
         ALGYCJ         Char(7)    Pos(119);
          // I : MAP 1ste periode datum7
         ALLFDE         Packed(9:0) Pos(126);
          // I : MAP 1ste periode type7 079131
         ALGZCJ         Char(2)    Pos(131);
          // I : MAP 1ste periode barema079133
         ALG0CJ         Char(7)    Pos(133);
          // I : MAP 1ste periode datum8
         ALLGDE         Packed(9:0) Pos(140);
          // I : MAP 1ste periode type8 079137
         ALG1CJ         Char(2)    Pos(145);
          // I : MAP 1ste periode barema079139
         ALG2CJ         Char(7)    Pos(147);
          // I : MAP 1ste periode datum9
         ALLHDE         Packed(9:0) Pos(154);
          // I : MAP 1ste periode type9 079143
         ALG3CJ         Char(2)    Pos(159);
          // I : MAP 1ste periode barema079145
         ALG4CJ         Char(7)    Pos(161);
          // I : MAP 1ste periode datum10
         ALLIDE         Packed(9:0) Pos(168);
          // I : MAP 1ste periode type10079149
         ALG5CJ         Char(2)    Pos(173);
          // I : MAP 1ste periode barema079151
         ALG6CJ         Char(7)    Pos(175);
          // I : MAP 1ste periode datum11
         ALLJDE         Packed(9:0) Pos(182);
          // I : MAP 1ste periode type11079155
         ALG7CJ         Char(2)    Pos(187);
          // I : MAP 1ste periode barema079157
         ALG8CJ         Char(7)    Pos(189);
          // I : MAP 1ste periode datum12
         ALLKDE         Packed(9:0) Pos(196);
          // I : MAP 1ste periode type12079161
         ALG9CJ         Char(2)    Pos(201);
          // I : MAP 1ste periode barema079163
         ALHACJ         Char(7)    Pos(203);
          // I : MAP 1ste periode datum13
         ALLLDE         Packed(9:0) Pos(210);
          // I : MAP 1ste periode type13079167
         ALHBCJ         Char(2)    Pos(215);
          // I : MAP 1ste periode barema079169
         ALHCCJ         Char(7)    Pos(217);
          // I : MAP 1ste periode datum14
         ALLMDE         Packed(9:0) Pos(224);
          // I : MAP 1ste periode type14079173
         ALHDCJ         Char(2)    Pos(229);
          // I : MAP 1ste periode barema079175
         ALHECJ         Char(7)    Pos(231);
          // I : MAP 1ste periode datum15
         ALLNDE         Packed(9:0) Pos(238);
          // I : MAP 1ste periode type15079179
         ALHFCJ         Char(2)    Pos(243);
          // I : MAP 1ste periode barema079181
         ALHGCJ         Char(7)    Pos(245);
          // I : MAP 1ste periode datum16
         ALKODE         Packed(9:0) Pos(252);
          // I : MAP 3de periode type1 Type wk
         ALY8CI         Char(2)    Pos(257);
          // I : MAP 3de periode barema1 Barem
         ALY9CI         Char(7)    Pos(259);
          // I : MAP 1ste periode datum17
         ALLODE         Packed(9:0) Pos(266);
          // I : MAP 3de periode type2 T079263
         ALH7CJ         Char(2)    Pos(271);
          // I : MAP 3de periode barema2079265
         ALH8CJ         Char(7)    Pos(273);
          // I : MAP 1ste periode datum18
         ALLPDE         Packed(9:0) Pos(280);
          // I : MAP 3de periode type3 T079269
         ALH9CJ         Char(2)    Pos(285);
          // I : MAP 3de periode barema3079271
         ALIACJ         Char(7)    Pos(287);
          // I : MAP Werkloze S04 dagbedrag1
         ALUEND         Zoned(6:2) Pos(294);
          // I : MAP Werkloze S04 dagbedrag2
         ALUFND         Zoned(6:2) Pos(300);
          // I : MAP Werkloze S04 dagbedrag3
         ALUGND         Zoned(6:2) Pos(306);
          // I : MAP Werkloze S04 dagbedrag4
         ALUHND         Zoned(6:2) Pos(312);
          // I : MAP Werkloze S04 dagbedrag5
         ALUIND         Zoned(6:2) Pos(318);
          // I : MAP Werkloze S04 dagbedrag6
         ALUJND         Zoned(6:2) Pos(324);
          // I : MAP Werkloze S04 dagbedrag7
         ALUKND         Zoned(6:2) Pos(330);
          // I : MAP Werkloze S04 dagbedrag8
         ALULND         Zoned(6:2) Pos(336);
          // I : MAP Werkloze S04 dagbedrag9
         ALUMND         Zoned(6:2) Pos(342);
          // I : MAP Werkloze S04 dagbedrag10
         ALUNND         Zoned(6:2) Pos(348);
          // I : MAP Werkloze S04 dagbedrag11
         ALUOND         Zoned(6:2) Pos(354);
          // I : MAP Werkloze S04 dagbedrag12
         ALUPND         Zoned(6:2) Pos(360);
          // I : MAP Werkloze S04 dagbedrag13
         ALUQND         Zoned(6:2) Pos(366);
          // I : MAP Werkloze S04 dagbedrag14
         ALURND         Zoned(6:2) Pos(372);
          // I : MAP Werkloze S04 dagbedrag15
         ALUSND         Zoned(6:2) Pos(378);
          // I : MAP Werkloze S04 dagbedrag16
         ALUTND         Zoned(6:2) Pos(384);
          // I : MAP Werkloze S04 dagbedrag17
         ALUUND         Zoned(6:2) Pos(390);
          // I : MAP Werkloze S04 dagbedrag18
         ALUVND         Zoned(6:2) Pos(396);
          // I : MAP TW datum1
         ALKMDE         Packed(9:0) Pos(402);
          // I : MAP 2de periode type1 Type wk
         ALY4CI         Char(2)    Pos(407);
          // I : MAP 2de periode barema1 Barem
         ALY5CI         Char(7)    Pos(409);
          // I : MAP TW datum2
         ALKNDE         Packed(9:0) Pos(416);
          // I : MAP 2de periode type2 Type wk
         ALY6CI         Char(2)    Pos(421);
          // I : MAP 2de periode barema2 Barem
         ALY7CI         Char(7)    Pos(423);
          // I : MAP TW datum3
         ALKZDE         Packed(9:0) Pos(430);
          // I : MAP 2de peridoe type3 T079185
         ALHHCJ         Char(2)    Pos(435);
          // I : MAP 2de periode barema3079187
         ALHICJ         Char(7)    Pos(437);
          // I : MAP Werkloze S04 TW dagbedr1
         ALU0ND         Zoned(6:2) Pos(444);
          // I : MAP Werkloze S04 TW dagbedr2
         ALU1ND         Zoned(6:2) Pos(450);
          // I : MAP Werkloze S04 TW dagbedr3
         ALU2ND         Zoned(6:2) Pos(456);
          // I : MAP Werkloze S04 TW Q1
         ALUWND         Zoned(4:2) Pos(462);
          // I : MAP Werkloze S04 TW S1
         ALUXND         Zoned(4:2) Pos(466);
          // I : MAP Werkloze S04 TW Q2
         ALUYND         Zoned(4:2) Pos(470);
          // I : MAP Werkloze S04 TW S2
         ALUZND         Zoned(4:2) Pos(474);
          // I : MAP Werkloze S04 vervaldatim
         ALPADE         Packed(9:0) Pos(478);
          // I : MAP Werkloze S04 context
         ALPXCJ         Char(2)    Pos(483);
          // I : MAP Werkloze S04 aantal maand
         ALT6ND         Zoned(3:0) Pos(485);
          // I : MAP Werkloze S04 datum vanaf
         ALPBDE         Packed(9:0) Pos(488);
          // I : MAP Werkloze S04 Ber.verl L
         ALT7ND         Zoned(2:0) Pos(493);
          // I : MAP Werkloze S04 Ber.verl A/N
         ALT8ND         Zoned(2:0) Pos(495);
          // I : MAP Werkloze S04 Ber.verl B/N
         ALT9ND         Zoned(2:0) Pos(497);
          // I : MAP Werkloze S04 berekend tem
         ALPCDE         Packed(9:0) Pos(499);
          // I : MAP Werkloze S04 spec
         ALPYCJ         Char(2)    Pos(504);
          // I : MAP Werkloze S04 alg Q1
         ALUAND         Zoned(4:2) Pos(506);
          // I : MAP Werkloze S04 alg S1
         ALUBND         Zoned(4:2) Pos(510);
          // I : MAP Werkloze S04 alg Q2
         ALUCND         Zoned(4:2) Pos(514);
          // I : MAP Werkloze S04 alg S2
         ALUDND         Zoned(4:2) Pos(518);
          // I : MAP Werkloze S04 complement
         ALP0CJ         Char(3)    Pos(522);
          // I : MAP Werkloze S04 dtm complem
         ALPDDE         Packed(9:0) Pos(525);
          // I : MAP Werkloze S04 bedrag compl
         ALU3ND         Zoned(6:2) Pos(530);
          // I : MAP Werkloze S04 vergart1
         ALP1CJ         Char(6)    Pos(536);
          // I : MAP Werkloze S04 vergart2
         ALP2CJ         Char(6)    Pos(542);
          // I : MAP Werkloze S04 vergart3
         ALP3CJ         Char(6)    Pos(548);
          // I : MAP Werkloze S04 vergart4
         ALZ1CJ         Char(6)    Pos(554);
          // I : MAP Werkloze S04 vergart5
         ALZ2CJ         Char(6)    Pos(560);
          // I : MAP Werkloze S04 vergart6
         ALZ3CJ         Char(6)    Pos(566);
          // I : MAP Werkloze S04 toelart1
         ALP4CJ         Char(11)   Pos(572);
          // I : MAP Werkloze S04 toelart2
         ALP5CJ         Char(11)   Pos(583);
          // I : MAP Werkloze S04 toelart3
         ALP6CJ         Char(11)   Pos(594);
          // I : MAP Werkloze S04 toelart4
         ALZ4CJ         Char(11)   Pos(605);
          // I : MAP Werkloze S04 toelart5
         ALZ5CJ         Char(11)   Pos(616);
          // I : MAP Werkloze S04 toelart6
         ALZ6CJ         Char(11)   Pos(627);
          // I : MAP Werkloze S04 commentaarRV
         ALV9TN         Char(40)   Pos(638);
          // I : MAP Werkloze S04 commentaar2
         ALWATN         Char(40)   Pos(678);
          // I : MAP werkloze baremas dat DPDW
         ALQNDE         Packed(9:0) Pos(718);
          // I : MAP Werkl baremas INSZd1
         ALPQCJ         Char(6)    Pos(723);
          // I : MAP Werkl baremas INSZd2
         ALPRCJ         Char(3)    Pos(729);
          // I : MAP Werkl baremas INSZd3
         ALPSCJ         Char(2)    Pos(732);
          // I : MAP Werkl baremas afdnr
         ALPTCJ         Char(2)    Pos(734);
          // I : MAP Werkl baremas lidnr
         ALPUCJ         Char(6)    Pos(736);
          // I : MAP Werkl baremas zone
         ALPVCJ         Char(2)    Pos(742);
          // I : MAP Werkl baremas rva onderaf
         ALPWCJ         Char(5)    Pos(744);
          // I : MAP Werkloze S04 Keuze bedien
         ALPZCJ         Char(1)    Pos(749);
          // I : MAP Werkloze barema's add-usr
         ALTTTN         Char(10)   Pos(750);
          // I : MAP Werkloze barema's add-dte
         ALL2DE         Packed(9:0) Pos(760);
          // I : MAP Werkloze barema's add-tme
         ALG8TM         Packed(7:0) Pos(765);
          // I : MAP Werkloze barema's chg-usr
         ALTUTN         Char(10)   Pos(769);
          // I : MAP Werkloze barema's chg-dte
         ALL3DE         Packed(9:0) Pos(779);
          // I : MAP Werkloze barema's chg-tme
         ALG9TM         Packed(7:0) Pos(784);

          // Outward parameters
        End-DS;
       Dcl-DS AMRC Len(1173);
          // RCD : Maandoverzicht            Retrieval index
          // I : MAP Maandov INSZ
         AMR7CH         Char(11)   Pos(1);
          // I : MAP Maandov RM
         AMPPDM         Packed(7:0) Pos(12);
          // I : MAP Maandov volgnr
         AMJ7ND         Zoned(5:0) Pos(16);

          // Outward parameters
        End-DS;
       Dcl-DS ANRC Len(128);
          // RCD : Werkloze inschrijvingsdat Afd/Lid/IM/betaaldag
          // I : MAP werkloze inschr afdeling
         ANLNCJ         Char(2)    Pos(92);
          // I : MAP werkloze inschr lidnr
         ANLOCJ         Char(6)    Pos(94);
          // I : MAP werkloze inschr zone
         ANLPCJ         Char(2)    Pos(100);
          // I : MAP werkloze inschr onderafd
         ANLQCJ         Char(5)    Pos(102);
          // I : MAP Werkloze insch Indienmnd
         ANP9DM         Packed(7:0) Pos(107);
          // I : MAP Werkloze insch betaaldag
         ANOTCJ         Char(2)    Pos(111);

          // Message data for message Y2U0009.
        End-DS;
       Dcl-DS MD0009;
         MDPGM          Char(10)   Pos(1);
         MDACP          Char(10)   Pos(11);
         MDFMT          Char(10)   Pos(21);
         MDACT          Char(4)    Pos(31);
         MDLBL          Char(6)    Pos(35);
          // Outward parameters
        End-DS;
       Dcl-DS AORC Len(16);
          // KEY : Programma Actief          Retrieval index
          // I : RST Program Act - Jobnr
         AOA7NN         Zoned(6:0) Pos(1);
          // I : RST Program Act - Program
         AORACO         Char(10)   Pos(7);

          // Outward parameters
        End-DS;
       Dcl-DS APRC Len(8);
          // KEY : Gebruiker                 Retrieval index
          // I : RST Gebruiker signon
         APBLCD         Char(8)    Pos(1);

        End-DS;
         /EJECT
        // Parameter declarations
       Dcl-DS P1PARM;
          // I : MAP Afdeling nr
         P1AACD         Char(2)    Pos(1);
        End-DS;
       Dcl-DS P2PARM;
          // I : MAP Lid nr
         P2AFNB         Char(6)    Pos(1);
        End-DS;
       Dcl-DS P3PARM;
          // I : MAP String parameters 9 lang
         P3X0CC         Char(9)    Pos(1);
        End-DS;
       Dcl-DS P4PARM;
          // I : MAP param code bijpassing
         P4BLCF         Char(1)    Pos(1);
        End-DS;
       Dcl-DS P5PARM;
          // I : MAP param Href
         P5BKCF         Char(20)   Pos(1);
        End-DS;
       Dcl-DS P6PARM;
          // I : MAP param aantal
         P6IINU         Char(2)    Pos(1);
        End-DS;
       Dcl-DS P7PARM;
          // I : MAP param bedrag bijp centen
         P7IJNU         Char(7)    Pos(1);
        End-DS;
       Dcl-DS *N;
         ZAMSDA         Char(132)  Pos(1);
          // Message data for 'Recht op ocv tem par'
          // Wrk dtm 10 lang
         ZA0001         Char(10)   Pos(1);
          // Message data for 'bijz verg art EnnY C3-EXP'
          // Code bijz. verg.artikel
         ZA0002         Char(5)    Pos(1);
          // Message data for 'Bijz verg art:einddtm inR'
          // Code bijz. verg.artikel
         ZA0003         Char(5)    Pos(1);
          // Message data for 'bijz verg art EnnY C3-EXP'
          // Code bijz. verg.artikel
         ZA0004         Char(5)    Pos(1);
          // Message data for 'Bijz verg art:einddtm inR'
          // Code bijz. verg.artikel
         ZA0005         Char(5)    Pos(1);
          // Message data for 'bijz verg art EnnY C3-EXP'
          // Code bijz. verg.artikel
         ZA0006         Char(5)    Pos(1);
          // Message data for 'Bijz verg art:deels gedek'
          // Code bijz. verg.artikel
         ZA0007         Char(5)    Pos(1);
          // Message data for 'Bijz verg art:deels gedde'
          // Code bijz. verg.artikel
         ZA0008         Char(5)    Pos(1);
          // Message data for 'Maand/jaar is foutief !!!'
          // DTM External
         ZA0009         Packed(7:0) Pos(1);
          // Message data for 'OCV reeds betaald'
          // Wrk KBOnr
         ZA0010         Char(10)   Pos(1);
          // Message data for 'Type 96 vanaf &1'
          // Wrk datum barema 1 vanaf
         ZA0011         Char(10)   Pos(1);
          // Message data for 'Bijpassing ! Steeds datum'
          // Datum achterstal
         ZA0012         Packed(7:0) Pos(1);
          // Message data for 'Datum achterstal invullen'
          // Datum achterstal
         ZA0013         Packed(7:0) Pos(1);
          // Message data for 'Datum acht.>datum wklhmaa'
          // Datum achterstal
         ZA0014         Packed(7:0) Pos(1);
          // Message data for '00-code vanaf  &1'
          // Wrk datum sanctie vanaf
         ZA0015         Char(10)   Pos(1);
          // Message data for '00-code vanaf &1'
          // Wrk datum sanctie vanaf
         ZA0016         Char(10)   Pos(1);
          // Message data for 'betrokkene is overleden.'
          // wrk integratie eindmaand
         ZA0017         Char(6)    Pos(1);
          // wrk integratie einddag
         ZA0018         Char(2)    Pos(7);
          // Message data for 'betrokkene is  overleden'
          // wrk integratie eindmaand
         ZA0019         Char(6)    Pos(1);
          // wrk integratie einddag
         ZA0020         Char(2)    Pos(7);
          // Message data for 'Weekreg. week1/ type fout'
          // W1ma
         ZA0021         Char(1)    Pos(1);
          // W1di
         ZA0022         Char(1)    Pos(2);
          // W1wo
         ZA0023         Char(1)    Pos(3);
          // W1do
         ZA0024         Char(1)    Pos(4);
          // W1vr
         ZA0025         Char(1)    Pos(5);
          // W1za
         ZA0026         Char(1)    Pos(6);
          // W1zo
         ZA0027         Char(1)    Pos(7);
          // Message data for 'Refertemaand foutief !'
          // PWA bet. ref.maand
         ZA0028         Packed(7:0) Pos(1);
          // Message data for 'WB F4<>WB recentste betal'
          // Wrk WBnr vr betaalscherm
         ZA0029         Char(2)    Pos(1);
          // Wrk WBnr uit F4 vr betaal
         ZA0030         Char(2)    Pos(3);
          // Message data for 'Maand/jaar is foutief !!!'
          // DTM External
         ZA0031         Packed(7:0) Pos(1);
          // Message data for 'Maand/jaar is foutief !!!'
          // DTM External
         ZA0032         Packed(7:0) Pos(1);
          // Message data for 'Maand/jaar is foutief !!!'
          // DTM External
         ZA0033         Packed(7:0) Pos(1);
          // Message data for 'Maand/jaar is foutief !!!'
          // DTM External
         ZA0034         Packed(7:0) Pos(1);
          // Message data for 'Maand/jaar is foutief !!!'
          // DTM External
         ZA0035         Packed(7:0) Pos(1);
          // Message data for 'Maand/jaar is foutief !!!'
          // DTM External
         ZA0036         Packed(7:0) Pos(1);
          // Message data for 'Maand/jaar is foutief !!!'
          // DTM External
         ZA0037         Packed(7:0) Pos(1);
          // Message data for 'Datum is foutief !!!'
          // DTD External
         ZA0038         Packed(9:0) Pos(1);
          // Message data for 'Variabele tekst'
          // wrk error tekst
         ZA0039         Char(160)  Pos(1);
          // Message data for 'Waarde moet &2 zijn'
          // wrk fout 1
         ZA0040         Char(1)    Pos(1);
          // Wrk veld 15 lang
         ZA0041         Char(15)   Pos(2);
          // Message data for 'Geen documenten BD'
          // Wkl bet CDE vrij2
         ZA0042         Char(2)    Pos(1);
          // Message data for 'Er zijn documenten BD'
          // Wkl bet CDE vrij2
         ZA0043         Char(2)    Pos(1);
          // Message data for 'Aantal dagn OCV ICLD te g'
          // Wrk dtm 10 lang
         ZA0044         Char(10)   Pos(1);
          // Message data for 'Wklhdagen>maximum type03'
          // HD6
         ZA0045         Packed(3:0) Pos(1);
          // Halve dagen verlof
         ZA0046         Packed(3:0) Pos(3);
          // Message data for 'Werkloosheidsdgn>maximum'
          // VD6
         ZA0047         Packed(3:0) Pos(1);
          // HD6
         ZA0048         Packed(3:0) Pos(3);
          // Volle dagen verlof
         ZA0049         Packed(3:0) Pos(5);
          // Halve dagen verlof
         ZA0050         Packed(3:0) Pos(7);
          // Message data for 'Werkloosheidsdgn>maximum'
          // VD6
         ZA0051         Packed(3:0) Pos(1);
          // HD6
         ZA0052         Packed(3:0) Pos(3);
          // Volle dagen verlof
         ZA0053         Packed(3:0) Pos(5);
          // Halve dagen verlof
         ZA0054         Packed(3:0) Pos(7);
          // Message data for 'Wklhdagen>maximum type03'
          // HD6
         ZA0055         Packed(3:0) Pos(1);
          // Halve dagen verlof
         ZA0056         Packed(3:0) Pos(3);
          // Message data for 'Wklhdagen>maximum type03'
          // HD6
         ZA0057         Packed(3:0) Pos(1);
          // Halve dagen verlof
         ZA0058         Packed(3:0) Pos(3);
          // Message data for 'Wklhdagen>maximum type03'
          // HD6
         ZA0059         Packed(3:0) Pos(1);
          // Halve dagen verlof
         ZA0060         Packed(3:0) Pos(3);
          // Message data for 'Aantal dgn VD5/HD5 > max.'
          // VD5
         ZA0061         Packed(3:0) Pos(1);
          // HD5
         ZA0062         Packed(3:0) Pos(3);
          // Message data for 'Achterstal halve dgn < 54'
          // HD6
         ZA0063         Packed(3:0) Pos(1);
          // Halve dagen verlof
         ZA0064         Packed(3:0) Pos(3);
          // Message data for 'Achterstal dgn < 27'
          // VD6
         ZA0065         Packed(3:0) Pos(1);
          // HD6
         ZA0066         Packed(3:0) Pos(3);
          // Volle dagen verlof
         ZA0067         Packed(3:0) Pos(5);
          // Halve dagen verlof
         ZA0068         Packed(3:0) Pos(7);
          // Message data for 'Achterstal dagen < 23'
          // VD5
         ZA0069         Packed(3:0) Pos(1);
          // HD5
         ZA0070         Packed(3:0) Pos(3);
          // Message data for 'Geen geldige code werkher'
          // Wkl bet CDE vrij3
         ZA0071         Char(3)    Pos(1);
          // Message data for 'Dagen & bedrag BZ moeten'
          // Volle dagen BZ
         ZA0072         Packed(3:0) Pos(1);
          // Halve dagen BZ
         ZA0073         Packed(3:0) Pos(3);
          // Bedrag BZ
         ZA0074         Packed(7:2) Pos(5);
          // Message data for 'Dagen & bedrag BZ moeten'
          // Volle dagen BZ
         ZA0075         Packed(3:0) Pos(1);
          // Halve dagen BZ
         ZA0076         Packed(3:0) Pos(3);
          // Bedrag BZ
         ZA0077         Packed(7:2) Pos(5);
          // Message data for 'Zelf bedrag BZ invul (VZ)'
          // Bedrag BZ
         ZA0078         Packed(7:2) Pos(1);
          // Geen dagen/bedrag BZ
         ZA0079         Char(1)    Pos(5);
          // Message data for 'Zelf bedrag BZ invul (VZ)'
          // Bedrag BZ
         ZA0080         Packed(7:2) Pos(1);
          // Geen dagen/bedrag BZ
         ZA0081         Char(1)    Pos(5);
          // Message data for 'Zelf bedrag wklh opgeven!'
          // Bedrag wkl
         ZA0082         Packed(7:2) Pos(1);
          // Message data for 'Datum laatste stempel inv'
          // Wkl datum laatste stempel
         ZA0083         Packed(9:0) Pos(1);
          // Message data for 'Laatste stempel refertem'
          // Wkl datum laatste stempel
         ZA0084         Packed(9:0) Pos(1);
          // Message data for 'Datum laatste stempel inv'
          // Wkl datum laatste stempel
         ZA0085         Packed(9:0) Pos(1);
          // Message data for 'Dagen R6/R5 groter dan da'
          // Wkl datum laatste stempel
         ZA0086         Packed(9:0) Pos(1);
          // Message data for 'Dagen BZ>maximum'
          // VD6
         ZA0087         Packed(3:0) Pos(1);
          // HD6
         ZA0088         Packed(3:0) Pos(3);
          // Halve dagen verlof
         ZA0089         Packed(3:0) Pos(5);
          // Volle dagen verlof
         ZA0090         Packed(3:0) Pos(7);
          // Message data for 'zelf dagen & bedrag opgev'
          // Halve dagen BZ
         ZA0091         Packed(3:0) Pos(1);
          // Bedrag BZ
         ZA0092         Packed(7:2) Pos(3);
          // Volle dagen BZ
         ZA0093         Packed(3:0) Pos(7);
          // Message data for 'Dagen BZ>maximum type03'
          // HD6
         ZA0094         Packed(3:0) Pos(1);
          // Halve dagen verlof
         ZA0095         Packed(3:0) Pos(3);
          // Message data for 'Zelf dgn&bedr opg. type03'
          // Halve dagen BZ
         ZA0096         Packed(3:0) Pos(1);
          // Bedrag BZ
         ZA0097         Packed(7:2) Pos(3);
          // Message data for 'Dagen BZ>maximum'
          // VD6
         ZA0098         Packed(3:0) Pos(1);
          // HD6
         ZA0099         Packed(3:0) Pos(3);
          // Halve dagen verlof
         ZA0100         Packed(3:0) Pos(5);
          // Volle dagen verlof
         ZA0101         Packed(3:0) Pos(7);
          // Message data for 'zelf dagen & bedrag opgev'
          // Halve dagen BZ
         ZA0102         Packed(3:0) Pos(1);
          // Bedrag BZ
         ZA0103         Packed(7:2) Pos(3);
          // Volle dagen BZ
         ZA0104         Packed(3:0) Pos(7);
          // Message data for 'Dagen BZ>maximum type03'
          // HD6
         ZA0105         Packed(3:0) Pos(1);
          // Halve dagen verlof
         ZA0106         Packed(3:0) Pos(3);
          // Message data for 'Dagen BZ>maximum'
          // VD6
         ZA0107         Packed(3:0) Pos(1);
          // HD6
         ZA0108         Packed(3:0) Pos(3);
          // Halve dagen verlof
         ZA0109         Packed(3:0) Pos(5);
          // Volle dagen verlof
         ZA0110         Packed(3:0) Pos(7);
          // Message data for 'zelf dagen & bedrag opgev'
          // Halve dagen BZ
         ZA0111         Packed(3:0) Pos(1);
          // Bedrag BZ
         ZA0112         Packed(7:2) Pos(3);
          // Volle dagen BZ
         ZA0113         Packed(3:0) Pos(7);
          // Message data for 'Dagen BZ>maximum'
          // VD6
         ZA0114         Packed(3:0) Pos(1);
          // HD6
         ZA0115         Packed(3:0) Pos(3);
          // Halve dagen verlof
         ZA0116         Packed(3:0) Pos(5);
          // Volle dagen verlof
         ZA0117         Packed(3:0) Pos(7);
          // Message data for 'zelf dagen & bedrag opgev'
          // Halve dagen BZ
         ZA0118         Packed(3:0) Pos(1);
          // Bedrag BZ
         ZA0119         Packed(7:2) Pos(3);
          // Volle dagen BZ
         ZA0120         Packed(3:0) Pos(7);
          // Message data for 'Dagen BZ>maximum'
          // VD6
         ZA0121         Packed(3:0) Pos(1);
          // HD6
         ZA0122         Packed(3:0) Pos(3);
          // Halve dagen verlof
         ZA0123         Packed(3:0) Pos(5);
          // Volle dagen verlof
         ZA0124         Packed(3:0) Pos(7);
          // Message data for 'zelf dagen & bedrag opgev'
          // Halve dagen BZ
         ZA0125         Packed(3:0) Pos(1);
          // Bedrag BZ
         ZA0126         Packed(7:2) Pos(3);
          // Volle dagen BZ
         ZA0127         Packed(3:0) Pos(7);
          // Message data for 'Dagen BZ>maximum'
          // VD6
         ZA0128         Packed(3:0) Pos(1);
          // HD6
         ZA0129         Packed(3:0) Pos(3);
          // Halve dagen verlof
         ZA0130         Packed(3:0) Pos(5);
          // Volle dagen verlof
         ZA0131         Packed(3:0) Pos(7);
          // Message data for 'zelf dagen & bedrag opgev'
          // Halve dagen BZ
         ZA0132         Packed(3:0) Pos(1);
          // Bedrag BZ
         ZA0133         Packed(7:2) Pos(3);
          // Volle dagen BZ
         ZA0134         Packed(3:0) Pos(7);
          // Message data for 'Wklhdgn>max type01:DOK'
          // VD5
         ZA0135         Packed(3:0) Pos(1);
          // HD5
         ZA0136         Packed(3:0) Pos(3);
          // Message data for 'Dagen BZ>max type01:rivie'
          // VD5
         ZA0137         Packed(3:0) Pos(1);
          // HD5
         ZA0138         Packed(3:0) Pos(3);
          // Message data for 'Bedrag foutief'
          // Wrk bedrag alles bouw
         ZA0139         Packed(9:2) Pos(1);
          // Message data for 'Weekreg. week1/ type fout'
          // W1ma
         ZA0140         Char(1)    Pos(1);
          // W1di
         ZA0141         Char(1)    Pos(2);
          // W1wo
         ZA0142         Char(1)    Pos(3);
          // W1do
         ZA0143         Char(1)    Pos(4);
          // W1vr
         ZA0144         Char(1)    Pos(5);
          // W1za
         ZA0145         Char(1)    Pos(6);
          // W1zo
         ZA0146         Char(1)    Pos(7);
          // Message data for 'Waarde moet &2 zijn'
          // wrk fout 1
         ZA0147         Char(1)    Pos(1);
          // Wrk veld 15 lang
         ZA0148         Char(15)   Pos(2);
          // Message data for 'Geen documenten BD'
          // Wkl bet CDE vrij2
         ZA0149         Char(2)    Pos(1);
          // Message data for 'Er zijn documenten BD'
          // Wkl bet CDE vrij2
         ZA0150         Char(2)    Pos(1);
          // Message data for 'BC aantal te groot'
          // BC aantal
         ZA0151         Packed(3:0) Pos(1);
          // Message data for 'BZ zelf berekenen'
          // Bedrag BZ
         ZA0152         Packed(7:2) Pos(1);
          // Message data for 'BZ bouw zelf berekenen'
          // Bedrag BZ
         ZA0153         Packed(7:2) Pos(1);
          // Message data for 'Verplicht 1BC in te geven'
          // BC aantal
         ZA0154         Packed(3:0) Pos(1);
          // Kateg kode
         ZA0155         Char(2)    Pos(3);
          // Kateg jjmm
         ZA0156         Packed(7:0) Pos(5);
          // Betalingsw kode
         ZA0157         Char(1)    Pos(9);
          // Message data for 'Bedrag afh1 negatief!'
          // Afh1 bedrag
         ZA0158         Packed(7:2) Pos(1);
          // Message data for 'Bedrag afh2 negatief!'
          // Afh2 bedrag
         ZA0159         Packed(7:2) Pos(1);
          // Message data for 'Bedrag afh3 negatief!'
          // Afh3 bedrag
         ZA0160         Packed(7:2) Pos(1);
          // Message data for 'Bedrag afh4 negatief!'
          // Afh4 bedrag
         ZA0161         Packed(7:2) Pos(1);
          // Message data for 'Bedrag afh5 negatief!'
          // Afh5 bedrag
         ZA0162         Packed(7:2) Pos(1);
          // Message data for 'Bedrag afh6 negatief!'
          // Afh6 bedrag
         ZA0163         Packed(7:2) Pos(1);
          // Message data for 'Bedrag BZ te groot]'
          // Bedrag BZ
         ZA0164         Packed(7:2) Pos(1);
          // Message data for 'Afh1 wordt negatief. OK?'
          // Afh1 kode
         ZA0165         Char(3)    Pos(1);
          // Message data for 'Afh1 is reeds negatief'
          // Afh1 kode
         ZA0166         Char(3)    Pos(1);
          // Message data for 'Afh2 wordt negatief. OK?'
          // Afh2 kode
         ZA0167         Char(3)    Pos(1);
          // Message data for 'Afh2 is reeds negatief'
          // Afh2 kode
         ZA0168         Char(3)    Pos(1);
          // Message data for 'Afh3 wordt negatief. OK?'
          // Afh3 kode
         ZA0169         Char(3)    Pos(1);
          // Message data for 'Afh3 is reeds negatief'
          // Afh3 kode
         ZA0170         Char(3)    Pos(1);
          // Message data for 'Afh4 wordt negatief. OK?'
          // Afh4 kode
         ZA0171         Char(3)    Pos(1);
          // Message data for 'Afh4 is reeds negatief'
          // Afh4 kode
         ZA0172         Char(3)    Pos(1);
          // Message data for 'Afh5 wordt negatief. OK?'
          // Afh5 kode
         ZA0173         Char(3)    Pos(1);
          // Message data for 'Afh5 is reeds negatief'
          // Afh5 kode
         ZA0174         Char(3)    Pos(1);
          // Message data for 'Afh6 wordt negatief. OK?'
          // Afh6 kode
         ZA0175         Char(3)    Pos(1);
          // Message data for 'Afh6 is reeds negatief'
          // Afh6 kode
         ZA0176         Char(3)    Pos(1);
          // Message data for 'Comb. bedr wkl<>0 & gn =N'
          // Geen bedrag wklh
         ZA0177         Char(1)    Pos(1);
          // Bedrag wkl
         ZA0178         Packed(7:2) Pos(2);
          // Message data for 'Type24W:bedrag wklh=verpl'
          // Bedrag wkl
         ZA0179         Packed(7:2) Pos(1);
          // Message data for 'Bij type24:bedr wkl<=9999'
          // Bedrag wkl
         ZA0180         Packed(7:2) Pos(1);
          // Message data for 'Type24W:bedrag<=7625'
          // Bedrag wkl
         ZA0181         Packed(7:2) Pos(1);
          // Message data for 'Kaart metaal afgelopen'
          // Wrk veld 8 posities eindd
         ZA0182         Packed(9:0) Pos(1);
          // wrk veld 6 posities nbr2
         ZA0183         Packed(7:0) Pos(6);
          // Message data for 'Geen geldige kaart metaal'
          // Wrk veld 4 posities nbr
         ZA0184         Packed(5:0) Pos(1);
          // wrk veld 4 posities nbr 2
         ZA0185         Packed(5:0) Pos(4);
          // Message data for 'Er is een betaling KB213'
          // Wrk datum KB213 10 lang
         ZA0186         Char(10)   Pos(1);
          // Message data for 'Laatste stempel refertem'
          // Wkl datum laatste stempel
         ZA0187         Packed(9:0) Pos(1);
        End-DS;
         /EJECT
        //****************************************************************
        // Entry parameters
       
       
        //Afdeling nr
        //Lid nr
        //String paramete
        //param code bijp
        //param Href
        //param aantal
        //param bedrag bi
        //****************************************************************
        // Initialize
       EXSR ZZINIT;

        // Repeat until cancelled
       W0RPT = 'Y';             1
       Dou W0RPT = 'N';
          // Display and process key screen
         EXSR BADSKY;
       Enddo;
        // Terminate program
       EXSR ZXEXPG;
        //****************************************************************
       BEGSR AFHWYZ;
          EvalR   WUPRCD = '0';
         If WAFHP1 = 'O' OR WAFHP1 = 'S' OR WAFHP1 = 'G' OR WAFHP1 = 'H';
           If AFHP1 = 'O' OR AFHP1 = 'S' OR AFHP1 = 'G' OR AFHP1 = 'H';
               EvalR   WUPRCD = '1';
           ELSE;
               EvalR   WUPRCD = '2';
           Endif;
         Endif;
         If WAFHP1 <> 'O' AND WAFHP1 <> 'S' AND WAFHP1 <> 'G' AND WAFHP1 <> 'H';
           If AFHP1 = 'O' OR AFHP1 = 'S' OR AFHP1 = 'G' OR AFHP1 = 'H';
               EvalR   WUPRCD = '1';
           Endif;
         Endif;
       ENDSR;
       BEGSR AFHRVA;
         If KODAFH = 'GMY' OR KODAFH = 'GSY' OR KODAFH = 'GPY' OR KODAFH = 'G4Y' OR KODAFH = 'GKY';
     EvalR   ' = ';           KODAFH
         ENDIF;
         CHAIN AFHOUD @BWRED9 ;
       *in50 = (%found() = *Off);
     C   50              MOVEL     '1'           WUN7CD
       ENDSR;
       /EJECT
       BEGSR BADSKY;
          //================================================================
          // Display and process key screen
          //================================================================
          // Bypass first display of key screen is possible
       W0BYP = 'Y';             1
          // Initialize key screen
         EXSR MDIZ#K;
          // Signal start of transaction
       W0TRN = 'Y';             1
         Dow W0TRN = 'Y' OR W0TRN = 'K';
            // Ensure transaction continues (if reset)
         W0TRN = 'Y';             1
            // Set control to display first screen
           W0SCR = 1;
            // Conduct screen conversation
           Dow W0TRN = 'Y';
              // Convert internal to external form
             If NOT *In09;
               EXSR MNCV#K;
             Endif;
              // Is bypass key screen still viable?
             If W0BYP = 'Y';
               If #1AACD = *BLANK OR #1AFNB = *BLANK OR #1GWNB = *ZERO; //Afdeling nr
 OR *IN30 = '1'                  // One or more key fields is blank
                  // HOME: Reset screen fields
         W0BYP = 'N';
               Endif;
             Endif;
              // Bypass key screen
             If W0BYP = 'N';
                // Display key screen
               EXSR BBEXFM;
             Endif;
              // Cancel key screen bypass
         W0BYP = 'N';
              // Process response to key screen
              // Cancel & exit program
     C   03              CAS                     ZXEXPG
              // Switch between *ADD/*CHANGE modes
     C   09              CAS                     BCCHMD
              // HOME: Reset screen fields
     C   30              CAS                     BDHMKY
              // Process key screen input
     C                   CAS                     BEPRKY
           Enddo;
           Dow W0TRN = 'R';
         W0TRN = 'Y';
             EXSR BEPRKY;
           Enddo;

         Enddo;
         
          //================================================================
       ENDSR;
       /EJECT
       BEGSR BBEXFM;
          //================================================================
          // Display key screen and process HELP requests
          //================================================================
          // Set screen conditioning indicators
         EXSR GADSAK;
         Dou W0HLP = 'N';
         W0HLP = 'N';             1
     EvalR   HELP25 = *IN25;            1
     EvalR   ##OFF = *ALL'0';            30
     C                   MOVEA     ##OFF         *IN(1)
     EvalR   *IN25 = HELP25;
            // PUTOVR unless conditioned fields change
           *In86 = *On;
           If *IN89 <> BBIN89;
             *In86 = *Off;
           Endif;
     EvalR   BBIN89 = *IN89;            1
            // Update screen time
           ##TME = %Time();
         W0GRP = 'K';             1
            // Set cursor by *SET CURSOR data
           If YSETCS = 'Y';
             EXSR Y0SET;
           Endif;
           WRITE #MSGCTL;
           WRITE #CMDTXT1;
           EXFMT #RCDKEY;
            // Test cursor
           EXSR Y8TST;
            // Clear set cursor DDS indicator
           If WCSRLC = 'OFF';
             *In94 = *Off;
           Endif;
     EvalR   WCSRLC = *BLANK;
            // If help requested, display help text
           If *In25;
             EXSR ZHHPKY;
           Endif;
         Enddo;
          // Update job time
         ##JTM = %Time();
          // Clear messages from program message queue
          // Reset first message only flag
         ZAFSMS = 'Y';            1      99    *
         If YSETCS = 'Y';
           EXSR Y9CLR;
         Endif;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR BCCHMD;
          //================================================================
          // Switch between *ADD/*CHANGE modes
          //================================================================
         If W0PMD = 'ADD';
         W0PMD = 'CHG';             3
         ELSE;
         W0PMD = 'ADD';
         Endif;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR BDHMKY;
          //================================================================
          // Process HOME key
          //================================================================
         W0TRN = 'N';
          //================================================================
       ENDSR;
       /EJECT
       BEGSR BEPRKY;
          //================================================================
          // Process key screen input
          //================================================================
          // Initialise detail screen
         EXSR MAIZ#1;
          // Validate key fields
         EXSR BFVLKY;
     C     *IN99         CABEQ     '1'           BEEXIT
          // Check for existing record
         //Afdeling nr
         //Lid nr
         //Datum achtersta
          // Setup key
         CAAACD = #1AACD;
         CAAFNB = #1AFNB;
         CAGWNB = #1GWNB;
         CHAIN (CAAACD:CAAFNB:CAGWNB) @CACPGL ;
       *in90 = (%found() = *Off);
       *in90 = %error(); //*
         If *IN91 = '1';
            // Record locked
           *In99 = *On;
           *In31 = *On;
           *In32 = *On;
           *In33 = *On;
     C                   GOTO      BEEXIT
         Endif; //FI 91

          // Verify record existence against program mode
         If W0PMD <> 'ADD';
            // If record does not exist, error
           If *IN90 = '1';
             *In99 = *On;
             *In31 = *On;
             *In32 = *On;
             *In33 = *On;
              // Send message 'Wkl betaling           NF'
         ZAMSID = 'USR0217';
             EXSR ZASNMS;
           ELSE;
             EXSR MBFL#1;
           Endif;

         ELSE;
            // If record already exists, error
           If *IN90 = '0';
             *In99 = *On;
             *In31 = *On;
             *In32 = *On;
             *In33 = *On;
              // Send message 'Wkl betaling           EX'
         ZAMSID = 'USR0218';
             EXSR ZASNMS;
           ELSE;
              // USER: Initialize detail screen (new record)
             WUFANG = *ZERO; //Bedrag EP TW ty
         WUDSCN = *BLANK;                         barema coronapr
              // CASE: JOB.*USER is Type51
             If ##USR = @CN(001); //*IF
         #1BACD = *BLANK;                         Beroep kode
         #1DOCD = *BLANK;                         Barema RVAkode
         #1DOCD = 'COVID';                         Barema RVAkode
         #1A1CD = '51';                         Type wklh. kode
                // Ophalen bedrag type51 EP - Wkl betaling  *
               RM51 = #1GWNB;
               BEDR51 = 0;
               WUFANG = 0;
               MDT5101(#1AACD:#1AFNB:RM51:BEDR51);
                 WUFANG = BEDR51;
               #1HPNB = WUFANG; //Bedrag wkl
             ELSE;
                // CASE: *OTHERWISE
             Endif; //*FI
              // CASE: JOB.*USER is TYPE5L
             If ##USR = @CN(002); //*IF
         #1BACD = *BLANK;                         Beroep kode
         #1DOCD = *BLANK;                         Barema RVAkode
         #1DOCD = 'COVID';                         Barema RVAkode
         #1A1CD = '51';                         Type wklh. kode
                // oph bedr/barem prem coron - Wkl betaling  *
               RM51 = #1GWNB;
               BEDR51 = 0;
               WUFANG = 0;
         WUDSCN = *BLANK;            7
         BARCOV = '..COV2.';            7
               MDT5111(#1AACD:#1AFNB:RM51:BEDR51:BARCOV);
                 WUFANG = BEDR51;
               If BARCOV = *BLANK;
         WUDSCN = '..COV2.';
               ELSE;
         WUDSCN = BARCOV;
               ENDIF;
         #1DOCD = WUDSCN;                         Barema RVAkode
               #1HPNB = WUFANG; //Bedrag wkl
             ELSE;
                // CASE: *OTHERWISE
             Endif; //*FI
         WUYBCM = 'N';                         Wrk nog steeds
         WUHHCM = 'N';                         Wrk start F1
             WUL6ND = #1GWNB; //Wrk RM key scre
         WUO1CL = *BLANK;                         Wkl bet sleutel
             WUFZNE = *ZERO; //Wrk bedrag alle
             WUF0NE = *ZERO; //Wrk bedrag enke
             WUF1NE = *ZERO; //Wrk bedrag enke
             WUS3ND = *ZERO; //Wrk verlof in m
             WUREND = 1; //Wrk teller BD
         WUEWCH = '0';                         Wrk gebruik F1
         WUTBCG = '0';                         wrk switch meta
             WUK7ND = 1; //Wrk teller cf01
         WUXICI = 'N';                         Wrk F1 record v
         WUFBCK = 'Y';                         Wrk f1 oproepen
         WUYBCJ = 'N';                         Wrk f24 gebruik
         WUZGCJ = *BLANK;                         Wrk BD old
             WUE5NE = 1; //Wrk teller BZIN
             WUGCNE = 0; //Wrk teller inho
         WUTPCK = 'N';                         C105 bestaat al
         WUTQCK = 'N';                         C105 bestaat al
         WUTRCK = 'N';                         C110A bestaat a
         WUTSCK = 'N';                         C110A bestaat a
              // Opvullen van werkvelden - Wkl betaling  *
     EvalR   MNDACH = #1GWNB;            2 0
         JRACHT = #1GWNB;            4 0
             RMPARM = #1GWNB;
             WUSX4X = 0;
              // opv v werkvelden dl2 - Wkl betaling  *
             HKHK06 = 0;
             HKHK07 = 0;
             HKHK08 = 0;
             WUKENG = 0;
         WUMCCN = *BLANK;            1
              // Switch werkhervatting aan bij BZ NA/DA/29/79
              // CASE: DTL.Datum achterstal is >= 200701
             If #1GWNB >= 200701; //*IF
                // CASE:
                //  - c1ORc2ORc3ORc4
                //   !- c1    : DTL.BZ kode is NA
                //   !- c2    : DTL.BZ kode is DA
                //   !- c3    : DTL.BZ kode is 29
                //   !- c4    : DTL.BZ kode is 79
                //   '-
               If #1A4CD = 'NA' OR #1A4CD = 'DA' OR #1A4CD = '29' OR #1A4CD = '79'; //*IF
         WUTBCG = '1';                         wrk switch meta
               Endif; //*FI
             Endif; //*FI
              // Set cursor:type 51 op bedrag wklh
              // CASE: DTL.Type wklh. kode is 51
             If #1A1CD = '51'; //*IF
                // *Set Cursor: DTL.Bedrag wkl  (*Override=*NO)
               W0ROW1 = 021;
               W0COL1 = 010;
         W0OVR1 = '0';                         *NO
             Endif; //*FI
              // Set cursor:type 24 sub=W:oude gevallen op bedrag wklh , vanaf 01/
              // CASE: DTL.Type wklh. kode is 24 : wisselkoerstoeslag
             If #1A1CD = '24'; //*IF
                // CASE:
                //  - c1ORc2
                //   !- c1    : DTL.Subberoep kode is nt ingevuld
                //   !- c2    : DTL.Subberoep kode is W
                //   '-
               If #1BCCD = *BLANK OR #1BCCD = 'W'; //*IF
                  // *Set Cursor: DTL.Y  (*Override=*NO)
                 W0ROW1 = 016;
                 W0COL1 = 004;
         W0OVR1 = '0';                         *NO
               Endif; //*FI
             Endif; //*FI
              // Set cursor : werkherv/volt.premie/kinderopv/onstlagpr : op bedrag
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5
              //   !- c1    : DTL.Type wklh. kode is 29 = werkhervatting
              //   !- c2    : DTL.Type wklh. kode is 52
              //   !- c3    : DTL.Type wklh. kode is 50
              //   !- c4    : DTL.Type wklh. kode is 51
              //   !- c5    : DTL.Type wklh. kode is 53
              //   '-
             If #1A1CD = '29' OR #1A1CD = '52' OR #1A1CD = '50' OR #1A1CD = '51' OR #1A1CD = '53'; //*IF
                // *Set Cursor: DTL.Bedrag wkl  (*Override=*NO)
               W0ROW1 = 021;
               W0COL1 = 010;
         W0OVR1 = '0';                         *NO
             Endif; //*FI
              // Set cursor : PZ/FZ/15 : op bedrag BZ
              // CASE:
              //  - c3ORc4ORc5
              //   !- c3    : DTL.BZ kode is FZ
              //   !- c4    : DTL.BZ kode is PZ
              //   !- c5    : DTL.BZ kode is 15
              //   '-
             If #1A4CD = 'FZ' OR #1A4CD = 'PZ' OR #1A4CD = '15'; //*IF
                // *Set Cursor: DTL.Bedrag BZ  (*Override=*NO)
               W0ROW1 = 021;
               W0COL1 = 028;
         W0OVR1 = '0';                         *NO
             Endif; //*FI
              // Set cursor : M/35 : op volle dagen BZ  en code wklh=N
              // CASE:
              //  - c2ORc3
              //   !- c2    : DTL.BZ kode is 35
              //   !- c3    : DTL.BZ kode is M
              //   '-
             If #1A4CD = '35' OR #1A4CD = 'M'; //*IF
                // *Set Cursor: DTL.Wkl datum laatste stempel  (*Override=*NO)
               W0ROW1 = 020;
               W0COL1 = 072;
         W0OVR1 = '0';                         *NO
         #1BDST = 'N';                         Geen bedrag wkl
             Endif; //*FI
              // Set cursor : M1/85 : op halve dagen BZ  en code wklh=N
              // CASE:
              //  - c2ORc3
              //   !- c2    : DTL.BZ kode is 85
              //   !- c3    : DTL.BZ kode is M1
              //   '-
             If #1A4CD = '85' OR #1A4CD = 'M1'; //*IF
                // *Set Cursor: DTL.Wkl datum laatste stempel  (*Override=*NO)
               W0ROW1 = 020;
               W0COL1 = 072;
         W0OVR1 = '0';                         *NO
         #1BDST = 'N';                         Geen bedrag wkl
                // CASE: DTL.Type wklh. kode is 18 : halftijds brugpensio
               If #1A1CD = '18'; //*IF
                  // *Set Cursor: DTL.Volle dagen BZ  (*Override=*NO)
                 W0ROW1 = 015;
                 W0COL1 = 042;
         W0OVR1 = '0';                         *NO
         #1ISCD = 'N';                         Geen uren ged.
               Endif; //*FI
             Endif; //*FI
              // Set cursor : ICLD OCV ==> dagen R6
              // CASE: DTL.Barema RVAkode is ..ICLD.
             If #1DOCD = @CN(003); //*IF
                // *Set Cursor: DTL.VD6  (*Override=*NO)
               W0ROW1 = 015;
               W0COL1 = 002;
         W0OVR1 = '0';                         *NO
             Endif; //*FI
              // Lansa/Anthea of synon : reknr/naam/Adres gewijzigd NA laatste bet
              // CASE: WRK.Lansa of synon is L
             If WUHQCG = 'L'; //*IF
               WUZYNM = 31991231; //Wrk laatste bet
                // Oph laatste betaaldtm MD - Wkl betaling  *
               DTDBTD = 0; //DATUM BETALING
               DTDINP = 0; //DATUM INPUT IN AS400
               UURI = 0; //UUR INPUT IN AS400
         GEVOND = 'N';            1
               //AFD
               //LIDNR
               MDLBETDG(#1AACD:#1AFNB:GEVOND:DTDBTD:DTDINP:UURI);
                 WUZYNM = DTDINP;
               WUZZNM = 0; //Wrk wijzigingsd
               WUZ0NM = 0; //Wrk wijzigingsd
                // Oph.dtm wijz INSZ/adr EEF - Lid vorig geg  *
               CLEAR   PARC;
     C                   MOVEL(P)  #1AACD        PAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        PAAFNB                         Lid nr

               //Oph.dtm wijz IN
               //KEY: Lid vorig
               //Wrk wijzigingsd
               //Wrk wijzigingsd

               LXO5XFR(W0RTN:PARC:WQ0001:WQ0002);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXO5XFR';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
                 *In31 = *On;
                 *In32 = *On;
               Endif;
               WUJLNC = 0; //Wrk wijzigingsd
               WUJMNC = 0; //Wrk wijzigingsd
                // Oph.dtm wijz RekF7/F4 EEF - Lid vorig geg  *
               CLEAR   PBRC;
     C                   MOVEL(P)  #1AACD        PBAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        PBAFNB                         Lid nr

               //Oph.dtm wijz Re
               //KEY: Lid vorig
               //Wrk wijzigingsd
               //Wrk wijzigingsd

               LXUJXFR(W0RTN:PBRC:WQ0003:WQ0004);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXUJXFR';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
                 *In31 = *On;
                 *In32 = *On;
               Endif;
                // CASE: WRK.Wrk laatste betalingsdtm LT WRK.Wrk wijzigingsdtm INSZ
               If WUZYNM < WUZZNM; //*IF
                  // Send message 'INSZ is gewijzigd na laat'
         ZAMSID = 'USR4702';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
                // CASE: WRK.Wrk laatste betalingsdtm LT WRK.Wrk wijzigingsdtm adres
               If WUZYNM < WUZ0NM; //*IF
                  // Send message 'Adres is gewijzigd na laa'
         ZAMSID = 'USR4705';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
                // CASE: WRK.Wrk laatste betalingsdtm LT WRK.Wrk wijzigingsdatum rek
               If WUZYNM < WUJMNC; //*IF
                  // Send message 'Rek.F4 is gewijzigd na la'
         ZAMSID = 'USR5542';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
                // CASE: WRK.Wrk laatste betalingsdtm LT WRK.Wrk wijzigingsdatum rek
               If WUZYNM < WUJLNC; //*IF
                  // Send message 'Rek.F7 is gewijzigd na la'
         ZAMSID = 'USR4987';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
             Endif; //*FI
              // CASE:
              //  - c1ANDc2
              //   !- c1    : DTL.Type wklh. kode is 53
              //   !- c2    : DTL.Barema RVAkode is ..ICLD.
              //   '-
         Y0CX01 = '0';            1
             If #1A1CD = '53'; //*IF
               If #1DOCD = @CN(003); //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
               WUGENE = WUX8ND / 100; //Wrk eindmaand t
                // CASE: DTL.Datum achterstal EQ WRK.Wrk eindmaand type53
               If #1GWNB = WUGENE; //*IF
                  // omzetten datum8 naar cde - Wkl betaling  *
                 JRX8ND = WUX8ND / 10000;
                 DGX8ND = WUX8ND;
                 DMX8ND = WUX8ND;
                 MDX8ND = DMX8ND / 100;
     EvalR   JR810C = JRX8ND;
     EvalR   MD810C = MDX8ND;
     EvalR   DG810C = DGX8ND;
         WUPYCK = V8N10C;
                  // Setup message data for message
         ZA0001 = WUPYCK;                         Wrk dtm 10 lang
                  // Send message 'Recht op ocv tem par'
         ZAMSID = 'USR6694';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
             Endif; //*FI
              // CASE: DTL.Datum achterstal is < 201211
             If #1GWNB < 201211; //*IF
               YRSW00 = 1;
               ZQ = 1;
               If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00006 OR ZQ > 00006;
         W0RTN = 'Y2U0510';
               ELSE;
                 #DIICG = %Subst(#1K0CE:ZQ:YRSW00); //Dtm 2de periode
     C   90              MOVEL     'Y2U0510'     W0RTN
               Endif;
               YRSW00 = 1;
               ZQ = 2;
               If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00006 OR ZQ > 00006;
         W0RTN = 'Y2U0510';
               ELSE;
                 #DIJCG = %Subst(#1K0CE:ZQ:YRSW00); //Dtm forfait cod
     C   90              MOVEL     'Y2U0510'     W0RTN
               Endif;
             Endif; //*FI
              // CASE: WRK.switch verg. betalen is 0
             If WUYZCG = '0'; //*IF
         WUYZCG = '0';                         switch verg. be
                // Controle verg.132 degres - Wkl betaling  *
               If WUVE01 = '132   ' OR WUVE02 = '132   ' OR WUVE03 = '132   ' OR WUVE04 = '132   ' OR WUVE05 = '132   ' OR WUVE06 = '132   ';
                 If #1A1CD = '00';
         WUYZCG = 'I';
                 ENDIF;
               ENDIF;
                // CASE: WRK.switch verg. betalen is I
               If WUYZCG = 'I'; //*IF
                  // Send message 'Verg.132:overgang UI'
         ZAMSID = 'USR5147';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
             Endif; //*FI
              // Controle MDBIJZV3 - Wkl betaling  *
         WUCLCK = '0';
             //AFD
             //LIDNR
             //REF.MND
              // CASE: WRK.switch arbeidsvergunning is Y
             MDBIJZV3(#1AACD:#1AFNB:RMPARM:WUCLCK);
               If WUCLCK = 'Y';
             Endif; //*FI
              // CASE: WRK.switch arbeidsvergunning is 7
             If WUCLCK = '7'; //*IF
             Endif; //*FI
              // Controle MDBIJZV4 - Wkl betaling  *
         WUW8CK = '0';
         WUCLCK = '0';
             //AFD
             //LIDNR
             //REF.MND

         WUYHCM = '0';
         WUYICM = '0';
              //                    CALL 'MDBIJZV5'
             //AFD
             //LIDNR
             //REF.MND
             //MAR51
             //MARNO
              // CASE: WRK.switch mar51 is Y
             MDBIJZV6(#1AACD:#1AFNB:RMPARM:WUYHCM:WUYICM);
               If WUYHCM = 'Y';
                // Prompt voor fouten/info - Foutenlijsten pop-up  *
               CLEAR   PCRC;
     C                   MOVEL(P)  @CN(004)      PCJECL                         Foutenlijsten T
     C                   MOVEL(P)  WUYXCJ        PCJFCL                         Foutenlijsten t

               //Prompt voor fou
               //KEY: Foutenlijs

               L0ALPVR(W0RTN:PCRC);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'L0ALPVR';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
               Endif;
             Endif; //*FI
              // CASE: WRK.switch arbeidsvergunning is Y
             If WUCLCK = 'Y'; //*IF
                // CASE: DTL.Datum arbeidsverg is leeg
               If #1AIDT = *ZERO; //*IF
                  // Send message 'Arbeidskaart verplicht!'
         ZAMSID = 'USR6784';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
               ELSE;
                  // CASE: *OTHERWISE
                 WUH6NE = #1AIDT / 100; //wrk datum 6 lan
                  // CASE: WRK.wrk datum 6 lang AV VV LT KEY.Datum achterstal
                 If WUH6NE < #1GWNB; //*IF
                    // Send message 'Arbeidskaart verplicht!'
         ZAMSID = 'USR6784';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
                 ELSE;
                    // CASE: *OTHERWISE
                    // CASE: WRK.switch marno is Y
                   If WUYICM = 'Y'; //*IF
                      // Prompt voor fouten/info - Foutenlijsten pop-up  *
                     CLEAR   PCRC;
     C                   MOVEL(P)  @CN(005)      PCJECL                         Foutenlijsten T
     C                   MOVEL(P)  WUYXCJ        PCJFCL                         Foutenlijsten t

                     //Prompt voor fou
                     //KEY: Foutenlijs

                     L0ALPVR(W0RTN:PCRC);
                       If *IN90 = '1';
                        // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'L0ALPVR';
                        // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                       EXSR ZASNMS;
                     Endif;
                      // Error detected?
                     If W0RTN <> *BLANK;
                       *In99 = *On;
                     Endif;
                      // Send message '.'
         ZAMSID = 'USR5917';
                     EXSR ZASNMS;
                     *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // CASE: WRK.switch arbeidsvergunning is I
             If WUCLCK = 'I'; //*IF
                // CASE: DTL.Datum arbeidsverg is leeg
               If #1AIDT = *ZERO; //*IF
               ELSE;
                  // CASE: *OTHERWISE
                  // Send message 'Arbeidskaart tem dtm'
         ZAMSID = 'USR6785';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
             Endif; //*FI
              // CASE: WRK.Wrk verblijfsvergunning is Y
             If WUW8CK = 'Y'; //*IF
                // CASE: DTL.Datum verblijfsverg is 0
               If #1AFDT = *ZERO; //*IF
                  // Send message 'Verblijfsvergunning verpl'
         ZAMSID = 'USR6786';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
               ELSE;
                  // CASE: *OTHERWISE
                 WUH6NE = #1AFDT / 100; //wrk datum 6 lan
                  // CASE: WRK.wrk datum 6 lang AV VV LT KEY.Datum achterstal
                 If WUH6NE < #1GWNB; //*IF
                    // Send message 'Verblijfsvergunning verpl'
         ZAMSID = 'USR6786';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // CASE: WRK.Wrk verblijfsvergunning is I
             If WUW8CK = 'I'; //*IF
                // CASE: DTL.Datum verblijfsverg is ingevuld
               If #1AFDT > 0; //*IF
                  // Send message 'Verblijfsverg tem dtm'
         ZAMSID = 'USR6787';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               ELSE;
                  // CASE: *OTHERWISE
               Endif; //*FI
             Endif; //*FI
             WUZTNM = 0; //Wrk uurtoeslag
             WUZUNM = 0; //Wrk dagtoeslag
             WUFDND = *ZERO; //Wrk bedrag Y na
         WUBGCG = '0';                         switch type 29
         WUPZCF = '0';                         switch type 09-
         WULECJ = '0';                         Swicth BD input
              // CASE:
              //  - c1ORc2ORc3
              //   !- c1    : DTL.Type wklh. kode is 09-10
              //   !- c2    : WRK.switch 114Â§7 is 9
              //   !- c3    : WRK.switch 114Â§7 is *
              //   '-
             If #1A1CD >= '09' AND #1A1CD <= '10' OR WULQCH = '9' OR WULQCH = '*'; //*IF
         WUPZCF = '1';                         switch type 09-
             Endif; //*FI
         WULECJ = '1';                         Swicth BD input
              // Vrijst 89&1 en 89,2 - Wkl betaling  *
             If #1A1CD = '01' OR #1A1CD = '03' OR #1A1CD = '08' OR #1A1CD = '15';

               If #1ATCE = 'N' OR #1ATCE = *BLANK;
         P1T6V1 = #1A6CD;            6
         P1T6V2 = #1AYCE;            6
                 If P1T6V1 = '89&1  ' OR P1T6V1 = '89,2  ' OR P1T6V2 = '89&1  ' OR P1T6V2 = '89,2  ' OR P1T6V1 = '89&2  ' OR P1T6V2 = '89&2  ';
         WUPZCF = '1';                         switch type 09-10
                 ENDIF; //89&1,...
               ENDIF; //GEINTEGREERD N OF BL

               If #1ATCE = 'N';
                  //          #1ATCE    OREQ *BLANK
         WUWU48 = '0';
                 TSTLFT = 60;
                 RMPAR = #1GWNB;
                 //AFD
                 //LIDNR
                 //REF.MND
                 //TEST LEEFTIJD
                 //SWITCH148
                 MDLEEFT4(#1AACD:#1AFNB:RMPAR:TSTLFT:WUWU48);
                   If WUWU48 = 'Y';
         WUPZCF = '2';                         switch type 09-10
                 ENDIF;
               ENDIF; //GEINTEGREERD N OF BL
             ENDIF; //TYPE 01,03,08,15
         WUXBCG = '0';                         Wrk ibo sanctie
              // Type 11/31 met positie 3 barema = I op H ==>IBO (sanctie mag nt r
              // CASE:
              //  - c1ORc2
              //   !- c1    : DTL.Type wklh. kode is 11 : beroepsopleiding
              //   !- c2    : DTL.Type wklh. kode is 31 : deelt.opl/stage
              //   '-
             If #1A1CD = '11' OR #1A1CD = '31'; //*IF
               YRSW00 = 1;
               ZQ = 3;
               If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
               ELSE;
                 WUXACG = %Subst(#1DOCD:ZQ:YRSW00); //Wrk IBO positie
     C   90              MOVEL     'Y2U0510'     W0RTN
               Endif;
                // CASE:
                //  - c1ORc2
                //   !- c1    : WRK.Wrk IBO positie 3 barema is I
                //   !- c2    : WRK.Wrk IBO positie 3 barema is H
                //   '-
               If WUXACG = 'I' OR WUXACG = 'H'; //*IF
                 YRSW00 = 2;
                 ZQ = 1;
                 If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00009 OR ZQ > 00009;
         W0RTN = 'Y2U0510';
                 ELSE;
                   WUXCCG = %Subst(#1BVCE:ZQ:YRSW00); //Wrk sanctie beg
     C   90              MOVEL     'Y2U0510'     W0RTN
                 Endif;
                  // CASE:
                  //  - c1ORc2ORc3
                  //   !- c1    : WRK.Wrk sanctie begin is 52
                  //   !- c2    : WRK.Wrk sanctie begin is 59
                  //   !- c3    : WRK.Wrk sanctie begin is 83
                  //   '-
                 If WUXCCG = '52' OR WUXCCG = '59' OR WUXCCG = '83'; //*IF
         WUXBCG = '1';                         Wrk ibo sanctie
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
             #1FXNR = 01; //Wkl bet NBR vri
              // CASE: PAR.param code bijpassing is C = Bijpassing via BYPAS
             If P4BLCF = 'C'; //*IF
               #1FXNR = 21; //Wkl bet NBR vri
             Endif; //*FI
         WUOSCE = *BLANK;                         Wrk sanctiecode
         WUOTCE = *BLANK;                         wrk arb.ovk
         WUOUCE = WUOTCE;                         Wrk arb.ovk2
         #1ARNB = WUUWCE;                         Taal kode
             #1ASDD = WUHUNB; //Wkl add-datum
         #1EGCD = '0000';                         C12 reden kode
             #1HJNB = #1GWNB; //DOK periode
         #1MECD = #1BACD;                         Kode beroep
         #1RQCD = #1BCCD;                         Kode subberoep
         #1PICD = ##USR;                         Wkl add-user
             WUA195 = #1GWNB / 100; //Wrk veld 4 posi
             WUYFNR = WUA195 - 1; //wrk veld 4 posi
         WUA197 = WUYFNR;                         Wrk veld 4 posi
              // Ophalen dgn vorig jr:EEF - WRK C2 Aantal dagen  *
             CLEAR   PDRC;
     C                   MOVEL(P)  #1AACD        PDGK01                         WRK C2 afd nr
     C                   MOVEL(P)  #1AFNB        PDGK02                         WRK C2 lid nr
     C                   MOVEL(P)  WUA197        PDGK03                         WRK C2 jaar

             //Ophalen dgn vor
             //KEY: WRK C2 Aan
             //WRK C2 dgn R6+V
             //WRK C2 dgn R5
             //WRK C2 dgn BV
             //WRK C2 dgn KBF
             //WRK C2 dgn nt-g

             LWFRXFR(W0RTN:PDRC:WQ0005:WQ0006:WQ0007:WQ0008:WQ0009);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWFRXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
             #DCA20 = WUGK04; //Wkl bet dgn R6+
             #DCA21 = WUGK05; //Wkl bet dgn R5
             #DCA22 = WUGK06; //Wkl bet dgn BV
             #DCA23 = WUGK07; //Wkl bet dgn KBF
             #DCA25 = WUEMNR; //Wrk dgn nt verg
              // controle sanctie voorbij - Wkl betaling  *
         WUYWCI = '0';            1

         WUFVCN = '0';            1
              // CASE: WRK.Switch sanctie voorbij is 2
             MDSANC3(#1AACD:#1AFNB:RMPARM:WUFVCN);
               If WUYWCI = '2';
                // Send message 'Sanctie is afgelopen!'
         ZAMSID = 'USR6103';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
              // Ophalen gegevens V en BV - Wkl bet  *
             //JAAR VERL
     C                   MOVEA     *IN(50)       UWIN              1
     EvalR   ' = ';           WUWUGV            1            GN VERL.SCHE
         JAARH = #1GWNB;             4 0          HUIDIG JR
             JAARV = JAARH - 1; //VORIG JR
             JAARCO = JAARH;
             CHAIN (#1AACD:#1AFNB:JAARCO) @BSCPEL ;
       *in50 = (%found() = *Off);
             If NOT *In50;
               If BSHHNB < 0;
             Endif OR BSHINB < 0;
         WUWUGV = 'X';
     C                   GOTO      ENDNEG
             ENDIF;
             If #1AACD = '99' AND #1AFNB = '200618';
               DSPLY (BSHHNB) 'ROSANNE';
               DSPLY (BSHINB) 'ROSANNE';
               DSPLY (WUWUGV) 'ROSANNE';
             ENDIF;
     C  N50              MOVE      BSHHNB        #DMTNB                         BV KRED REST
     C  N50              MOVE      BSHINB        #DMUNB                         V  KRED REST
     C  N50              MOVE      BSC3NB        #DRDCD            1            VZ6
     C  N50              MOVE      BSBXCD        #DRCCD            1            BVZ6
     C  N50              MOVE      BSHWCD        #DWUVL            1            AFD/COMP GEW
     C  N50              MOVE      BSHVCD        #DWUBV            1            IJZ. * OF C
         P1TYPP = #1A1CD;            1
             If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06' OR #1A1CD = '24' OR #1A1CD = '25' OR #1A1CD = '26' OR #1A1CD = '23' OR #1A1CD = '27' OR #1A1CD = '29' OR #1A1CD = '50' OR #1A1CD = '51' OR #1A1CD = '52' OR #1A1CD = '53' OR #1A1CD = '54' OR #1A1CD = '55' OR P1TYPP = '3' OR P1TYPP = '4';
     EvalR   ' = ';           WUWUGV            1            GN VERL.SCHE
             ELSE;
     C  N50              MOVE      'W'           WUWUGV            1            WEL EEN VERL
     C   50              MOVE      'G'           WUWUGV            1            GN VERL.SCHE
             ENDIF; //02,04,06
             JAARCO = JAARV;
             CHAIN (#1AACD:#1AFNB:JAARCO) @BSCPEL ;
       *in50 = (%found() = *Off);
     C  N50              MOVE      BSC4NB        #DCA25                         NT VERG DGN
             If *In50;
               #DCA25 = 0;
             Endif;
              // OPHALEN GEGEVENS BELASTINGEN LOPENDE JAAR/VIA EEF
             JAARTA = 0; //JAAR BELAST.
         JAARTA = BYEENB;            4 0
             JAARCO = JAARTA;
             If JAARH >= 2050;
               If WUWUGV = 'W';
                 If BSMNCE = 'N ';
         WUWUGV = 'X';
                 ENDIF;
               ENDIF;
             ENDIF;
     C     ENDNEG        TAG
             If #1AACD = '99' AND #1AFNB = '200618';
               DSPLY (BSHHNB) 'ROSANNE';
               DSPLY (BSHINB) 'ROSANNE';
               DSPLY (WUWUGV) 'ROSANNE';
             ENDIF;
     C                   MOVEA     UWIN          *IN(50)
              // Info : er bestaat geen verlofscherm voor jaar van achterstal (nt
              // CASE: WRK.Switch geen verlofscherm is G
             If WUWUGV = 'G'; //*IF
               WUHFNG = #1GWNB + *ZERO; //wrkf veld num 2
                // CASE: WRK.wrkf veld num 2 lng is < 09
               If WUHFNG < 09; //*IF
                  // Send message 'Geen verlofscherm dit jr'
         ZAMSID = 'USR1352';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               ELSE;
                  // CASE: *OTHERWISE
                  // Send message 'Geen verlofscherm dit jaa'
         ZAMSID = 'USR7397';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
             Endif; //*FI
              // Error: er bestaat een verlofscherm dat nog niet nagezien is
              // CASE: WRK.Switch geen verlofscherm is X
             If WUWUGV = 'X'; //*IF
                // Send message 'verlof : nog nt nagezien'
         ZAMSID = 'USR6936';
               EXSR ZASNMS;
               *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
             Endif; //*FI
             WUGDNN = 0; //Wrk verlof JVU
              // Ophalen ind.maand EEF - Wkl controle  *
             //Ophalen ind.maa
             //Wrk veld 1 posi
             //wrk indieningsm

             LWFHXFR(W0RTN:WQ0010:WQ0011);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWFHXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
             WUZDNR = WUZKNR / 100; //Wrk jaar achter
              // Ophalen bedrag belastinge - Werkloze belasting  *
             //Ophalen bedrag
             //Afdeling nr
             //Werkloze belast
             //Lid nr
             //Werkloze belast

             LWKJXFR(W0RTN:WQ0012:WQ0013:WQ0014:WQ0015);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWKJXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
               *In31 = *On;
               *In32 = *On;
             Endif;
             WUZDNR = #1GWNB / 100; //Wrk jaar achter
         WUXMCF = *BLANK;                         Wrk Beslag SINE
              // Ophalen beslagen - Wkl bet  *
     C                   MOVEA     *IN(50)       UWIN              1
         WUZ4CM = 'N';            1
         BESL99 = '0';            1
         LID = #1AACD;               8 0          AFD
     EvalR   LID = #1AFNB;               8 0          LIDNR
     EvalR   O01 = 'O01';               3
         WUW297 = '0';            1
         WUW298 = '0';            1
         WUW303 = '0';            1
         WUW401 = 'N';            1
         WUXMCF = *BLANK;
         WUJICO = '0';            1
         MAGBES = 'Y';            1
             MAGBEN = 0;
     EvalR   DTMBNK = BYEDNB;
             BSLT10 = 0;
             WAAR10 = 0;
             WAAR20 = 0;
             JR2BNK = 2000 + JRBNK;
             MD2BNK = MNDBNK;
             DG2BNK = DAGBNK;
             //AFD
             //LIDNR
             //OND.GELD
             SETLL (#1AACD:#1AFNB:O01) @BOCPEO;
             READ @BOCPEO ;
       *in50 = %eof();
     C   50              GOTO      ENDBES
         AFDLID = BOAACD;            8 0
     EvalR   AFDLID = BOAFNB;            8 0
              // OPZOEKEN ALLE AKTIEVE BESLAGEN  EN MOVE NAAR ZONES AFHOUDINGEN
             Dow AFDLID = LID;
               If BOBYCD = 'A';
         BESLCO = 'N';            1
         SXXSCO = BOBQCD;            3
                 MDBESL03(#1AACD:#1AFNB:SXXSCO:BESLCO);
                   If BESLCO = 'Y';
         WUZ4CM = 'Y';
     C                   GOTO      VERBES
                 ENDIF;
                 EXSR EINDDA;
                 EXSR UITVDA;
                  //IS UITVOERINGSDTM INGEVULD+EINDDATUM==>MAG BESL AFHOUDEN MAGBES=Y OF N
                 If MAGBES = 'Y';
                   If #1A1CD = 'CA';
                     If BOMK01 = '10';
     C                   GOTO      DOEBES
                     ELSE;
                       If BOMK01 = '20';
     EvalR   LET1 = #1DOCD;              1
                         If LET1 = 'F';
     C                   GOTO      DOEBES
                         ELSE;
     C                   GOTO      VERBES
                         ENDIF;
                       ELSE;
     C                   GOTO      VERBES
                       ENDIF;
                     ENDIF;
                   ENDIF;
                   If BOBQCD <> 'S00';
                     If BOMK01 = '10' OR BOMK01 = '20';
                       If #1A1CD = '12' OR #1A1CD = 'CA'; //BESCHUTTE
                         If BOMK01 = '10' AND #1A1CD = '12';
         WUW401 = 'Y';
                         ENDIF;
                       ELSE;
     C                   GOTO      VERBES
                       ENDIF;
                     ENDIF;
     C     DOEBES        TAG
                     If #1DVCD = *BLANK; //AFH1 BLANK
     EvalR   #1DVCD = BOBQCD;
                       If BOBVCD = 'B';
                         #1GZNB = BOG9NB;
                         If BOG9NB > 6000;
         BESL99 = '1';
                         ENDIF;
                       ELSE;
                         If BOG8NB = 100;
         BESL99 = '1';
                         ENDIF;
                       Endif;
                       BSLT10 = 1;
                       EXSR TSTT10;
                     ELSE; //AFH1 NT BLAN
                       If #1DWCD = *BLANK; //AFH2 BLANK
     EvalR   #1DWCD = BOBQCD;
                         If BOBVCD = 'B';
                           #1G1NB = BOG9NB;
                           If BOG9NB > 6000;
         BESL99 = '2';
                           ENDIF;
                         ELSE;
                           If BOG8NB = 100;
         BESL99 = '2';
                           ENDIF;
                         Endif;
                         BSLT10 = 2;
                         EXSR TSTT10;
                       ELSE; //AFH2 NT BLAN
                         If #1DXCD = *BLANK; //AFH3 BLANK
     EvalR   #1DXCD = BOBQCD;
                           If BOBVCD = 'B';
                             #1G3NB = BOG9NB;
                             If BOG9NB > 6000;
         BESL99 = '3';
                             ENDIF;
                           ELSE;
                             If BOG8NB = 100;
         BESL99 = '3';
                             ENDIF;
                           Endif;
                           BSLT10 = 3;
                           EXSR TSTT10;
                         ELSE; //AFH3 NT BLANK
                           If #1DYCD = *BLANK; //AFH4 BLANK
     EvalR   #1DYCD = BOBQCD;
                             If BOBVCD = 'B';
                               #1G5NB = BOG9NB;
                               If BOG9NB > 6000;
         BESL99 = '4';
                               ENDIF;
                             ELSE;
                               If BOG8NB = 100;
         BESL99 = '4';
                               ENDIF;
                             Endif;
                             BSLT10 = 4;
                             EXSR TSTT10;
                           ELSE; //AFH4 NT BLAN
                             If #1EDCD = *BLANK; //AFH5 BLANK
     EvalR   #1EDCD = BOBQCD;
                               If BOBVCD = 'B';
                                 #1HDNB = BOG9NB;
                                 If BOG9NB > 6000;
         BESL99 = '5';
                                 ENDIF;
                               ELSE;
                                 If BOG8NB = 100;
         BESL99 = '5';
                                 ENDIF;
                               Endif;
                               BSLT10 = 5;
                               EXSR TSTT10;
                             ELSE; //AFH5 NT BLAN
                               If #1EECD = *BLANK; //AFH6 BLANK
     EvalR   #1EECD = BOBQCD;
                                 If BOBVCD = 'B';
                                   #1HFNB = BOG9NB;
                                   If BOG9NB > 6000;
         BESL99 = '6';
                                   ENDIF;
                                 ELSE;
                                   If BOG8NB = 100;
         BESL99 = '6';
                                   ENDIF;
                                 Endif;
                                 BSLT10 = 6;
                                 EXSR TSTT10;
                               Endif; //END AFH6
                             Endif; //END AFH5
                           Endif; //END AFH4
                         Endif; //END AFH3
                       Endif; //END AFH2
                     Endif; //END AFH1
                   Endif; //KODE NT S00
                 ENDIF; //MAGBES=Y
               Endif; //AKTIEF
     C     VERBES        TAG
               READ @BOCPEO ;
       *in50 = %eof();
     C   50              GOTO      ENDBES
         AFDLID = BOAACD;            8 0
     EvalR   AFDLID = BOAFNB;            8 0
             Enddo; //END DO-WHILE
     C     ENDBES        TAG

             If WAAR10 > 0 AND WAAR20 > 0;
               EXSR VERWIS;
             ENDIF;
     C                   MOVEA     UWIN          *IN(50)
              //-------------------------------------------------------------------------
              // CASE: WRK.Switch beslag blokkeren is Y
             If WUZ4CM = 'Y'; //*IF
             Endif; //*FI
              // SINE : en geen enkel beslag met type inhouding=10!
              // CASE: DTL.Type wklh. kode is CA
             If #1A1CD = 'CA'; //*IF
                // CASE: WRK.Switch297 is 0
               If WUW297 = '0'; //*IF
                  // Send message 'SINE : geen enkel beslag'
         ZAMSID = 'USR3321';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
               Endif; //*FI
             Endif; //*FI
              // Type 12 : beschutte : geen beslag type 10
              // CASE: DTL.Type wklh. kode is 12 :171bis beschutte werk
             If #1A1CD = '12'; //*IF
                // CASE: WRK.switch401 is N
               If WUW401 = 'N'; //*IF
                  // Send message 'Beschutte werkplaats en'
         ZAMSID = 'USR5230';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
               Endif; //*FI
             Endif; //*FI
              // Einddatum beslag is vervallen
              // CASE: WRK.Switch31 is 1
             If WUJICO = '1'; //*IF
                // Send message 'Beslag : einddatum verval'
         ZAMSID = 'USR3358';
               EXSR ZASNMS;
               *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
             Endif; //*FI
              // Controle beslag Fiducre - Wkl betaling  *
         WUDQCN = 'N';            1
             If #1DVCD = *BLANK AND #1DWCD = *BLANK AND #1DXCD = *BLANK AND #1DYCD = *BLANK AND #1EDCD = *BLANK AND #1EECD = *BLANK;
             ELSE;
             MDBESL05(#1AACD:#1AFNB:#1DVCD:#1DWCD:#1DXCD:#1DYCD:#1EDCD:#1EECD:WUDQCN);
               ENDIF;
              // CASE: WRK.switch Fiducre is Y
             If WUDQCN = 'Y'; //*IF
                // Prompt voor fouten/info - Foutenlijsten pop-up  *
               CLEAR   PCRC;
     C                   MOVEL(P)  'FID01'       PCJECL                         Foutenlijsten T
     C                   MOVEL(P)  WUYXCJ        PCJFCL                         Foutenlijsten t

               //Prompt voor fou
               //KEY: Foutenlijs

               L0ALPVR(W0RTN:PCRC);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'L0ALPVR';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
               Endif;
             Endif; //*FI
         WUFYCH = 'O';                         Wrk UTF8 Parame
              // Controle UTF8 voor beslag - Wkl betaling  *
             //AFD
             //LIDNR
             //AFH1
             //AFH2
             //AFH3
             //AFH4
             //AFH5
             //AFH6
             //FOUT
              // CASE: WRK.Wrk UTF8 Parameter out is E
             MDUTF8B(#1AACD:#1AFNB:#1DVCD:#1DWCD:#1DXCD:#1DYCD:#1EDCD:#1EECD:WUFYCH);
               If WUFYCH = 'E';
                // Send message 'UTF8 : beslag bevat foute'
         ZAMSID = 'USR5261';
               EXSR ZASNMS;
               *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
             Endif; //*FI
              // CASE: DTL.Type wklh. kode is <> 00
             If #1A1CD <> '00'; //*IF
                // Ophalen terugvorderingen3 - Wkl betaling  *
     C                   MOVEA     *IN(50)       UWIN              1

                // EERST BEPALEN HOEVEEL TV MEN NOG NIEUW MAG INHOUDEN
               AANTTV = 0;
               INDMND = BYEENB;
               RMPAR = #1GWNB;
         TXXTXX = 'XXX';            3
         TVADD = 'N';             1
         TVNIEU = 'Y';            1
         WUZQCI = '0';
               MDTELTV(#1AACD:#1AFNB:#1A1CD:#1BACD:#1BCCD:#1A2CD:INDMND:RMPARM:TXXTXX:AANTTV:TVADD:TVNIEU);
                 MAXNIE = AANTTV;
                // TELLER AKTIEVE RVA TV'EN EN PASSIEVE RVA TV'EN (P & SALDO>0)
               TELAKT = 0;
               TELPAS = 0;
         WUW205 = '0';            1            SW205
         LID = #1AACD;               8 0          AFD
     EvalR   LID = #1AFNB;               8 0          LIDNR
     EvalR   T01 = 'T01';               3
               //AFD
               //LIDNR
               //TERUGV KODE
               SETLL (#1AACD:#1AFNB:T01) @HZCPIR;
               READ @HZCPIR ;
       *in50 = %eof();
     C   50              GOTO      ENDTER
         AFDLID = HZAACD;            8 0
     EvalR   AFDLID = HZAFNB;            8 0
               Dow AFDLID = LID;
                 If HZH001 <> '04'; //ART NT 04
                   If HZHZ04 = 'A' OR HZHZ04 = 'C'; //AKTIEF
                     If HZHZ14 > 0; //SALDO>0
                        // CORONA BEDRAG <= 119,70 VOORLOPIG NIET OPHALEN
                       If HZEGDM >= 202003 AND HZEGDM <= 202007; //IM
                          //          HZEFDM    IFGE 202003                     RM
                          //          HZEFDM    ANDLE202007
                         If HZHZ03 = 'Y'; //RVA TV
                           If HZHZ12 <= 119.70;
                             If HZHZ10 <> 'Y'; //GEEN C12
                                //****                GOTO TVNEXT                     LEES VOLGEND
                             ENDIF;
                           ENDIF;
                         ENDIF;
                          //                    ENDIF
                       ENDIF;

                       If HZHZ03 = 'Y' OR HZHZ07 = 'Y'; //RVA TV
                         TELAKT = TELAKT + 1; //#AKTIEVE + 1
                         If HZHZ09 = 'Y'; //VOORB
         FOUTTV = 'N';
                           MDTV002(#1AACD:#1AFNB:HZHZ01:FOUTTV);
                             If FOUTTV = 'F';
         WUZQCI = '1';            1
     C                   GOTO      TVNEXT                                       LEES VOLGEND
                           ENDIF;
         FOUTTV = 'N';
                           MDTV007(#1AACD:#1AFNB:HZHZ01:FOUTTV);
                             If FOUTTV = 'F';
                              //                    MOVEL'1'       WUZQCI  1
     C                   GOTO      TVNEXT                                       LEES VOLGEND
                           ENDIF;
                         ENDIF;
                       ENDIF; //END RVA TV
         OUINON = 'N';            1
         BZBW = #1A4CD;              2
                       MDBW001(BZBW:OUINON);
                         If HZHZ38 <> 'G';
                         If HZBWCD = 'GM ' OR HZBWCD = 'GS ' OR HZBWCD = 'GP ' OR HZBWCD = 'G4 ' OR HZBWCD = 'GK ';
                           If HZHZ07 <> 'Y'; //AKK. WKLH<>Y
                             If #1A4CD = 'C ' OR #1A4CD = 'E ' OR #1A4CD = 'CS' OR #1A4CD = 'ES' OR #1A4CD = 'G ' OR #1A4CD = 'A ' OR #1A4CD = 'DA' OR #1A4CD = 'NA' OR #1A4CD = 'VA' OR #1A4CD = 'FA' OR #1A4CD = 'PA' OR #1A4CD = 'FS' OR #1A4CD = 'PS' OR #1A4CD = 'VZ' OR #1A4CD = 'DZ' OR #1A4CD = 'FZ' OR #1A4CD = 'PZ' OR #1A4CD = 'H ' OR #1A4CD = 'I ' OR #1A4CD = '29' OR #1A4CD = '79' OR #1A4CD = 'K ' OR #1A4CD = 'CK' OR #1A4CD = 'BA' OR #1A4CD = 'M ' OR #1A4CD = 'M1' OR #1A4CD = 'VJ' OR #1A4CD = 'SV' OR #1A4CD = '35' OR #1A4CD = '85' OR #1A4CD = '62' OR #1A4CD = '75' OR #1A4CD = '15' OR #1AACD = '04' OR OUINON = 'Y'; //METAAL
     C                   GOTO      TVVDR                                        DOE VERDER
                             ELSE;
     C                   GOTO      TVNEXT                                       LEES VOLGEND
                             ENDIF; //MET,H&S,DOK
                           ENDIF; //AKK.WKLH<>Y
                         ENDIF; //GM,GS,GP
     C     TVVDR         TAG                                                    TV VERDER
         TXXTXX = HZHZ01;            3
         TVADD = 'N';             1
         TVNIEU = 'Y';            1

                         MDTELTV(#1AACD:#1AFNB:#1A1CD:#1BACD:#1BCCD:#1A2CD:INDMND:RMPARM:TXXTXX:AANTTV:TVADD:TVNIEU);
                           If TVNIEU = 'Y';
                           If MAXNIE > 0;
                             MAXNIE = MAXNIE - 1;
     C                   GOTO      ADDTVN
                           ELSE;
     C                   GOTO      TVNEXT
                           ENDIF;
                         ENDIF;
                         If TVADD = 'Y';
     C                   GOTO      ADDTVN
                         ELSE;
     C                   GOTO      TVNEXT
                         ENDIF;
     C     ADDTVN        TAG

                         If #1DVCD = *BLANK; //AFH1 BLANK
     EvalR   #1DVCD = HZBWCD;                         AFH1 KODE
     EvalR   #1OYCD = HZHZ01;                         AFH1 KODE TV
                           #1G0NB = HZEFDM; //AFH1 DATUM
                           If HZHZ07 = 'Y'; //AKK VR WKLH
     EvalR   #1DVCD = 'Y';
                           ENDIF; //END AKK=Y
                           If HZBVCD = 'B';
                             If HZHZ14 > HZHZ15; //SALDO>V.BDRG
                               #1GZNB = HZHZ15; //AFH1 BEDRAG
                             ELSE;
                               #1GZNB = HZHZ14; //AFH1 BEDRAG
                             Endif;
                           ELSE; //DUS P=% VAN
                             PERCT = HZHZ12 / 100; //TOTAAL TV/100
                             PERCT = PERCT * HZHZ16; //TOTAAL TV
                             PERCT1 = PERCT + 0.009; //NR BOVEN AFROND
                             If HZHZ14 > PERCT1; //SALDO>V.BDRG
                               #1GZNB = PERCT1;
                             ELSE;
                               #1GZNB = HZHZ14;
                             Endif;
                           Endif; //END B
                         ELSE; //AFH1 NT BLAN

                           If #1DWCD = *BLANK; //AFH2 BLANK
     EvalR   #1DWCD = HZBWCD;                         AFH2 KODE
     EvalR   #1OZCD = HZHZ01;                         AFH2 KODE TV
                             #1G2NB = HZEFDM; //AFH2 DATUM
                             If HZHZ07 = 'Y'; //AKK VR WKLH
     EvalR   #1DWCD = 'Y';
                             ENDIF; //END AKK=Y
                             If HZBVCD = 'B';
                               If HZHZ14 > HZHZ15;
                                 #1G1NB = HZHZ15; //AFH2 BEDRAG
                               ELSE;
                                 #1G1NB = HZHZ14; //AFH2 SALDO
                               Endif;
                             ELSE; //DUS P=% VAN
                               PERCT = HZHZ12 / 100; //TOTAAL TV/100
                               PERCT = PERCT * HZHZ16; //TOTAAL TV
                               PERCT1 = PERCT + 0.009; //NR BOVEN AFROND

                               If HZHZ14 > PERCT1;
                                 #1G1NB = PERCT1;
                               ELSE;
                                 #1G1NB = HZHZ14;
                               Endif;
                             Endif;
                           ELSE; //AFH2 NT BLAN

                             If #1DXCD = *BLANK; //AFH3 BLANK
     EvalR   #1DXCD = HZBWCD;                         AFH3 KODE
     EvalR   #1O0CD = HZHZ01;                         AFH3 KODE TV
                               #1G4NB = HZEFDM; //AFH3 DATUM
                               If HZHZ07 = 'Y'; //AKK VR WKLH
     EvalR   #1DXCD = 'Y';
                               ENDIF; //END AKK=Y
                               If HZBVCD = 'B';
                                 If HZHZ14 > HZHZ15;
                                   #1G3NB = HZHZ15; //AFH3 BEDRAG
                                 ELSE;
                                   #1G3NB = HZHZ14; //AFH3 BEDRAG
                                 Endif;
                               ELSE; //DUS P=% VAN
                                 PERCT = HZHZ12 / 100; //TOTAAL TV/100
                                 PERCT = PERCT * HZHZ16; //TOTAAL TV
                                 PERCT1 = PERCT + 0.009; //NR BOVEN AFROND

                                 If HZHZ14 > PERCT1;
                                   #1G3NB = PERCT1;
                                 ELSE;
                                   #1G3NB = HZHZ14; //AFH3 BEDRAG
                                 Endif;
                               Endif;
                             ELSE; //AFH3 NT BLANK

                               If #1DYCD = *BLANK; //AFH4 BLANK
     EvalR   #1DYCD = HZBWCD;                         AFH4 KODE
     EvalR   #1O1CD = HZHZ01;                         AFH4 KODE TV
                                 #1G6NB = HZEFDM; //AFH4 DATUM
                                 If HZHZ07 = 'Y'; //AKK VR WKLH
     EvalR   #1DYCD = 'Y';
                                 ENDIF; //END AKK=Y
                                 If HZBVCD = 'B';
                                   If HZHZ14 > HZHZ15;
                                     #1G5NB = HZHZ15; //AFH4 BEDRAG
                                   ELSE;
                                     #1G5NB = HZHZ14; //AFH4 BEDRAG
                                   Endif;
                                 ELSE; //DUS P=% VAN
                                   PERCT = HZHZ12 / 100; //TOTAAL TV/100
                                   PERCT = PERCT * HZHZ16; //TOTAAL TV
                                   PERCT1 = PERCT + 0.009; //NR BOVEN AFROND

                                   If HZHZ14 > PERCT1;
                                     #1G5NB = PERCT1;
                                   ELSE; //DUS P=% VAN
                                     #1G5NB = HZHZ14; //AFH4 BEDRAG
                                   Endif;
                                 Endif;
                               ELSE; //AFH4 NT BLANK

                                 If #1EDCD = *BLANK; //AFH5 BLANK
     EvalR   #1EDCD = HZBWCD;                         AFH5 KODE
     EvalR   #1O2CD = HZHZ01;                         AFH5 KODE TV
                                   #1HENB = HZEFDM; //AFH5 DATUM
                                   If HZHZ07 = 'Y'; //AKK VR WKLH
     EvalR   #1EDCD = 'Y';
                                   ENDIF; //END AKK=Y
                                   If HZBVCD = 'B';
                                     If HZHZ14 > HZHZ15;
                                       #1HDNB = HZHZ15; //AFH5 BEDRAG
                                     ELSE;
                                       #1HDNB = HZHZ14; //AFH5 BEDRAG
                                     Endif;
                                   ELSE; //DUS P=% VAN
                                     PERCT = HZHZ12 / 100; //TOTAAL TV/100
                                     PERCT = PERCT * HZHZ16; //TOTAAL TV
                                     PERCT1 = PERCT + 0.009; //NR BOVEN AFROND

                                     If HZHZ14 > PERCT1;
                                       #1HDNB = PERCT1;
                                     ELSE;
                                       #1HDNB = HZHZ14; //AFH5 BEDRAG
                                     Endif;
                                   Endif;
                                 ELSE; //AFH5 NT BLANK

                                   If #1EECD = *BLANK; //AFH6 BLANK
     EvalR   #1EECD = HZBWCD;                         AFH6 KODE
     EvalR   #1O3CD = HZHZ01;                         AFH6 KODE TV
                                     #1HGNB = HZEFDM; //AFH6 DATUM
                                     If HZHZ07 = 'Y'; //AKK VR WKLH
     EvalR   #1EECD = 'Y';
                                     ENDIF; //END AKK=Y
                                     If HZBVCD = 'B';
                                       If HZHZ14 > HZHZ15;
                                         #1HFNB = HZHZ15; //AFH6 BEDRAG
                                       ELSE;
                                         #1HFNB = HZHZ14; //AFH6 BEDRAG
                                       Endif;
                                     ELSE; //DUS P=% VAN
                                       PERCT = HZHZ12 / 100; //TOTAAL TV/100
                                       PERCT = PERCT * HZHZ16; //TOTAAL TV
                                       PERCT1 = PERCT + 0.009; //NR BOVEN AFROND

                                       If HZHZ14 > PERCT1;
                                         #1HFNB = PERCT1;
                                       ELSE;
                                         #1HFNB = HZHZ14; //AFH6 BEDRAG
                                       Endif;
                                     Endif;

                                   Endif; //END AFH6
                                 Endif; //END AFH5
                               Endif; //END AFH4
                             Endif; //END AFH3
                           Endif; //END AFH2
                         Endif; //END AFH1
                       ENDIF; //LOCK<>GIRAAL
                     ENDIF; //SALDO>0

                   ELSE; //PASSIEVE TV
                     If HZHZ03 = 'Y' AND HZHZ14 > 0; //RVA TV
                       TELPAS = TELPAS + 1;
                     ENDIF; //END RVA TV
                   Endif; //AKTIEF
                 Endif; //ART <> 04
                  // LEES VOLGENDE TV
     C     TVNEXT        TAG
                 READ @HZCPIR ;
       *in50 = %eof();
     C   50              GOTO      ENDTER
         AFDLID = HZAACD;            8 0
     EvalR   AFDLID = HZAFNB;            8 0
               Enddo; //END DO-WHILE
     C     ENDTER        TAG
                //IS # AKTIEVE RVA TV'EN=0 & IS # PASSIEVE RVA TV'EN MET SALDO>0
               If TELAKT = 0 AND TELPAS > 0; //# AKTIEVE
     EvalR   WUW205 = '1';
               ENDIF;
     C                   MOVEA     UWIN          *IN(50)
                // CASE: WRK.Switch mag voorbarig staa is 1
               If WUZQCI = '1'; //*IF
                  // Send message 'TV : voorb : niet opgehaa'
         ZAMSID = 'USR6116';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
         #1ISCD = 'N';                         Geen uren ged.
         #1BDST = 'N';                         Geen bedrag wkl
         #1BCST = 'N';                         Geen dagen/bedr
         WURACD = 'N';                         Pr bedrag wklh
             Endif; //*FI
             #1AKDD = #1AJDT; //Wkl datum laats
             WUBZNN = #1AJDT; //Wrk betaalsch l
         #DCA02 = #1BITX;                         Wrk Wkl bet opm
         #DCA70 = #1ARST;                         Wrk vakbondsman
             #DFZDM = #1A6DM; //Wrk datum vakbo
              // Info:datum aansluiting > datum achterstal
              // CASE: DTL.Aansl jjmm GT DTL.Datum achterstal
             If #1AGNB > #1GWNB; //*IF
                // Send message 'Dat.aansl>dat.achterstal'
         ZAMSID = 'USR0591';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
         WUW195 = '0';                         Switch195
              // Ophalen ind.maand EEF - Wkl controle  *
             //Ophalen ind.maa
             //Wrk veld 1 posi
             //wrk indieningsm

             LWFHXFR(W0RTN:WQ0016:WQ0017);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWFHXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
             WUI9DM = WUZKNR; //Wrk datum indie
             WUJRJR = #1GWNB / 100; //WRK bet.sch. jr
             WUJRRR = WUI9DM / 100; //WRK bet.sch. jr
         WUHZCD = '0';                         switch28
         WUH0CD = '0';                         switch29
         WUR8CG = '0';                         switch29B
         WUXOCD = '0';                         Wrk vrijstellin
         WUR9CG = '0';                         Wrk vrijstellin
              // CASE: WRK.Wrk 1pos voor jongerenact is niet J
             If WULCCF <> 'J'; //*IF
                // Is sanctie momenteel nog bezig of reeds voorbij?==>switch28=1?
                // CASE: DTL.Datum begin sanctie1 is ingevuld
               If #1ALDT <> *ZERO; //*IF
                 WUB2NN = #1ALDT / 100; //WRK jjmm begin
                 WUB3NN = #1AMDT / 100; //Wrk jjmm einde
                  // Sanctie is bezig (naargelang einddatum al dan niet is ingevuld)
                  // CASE: WRK.Wrk jjmm einde 6,0 is niet nul
                 If WUB3NN <> 0; //*IF
                    // Sanctie is bezig
                    // CASE:
                    //  - c1ANDc2
                    //   !- c1    : DTL.Datum achterstal GE WRK.WRK jjmm begin 6,0
                    //   !- c2    : DTL.Datum achterstal LE WRK.Wrk jjmm einde 6,0
                    //   '-
         Y0CX01 = '0';            1
                   If #1GWNB >= WUB2NN; //*IF
                     If #1GWNB <= WUB3NN; //*IF
         Y0CX01 = '1';
                     Endif; //*FI
                   Endif; //*FI
                   If Y0CX01 = '1'; //*IF
         WUHZCD = '1';                         switch28
                   Endif; //*FI
                 ELSE;
                    // CASE: *OTHERWISE
                    // Sanctie is bezig
                    // CASE: DTL.Datum achterstal GE WRK.WRK jjmm begin 6,0
                   If #1GWNB >= WUB2NN; //*IF
         WUHZCD = '1';                         switch28
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
                // Is sanctie2 momenteel nog bezig of reeds voorbij?==>switch28=1?
                // CASE: DTL.Datum begin sanctie2 is ingevuld
               If #1MBDD <> *ZERO; //*IF
                 WUB2NN = #1MBDD / 100; //WRK jjmm begin
                 WUB3NN = #1MCDD / 100; //Wrk jjmm einde
                  // Sanctie2 is bezig (naargelang einddatum al dan niet is ingevuld)
                  // CASE: WRK.Wrk jjmm einde 6,0 is niet nul
                 If WUB3NN <> 0; //*IF
                    // Sanctie is bezig
                    // CASE:
                    //  - c1ANDc2
                    //   !- c1    : DTL.Datum achterstal GE WRK.WRK jjmm begin 6,0
                    //   !- c2    : DTL.Datum achterstal LE WRK.Wrk jjmm einde 6,0
                    //   '-
         Y0CX01 = '0';            1
                   If #1GWNB >= WUB2NN; //*IF
                     If #1GWNB <= WUB3NN; //*IF
         Y0CX01 = '1';
                     Endif; //*FI
                   Endif; //*FI
                   If Y0CX01 = '1'; //*IF
         WUHZCD = '1';                         switch28
                   Endif; //*FI
                 ELSE;
                    // CASE: *OTHERWISE
                    // Sanctie is bezig
                    // CASE: DTL.Datum achterstal GE WRK.WRK jjmm begin 6,0
                   If #1GWNB >= WUB2NN; //*IF
         WUHZCD = '1';                         switch28
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // CASE: WRK.switch28 is 1
             If WUHZCD = '1'; //*IF
             ELSE;
                // CASE: *OTHERWISE
         WUY1CG = 'Y';                         Wrk swith vergo
                // CASE: WRK.Wrk swith vergoedbaar Y/N is N
               If WUY1CG = 'N'; //*IF
                  // Is art verg. momenteel nog bezig of reeds voorbij?==>switch28=1?
                  // CASE: DTL.Werkloze DTD vrij1 is ingevuld
                 If #1O6DD <> *ZERO; //*IF
                   WUB2NN = #1O6DD / 100; //WRK jjmm begin
                   WUB3NN = #1O7DD / 100; //Wrk jjmm einde
                    // verg is bezig (naargelang einddatum al dan niet is ingevuld)
                    // CASE: WRK.Wrk jjmm einde 6,0 is niet nul
                   If WUB3NN <> 0; //*IF
                      // verg is bezig
                      // CASE:
                      //  - c1ANDc2
                      //   !- c1    : DTL.Datum achterstal GE WRK.WRK jjmm begin 6,0
                      //   !- c2    : DTL.Datum achterstal LE WRK.Wrk jjmm einde 6,0
                      //   '-
         Y0CX01 = '0';            1
                     If #1GWNB >= WUB2NN; //*IF
                       If #1GWNB <= WUB3NN; //*IF
         Y0CX01 = '1';
                       Endif; //*FI
                     Endif; //*FI
                     If Y0CX01 = '1'; //*IF
         WUHZCD = '1';                         switch28
                     Endif; //*FI
                   ELSE;
                      // CASE: *OTHERWISE
                      // verg is bezig
                      // CASE: DTL.Datum achterstal GE WRK.WRK jjmm begin 6,0
                     If #1GWNB >= WUB2NN; //*IF
         WUHZCD = '1';                         switch28
                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // Is vrijstelling momenteel bezig of voorbij? Switch29=1 of 2?
              // CASE: DTL.Datum begin vrijstelling1 is ingevuld
             If #1C9NB <> *ZERO; //*IF
               WUB2NN = #1C9NB / 100; //WRK jjmm begin
               WUB3NN = #1DANB / 100; //Wrk jjmm einde
                // Vrijstelling is bezig
                // CASE: WRK.Wrk jjmm einde 6,0 is niet nul
               If WUB3NN <> 0; //*IF
                  // Vrijstelling is bezig
                  // CASE:
                  //  - c1ANDc2
                  //   !- c1    : DTL.Datum achterstal GE WRK.WRK jjmm begin 6,0
                  //   !- c2    : DTL.Datum achterstal LE WRK.Wrk jjmm einde 6,0
                  //   '-
         Y0CX01 = '0';            1
                 If #1GWNB >= WUB2NN; //*IF
                   If #1GWNB <= WUB3NN; //*IF
         Y0CX01 = '1';
                   Endif; //*FI
                 Endif; //*FI
                 If Y0CX01 = '1'; //*IF
         WUH0CD = '1';                         switch29
                 Endif; //*FI
               ELSE;
                  // CASE: *OTHERWISE
                  // Vrijstelling is bezig
                  // CASE: DTL.Datum achterstal GE WRK.WRK jjmm begin 6,0
                 If #1GWNB >= WUB2NN; //*IF
         WUH0CD = '1';                         switch29
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // Is vrijstelling2 momenteel bezig of voorbij? Switch29=1 of 2?
              // CASE: DTL.Datum begin vrijstelling2 is is ingevuld
             If #1MIDD <> *ZERO; //*IF
               WUB2NN = #1MIDD / 100; //WRK jjmm begin
               WUB3NN = #1MJDD / 100; //Wrk jjmm einde
                // Vrijstelling2 is bezig
                // CASE: WRK.Wrk jjmm einde 6,0 is niet nul
               If WUB3NN <> 0; //*IF
                  // Vrijstelling2 is bezig
                  // CASE:
                  //  - c1ANDc2
                  //   !- c1    : DTL.Datum achterstal GE WRK.WRK jjmm begin 6,0
                  //   !- c2    : DTL.Datum achterstal LE WRK.Wrk jjmm einde 6,0
                  //   '-
         Y0CX01 = '0';            1
                 If #1GWNB >= WUB2NN; //*IF
                   If #1GWNB <= WUB3NN; //*IF
         Y0CX01 = '1';
                   Endif; //*FI
                 Endif; //*FI
                 If Y0CX01 = '1'; //*IF
         WUR8CG = '1';                         switch29B
                 Endif; //*FI
               ELSE;
                  // CASE: *OTHERWISE
                  // Vrijstelling2 is bezig
                  // CASE: DTL.Datum achterstal GE WRK.WRK jjmm begin 6,0
                 If #1GWNB >= WUB2NN; //*IF
         WUR8CG = '1';                         switch29B
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // controle vrijstelling voo - Wkl betaling  *
             RMPAR = #1GWNB;
         WUH0CD = '0';            1
         WUR8CG = '0';            1
             //AFD
             //LIDNR
             //REF.MND
             //SWITCH29
             //SWITCH29B
              // Switch om vrijstelling te laten blinken
              // CASE: WRK.switch29 is niet 0
             MDVRIJSV(#1AACD:#1AFNB:RMPAR:WUH0CD:WUR8CG);
               If WUH0CD <> '0';
         WUXOCD = '1';                         Wrk vrijstellin
             Endif; //*FI
              // Switch om vrijstelling2 te laten blinken
              // CASE: WRK.switch29B is niet 0
             If WUR8CG <> '0'; //*IF
         WUR9CG = '1';                         Wrk vrijstellin
             Endif; //*FI
              // Info : vrijst1/2 is afgelopen
              // CASE:
              //  - c1ORc2
              //   !- c1    : WRK.switch29 is 2
              //   !- c2    : WRK.switch29B is 2
              //   '-
             If WUH0CD = '2' OR WUR8CG = '2'; //*IF
                // Send message 'Vrijstelling afgelopen'
         ZAMSID = 'USR0783';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
              // Info : sanctie
              // CASE: WRK.switch28 is 1
             If WUHZCD = '1'; //*IF
                // Send message 'Opgelet sanktie'
         ZAMSID = 'USR0404';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
         WUPFCD = '0';                         Switch bedrag W
         WUPGCD = '0';                         Switch bedrag B
         WUHRCO = '0';                         Switch command
         WUHSCO = '0';                         Switch command
             WUMLNB = *ZERO; //wrk bedrag Wklh
             WUMMNB = *ZERO; //wrk bedrag BZ
             WUBMND = *ZERO; //Wrk inh% BP
         WUPJCD = #1DVCD;                         wrk-afh1
         WUPKCD = #1DWCD;                         wrk-afh2
         WUPLCD = #1DXCD;                         wrk-afh3
         WUPMCD = #1DYCD;                         wrk-afh4
         WUPNCD = #1EDCD;                         wrk-afh5
         WUPOCD = #1EECD;                         wrk-afh6
         WUXFCD = '0';                         sw datum 40%
         WUXGCD = '0';                         sw datum forfai
         WUXHCD = '0';                         sw datum 0-kode
         WUXICD = '0';                         sw datum C1verv
         WURIBD = '0';                         sw RI beg.dat w
             WUC8DE = #1GWNB * 100; //Wrk 1ste dag ac
             WUC8DE = WUC8DE + 01; //Wrk 1ste dag ac
              // CASE: DTL.Datum achterstal is >=201211
             If #1GWNB >= 201211; //*IF
               WUB5NN = #1AEDT / 100; //Wrk datum 6 lan
                // Blink datum 0-code
                // CASE: WRK.Wrk datum 6 lang EQ DTL.Datum achterstal
               If WUB5NN = #1GWNB; //*IF
                  // CASE: WRK.Wrk datum 6 lang is <> 0
                 If WUB5NN <> 0; //*IF
                   YRSW00 = 1;
                   ZQ = 6;
                   If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
                   ELSE;
                     WUYPCH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk posx van ba
     C   90              MOVEL     'Y2U0510'     W0RTN
                   Endif;
                    // CASE: WRK.Wrk posx van barema is B
                   If WUYPCH = 'B'; //*IF
                   ELSE;
                      // CASE: *OTHERWISE
         WUXHCD = '1';                         sw datum 0-kode
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
               WUB5NN = #1ADDT / 100; //Wrk datum 6 lan
                // Blink datum 40%
                // CASE: WRK.Wrk datum 6 lang EQ DTL.Datum achterstal
               If WUB5NN = #1GWNB; //*IF
                  // CASE: WRK.Wrk datum 6 lang is <> 0
                 If WUB5NN <> 0; //*IF
                   YRSW00 = 1;
                   ZQ = 5;
                   If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
                   ELSE;
                     WUYPCH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk posx van ba
     C   90              MOVEL     'Y2U0510'     W0RTN
                   Endif;
                    // CASE:
                    //  - c1ORc2ORc3ORc4
                    //   !- c1    : WRK.Wrk posx van barema is 2
                    //   !- c2    : WRK.Wrk posx van barema is 3
                    //   !- c3    : WRK.Wrk posx van barema is 4
                    //   !- c4    : WRK.Wrk posx van barema is 5
                    //   '-
                   If WUYPCH = '2' OR WUYPCH = '3' OR WUYPCH = '4' OR WUYPCH = '5'; //*IF
         WUXHCD = '0';                         sw datum 0-kode
                   ELSE;
                      // CASE: *OTHERWISE
         WUXFCD = '1';                         sw datum 40%
         WUXHCD = '0';                         sw datum 0-kode
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
               WUB5NN = #1AHDT / 100; //Wrk datum 6 lan
                // Blink datum forfait
                // CASE: WRK.Wrk datum 6 lang EQ DTL.Datum achterstal
               If WUB5NN = #1GWNB; //*IF
                  // CASE: WRK.Wrk datum 6 lang is <> 0
                 If WUB5NN <> 0; //*IF
                   YRSW00 = 1;
                   ZQ = 4;
                   If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
                   ELSE;
                     WUYPCH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk posx van ba
     C   90              MOVEL     'Y2U0510'     W0RTN
                   Endif;
                    // CASE: WRK.Wrk posx van barema is P
                   If WUYPCH = 'P'; //*IF
         WUXFCD = '0';                         sw datum 40%
         WUXHCD = '0';                         sw datum 0-kode
                   ELSE;
                      // CASE: *OTHERWISE
         WUXGCD = '1';                         sw datum forfai
         WUXFCD = '0';                         sw datum 40%
         WUXHCD = '0';                         sw datum 0-kode
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
               YRSW00 = 2;
               ZQ = 5;
               If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
               ELSE;
                 WUF1CH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk pos56 barem
     C   90              MOVEL     'Y2U0510'     W0RTN
               Endif;
               WUB5NN = #1AHDT / 100; //Wrk datum 6 lan
                // CASE: WRK.Wrk datum 6 lang EQ DTL.Datum achterstal
               If WUB5NN = #1GWNB; //*IF
                  // CASE: WRK.Wrk pos56 barema is 1B
                 If WUF1CH = '1B'; //*IF
         WUXGCD = '1';                         sw datum forfai
                 Endif; //*FI
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // geen user rvds of wkltest
               WUB5NN = #1AEDT / 100; //Wrk datum 6 lan
                // Blink datum 0-code
                // CASE: WRK.Wrk datum 6 lang LE DTL.Datum achterstal
               If WUB5NN <= #1GWNB; //*IF
                  // CASE: WRK.Wrk datum 6 lang is <> 0
                 If WUB5NN <> 0; //*IF
                   YRSW00 = 1;
                   ZQ = 6;
                   If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
                   ELSE;
                     WUYPCH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk posx van ba
     C   90              MOVEL     'Y2U0510'     W0RTN
                   Endif;
                    // CASE: WRK.Wrk posx van barema is B
                   If WUYPCH = 'B'; //*IF
                   ELSE;
                      // CASE: *OTHERWISE
         WUXHCD = '1';                         sw datum 0-kode
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
               WUB5NN = #1ADDT / 100; //Wrk datum 6 lan
                // Blink datum 40%
                // CASE: WRK.Wrk datum 6 lang LE DTL.Datum achterstal
               If WUB5NN <= #1GWNB; //*IF
                  // CASE: WRK.Wrk datum 6 lang is <> 0
                 If WUB5NN <> 0; //*IF
                   YRSW00 = 1;
                   ZQ = 5;
                   If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
                   ELSE;
                     WUYPCH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk posx van ba
     C   90              MOVEL     'Y2U0510'     W0RTN
                   Endif;
                    // CASE:
                    //  - c1ORc2ORc3ORc4
                    //   !- c1    : WRK.Wrk posx van barema is 2
                    //   !- c2    : WRK.Wrk posx van barema is 3
                    //   !- c3    : WRK.Wrk posx van barema is 4
                    //   !- c4    : WRK.Wrk posx van barema is 5
                    //   '-
                   If WUYPCH = '2' OR WUYPCH = '3' OR WUYPCH = '4' OR WUYPCH = '5'; //*IF
         WUXHCD = '0';                         sw datum 0-kode
                   ELSE;
                      // CASE: *OTHERWISE
         WUXFCD = '1';                         sw datum 40%
         WUXHCD = '0';                         sw datum 0-kode
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
               WUB5NN = #1AHDT / 100; //Wrk datum 6 lan
                // Blink datum forfait
                // CASE: WRK.Wrk datum 6 lang LE DTL.Datum achterstal
               If WUB5NN <= #1GWNB; //*IF
                  // CASE: WRK.Wrk datum 6 lang is <> 0
                 If WUB5NN <> 0; //*IF
                   YRSW00 = 1;
                   ZQ = 4;
                   If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
                   ELSE;
                     WUYPCH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk posx van ba
     C   90              MOVEL     'Y2U0510'     W0RTN
                   Endif;
                    // CASE: WRK.Wrk posx van barema is P
                   If WUYPCH = 'P'; //*IF
         WUXFCD = '0';                         sw datum 40%
         WUXHCD = '0';                         sw datum 0-kode
                   ELSE;
                      // CASE: *OTHERWISE
         WUXGCD = '1';                         sw datum forfai
         WUXFCD = '0';                         sw datum 40%
         WUXHCD = '0';                         sw datum 0-kode
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
               YRSW00 = 2;
               ZQ = 5;
               If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
               ELSE;
                 WUF1CH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk pos56 barem
     C   90              MOVEL     'Y2U0510'     W0RTN
               Endif;
               WUB5NN = #1AHDT / 100; //Wrk datum 6 lan
                // CASE: WRK.Wrk datum 6 lang EQ DTL.Datum achterstal
               If WUB5NN = #1GWNB; //*IF
                  // CASE: WRK.Wrk pos56 barema is 1B
                 If WUF1CH = '1B'; //*IF
         WUXGCD = '1';                         sw datum forfai
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
             WUB5NN = #1AGDT / 100; //Wrk datum 6 lan
              // Blink datum C1verval
              // CASE: WRK.Wrk datum 6 lang LE WRK.Wrk datum indieningsmaand
             If WUB5NN <= WUI9DM; //*IF
                // CASE: WRK.Wrk datum 6 lang is <> 0
               If WUB5NN <> 0; //*IF
               Endif; //*FI
             Endif; //*FI
         WURIBD = '0';                         sw RI beg.dat w
             WUW001 = *ZERO; //Wrk uren P
             WUA190 = *ZERO; //Wrk volle dagen
             WUA191 = *ZERO; //Wrk halve dagen
             WUW004 = *ZERO; //Wrk volle vorst
             WUW003 = *ZERO; //Wrk halve vorst
             WUW023 = *ZERO; //Wrk volle verlo
             WUW024 = *ZERO; //Wrk halve verlo
         WUW002 = '0';                         Wrk type 02, 2
             WUA167 = #1AJDT; //Wrk laatste ste
             WUINNU = *ZERO; //Wrk bedrag acti
             WUILNU = *ZERO; //bedrag MFA
             WUB1NM = *ZERO; //wrk aantal asr
             WUI7NC = *ZERO; //Wrk ASR ophalen
             WUDANM = *ZERO; //Wrk ASR ophalen
             WUDBNM = *ZERO; //Wrk ASR ophalen
             WUDCNM = *ZERO; //Wrk ASR ophalen
             WUDDNM = *ZERO; //Wrk ASR ophalen
             WUDENM = *ZERO; //Wrk ASR ophalen
             WUDFNM = *ZERO; //Wrk ASR ophalen
             WUDGNM = *ZERO; //Wrk ASR ophalen
             WUDHNM = *ZERO; //Wrk ASR ophalen
         WUW5CF = *BLANK;                         Wrk ASR ophalen
         WUW6CF = *BLANK;                         Wrk ASR ophalen
         WUW7CF = *BLANK;                         Wrk ASR ophalen
             WUMYNU = *ZERO; //wrk bedrag type
         WUJ1CF = '0';                         Wrk switch type
              // Opvullen van werkvelden - Wkl betaling  *
     EvalR   MNDACH = #1GWNB;            2 0
         JRACHT = #1GWNB;            4 0
             RMPARM = #1GWNB;
             WUSX4X = 0;
              // Controle l.stempel revers - Wkl betaling  *
         WUW209 = '0';            1
         WUMWCN = *BLANK;           20            EC32 DIE OP FAR STAA
         WUMXCN = 'N';            1            ER IS EEN EC32 OP FA
             LDAG = 0;
             If #1A1CD = '01' OR #1A1CD = '03' OR #1A1CD = '08' OR #1A1CD = '09' OR #1A1CD = '10' OR #1A1CD = '11' OR #1A1CD = '13' OR #1A1CD = '14' OR #1A1CD = '15' OR #1A1CD = '16' OR #1A1CD = '17' OR #1A1CD = '18' OR #1A1CD = '31' OR #1A1CD = '34' OR #1A1CD = '35' OR #1A1CD = '36' OR #1A1CD = '37' OR #1A1CD = '38' OR #1A1CD = '39' OR #1A1CD = '44' OR #1A1CD = '45' OR #1A1CD = '46' OR #1A1CD = '47' OR #1A1CD = '48' OR #1A1CD = '49';
     EvalR   WUREG6 = '1';            1
     EvalR   WUREG5 = '0';            1
               If #1BACD = '09' AND #1A4CD = 'K '; //BEROEP09
     EvalR   WUREG6 = '0';            1
     EvalR   WUREG5 = '1';            1
               ENDIF;
               If #1BCCD = '5' AND #1A4CD = 'BA'; //SUBBEROEP5
     EvalR   WUREG6 = '0';            1            RIVIERARBEID
     EvalR   WUREG5 = '1';            1
               ENDIF;

               If MNDACH > 1;
                 JRMDBT = #1GWNB - 1; //MND-1
               ELSE;
                 JRBT = JRACHT - 1;
         JRMDBT = JRBT;
     EvalR   JRMDBT = 12;
               ENDIF;

               If #1AJDT > 0;
         LSJRMD = A1AJDT;            6 0          JRMD L.STEMP
     EvalR   LSDG = A1AJDT;              2 0          DAG L.STEMPE
                  // INDIEN MND ACHTERSTAL-1=MND VAN LAATSTE STEMPEL (DUS VORIGE MAAND), MEN
                  // WIL DE VOLGENDE MND BETALEN //VB : LS=19960920 EN MEN WIL 199610 BETALEN
     EvalR   C = JRMDBT;                 2 0
                 If JRMDBT = LSJRMD;
                   If WUREG6 = '1'; //REGIME6
                     *In50 = (%Lookup(JRMDBT:JJH:C) > 0);
     C  N50              GOTO      LSVER1
         LDAG = MAH(C);              2 0
     C     LSVER1        TAG
                     *In50 = (%Lookup(JRMDBT:JJV:C) > 0);
     C  N50              GOTO      LSVER2
         LDAG = MAV(C);
     C     LSVER2        TAG
                     *In50 = (%Lookup(JRMDBT:JJK:C) > 0);
     C  N50              GOTO      LSVER3
         LDAG = MAK(C);
     C     LSVER3        TAG                                                    R6>0
                   ENDIF; //REGIME6=1
                   If WUREG5 = '1';
                     *In50 = (%Lookup(JRMDBT:JJH:C) > 0);
     C  N50              GOTO      LSVER4
     EvalR   LDAG = MAH(C);              2 0
     C     LSVER4        TAG
                     *In50 = (%Lookup(JRMDBT:JJV:C) > 0);
     C  N50              GOTO      LSVER5
     EvalR   LDAG = MAV(C);
     C     LSVER5        TAG
                     *In50 = (%Lookup(JRMDBT:JJK:C) > 0);
     C  N50              GOTO      LSVER6
     EvalR   LDAG = MAK(C);              2 0
     C     LSVER6        TAG
                   ENDIF; //REGIME5=1

         TSTLS = JRMDBT;             8 0
     EvalR   TSTLS = LDAG;
                   If #1AJDT >= TSTLS;
     EvalR   WUW209 = '0';
                   ELSE;
     EvalR   WUW209 = '1';
                   ENDIF;

                 ELSE; //NT VORIGE MD
                   If JRMDBT > LSJRMD; //MEER OF 1 MD
     EvalR   WUW209 = '1';                         TUSSEN
                   ENDIF;
                 ENDIF; //=L.ST.MND
               ELSE;
     EvalR   WUW209 = '0';
               ENDIF; //L.ST.INGEVUL

             ELSE; //NT 01,03,...
     EvalR   WUW209 = '0';
             ENDIF; //TYPE01,02,03

             RMPAR = #1GWNB;
             WUBQND = 0;
         WURCCK = *BLANK;           20
             If #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58';
                //ELEKTRNISVHE EC3 GAAN OPHALEN
         TYTYTY = '01';            2
               //AFD
               //LIDNR
               //REF.MND
                // OUTPUT
               //BEDRAG MFA
               //AANTAL EC3
               //TH.MNDLN 8,2
               //YUUR 8,4
               //Q 4,0
               //S 4,0
               //DGN Z+A 3,1
               //DGN C32 3,1
               //URENASR 5,0
               //DGN VOLLE 2,0
               //DGN HALVE 2,0
               //HREF1 NBR
               //HREF2 NBR
               //HREF3 NBR
               //IDENT RISICO
             MDMFAOPH(#1AACD:#1AFNB:TYTYTY:RMPAR:WUILNU:WUHANE:WUI7NC:WUDANM:WUDBNM:WUDCNM:WUDDNM:WUDENM:WUDFNM:WUDGNM:WUDHNM:WURCCK:WUW6CF:WUW7CF:WUBQND);
               ENDIF;
              // ASR GANA OPHALEN
             If #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58' OR #1A1CD = '12' OR #1A1CD = '21' OR #1A1CD = '22' OR #1BCCD = 'X' OR #1BCCD = 'S' OR #1BCCD = 'J' OR #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06' OR #1A1CD = '01' OR #1A1CD = '03' OR #1A1CD = '11' OR #1A1CD = '31' OR #1A1CD = '15' OR #1A4CD = 'K ' OR #1AACD = '04';
         TYA1CD = #1A1CD;            2
               If #1A4CD = 'K ';
         TYA1CD = 'DO';
               ENDIF;
               If #1A1CD = '01' AND #1AACD = '04';
         TYA1CD = 'DO';
               ENDIF;

               //AFD
               //LIDNR
               //LIDNR
               //REF.MND
                // OUTPUT
               //BEDRAG MFA
               //AANTAL ASR
               //TH.MNDLN 8,2
               //YUUR 8,4
               //Q 4,0
               //S 4,0
               //DGN Z+A 3,1
               //DGN C32 3,1
               //URENASR 5,0
               //DGN VOLLE 2,0
               //DGN HALVE 2,0
               //HREF1 NBR
               //HREF2 NBR
               //HREF3 NBR
               //IDENT RISICO
             MDMFAOPH(#1AACD:#1AFNB:TYA1CD:RMPAR:WUILNU:WUB1NM:WUI7NC:WUDANM:WUDBNM:WUDCNM:WUDDNM:WUDENM:WUDFNM:WUDGNM:WUDHNM:WUW5CF:WUW6CF:WUW7CF:WUBQND);
               ENDIF;
              // BIJ IGU NAGAAN OF ER EEN ASR TW IS OM MEERDERE UREN IN TE VULLEN
         WUHJCM = *BLANK;           20
             If #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58';
         TYTY = '02';              2
               //AFD
               //LIDNR
               //LIDNR
               //REF.MND
                // OUTPUT
               //HREF TW
             MDMFAOP2(#1AACD:#1AFNB:TYTY:RMPAR:WUHJCM);
               ENDIF;
              // BIJ TYPE 02 EC32 NIET MEE TELLEN
             If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06';

               //AFD
               //LIDNR
               //LIDNR
               //REF.MND
                // OUTPUT
               //BEDRAG MFA
               //AANTAL ASR
               //TH.MNDLN 8,2
               //YUUR 8,4
               //Q 4,0
               //S 4,0
               //DGN Z+A 3,1
               //DGN C32 3,1
               //URENASR 5,0
               //DGN VOLLE 2,0
               //DGN HALVE 2,0
               //HREF1 NBR
               //HREF2 NBR
               //HREF3 NBR
               //IDENT RISICO
             MDMFAOPT(#1AACD:#1AFNB:TYA1CD:RMPAR:WUILNU:WUB1NM:WUI7NC:WUDANM:WUDBNM:WUDCNM:WUDDNM:WUDENM:WUDFNM:WUDGNM:WUDHNM:WUW5CF:WUW6CF:WUW7CF:WUBQND);
               ENDIF;
              // KIJKEN IN DAGBESTAND ASR'S
             If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06' OR #1A1CD = '21' OR #1A1CD = '22';
               //AFD
               //LIDNR
               //REF.MND
               MDTW012(#1AACD:#1AFNB:RMPAR:TTIICC);
                 If TTIICC <> *BLANK;
         WUW5CF = TTIICC;
               ENDIF;
             ENDIF;

             If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06' OR #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58';
                //ELEKTRONISCHE EC32 GAAN OPHALEN
         TYTYTY = '02';            2
         WUO2CL = 'N';
               //AFD
               //LIDNR
               //REF.MND
                // OUTPUT
               //SLEUTEL EC32
               MDEC3203(#1AACD:#1AFNB:TYTYTY:RMPAR:WUO1CL:WUO2CL);
               //AFD
               //LIDNR
               //REF.MND
                // OUTPUT
               //TOEP + FTCODE
               //INFO OF ERROR

         WUMXCN = 'N';
               //AFD
               //LIDNR
               //REF.MND
                // OUTPUT
               //SLEUTEL EC32
               //ER IS EEN EC32
             MDEC3213(#1AACD:#1AFNB:TYTYTY:RMPAR:WUMWCN:WUMXCN);
               ENDIF;

              // UREN FEESTDAGEN GAAN CONTROLEREN
             If #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58';
               RMPAR = #1GWNB;
         TICIGU = WUW5CF;           20
         WUFSTD = 'N';            1            ZIJN ER FEESTDAGEN
         WUNWCN = 'Y';            1            OK OF NIET? (VERSCHI
               AUREN = 0; //A UREN BIJ TE PASSEN
               WUKSNG = 0;
               //REFMND
               //TICKETNR
               //ZIJN ER FEESTDAGEN
               //OK OF NIET? (VERSCHI
               //A UREN BIJ TE PASSEN
               MDFSTIGU(RMPAR:TICIGU:WUFSTD:WUNWCN:AUREN);
                 WUKSNG = AUREN;
             ENDIF;
              // Contr type26 voltooiingsp - Wkl betaling  *
             RMPAR = #1GWNB;
             If #1A1CD = '26';
               //REF.MND
               MDCALC26(RMPAR:WUMYNU);
               //AFD
               //LIDNR
               //1STE MAAL TYPE26
             MDCONT26(#1AACD:#1AFNB:WUJ1CF);
               ENDIF;
              // CASE: WRK.switch209 is 1
             If WUW209 = '1'; //*IF
                // Send message 'Is er een onderbreking va'
         ZAMSID = 'USR2101';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
             YRSW00 = 3;
             ZQ = 1;
             If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00020 OR ZQ > 00020;
         W0RTN = 'Y2U0510';
             ELSE;
               WUESCL = %Subst(WUW7CF:ZQ:YRSW00); //Veld 3 maal FFF
     C   90              MOVEL     'Y2U0510'     W0RTN
             Endif;
              // CASE: WRK.Veld 3 maal FFF is FFF
             If WUESCL = 'FFF'; //*IF
                // Send message 'ASR : reden verwerkt=F in'
         ZAMSID = 'USR4926';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
              // Brugpensioen : laatste stempel nt ingevuld==>onderbreking van 28
              // CASE: WRK.Wrk betaalsch l.stempel is niet ingevuld
             If WUBZNN = *ZERO; //*IF
                // CASE:
                //  - c1ORc2
                //   !- c1    : DTL.Type wklh. kode is 09 : conv brugp voltijds
                //   !- c2    : DTL.Type wklh. kode is 10 : conv brugp deeltijds
                //   '-
               If #1A1CD = '09' OR #1A1CD = '10'; //*IF
                 WUHINM = #1AKDT / 100; //Wrk Begin wklh
                  // CASE: DTL.Datum achterstal GT WRK.Wrk Begin wklh 6 lang
                 If #1GWNB > WUHINM; //*IF
                    // Send message 'Is er een onderbreking va'
         ZAMSID = 'USR2101';
         ' = '*INFO;     ZAMSTP                         Message type
                   EXSR ZASNMS;

                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // CASE: DTL.Type wklh. kode is 26 (voltooiingspremie)
             If #1A1CD = '26'; //*IF
               #1HPNB = WUMYNU; //Bedrag wkl
                // CASE: WRK.Wrk switch type26 1ste ml is 1
               If WUJ1CF = '1'; //*IF
                  // Send message 'Voltooiingspremie reeds b'
         ZAMSID = 'USR4247';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

                 #1HPNB = 0; //Bedrag wkl
               Endif; //*FI
             Endif; //*FI
              // Type 12 en ASR
              // CASE: DTL.Type wklh. kode is 12 :171bis beschutte werk
             If #1A1CD = '12'; //*IF
                // CASE: WRK.wrk aantal asr is 0
               If WUB1NM = 0; //*IF
                  // Send message 'ASR : geen ASR gevonden v'
         ZAMSID = 'USR4436';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: WRK.wrk aantal asr is 1
                 If WUB1NM = 1; //*IF
                    // Send message 'ASR : 1 ASR gevonden.'
         ZAMSID = 'USR4435';
         ' = '*INFO;     ZAMSTP                         Message type
                   EXSR ZASNMS;

                 ELSE;
                    // CASE: *OTHERWISE
                    // CASE: WRK.wrk aantal asr is >1
                   If WUB1NM > 1; //*IF
                      // Send message 'ASR : Meerdere ASR's voor'
         ZAMSID = 'USR4434';
         ' = '*INFO;     ZAMSTP                         Message type
                     EXSR ZASNMS;

                   ELSE;
                      // CASE: *OTHERWISE
                      // Send message 'ASR :# ASR foutief bereke'
         ZAMSID = 'USR4433';
         ' = '*INFO;     ZAMSTP                         Message type
                     EXSR ZASNMS;

                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // Type 01/03 en EC3A
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5
              //   !- c1    : DTL.Type wklh. kode is 01 : volledig werkloos
              //   !- c2    : DTL.Type wklh. kode is 03 :vrijw.deeltijds 171.9
              //   !- c3    : DTL.Type wklh. kode is 11 : beroepsopleiding
              //   !- c4    : DTL.Type wklh. kode is 31 : deelt.opl/stage
              //   !- c5    : DTL.Type wklh. kode is 15 : grensarbeiders
              //   '-
             If #1A1CD = '01' OR #1A1CD = '03' OR #1A1CD = '11' OR #1A1CD = '31' OR #1A1CD = '15'; //*IF
                // CASE: WRK.wrk aantal asr is 0
               If WUB1NM = 0; //*IF
               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: WRK.wrk aantal asr is 1
                 If WUB1NM = 1; //*IF
                    // Send message 'EC3A : 1 elektr. C3a gevo'
         ZAMSID = 'USR6553';
         ' = '*INFO;     ZAMSTP                         Message type
                   EXSR ZASNMS;

                 ELSE;
                    // CASE: *OTHERWISE
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // Ophalen ind.maand EEF - Wkl controle  *
             //Ophalen ind.maa
             //Wrk veld 1 posi
             //wrk indieningsm

             LWFHXFR(W0RTN:WQ0018:WQ0019);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWFHXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
              // Bouw + controle CRHC501 C2 of CA..CF
              // CASE: WRK.wrk indieningsmaand is >= 201710
             If WUZKNR >= 201710; //*IF
                // Check bouwcode vnf10/2017 - Wkl betaling  *
         OUINON = 'N';            1
         BZBW = #1A4CD;              2
         WUS5CL = OUINON;

                //          'L0DPUFR' DSPLY'ROSANNE'
                //          WUGUCG    DSPLY'ROSANNE'                  MEERDERE UREN P
                //          WUHHCM    DSPLY'ROSANNE'                  F1
                //          WUDJNU    DSPLY'ROSANNE'                  TELLER
                // CASE: WRK.Switch bouw 102017 is Y
               If WUS5CL = 'Y'; //*IF
         WUHHCG = 'N';                         Switch kaart ge
                  // Controle kredietkaart bo2 - Wkl betaling  *
                 RMPAR = #1GWNB;
                  //                    CALL 'MDCRHCT3'
                  //                    PARM           #1AACD           AFD
                  //                    PARM           #1AFNB           LIDNR
                  //                    PARM           RMPAR            REF.MND
                  //                    PARM           WUHGCG           KAART AL VERST NR RVA
                  //                    PARM           WUHHCG           KAART GEVONDEN
                  //                    PARM           KRDDGN  20
                  //                    PARM           TTTTNR 20
                  //                    PARM           CDDVER  3
                  //                    PARM           ALRVA   1
                 //AFD
                 //LIDNR
                 //REF.MND
                 //KAART AL VERST NR RV
                 //KAART GEVONDEN
                 MDCRHCT5(#1AACD:#1AFNB:RMPAR:WUHGCG:WUHHCG:KRDDGN:TTTTNR:CDDVER:ALRVA:STARTK);
                   WUIQNE = KRDDGN;
                  // CASE: WRK.Switch kaart naar rva is Y
                 If WUHGCG = 'Y'; //*IF
                    // CASE: WRK.Wrk number 2,0 is > 0
                   If WUIQNE > 0; //*IF
                      // CASE: DTL.BZ kode is C2
                     If #1A4CD = 'C2'; //*IF
                        // Send message 'CRHC501 : CRHC501+C2'
         ZAMSID = 'USR7070';
                       EXSR ZASNMS;
                       *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
                     Endif; //*FI
                   ELSE;
                      // CASE: *OTHERWISE
                      // CASE: DTL.BZ kode is niet C2
                     If #1A4CD <> 'C2'; //*IF
                        // Send message 'CRHC501 dgn=0 --> enkelC2'
         ZAMSID = 'USR7049';
                       EXSR ZASNMS;
                       *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
                     Endif; //*FI
                   Endif; //*FI
                 ELSE;
                    // CASE: *OTHERWISE
                    // CASE: DTL.BZ kode is niet C2
                   If #1A4CD <> 'C2'; //*IF
                      // Send message 'CRHC501 : gn geld CRHC501'
         ZAMSID = 'USR7071';
                     EXSR ZASNMS;
                     *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
             #1BFNR = #1DBNB; //Wkl Q
             #1BGNR = #1DCNB; //Wkl S
             #1M7DD = #1AKDT; //Wkl datum begin
         #1BTCE = #1BVCE;                         Wkl sanctiecode
             #1NADD = #1ALDT; //Wkl begindatum
             #1NBDD = #1AMDT; //Wkl einddatum s
         #1BUCE = #1PJCE;                         Wkl sanctiecode
             #1NCDD = #1MBDD; //Wkl begindatum
             #1NDDD = #1MCDD; //Wkl einddatum s
             #1ALTM = ##JTM; //Wkl add-time
         #1N8CE = #1NCCE;                         Wkl bet. zone
         #1N9CE = #1NDCE;                         Wkl bet. gewest
         #1BOCE = #1BBNB;                         Wkl vorstzone
             #1BCNR = WUG5NR; //Wkl inhoudingsp
              // Fetch zone/gewest:ex.ext. - Afdeling  *
             CLEAR   PERC;
     C                   MOVEL(P)  #1AACD        PEAACD                         Afdeling nr

             //Fetch zone/gewe
             //KEY: Afdeling
             //Wrk zone
             //Wrk gewest

             LVLIXFR(W0RTN:PERC:WQ0020:WQ0021);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVLIXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
               *In31 = *On;
             Endif;
         #1N8CE = WUPXCE;                         Wkl bet. zone
         #1N9CE = WUPYCE;                         Wkl bet. gewest
              // Fetch adres UI : ex.ext. - Afdeling  *
             CLEAR   PFRC;
     C                   MOVEL(P)  #1N8CE        PFLX01                         Zone code
     C                   MOVEL(P)  'Y'           PFAFST                         Afd beheer

             //Fetch adres UI
             //KEY: Afdeling
             //afdeling adres
             //afdeling postnr
             //afdeling lokali

             LXY8XFR(W0RTN:PFRC:WQ0022:WQ0023:WQ0024);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXY8XFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
         #1T5CD = WUF1TL;                         Wkl adres opdra
         #1T6CD = WUF2TL;                         Wkl postnr opdr
         #1T7CD = WUF3TL;                         Wkl lokaliteit
         WUFXCH = *BLANK;                         Wrk UTF8 Parame
         WUFXCH = #1T5CD;                         Wrk UTF8 Parame
              // Controle UTF8 - Wkl betaling  *
             //VELD 100 LANG
             //FOUT
              // CASE: WRK.Wrk UTF8 Parameter out is E
             MDUTF8(WUFXCH:WUFYCH);
               If WUFYCH = 'E';
                // Send message 'UTF8 : adres/lokaliteit'
         ZAMSID = 'USR5260';
               EXSR ZASNMS;
               *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
             Endif; //*FI
         WUFXCH = *BLANK;                         Wrk UTF8 Parame
         WUFXCH = #1T7CD;                         Wrk UTF8 Parame
              // Controle UTF8 - Wkl betaling  *
             //VELD 100 LANG
             //FOUT
              // CASE: WRK.Wrk UTF8 Parameter out is E
             MDUTF8(WUFXCH:WUFYCH);
               If WUFYCH = 'E';
                // Send message 'UTF8 : adres/lokaliteit'
         ZAMSID = 'USR5260';
               EXSR ZASNMS;
               *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
             Endif; //*FI
              // CASE:
              //  - c1ANDc2
              //   !- c1    : DTL.Type wklh. kode is 29 = werkhervatting
              //   !- c2    : WRK.SwitchBet is niet M
              //   '-
         Y0CX01 = '0';            1
             If #1A1CD = '29'; //*IF
               If WUURCC <> 'M'; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
               #1HPNB = WUC5NU; //Bedrag wkl
         WUPFCD = '3';                         Switch bedrag W
             Endif; //*FI
             WUDJNU = 0; //Wrk teller type
              // Ophalen parit.comit.: EEF - Lid  *
             //Ophalen parit.c
             //Afdeling nr
             //Lid nr
             //Wrk par.kom wkl

             LWLWXFR(W0RTN:WQ0025:WQ0026:WQ0027);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWLWXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
               *In31 = *On;
               *In32 = *On;
             Endif;
              // CASE: WRK.bedrag MFA is > 0
             If WUILNU > 0; //*IF
             ELSE;
                // CASE: *OTHERWISE
               WUINNU = 999999.99; //Wrk bedrag acti
             Endif; //*FI
              // CASE:
              //  - c1ANDc2
              //   !- c1    : PAR.param code bijpassing is Y = vanaf c14 werkbesta
              //   !- c2    : WRK.Veld bijpassing wklh 7,2 is > 0
              //   '-
         Y0CX01 = '0';            1
             If P4BLCF = 'Y'; //*IF
               If WUQHNU > 0; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
                // CASE: WRK.Wrk bet.scherm 3 pos.Bijp is BZB
               If WULBCF = 'BZB'; //*IF
                 #1GYNB = WUQHNU; //Bedrag BZ
               ELSE;
                  // CASE: *OTHERWISE
                 #1HPNB = WUQHNU; //Bedrag wkl
               Endif; //*FI
             Endif; //*FI
              // CASE: DTL.Type wklh. kode is 26 (voltooiingspremie)
             If #1A1CD = '26'; //*IF
         WUKXCF = 'N';                         switch C10 type
                // C10 al betaald in IM-3EEF - OV betaling wklh.  *
               //C10 al betaald
               //Afdeling nr
               //Lid nr
               //Wrk refertemaan
               //switch C10 type
               //Wrk C10type 1po

               LXD3XFR(W0RTN:WQ0028:WQ0029:WQ0030:WQ0031:WQ0032);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXD3XFR';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
                 *In31 = *On;
                 *In32 = *On;
                 *In33 = *On;
               Endif;
                // CASE: WRK.switch C10 type 2xbetaald is Y
               If WUKXCF = 'Y'; //*IF
                  // Send message 'Type26:reeds betaald in v'
         ZAMSID = 'USR4265';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               ELSE;
                  // CASE: *OTHERWISE
                  // C10 dubbele betaling EEF - Wkl betaling  *
                 //C10 dubbele bet
                 //Afdeling nr
                 //Lid nr
                 //switch C10 type
                 //Wrk C10type 1po

                 LXD4XFR(W0RTN:WQ0033:WQ0034:WQ0035:WQ0036);
                   If *IN90 = '1';
                    // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXD4XFR';
                    // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                   EXSR ZASNMS;
                 Endif;
                  // Error detected?
                 If W0RTN <> *BLANK;
                   *In99 = *On;
                   *In31 = *On;
                   *In32 = *On;
                 Endif;
                  // CASE: WRK.switch C10 type 2xbetaald is Y
                 If WUKXCF = 'Y'; //*IF
                    // Send message 'Type26:reeds in dagbestan'
         ZAMSID = 'USR4266';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // CASE: DTL.Type wklh. kode is 12 :171bis beschutte werk
             If #1A1CD = '12'; //*IF
                // Send message 'type 12 : F13-scherm invu'
         ZAMSID = 'USR4362';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

                // Send message 'type 12 : niet-rechtgevne'
         ZAMSID = 'USR4363';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
         WUHSCG = '0';                         switch bijdrage
              // CASE:
              //  - c1ORc2ORc3
              //   !- c1    : DTL.Lid nr is GE 900000
              //   !- c2    : DTL.Betalingsw kode is nt ingevuld
              //   !- c3    : DTL.Kateg kode-lid is EQ *BLANK
              //   '-
             If #1AFNB >= @CN(006) OR #1CMCD = *BLANK OR #1M5CD = *BLANK; //*IF
         WUHSCG = '1';                         switch bijdrage
             Endif; //*FI
              // Ophalen l stempel RM - Wkl betaling  *
             WURJNC = 0;
              //                    CALL 'MDLSTEM1'
             //AFD
             //LIDNR
             //REF.MND
             //DATUM
             MDLSTEM4(#1AACD:#1AFNB:RMPARM:WURJNC);
               #1AKDD = WURJNC;
             If WURJNC = 0 AND #1AJDT > 0;
               If #1AACD <> '04'; //VIA WECH511/505
                 #1AKDD = #1AJDT;
               ENDIF;
             ENDIF;
              // Ophalen J/BV - Wkl betaling  *
             WUTBNC = 0;
             WUTCNC = 0;
             WUTDNC = 0;
             //RRNRD1
             //    D2
             //    D3
             //REF.MND
             //AFD
             //LIDNR
             //J
             //BV
             //DTM PRINT
             //DTM IND
             //DTM LIMIET
             MDOPHJ2(#1AKNB:#1FGNB:#1FHNB:RMPARM:#1AACD:#1AFNB:WURXNC:WUS9NC:WUTBNC:WUTCNC:WUTDNC);
               #DRXNC = WURXNC;
             #DS9NC = WUS9NC; //wrk BV voor upd
             #DETDE = WUTCNC; //Wrk dtm C104 in
             #DEUDE = WUTDNC; //Wrk dtm C104 li
              // Ophalen IBAN/BIC EEF - IBAN subbestand  *
             CLEAR   PGRC;
     C                   MOVEL(P)  #1AACD        PGL4CH                         IBAN subbest af
     C                   MOVEL(P)  #1AFNB        PGL5CH                         IBAN subbest li
     C                   MOVEL(P)  '001'         PGL3CH                         IBAN toep.code

             //Ophalen IBAN/BI
             //KEY: IBAN subbe
             //Wrk iban 34 lan
             //Wrk bic 11 lang

             LYFSXFR(W0RTN:PGRC:WQ0037:WQ0038);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYFSXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
              // Ophalen IBAN/BIC EEF - IBAN subbestand  *
             CLEAR   PGRC;
     C                   MOVEL(P)  #1AACD        PGL4CH                         IBAN subbest af
     C                   MOVEL(P)  #1AFNB        PGL5CH                         IBAN subbest li
     C                   MOVEL(P)  '002'         PGL3CH                         IBAN toep.code

             //Ophalen IBAN/BI
             //KEY: IBAN subbe
             //Wrk iban 34 lan
             //Wrk bic 11 lang

             LYFSXFR(W0RTN:PGRC:WQ0039:WQ0040);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYFSXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
              // CASE: DTL.Code bijz. verg.artikel is ingevuld
             If #1NB01 <> *BLANK; //*IF
                // contr bijz verg EnnY,EnnN - Wkl betaling  *
               RMPAR = #1GWNB;
               //AFD
               //LIDNR
               //REF.MND
                // CASE: WRK.Wrk info bijz verg is 1
               MDBIJZV(#1AACD:#1AFNB:RMPAR:WUWBCH);
                 If WUWBCH = '1';
                  // Setup message data for message
         ZA0002 = #1NB01;                         Code bijz. verg
                  // Send message 'bijz verg art EnnY C3-EXP'
         ZAMSID = 'USR5714';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
                // CASE: WRK.Wrk info bijz verg is 2
               If WUWBCH = '2'; //*IF
                  // Setup message data for message
         ZA0003 = #1NB01;                         Code bijz. verg
                  // Send message 'Bijz verg art:einddtm inR'
         ZAMSID = 'USR5715';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
                // CASE: WRK.Wrk info bijz verg is 3
               If WUWBCH = '3'; //*IF
                  // Setup message data for message
         ZA0004 = #1NB01;                         Code bijz. verg
                  // Send message 'bijz verg art EnnY C3-EXP'
         ZAMSID = 'USR5714';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
                // CASE: WRK.Wrk info bijz verg is 6
               If WUWBCH = '6'; //*IF
                  // Setup message data for message
         ZA0005 = #1NB01;                         Code bijz. verg
                  // Send message 'Bijz verg art:einddtm inR'
         ZAMSID = 'USR5715';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

                  // Setup message data for message
         ZA0006 = #1NB01;                         Code bijz. verg
                  // Send message 'bijz verg art EnnY C3-EXP'
         ZAMSID = 'USR5714';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
                // CASE: WRK.Wrk info bijz verg is 4
               If WUWBCH = '4'; //*IF
                  // Setup message data for message
         ZA0007 = #1NB01;                         Code bijz. verg
                  // Send message 'Bijz verg art:deels gedek'
         ZAMSID = 'USR5717';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
                // CASE: WRK.Wrk info bijz verg is 5
               If WUWBCH = '5'; //*IF
                  // Setup message data for message
         ZA0008 = #1NB01;                         Code bijz. verg
                  // Send message 'Bijz verg art:deels gedde'
         ZAMSID = 'USR5718';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
             Endif; //*FI
              // contr info overstappremie - Wkl betaling  *
         WUWFCH = '0';
             //AFD
             //LIDNR
             //REF.MND
              // CASE: WRK.switch info overstappremi is 1
             MDTYP50K(#1AACD:#1AFNB:RMPARM:#1A1CD:WUWFCH);
               If WUWFCH = '1';
                // Send message 'Er bestaat ene overstappr'
         ZAMSID = 'USR5723';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
              // CASE: DTL.Type wklh. kode is 51
             If #1A1CD = '51'; //*IF
                // Send message 'Type51 : geen belasting o'
         ZAMSID = 'USR5901';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
         WUAJCJ = '0';                         switch er zijn
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5ORc6
              //   !- c1    : DTL.Afh1 kode is nt blank
              //   !- c2    : DTL.Afh2 kode is nt blank
              //   !- c3    : DTL.Afh3 kode is nt blank
              //   !- c4    : DTL.Afh4 kode is nt blank
              //   !- c5    : DTL.Afh5 kode is nt blank
              //   !- c6    : DTL.Afh6 kode is nt blank
              //   '-
             If #1DVCD <> *BLANK OR #1DWCD <> *BLANK OR #1DXCD <> *BLANK OR #1DYCD <> *BLANK OR #1EDCD <> *BLANK OR #1EECD <> *BLANK; //*IF
         WUAJCJ = '1';                         switch er zijn
             Endif; //*FI
         WUAKCJ = 'N';                         Switch cmd12
              // CASE:
              //  - c1ORc2
              //   !- c1    : DTL.Type wklh. kode is niet ingevuld
              //   !- c2    : DTL.Type wklh. kode is XX
              //   '-
             If #1A1CD = *BLANK OR #1A1CD = 'XX'; //*IF
                // Send message 'Er loopt iets fout : geen'
         ZAMSID = 'USR6337';
               EXSR ZASNMS;
               *In99 = *On;

         WUYBCM = 'Y';                         Wrk nog steeds
             Endif; //*FI
         WUW1CK = #1A1CD;                         Wrk type wklh o
              // CASE:
              //  - c1ORc2
              //   !- c1    : DTL.BZ kode is M
              //   !- c2    : DTL.BZ kode is M1
              //   '-
             If #1A4CD = 'M' OR #1A4CD = 'M1'; //*IF
             ELSE;
                // CASE: *OTHERWISE
                // CASE:
                //  - NOTc1
                //   !- c1    : WRK.Wrk ASR ophalen href1 nbr is blank
                //   '-
         Y0CX01 = '0';            1
               If WUW5CF = *BLANK; //*IF
               ELSE;
         Y0CX01 = '1';
               Endif; //*FI
               If Y0CX01 = '1'; //*IF
                  // CASE:
                  //  - c1 AND c2 AND c3
                  //   !- c1    : DTL.Type wklh. kode is <> 02
                  //   !- c2    : DTL.Type wklh. kode is <> 04
                  //   !- c3    : DTL.Type wklh. kode is <> 06
                  //   '-
         Y0CX01 = '0';            1
                 If #1A1CD <> '02'; //*IF
                   If #1A1CD <> '04'; //*IF
                     If #1A1CD <> '06'; //*IF
         Y0CX01 = '1';
                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
                 If Y0CX01 = '1'; //*IF
                    // Prestaties opvullen RPGLE - MFA WECH011  *
                   CLEAR   PHRC;
     C                   MOVEL(P)  WUW5CF        PHBECL                         Dummy input
                   CLEAR   PIRC;
     C                   MOVEL(P)  #1AACD        PIAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        PIAFNB                         Lid nr

         WXPGM = 'MDWECH51';            10
     EvalR   ' = '1;          WXPGM
                   //Prestaties opvu
                   //Wrk taal
                   //RCD: Dummy file
                   //wrk field 11
                   //Programma
                   //RCD: Wkl betali

         YL0001 = PHJ4TT;                         Dummy tekst1
         YL0002 = PHJ5TT;                         Dummy tekst2
         YL0003 = PHJ6TT;                         Dummy tekst3
         YL0004 = PHJ7TT;                         Dummy tekst4
         YL0005 = PHJ8TT;                         Dummy tekst5
         YL0006 = PHJ9TT;                         Dummy tekst6
         YL0007 = PHKATT;                         Dummy tekst7
         YL0008 = PHKBTT;                         Dummy tekst8
         YL0009 = PHKCTT;                         Dummy tekst9
         YL0010 = PHKDTT;                         Dummy tekst10
         YL0011 = PHKETT;                         Dummy tekst11
         YL0012 = PHKFTT;                         Dummy tekst12
                   #1GGNB = PIGGNB; //VD5
                   #1GHNB = PIGHNB; //HD5
                   #1GPNB = PIGPNB; //Volle dagen BZ
                   #1JNNB = PIJNNB; //Halve dagen BZ
                   #1GYNB = PIGYNB; //Bedrag BZ
                   #1IYNB = PIIYNB; //BZ1 dagen
                   #1JHNB = PIJHNB; //BZ1 bedrag
         #1L0CD = PIL0CD;                         BZ1 kode
                   #1IZNB = PIIZNB; //BZ2 dagen
                   #1JGNB = PIJGNB; //BZ2 bedrag
         #1L8CD = PIL8CD;                         BZ2 kode
                   #1I0NB = PII0NB; //BZ3 dagen
                   #1JFNB = PIJFNB; //BZ3 bedrag
         #1L9CD = PIL9CD;                         BZ3 kode
                   #1I1NB = PII1NB; //BZ4 dagen
                   #1JENB = PIJENB; //BZ4 bedrag
         #1L1CD = PIL1CD;                         BZ4 kode
                   #1I2NB = PII2NB; //BZ5 dagen
                   #1I8NB = PII8NB; //BZ5 bedrag
         #1L2CD = PIL2CD;                         BZ5 kode

                   If *IN90 = '1';
                      // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDWECH51';           10
     EvalR   ' = '1;          W0CLPG
                      // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                     EXSR ZASNMS;
                     *In99 = *On;
                     *In31 = *On;
                     *In32 = *On;
                     *In35 = *On;
                     *In36 = *On;
                   Endif;
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // CASE: DTL.BZ kode is 15
             If #1A4CD = '15'; //*IF
                // Fetch bedrag bz 15 - Wkl betaling  *
               RMPARM = #1GWNB;
               WUTHNF = 0;
                // CASE: WRK.bedrag bz 15 is > 0
               MDMET08(#1AACD:#1AFNB:RMPARM:WUTHNF);
                 If WUTHNF > 0;
                 #1GYNB = WUTHNF; //Bedrag BZ
               Endif; //*FI
             Endif; //*FI
              // CASE: WRK.Wrk nog steeds error is Y
             If WUYBCM = 'Y'; //*IF
                // Schrappen van 1 user/bet - Wkl betaling  *
         JJUSER = ##USR;
               RMPAR = WUL6ND;
             MDBET308(#1AACD:#1AFNB:RMPAR:WUDONG:JJUSER);
               Endif;
              // Controle LBB - Wkl betaling  *
             RMPAR = #1GWNB;
             LBBIJX = #1AEDD;
         VMXX = #DCA70;              1
             VMVNFX = #DFZDM;
         BWXX = #1CMCD;              1
         WUBDCN = 'N';
             //AFD
             //LIDNR
             //REF.MND
              //OUTPUT
              // CASE: WRK.switch LBB is Y
             MDLBB(#1AACD:#1AFNB:RMPAR:LBBIJX:VMXX:VMVNFX:BWXX:WUBDCN);
               If WUBDCN = 'Y';
                // Prompt voor fouten/info - Foutenlijsten pop-up  *
               CLEAR   PCRC;
     C                   MOVEL(P)  'LBB01'       PCJECL                         Foutenlijsten T
     C                   MOVEL(P)  WUYXCJ        PCJFCL                         Foutenlijsten t

               //Prompt voor fou
               //KEY: Foutenlijs

               L0ALPVR(W0RTN:PCRC);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'L0ALPVR';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
               Endif;
             Endif; //*FI
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5
              //   !- c1    : DTL.Type wklh. kode is 24 : wisselkoerstoeslag
              //   !- c2    : DTL.Type wklh. kode is 29 = werkhervatting
              //   !- c3    : DTL.Type wklh. kode is 50
              //   !- c4    : DTL.Type wklh. kode is 51
              //   !- c5    : DTL.Type wklh. kode is 52
              //   '-
             If #1A1CD = '24' OR #1A1CD = '29' OR #1A1CD = '50' OR #1A1CD = '51' OR #1A1CD = '52'; //*IF
               #1AKDD = *ZERO; //Wkl datum laats
             Endif; //*FI
              // CASE: DTL.Type wklh. kode is 53
             If #1A1CD = '53'; //*IF
                // CASE: DTL.Barema RVAkode is ..ICL..
               If #1DOCD = @CN(008); //*IF
                 #1AKDD = *ZERO; //Wkl datum laats
               Endif; //*FI
             Endif; //*FI
             YRSW00 = 2;
             ZQ = 3;
             If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
             ELSE;
               WUM0CN = %Subst(#1DOCD:ZQ:YRSW00); //wrk barema kuns
     C   90              MOVEL     'Y2U0510'     W0RTN
             Endif;
         WUM1CN = 'N';                         Wrk C3A verplic
              // CASE:
              //  - c1ORc2ORc3
              //   !- c1    : WRK.wrk barema kunst is AA
              //   !- c2    : WRK.wrk barema kunst is AB
              //   !- c3    : WRK.wrk barema kunst is AN
              //   '-
             If WUM0CN = 'AA' OR WUM0CN = 'AB' OR WUM0CN = 'AN'; //*IF
                // Kunstwerker 60+ - Wkl betaling  *
         WUM2CN = 'N';            1
         WUM3CN = 'N';            1
               //AFD
               //LIDNR
               //TYPE
               //BAREMA
               //KUNSTWERKER Y/N ?
               //60+ ? Y/N
                // CASE: WRK.wrk 60plus is Y
               MDKUNS01(#1AACD:#1AFNB:RMPAR:#1A1CD:#1DOCD:WUM2CN:WUM3CN);
                 If WUM3CN = 'Y';
                  // CASE:
                  //  - c1ANDc2
                  //   !- c1    : WRK.Wrk ASR ophalen href1 nbr is blank
                  //   !- c2    : WRK.Href betaalscherm igu vw is blank
                  //   '-
         Y0CX01 = '0';            1
                 If WUW5CF = *BLANK; //*IF
                   If WURCCK = *BLANK; //*IF
         Y0CX01 = '1';
                   Endif; //*FI
                 Endif; //*FI
                 If Y0CX01 = '1'; //*IF
         WUM1CN = 'Y';                         Wrk C3A verplic
                    // CASE:
                    //  - c1ORc2
                    //   !- c1    : PAR.param code bijpassing is C = Bijpassing via BYPA
                    //   !- c2    : PAR.param code bijpassing is Y = vanaf c14 werkbesta
                    //   '-
                   If P4BLCF = 'C' OR P4BLCF = 'Y'; //*IF
         WUM1CN = 'N';                         Wrk C3A verplic
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif;
         Endif;
          //..................................................
     C   99              GOTO      BEEXIT
          // No error: Display and process details
         EXSR CADSDA;

          //================================================================
       ENDSR;
       /EJECT
       BEGSR BFVLKY;
          //================================================================
          // Validate key fields
          //================================================================
          // Validate Datum achterstal and convert to internal.
          // Check datum mm/ccjj MAIN
          // Check datum eeuw/jr./mnd. - *Field attribute types  *
         UEDTM = V1GWNB;
         UDTM1 = UDTMCC;
         UDTM2 = UDTMYY;
         UDTM3 = UDTMMM;
     EvalR   WUEMCD = '0';
         If UIDTM <> 0;
           EXSR UDMBEG;
     EvalR   WUEMCD = UDMMIS;
         Endif;
         #1GWNB = UIDTM;
          // CASE: WRK.Return code2 is niet leeg
         If WUEMCD = '1'; //*IF
            // Setup message data for message
           ZA0009 = V1GWNB; //DTM External
            // Send message 'Maand/jaar is foutief !!!'
         ZAMSID = 'USR0226';
           EXSR ZASNMS;
           *In99 = *On;
           *In33 = *On;

         Endif; //*FI
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
           *In33 = *On;
         Endif;
         If W0PMD <> 'ADD';
         Endif;
          // Check relations
          // Check reference to Werkloze
         EXSR VACKRL;
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
           *In31 = *On;
           *In99 = *On;
           *In31 = *On;
           *In32 = *On;
         Endif;
          // USER: Validate key screen
          // CASE: PGM.*Program mode is *CHANGE
         If W0PMD = 'CHG'; //*IF
         W0PMD = 'ADD';                          *Program mode
         Endif; //*FI
          // CASE: KEY.Datum achterstal is niet ingevuld
         If #1GWNB = *ZERO; //*IF
           #1GWNB = WUYQND; //Datum achtersta
         Endif; //*FI
         WUX5CM = 'N';                         Wrk er is een f
         ZQ = *ZERO;
         WUKQCN = #1AKNB + '' + #1FGNB; //WRK INSZ betaal
         ZQ = *ZERO;
         WUKRCN = WUKQCN + '' + #1FHNB; //RK INSZ betaal
          // Chainings betaalscherm - Wkl betaling  *
     C                   MOVEA     *IN(50)       UWIN              1
         CHAIN 'C' LVBYREL1 ;
       *in50 = (%found() = *Off);
         CHAIN 'C' LVEVREL1 ;
       *in50 = (%found() = *Off);
     C                   MOVEA     UWIN          *IN(50)
         PBOFBT = 'BT';            2
         WUWJCJ = 'S04';                         Switch S36 of S
         #DB9DF = 0; //Wrk datum van t
         #DCADF = 0; //Wrk datum tot t
          // CASE:
          //  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10
          //   !- c1    : DTL.Subberoep kode is O
          //   !- c2    : DTL.Subberoep kode is I
          //   !- c3    : DTL.Subberoep kode is V
          //   !- c4    : DTL.Subberoep kode is R
          //   !- c5    : DTL.Subberoep kode is K
          //   !- c6    : DTL.Subberoep kode is T
          //   !- c7    : DTL.Subberoep kode is D
          //   !- c8    : DTL.Subberoep kode is L
          //   !- c9    : DTL.Subberoep kode is N
          //   !- c10   : DTL.Subberoep kode is 5
          //   '-
         If #1BCCD = 'O' OR #1BCCD = 'I' OR #1BCCD = 'V' OR #1BCCD = 'R' OR #1BCCD = 'K' OR #1BCCD = 'T' OR #1BCCD = 'D' OR #1BCCD = 'L' OR #1BCCD = 'N' OR #1BCCD = '5'; //*IF
         WUWJCJ = 'S36';                         Switch S36 of S
         Endif; //*FI
         WUHQCN = 'N';                         switch dossier
         WUYOCI = 'Y';                         Switch toelatin
         WUMZCH = #1A1CD;                         Wrk type wklh o
          // Chain met afdeling - Wkl betaling  *
     C                   MOVEA     *IN(50)       UWIN              1
         CHAIN #1AACD @AAREAO ;
       *in50 = (%found() = *Off); //AFDELING
     C  N50              MOVEL     AAARNB        #1ARNB                         TAAL KODE
     C                   MOVEA     UWIN          *IN(50)
         WUUWCE = *BLANK;                         Wrk taalkode af
          // Fetch taalkode afd:ex.ext - Afdeling  *
         CLEAR   PJRC;
     C                   MOVEL(P)  #1AACD        PJAACD                         Afdeling nr

         //Fetch taalkode
         //KEY: Afdeling
         //Wrk taalkode af

         LVQQXFR(W0RTN:PJRC:WQ0044);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVQQXFR';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
         Endif;
          // Error detected?
         If W0RTN <> *BLANK;
           *In99 = *On;
           *In31 = *On;
         Endif;
         WUUKCE = '4000';                         Wrk vorig UInr
          // Fetch vorig UInr.:ex.ext. - Afdeling  *
         CLEAR   PKRC;
     C                   MOVEL(P)  #1AACD        PKAACD                         Afdeling nr

         //Fetch vorig UIn
         //KEY: Afdeling
         //Wrk vorig UInr

         LVP4XFR(W0RTN:PKRC:WQ0045);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVP4XFR';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
         Endif;
          // Error detected?
         If W0RTN <> *BLANK;
           *In99 = *On;
           *In31 = *On;
         Endif;
          // CASE:
          //  - c1ANDc2
          //   !- c1    : KEY.Datum achterstal is < 199901
          //   !- c2    : WRK.Wrk vorig UInr is 4000
          //   '-
         Y0CX01 = '0';            1
         If #1GWNB < 199901; //*IF
           If WUUKCE = '4000'; //*IF
         Y0CX01 = '1';
           Endif; //*FI
         Endif; //*FI
         If Y0CX01 = '1'; //*IF
            // Send message 'Fout in gegevens UInr. Co'
         ZAMSID = 'USR3014';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
          // Vorig UInr=blank==>error
          // CASE: WRK.Wrk vorig UInr is blank
         If WUUKCE = *BLANK; //*IF
            // Send message 'Fout in gegevens UInr. Co'
         ZAMSID = 'USR3014';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
         WUU1CE = 'N';                         Controle ond.af
          // Fetch afd,wb,gem.nr - GWB  *
         CLEAR   PLRC;
     C                   MOVEL(P)  #1AACD        PLAACD                         Afdeling nr
     C                   MOVEL(P)  #1A2CD        PLA2CD                         GWB nr
     C                   MOVEL(P)  #1BTNB        PLBTNB                         Gemeente nr

         //Fetch afd,wb,ge
         //Controle ond.af
         //KEY: GWB

         LVQ2XFR(W0RTN:WQ0046:PLRC);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVQ2XFR';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
         Endif;
          // Error detected?
         If W0RTN <> *BLANK;
           *In99 = *On;
           *In31 = *On;
         Endif;
          // CASE: WRK.Controle ond.afd ok is N
         If WUU1CE = 'N'; //*IF
            // Send message 'WB, ond.afd foutief'
         ZAMSID = 'USR3031';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
         WUHQCG = 'S';                         Lansa of synon
          // Controle lansa/synon EEF - Stoprecord  *
         CLEAR   PMRC;
     C                   MOVEL(P)  'C'           PMHW01                         Stoprecord kode

         //Controle lansa/
         //KEY: Stoprecord
         //Lansa of synon

         LXO6XFR(W0RTN:PMRC:WQ0047);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXO6XFR';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
         Endif;
          // Error detected?
         If W0RTN <> *BLANK;
           *In99 = *On;
         Endif;
         WUUSCC = '00';                         SwitchC10A
         WUUTCC = '00';                         SwitchC10B
         WUUQCC = 'N';                         SwitchRSZ
         WUC5NU = *ZERO; //Bedrag type29
         WUGINE = *ZERO; //Aantal dgn R5 O
         WUGHNE = *ZERO; //Aantal dgn R6 O
          // Kinderopvangtoeslag
          // CASE: DTL.Subberoep kode is K
         If #1BCCD = 'K'; //*IF
         #1A1CD = '50';                         Type wklh. kode
         Endif; //*FI
          // Crisispremie
          // CASE: DTL.Subberoep kode is T
         If #1BCCD = 'T'; //*IF
         #1A1CD = '51';                         Type wklh. kode
         Endif; //*FI
          // Ontslaguitkering
          // CASE: DTL.Subberoep kode is D
         If #1BCCD = 'D'; //*IF
         #1A1CD = '52';                         Type wklh. kode
         Endif; //*FI
          // WHT
          // CASE: DTL.Subberoep kode is R
         If #1BCCD = 'R'; //*IF
         #1A1CD = '29';                         Type wklh. kode
         Endif; //*FI
          // Overstappremie
          // CASE: DTL.Subberoep kode is L
         If #1BCCD = 'L'; //*IF
         #1A1CD = '50';                         Type wklh. kode
         Endif; //*FI
          // OCV ontslagcompensatievergoeding
          // CASE: DTL.Subberoep kode is N
         If #1BCCD = 'N'; //*IF
         #1A1CD = '53';                         Type wklh. kode
            // Fetch user EEF - OCV user  *
           //Fetch user EEF
           //Wrk ocv betalen
           //Wrk gebruiker g

           LZNNXFR(W0RTN:WQ0048:WQ0049);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LZNNXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
            // CASE: WRK.Wrk ocv betalen mag? is N
           If WUN3CK = 'N'; //*IF
              // Send message 'Gebruiker mag OCV niet be'
         ZAMSID = 'USR6649';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
         #DWVCJ = *BLANK;                         S04 schermveld
         #DQRDE = *ZERO; //S04 schermveld
         WUN0CK = 'N';                         Switch ocv reed
          // CASE: WRK.Switch S36 of S04 is S36
         If WUWJCJ = 'S36'; //*IF
            // Ophalen velden S36 - Wkl betaling  *
         WUZJCJ = 'N';
           WUH6NG = 0; //DAGEN R6 T54/T55
           RMPAR = #1GWNB;
            //                    CALL 'MDS36BB'
           //AFD
           //LIDNR
           //SUBBEROEP
           //FOUT
           //TYPE
           //BAREMA
           //DAGBEDRAG
           //TOEL.ART
           //VERG.ART
           //DATUM VAN
           //DATUM TOT
           //Q
           //S
           //VOLGNR
           MDS36BC(#1AACD:#1AFNB:RMPAR:#1BCCD:WUWOCJ:WUWKCJ:WUWLCJ:WUX9ND:WUWMCJ:WUWNCJ:WUX7ND:WUX8ND:WUYBND:WUYCND:WUNRNR:KBO:RSZ);
             If #1AACD = '99' AND #1AFNB = '153990';
             DSPLY ('LZFMUFR') 'ROSANNE';
             DSPLY (WUWKCJ) 'ROSANNE';
             DSPLY (WUWLCJ) 'ROSANNE';
             DSPLY (WUX7ND) 'ROSANNE';
             DSPLY (WUWMCJ) 'ROSANNE';
             DSPLY (WUWNCJ) 'ROSANNE';
             DSPLY (WUWJCJ) 'ROSANNE';
           ENDIF;
           WUU4ND = 999999; //VOLGNR S04
         PPP1T3 = WUWLCJ;            3
         PPP1T5 = WUWLCJ;            5
     EvalR   PPP5T5 = PPP1T5;            1
           If PPP1T3 = '..S';
             If PPP5T5 = '3' OR PPP5T5 = '6' OR PPP5T5 = '7';
               LEEFPR = 21;
               //AFD
               //LIDNR
             MDLEEFT6(#1AACD:#1AFNB:RMPAR:LEEFPR:WUZJCJ);
               ENDIF;
           ENDIF;
           If #1A1CD = '53';
             //AFD
             //LIDNR
             //BAREMA
         WUKVCF = KBO;
             //EINDDTM S36
           MDOCV310(WUX8ND:WUGHNE:WUGINE);
             ENDIF;
           If #1BCCD = '5' OR WUWKCJ = '54' OR WUWKCJ = '55'; //SUBBEROEP 5
             VN5455 = WUX7ND; //VANAF
             TM5455 = WUX8ND; //TEM
             RM5455 = #1GWNB; //RM
             //DAGEN R6
             //DAGEN R5
             MDT54310(VN5455:TM5455:RM5455:R65455:R55455);
               WUH6NG = R65455;
           ENDIF;
            // CASE: WRK.Switch ocv reeds betaald is Y
           If WUN0CK = 'Y'; //*IF
              // CASE: WRK.NAtionale gebruiker is N
             If WUPZCK = 'N'; //*IF
                // Setup message data for message
         ZA0010 = WUKVCF;                         Wrk KBOnr
                // Send message 'OCV reeds betaald'
         ZAMSID = 'USR6646';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'OCV reeds betaald info'
         ZAMSID = 'USR6695';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
           Endif; //*FI
         #1A1CD = WUWKCJ;                         Type wklh. kode
         #1DOCD = WUWLCJ;                         Barema RVAkode
           #1DDNB = WUX9ND; //Dagbedrag
            // CASE: DTL.Subberoep kode is 5
           If #1BCCD = '5'; //*IF
             #DB9DF = WUX7ND; //Wrk datum van t
             #DCADF = WUX8ND; //Wrk datum tot t
             #1DDNB = 0; //Dagbedrag
              // CASE: WRK.S36 type is 54
             If WUWKCJ = '54'; //*IF
               #1GLNB = WUH6NG; //VD6
               #1GMNB = 0; //HD6
             Endif; //*FI
              // CASE: WRK.S36 type is 55
             If WUWKCJ = '55'; //*IF
               #1GLNB = 0; //VD6
               #1GMNB = WUH6NG; //HD6
                // CASE: DTL.HD6 is > 26
               If #1GMNB > 26; //*IF
                 #1GMNB = 26; //HD6
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
           #1AEDT = 0; //Datum OP-code
           #1ADDT = 0; //Datum 40%
           #1AHDT = 0; //Datum forfait
           #1MFDD = 0; //Datum laatste s
           #1AKDT = WUX7ND; //Datum begin wkl
         #DIICG = *BLANK;                         Dtm 2de periode
         #DIJCG = *BLANK;                         Dtm forfait cod
         #DW1CJ = *BLANK;                         S04 schermveld
            // CASE: WRK.switch 21 jaar is Y
           If WUZJCJ = 'Y'; //*IF
             #1ADDT = #1GWNB * 100; //Datum 40%
             #1ADDT = #1ADDT + 10; //Datum 40%
           Endif; //*FI
         ELSE;
            // CASE: *OTHERWISE
            // CASE:
            //  - c1ORc2
            //   !- c1    : KEY.Datum achterstal is >=201211
            //   !- c2    : KEY.Datum achterstal is niet ingevuld
            //   '-
           If #1GWNB >= 201211 OR #1GWNB = *ZERO; //*IF
              // Tonen nieuwe barema+data - Wkl betaling  *
         WUGOCN = 'N';            1
         DTMDT1 = *BLANK;
         WUVNCJ = 'Y';            1
         WUVMCJ = 'A';            1
             WUXUND = 999999;
             WUXVND = 20991231;
             WUXWND = 20991231;
         WUWVCJ = *BLANK;            1
         WUW1CJ = 'I';            1
             RMPAR = #1GWNB;
             If RMPAR = 0;
               RMPAR = BYEENB;
             ENDIF;
             //AFD
             //LIDNR
             //VOLGNR
             //ACL/RVA
             //FOUT
             //DTM GELDIGH
             //DTM UA
             //RISICO
             //CONVERSIE OF BEDIEND
             MDBAR403(#1AACD:#1AFNB:RMPAR:WUXUND:WUVMCJ:WUVNCJ:WUXVND:WUXWND:WUWVCJ:WUW1CJ);
               If WUVNCJ = 'N';
               //AFD
               //LIDNR
               //VOLGNR
               //ACL/RVA
               //REF.MND
             MDBAR411(#1AACD:#1AFNB:WUXUND:WUVMCJ:RMPAR:WUTY01:WUBR01:WUDA01:WUTY02:WUBR02:WUDA02:WUTY03:WUBR03:WUDA03:WUCO01:WUVE01:WUVE02:WUVE03:WUTYTW:WUBRTW:WUDATW:WUBD01:WUBD02:WUBD03:WUBDTW:WUQVW1:WUSVW1:WUQVW2:WUSVW2:WUQTW1:WUSTW1:WUQTW2:WUSTW2:WUVE04:WUVE05:WUVE06);
               ENDIF;
         PS3PSA = WUVE01;            3
         PS3PSB = WUVE02;            3
         PS3PSC = WUVE03;            3
         PS3PSD = WUVE04;            3
         PS3PSE = WUVE05;            3
         PS3PSF = WUVE06;            3
             If PS3PSA = 'STU' OR PS3PSB = 'STU' OR PS3PSC = 'STU' OR PS3PSD = 'STU' OR PS3PSE = 'STU' OR PS3PSF = 'STU';
         PBOFBT = 'BT';
             ELSE;
         PBOFBT = 'NT';                         GEEN STU
             ENDIF;
         PS5PSA = WUVE01;            5
         PS5PSB = WUVE02;            5
         PS5PSC = WUVE03;            5
         PS5PSD = WUVE04;            5
         PS5PSE = WUVE05;            5
         PS5PSF = WUVE06;            5
              //          PS5PSA    IFEQ 'EVCOV'
              //          PS5PSB    OREQ 'EVCOV'
              //          PS5PSC    OREQ 'EVCOV'
              //          PS5PSD    OREQ 'EVCOV'
              //          PS5PSE    OREQ 'EVCOV'
              //          PS5PSF    OREQ 'EVCOV'
             If PS5PSA = 'PROG ' OR PS5PSB = 'PROG ' OR PS5PSC = 'PROG ' OR PS5PSD = 'PROG ' OR PS5PSE = 'PROG ' OR PS5PSF = 'PROG ';
         WUZ5CM = 'Y';            1
             ENDIF;
             If #1AACD = '04';
               If WUTYTW <> *BLANK;
         WUTY01 = WUTYTW;                         TYPE02-->01
         WUBR01 = WUBRTW;
                 WUBD01 = WUBDTW;
               ENDIF;
             ENDIF;
             If WUVNCJ = 'X'; //BZ FZ PZ
         WUTY01 = '01';
         WUBR01 = '.......';
               WUBD01 = 0;
             ENDIF;
             WUYDND = 0;
             //AFD
             //LIDNR
             //VOLGNR
             //ACL/RVA
             //DTM BEG WKLH
             MDBAR416(#1AACD:#1AFNB:WUXUND:WUVMCJ:RMPAR:WUYDND);
               JRDT1 = WUDA01 / 10000;
             DDDT1 = WUDA01;
             DDMMD1 = WUDA01;
             MMDT1 = DDMMD1 / 100;
     EvalR   DDDT1A = DDDT1;
     EvalR   MMDT1A = MMDT1;
     EvalR   JRDT1A = JRDT1;
         SLDT11 = '/';
         SLDT12 = '/';
     EvalR   WUETCK = DTMDT1;           10
              // EINDE CORONA : 19CRIS MAG NIET VOORKOMEN IN VERG ART S04  TW
             If WUVE01 = '19CRIS' OR WUVE02 = '19CRIS' OR WUVE03 = '19CRIS' OR WUVE04 = '19CRIS' OR WUVE05 = '19CRIS' OR WUVE06 = '19CRIS';
         WUGOCN = 'Y';
             ENDIF;
              // CASE:
              //  - c1ORc2
              //   !- c1    : WRK.Fout meerdere barema's is Y
              //   !- c2    : WRK.Fout meerdere barema's is 0
              //   '-
             If WUVNCJ = 'Y' OR WUVNCJ = '0'; //*IF
                // CASE: WRK.Fout meerdere barema's is Y
               If WUVNCJ = 'Y'; //*IF
                  // Send message 'Meerdere geldigheidsdata'
         ZAMSID = 'USR6331';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
               ELSE;
                  // CASE: *OTHERWISE
                  // Send message 'Geen geldigheidsdata gevo'
         ZAMSID = 'USR6359';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
         #DWVCJ = WUWVCJ;                         S04 schermveld
         #1A1CD = WUTY01;                         Type wklh. kode
         #1DOCD = WUBR01;                         Barema RVAkode
         #1DOCD = WUBR01;                         Barema RVAkode
               #1DDNB = WUBD01; //Dagbedrag
               #1AEDT = WUDA01; //Datum OP-code
               #1ADDT = WUDA02; //Datum 40%
               #1AHDT = WUDA03; //Datum forfait
               #1MFDD = WUXWND; //Datum laatste s
               #1AKDT = WUYDND; //Datum begin wkl
         #DIICG = *BLANK;                         Dtm 2de periode
         #DIJCG = *BLANK;                         Dtm forfait cod
               #DQRDE = WUXVND; //S04 schermveld
         #DW1CJ = WUW1CJ;                         S04 schermveld
                // Check verg.artikels - Wkl betaling  *
         WUVTCK = 'N';            1
         OUTYPE = #1A1CD;            2
         OUBARE = #1DOCD;            7
         NWTYPE = #1A1CD;            2
               //ERROR GEVEN
               //WORDT 00 OF ...
               MDBAR425(#1A1CD:RMPAR:WUVE01:WUVE02:WUVE03:WUVE04:WUVE05:WUVE06:WUVTCK:NWTYPE);
                 If WUVTCK = 'N';
         #1A1CD = NWTYPE;
                 If #1A1CD = '00';
         #1DOCD = '.......';
         WUVTCK = 'V';
                 ENDIF;
               ENDIF;
         WUFNCN = 'N';            1
               //ERROR GEVEN

         WUHPCN = 'N';            1
               //ERROR GEVEN

         WUHQCN = 'N';
               If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06';
               MDDOS102(#1AACD:#1AFNB:WUHQCN);
                 ENDIF;
                // CASE: WRK.error verg artikels is Y
               If WUVTCK = 'Y'; //*IF
                  // Send message 'Verg art gn recht op beta'
         ZAMSID = 'USR6755';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
               Endif; //*FI
                // complement 126 opvullen
                // CASE: WRK.Wrk 201211 complement is 126
               If WUCO01 = '126'; //*IF
         #1A5CD = '126';                         KBF nr
               ELSE;
                  // CASE: *OTHERWISE
         #1A5CD = *BLANK;                         KBF nr
               Endif; //*FI
                // Check2 verg.artikels - Wkl betaling  *
         WUY9CM = 'N';            1
         WUFNCN = 'N';            1
               MDBAR429(#1AACD:#1AFNB:#1A1CD:#1DOCD:RMPAR:WUVE01:WUVE02:WUVE03:WUVE04:WUVE05:WUVE06:WUY9CM);
               //ERROR GEVEN
                // CASE: WRK.Switch corona verg is 1
               MDBAR430(#1AACD:#1AFNB:#1A1CD:#1DOCD:RMPAR:WUVE01:WUVE02:WUVE03:WUVE04:WUVE05:WUVE06:WUFNCN);
                 If WUY9CM = '1';
                  // Prompt voor fouten/info - Foutenlijsten pop-up  *
                 CLEAR   PCRC;
     C                   MOVEL(P)  'COR01'       PCJECL                         Foutenlijsten T
     C                   MOVEL(P)  WUYXCJ        PCJFCL                         Foutenlijsten t

                 //Prompt voor fou
                 //KEY: Foutenlijs

                 L0ALPVR(W0RTN:PCRC);
                   If *IN90 = '1';
                    // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'L0ALPVR';
                    // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                   EXSR ZASNMS;
                 Endif;
                  // Error detected?
                 If W0RTN <> *BLANK;
                   *In99 = *On;
                 Endif;
                  // Send message '.'
         ZAMSID = 'USR5917';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
               Endif; //*FI
                // CASE: WRK.Switch corona verg is 2
               If WUY9CM = '2'; //*IF
                  // Prompt voor fouten/info - Foutenlijsten pop-up  *
                 CLEAR   PCRC;
     C                   MOVEL(P)  'COR02'       PCJECL                         Foutenlijsten T
     C                   MOVEL(P)  WUYXCJ        PCJFCL                         Foutenlijsten t

                 //Prompt voor fou
                 //KEY: Foutenlijs

                 L0ALPVR(W0RTN:PCRC);
                   If *IN90 = '1';
                    // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'L0ALPVR';
                    // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                   EXSR ZASNMS;
                 Endif;
                  // Error detected?
                 If W0RTN <> *BLANK;
                   *In99 = *On;
                 Endif;
                  // Send message '.'
         ZAMSID = 'USR5917';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
               Endif; //*FI
                // CASE: WRK.switch corona geen cov mr is Y
               If WUFNCN = 'Y'; //*IF
                  // Send message 'Corona : vnf 102021 gnCOV'
         ZAMSID = 'USR7388';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
               Endif; //*FI
         #1ATST = *BLANK;                         C104 drukken
                // 126,1
                // CASE:
                //  - c1ORc2ORc3ORc4ORc5ORc6
                //   !- c1    : WRK.Wrk 201211 art verg01 is 126,1
                //   !- c2    : WRK.Wrk 201211 art verg01 is  126,1
                //   !- c3    : WRK.Wrk 201211 art verg02 is 126,1
                //   !- c4    : WRK.Wrk 201211 art verg02 is  126,1
                //   !- c5    : WRK.Wrk 201211 art verg03 is 126,1
                //   !- c6    : WRK.Wrk 201211 art verg03 is  126,1
                //   '-
               If WUVE01 = '126,1' OR WUVE01 = @CN(009) OR WUVE02 = '126,1' OR WUVE02 = @CN(009) OR WUVE03 = '126,1' OR WUVE03 = @CN(009); //*IF
         #1ATST = 'Y';                         C104 drukken
               Endif; //*FI
                // 126,1
                // CASE:
                //  - c1ORc2ORc3ORc4ORc5ORc6
                //   !- c1    : WRK.Wrk 201211 art verg04 is 126,1
                //   !- c2    : WRK.Wrk 201211 art verg04 is  126,1
                //   !- c3    : WRK.Wrk 201211 art verg05 is 126,1
                //   !- c4    : WRK.Wrk 201211 art verg05 is  126,1
                //   !- c5    : WRK.Wrk 201211 art verg06 is 126,1
                //   !- c6    : WRK.Wrk 201211 art verg06 is  126,1
                //   '-
               If WUVE04 = '126,1' OR WUVE04 = @CN(009) OR WUVE05 = '126,1' OR WUVE05 = @CN(009) OR WUVE06 = '126,1' OR WUVE06 = @CN(009); //*IF
         #1ATST = 'Y';                         C104 drukken
               Endif; //*FI
                // 126Y
                // CASE:
                //  - c1ORc2ORc3ORc4ORc5ORc6
                //   !- c1    : WRK.Wrk 201211 art verg01 is 126Y
                //   !- c2    : WRK.Wrk 201211 art verg04 is 126Y
                //   !- c3    : WRK.Wrk 201211 art verg02 is 126Y
                //   !- c4    : WRK.Wrk 201211 art verg05 is 126Y
                //   !- c5    : WRK.Wrk 201211 art verg03 is 126Y
                //   !- c6    : WRK.Wrk 201211 art verg06 is 126Y
                //   '-
               If WUVE01 = '126Y' OR WUVE04 = '126Y' OR WUVE02 = '126Y' OR WUVE05 = '126Y' OR WUVE03 = '126Y' OR WUVE06 = '126Y'; //*IF
         #1ATST = 'Y';                         C104 drukken
               Endif; //*FI
                // ?x als type/barema ==> error
                // CASE: DTL.Type wklh. kode NE WRK.Wrk 201211 type01
               If #1A1CD <> WUTY01; //*IF
                  // CASE: WRK.Wrk 201211 type01 is vraagtekenX
                 If WUTY01 = '?X'; //*IF
                    // Send message 'Geen barema gevonden'
         ZAMSID = 'USR6298';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
                 ELSE;
                    // CASE: *OTHERWISE
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // CASE: JOB.*USER is Type51
         If ##USR = @CN(001); //*IF
         #1A1CD = '51';                         Type wklh. kode
         #1DOCD = *BLANK;                         Barema RVAkode
         #1DOCD = 'COVID';                         Barema RVAkode
         Endif; //*FI
          // CASE: JOB.*USER is TYPE5L
         If ##USR = @CN(002); //*IF
         #1A1CD = '51';                         Type wklh. kode
         #1DOCD = @CN(010);                         Barema RVAkode
         Endif; //*FI
          // BZ=M/M1 en type=02,04,06 dan type op 01 zetten/barema op ...... z
          // CASE:
          //  - c1ORc2
          //   !- c1    : DTL.BZ kode is M
          //   !- c2    : DTL.BZ kode is M1
          //   '-
         If #1A4CD = 'M' OR #1A4CD = 'M1'; //*IF
            // CASE:
            //  - c1ORc2ORc3
            //   !- c1    : DTL.Type wklh. kode is 02
            //   !- c2    : DTL.Type wklh. kode is 04
            //   !- c3    : DTL.Type wklh. kode is 06
            //   '-
           If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06'; //*IF
         #1A1CD = '01';                         Type wklh. kode
         #1DOCD = @CN(011);                         Barema RVAkode
           Endif; //*FI
         Endif; //*FI
          // BZ=M1 en type=02,04,06 dan type op 01 zetten/barema op ...... zet
          // CASE:
          //  - c1ORc2ORc3
          //   !- c1    : DTL.BZ kode is M1
          //   !- c2    : DTL.BZ kode is 85
          //   !- c3    : DTL.BZ kode is PZ
          //   '-
         If #1A4CD = 'M1' OR #1A4CD = '85' OR #1A4CD = 'PZ'; //*IF
         #1A1CD = '03';                         Type wklh. kode
         #1DOCD = @CN(011);                         Barema RVAkode
            // CASE:
            //  - c1ORc2ORc3
            //   !- c1    : DTL.Type wklh. kode is 02
            //   !- c2    : DTL.Type wklh. kode is 04
            //   !- c3    : DTL.Type wklh. kode is 06
            //   '-
           If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06'; //*IF
         #1A1CD = '03';                         Type wklh. kode
         #1DOCD = @CN(011);                         Barema RVAkode
           Endif; //*FI
         Endif; //*FI
          // BZ2=15A,15B en type=02,04,06 dan type op 01 zetten/barema op ....
          // CASE:
          //  - c1ORc2ORc3ORc4ORc5
          //   !- c1    : DTL.Werkloze CDE vrij3 is 15
          //   !- c2    : DTL.Werkloze CDE vrij3 is 15A
          //   !- c3    : DTL.Werkloze CDE vrij3 is 15B
          //   !- c4    : DTL.Werkloze CDE vrij3 is 15C
          //   !- c5    : DTL.Werkloze CDE vrij3 is 15D
          //   '-
         If #1KXCE = '15' OR #1KXCE = '15A' OR #1KXCE = '15B' OR #1KXCE = '15C' OR #1KXCE = '15D'; //*IF
            // CASE:
            //  - c1ORc2ORc3
            //   !- c1    : DTL.Type wklh. kode is 02
            //   !- c2    : DTL.Type wklh. kode is 04
            //   !- c3    : DTL.Type wklh. kode is 06
            //   '-
           If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06'; //*IF
         #1A1CD = '01';                         Type wklh. kode
         #1DOCD = @CN(011);                         Barema RVAkode
         #1A4CD = '15';                         BZ kode
           Endif; //*FI
         Endif; //*FI
          // BZ2 15a 15b ... ==> BZ=15
          // CASE:
          //  - c1ORc2ORc3ORc4ORc5
          //   !- c1    : DTL.Werkloze CDE vrij3 is 15
          //   !- c2    : DTL.Werkloze CDE vrij3 is 15A
          //   !- c3    : DTL.Werkloze CDE vrij3 is 15B
          //   !- c4    : DTL.Werkloze CDE vrij3 is 15C
          //   !- c5    : DTL.Werkloze CDE vrij3 is 15D
          //   '-
         If #1KXCE = '15' OR #1KXCE = '15A' OR #1KXCE = '15B' OR #1KXCE = '15C' OR #1KXCE = '15D'; //*IF
         #1A4CD = '15';                         BZ kode
         #1A1CD = '01';                         Type wklh. kode
         #1DOCD = @CN(011);                         Barema RVAkode
         Endif; //*FI
         YRSW00 = 5;
         ZQ = 1;
         If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00010 OR ZQ > 00010;
         W0RTN = 'Y2U0510';
         ELSE;
           WUDTCC = %Subst(##USR:ZQ:YRSW00); //wrk veld 5 posi
     C   90              MOVEL     'Y2U0510'     W0RTN
         Endif;
          // CASE: PAR.param code bijpassing is C = Bijpassing via BYPAS
         If P4BLCF = 'C'; //*IF
         WUDTCC = 'BYPAS';                         wrk veld 5 posi
         Endif; //*FI
         #DDTCC = WUDTCC;                         wrk veld 5 posi
         #PBLCF = P4BLCF;                         param code bijp
          // CASE: KEY.Subberoep kode is niet P
         If #1BCCD <> 'P'; //*IF
            // Enkel RVDS en BYPAS kunnen bijpassingen doen voor 01/09/ mogelijk
            // CASE:
            //  - c1ORc3
            //   !- c1    : JOB.*USER is RVDS
            //   !- c3    : WRK.wrk veld 5 posities user is BYPAS
            //   '-
           If ##USR = 'RVDS' OR WUDTCC = 'BYPAS'; //*IF
              // CASE:
              //  - c1ANDc2ANDc3ANDc4ANDc5ANDc6ANDc7ANDc8ANDc9ANDc10ANDc11ANDc12A
              //  - NDc13
              //   !- c1    : DTL.Type wklh. kode is <> 01
              //   !- c2    : DTL.Type wklh. kode is <> 09
              //   !- c3    : DTL.Type wklh. kode is <> 03
              //   !- c4    : DTL.Type wklh. kode is <> 10
              //   !- c5    : DTL.Type wklh. kode is <> 13
              //   !- c6    : DTL.Type wklh. kode is <> 14
              //   !- c7    : DTL.Type wklh. kode is <> 11
              //   !- c8    : DTL.Type wklh. kode is <> 18
              //   !- c9    : DTL.Type wklh. kode is <> 29
              //   !- c10   : DTL.Type wklh. kode is <> 12
              //   !- c11   : DTL.Type wklh. kode is <> 21
              //   !- c12   : DTL.Type wklh. kode is <> 22
              //   !- c13   : DTL.Type wklh. kode is <> 51
              //   '-
         Y0CX01 = '0';            1
             If #1A1CD <> '01'; //*IF
               If #1A1CD <> '09'; //*IF
                 If #1A1CD <> '03'; //*IF
                   If #1A1CD <> '10'; //*IF
                     If #1A1CD <> '13'; //*IF
                       If #1A1CD <> '14'; //*IF
                         If #1A1CD <> '11'; //*IF
                           If #1A1CD <> '18'; //*IF
                             If #1A1CD <> '29'; //*IF
                               If #1A1CD <> '12'; //*IF
                                 If #1A1CD <> '21'; //*IF
                                   If #1A1CD <> '22'; //*IF
                                     If #1A1CD <> '51'; //*IF
         Y0CX01 = '1';
                                     Endif; //*FI
                                   Endif; //*FI
                                 Endif; //*FI
                               Endif; //*FI
                             Endif; //*FI
                           Endif; //*FI
                         Endif; //*FI
                       Endif; //*FI
                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
                // Send message 'Enkel bijpassingen 01/09'
         ZAMSID = 'USR1807';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
         WUHW99 = '0';                         Switch algemene
          // Controle stopperiode=S - Stoprecord  *
         CLEAR   PNRC;
     C                   MOVEL(P)  'C'           PNHW01                         Stoprecord kode

         //Controle stoppe
         //KEY: Stoprecord
         //Switch algemene

         LWE8XFR(W0RTN:PNRC:WQ0050);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWE8XFR';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
         Endif;
          // Error detected?
         If W0RTN <> *BLANK;
           *In99 = *On;
         Endif;
          // Cmd1 --> Simulatiescherm : compensatievergoeding type 25/type24
          // CASE: KEY.*CMD key is CF01
         If *IN01 = '1'; //*IF
           #1GWNB = 999999; //Datum achtersta
            // CASE:
            //  - c1ORc2
            //   !- c1    : KEY.Afdeling nr is blank
            //   !- c2    : KEY.Lid nr is EQ *BLANK
            //   '-
           If #1AACD = *BLANK OR #1AFNB = *BLANK; //*IF
              // Send message 'Eerst lidnr invullen!'
         ZAMSID = 'USR3299';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           ELSE;
              // CASE: *OTHERWISE
              // CASE: KEY.Type wklh. kode is 24 : wisselkoerstoeslag
             If #1A1CD = '24'; //*IF
                // Prompt simulatie type24 - Wkl betaling  *
               //Prompt simulati

               LWDDPVR(W0RTN);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWDDPVR';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
               Endif;
         W0DCF = 'Y';                          *Defer confirm
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Cmd2 --> Overzicht leden op naam
          // CASE: KEY.*CMD key is CF02
         If *IN02 = '1'; //*IF
            // Check progr. actief : EEF - Programma Actief  *
           CLEAR   PORC;
           POA7NN = ##JNO; //Program Act - J
     C                   MOVEL(P)  @CN(012)      PORACO                         Program Act - P

           //Check progr. ac
           //KEY: Programma
           //sw01

           LWOLXFR(W0RTN:PORC:WQ0051);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWOLXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
           #1GWNB = 999999; //Datum achtersta
            // CASE: WRK.Sw0101 is EQ N
           If WUBQCF = 'N'; //*IF
              // Display leden op naam - Lid  *
             //Display leden o
             //Lid naam2
             //cf01
             //cf02
             //cf04
             //cf05
             //cf06
             //cf07
             //cf08
             //cf10

             LVGSDFR(W0RTN:WQ0052:WQ0053:WQ0054:WQ0055:WQ0056:WQ0057:WQ0058:WQ0059:WQ0060);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVGSDFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
     C                   COMMIT
         W0DCF = 'Y';                          *Defer confirm
           ELSE;
              // CASE: *OTHERWISE
              // Send message 'Selektie P02 n. mogelijk'
         ZAMSID = 'USR0250';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
          // Cmd5 --> Display dagbestand wklh.
          // CASE: KEY.*CMD key is CF05
         If *IN05 = '1'; //*IF
            // Check progr. actief : EEF - Programma Actief  *
           CLEAR   PORC;
           POA7NN = ##JNO; //Program Act - J
     C                   MOVEL(P)  @CN(013)      PORACO                         Program Act - P

           //Check progr. ac
           //KEY: Programma
           //sw01

           LWOLXFR(W0RTN:PORC:WQ0061);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWOLXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
           #1GWNB = 999999; //Datum achtersta
            // CASE: WRK.Sw0101 is EQ N
           If WUBQCF = 'N'; //*IF
              // Display dagbestand wklh. - Wkl bet  *
             //Display dagbest
             //Afdeling nr
             //Lid nr
             //cf01
             //cf02
             //cf04
             //cf05
             //cf06
             //cf07
             //cf08

             LVNRDFR(W0RTN:WQ0062:WQ0063:WQ0064:WQ0065:WQ0066:WQ0067:WQ0068:WQ0069:WQ0070);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVNRDFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
               *In31 = *On;
               *In32 = *On;
             Endif;
     C                   COMMIT
         W0DCF = 'Y';                          *Defer confirm
           Endif; //*FI
         Endif; //*FI
          // Cmd6 --> Display beslagen
          // CASE: KEY.*CMD key is CF06
         If *IN06 = '1'; //*IF
            // Check progr. actief : EEF - Programma Actief  *
           CLEAR   PORC;
           POA7NN = ##JNO; //Program Act - J
     C                   MOVEL(P)  @CN(014)      PORACO                         Program Act - P

           //Check progr. ac
           //KEY: Programma
           //sw01

           LWOLXFR(W0RTN:PORC:WQ0071);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWOLXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
           #1GWNB = 999999; //Datum achtersta
            // CASE: WRK.Sw0101 is EQ N
           If WUBQCF = 'N'; //*IF
              // Display Beslag - Beslag  *
             //Display Beslag
             //Afdeling nr
             //Lid nr
             //cf01
             //cf02
             //cf04
             //cf05
             //cf06
             //cf07
             //cf08

             LVLMDFR(W0RTN:WQ0072:WQ0073:WQ0074:WQ0075:WQ0076:WQ0077:WQ0078:WQ0079:WQ0080);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVLMDFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
               *In31 = *On;
               *In32 = *On;
             Endif;
     C                   COMMIT
         W0DCF = 'Y';                          *Defer confirm
           ELSE;
              // CASE: *OTHERWISE
              // Send message 'Selektie P06 n. mogelijk'
         ZAMSID = 'USR0252';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
          // Cmd8 --> Display terugv2
          // CASE: KEY.*CMD key is CF08
         If *IN08 = '1'; //*IF
            // Check progr. actief : EEF - Programma Actief  *
           CLEAR   PORC;
           POA7NN = ##JNO; //Program Act - J
     C                   MOVEL(P)  @CN(015)      PORACO                         Program Act - P

           //Check progr. ac
           //KEY: Programma
           //sw01

           LWOLXFR(W0RTN:PORC:WQ0081);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWOLXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
           #1GWNB = 999999; //Datum achtersta
            // CASE: WRK.Sw0101 is EQ N
           If WUBQCF = 'N'; //*IF
              // Display terugv - Terugv2  *
             //Display terugv
             //Afdeling nr
             //Lid nr
             //cf01
             //cf02
             //cf04
             //cf05
             //cf06
             //cf07
             //cf08

             LVAEDFR(W0RTN:WQ0082:WQ0083:WQ0084:WQ0085:WQ0086:WQ0087:WQ0088:WQ0089:WQ0090);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVAEDFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
               *In31 = *On;
               *In32 = *On;
             Endif;
     C                   COMMIT
         W0DCF = 'Y';                          *Defer confirm
           ELSE;
              // CASE: *OTHERWISE
              // Send message 'Selektie P08 n. mogelijk'
         ZAMSID = 'USR0273';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
          // Cmd10 --> niet-verwerkte ASR's
          // CASE: KEY.*CMD key is CF10
         If *IN10 = '1'; //*IF
            // CASE:
            //  - c1ORc2
            //   !- c1    : KEY.Afdeling nr is blank
            //   !- c2    : KEY.Lid nr is EQ *BLANK
            //   '-
           If #1AACD = *BLANK OR #1AFNB = *BLANK; //*IF
              // Send message 'Eerst lidnr invullen!'
         ZAMSID = 'USR3299';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           ELSE;
              // CASE: *OTHERWISE
              // CASE: KEY.Datum achterstal is = 999999
             If #1GWNB = 999999; //*IF
               #1GWNB = 0; //Datum achtersta
             Endif; //*FI
              // Overzicht Wechxxx nt verw - MFA WECH update  *
             //Ov.Wechxxx nt v
             //Afdeling nr
             //Lid nr
             //Wrk refertemaan

             LXJIDFR(W0RTN:WQ0091:WQ0092:WQ0093);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXJIDFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
               *In31 = *On;
               *In32 = *On;
               *In33 = *On;
             Endif;
         W0DCF = 'Y';                          *Defer confirm
           Endif; //*FI
           #1GWNB = 999999; //Datum achtersta
         Endif; //*FI
          // Cmd19 --> Display dossier wklh.
          // CASE: KEY.*CMD key is CF19
         If *IN19 = '1'; //*IF
            // Check progr. actief : EEF - Programma Actief  *
           CLEAR   PORC;
           POA7NN = ##JNO; //Program Act - J
     C                   MOVEL(P)  @CN(016)      PORACO                         Program Act - P

           //Check progr. ac
           //KEY: Programma
           //sw01

           LWOLXFR(W0RTN:PORC:WQ0094);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWOLXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
           #1GWNB = 999999; //Datum achtersta
            // CASE: WRK.Sw0101 is EQ N
           If WUBQCF = 'N'; //*IF
              // Display Aanvr. 1 Lid - Dos.beheer-Aanvr.Werksch.  *
             CLEAR   PPRC;
     C                   MOVEL(P)  #1AACD        PPAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        PPAFNB                         Lid nr

             //Display Aanvr.
             //KEY: Lid

             LWIODFR(W0RTN:PPRC);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWIODFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
               *In31 = *On;
               *In32 = *On;
             Endif;
     C                   COMMIT
         W0DCF = 'Y';                          *Defer confirm
           ELSE;
              // CASE: *OTHERWISE
              // Send message 'PRG: PGM Act. druk F3'
         ZAMSID = 'USR3537';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
          // Cmd23 --> Display controlerecord
          // CASE: KEY.*CMD key is CF23
         If *IN23 = '1'; //*IF
           #1GWNB = 999999; //Datum achtersta
            // Display Wkl controlerecor - Wkl controle  *
           //Display Wkl con

           LVO6D1R(W0RTN);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVO6D1R';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
         W0DCF = 'Y';                          *Defer confirm
         Endif; //*FI
          // CASE: WRK.Switch algemene stopperio is 1
         If WUHW99 = '1'; //*IF
            // Cmd4 --> Display werkloosheid
            // CASE: KEY.*CMD key is CF04
           If *IN04 = '1'; //*IF
              // Check progr. actief : EEF - Programma Actief  *
             CLEAR   PORC;
             POA7NN = ##JNO; //Program Act - J
     C                   MOVEL(P)  @CN(017)      PORACO                         Program Act - P

             //Check progr. ac
             //KEY: Programma
             //sw01

             LWOLXFR(W0RTN:PORC:WQ0095);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWOLXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
              // CASE: WRK.Sw0101 is EQ N
             If WUBQCF = 'N'; //*IF
               #1GWNB = 999999; //Datum achtersta
                // Display Werkloosheid - Werkloze  *
               //Display Werkloo
               //Afdeling nr
               //Lid nr
               //cf02
               //cf04
               //cf05
               //cf06
               //cf07
               //cf08
               //cf10

               LVEFD2R(W0RTN:WQ0096:WQ0097:WQ0098:WQ0099:WQ0100:WQ0101:WQ0102:WQ0103:WQ0104);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVEFD2R';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
                 *In31 = *On;
                 *In32 = *On;
               Endif;
     C                   COMMIT
         W0DCF = 'Y';                          *Defer confirm
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Selektie P04 n. mogelijk'
         ZAMSID = 'USR0251';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // Cmd7 --> Display ledenbeweging
            // CASE: KEY.*CMD key is CF07
           If *IN07 = '1'; //*IF
              // Check progr. actief : EEF - Programma Actief  *
             CLEAR   PORC;
             POA7NN = ##JNO; //Program Act - J
     C                   MOVEL(P)  @CN(018)      PORACO                         Program Act - P

             //Check progr. ac
             //KEY: Programma
             //sw01

             LWOLXFR(W0RTN:PORC:WQ0105);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWOLXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
              // CASE: WRK.Sw0101 is EQ N
             If WUBQCF = 'N'; //*IF
               #1GWNB = 999999; //Datum achtersta
                // Display ledenbeweging - Lid  *
               //Display ledenbe
               //Afdeling nr
               //Lid nr
               //cf02
               //cf04
               //cf05
               //cf06
               //cf07
               //cf08
               //cf10

               LVEDD1R(W0RTN:WQ0106:WQ0107:WQ0108:WQ0109:WQ0110:WQ0111:WQ0112:WQ0113:WQ0114);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVEDD1R';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
                 *In31 = *On;
                 *In32 = *On;
               Endif;
     C                   COMMIT
         W0DCF = 'Y';                          *Defer confirm
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Selektie P07 n. mogelijk'
         ZAMSID = 'USR0253';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // Send message 'Geen wijziging mogelijk,,'
         ZAMSID = 'USR1746';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         ELSE;
            // CASE: *OTHERWISE
            // Oph. stop/bet,dg/dg-1:EEF - Wkl controle  *
           //Oph. stop/bet,d
           //Controle kode C
           //wrk stopperiode
           //WRK Betaaldag
           //Betaaldag dagbe

           LWKKXFR(W0RTN:WQ0115:WQ0116:WQ0117:WQ0118);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWKKXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
            // Stopperiode betaling : u kan niet betalen
            // CASE: WRK.wrk stopperiode is S
           If WUR3CO = 'S'; //*IF
              // Send message 'Stopperiode : u kan nt be'
         ZAMSID = 'USR0316';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Ophalen ind.maand EEF - Wkl controle  *
           //Ophalen ind.maa
           //Wrk veld 1 posi
           //wrk indieningsm

           LWFHXFR(W0RTN:WQ0119:WQ0120);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWFHXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
           WUI9DM = WUZKNR; //Wrk datum indie
            // CASE: WRK.Wrk datum indieningsmaand is >= 201710
           If WUI9DM >= 201710; //*IF
              // CASE:
              //  - c1ORc2
              //   !- c1    : DTL.BZ kode is B
              //   !- c2    : DTL.BZ kode is BB
              //   '-
             If #1A4CD = 'B' OR #1A4CD = 'BB'; //*IF
                // Send message 'BZ B/BB niet meer mogelij'
         ZAMSID = 'USR7031';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
             YRSW00 = 1;
             ZQ = 7;
             If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
             ELSE;
               WUTTCG = %Subst(#1DOCD:ZQ:YRSW00); //wrk veld 1 posi
     C   90              MOVEL     'Y2U0510'     W0RTN
             Endif;
             YRSW00 = 6;
             ZQ = 1;
             If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
             ELSE;
               WUWRK6 = %Subst(#1DOCD:ZQ:YRSW00); //Wrk veld 6 posi
     C   90              MOVEL     'Y2U0510'     W0RTN
             Endif;
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5ORc6
              //   !- c1    : WRK.wrk veld 1 positie barema is A
              //   !- c2    : WRK.wrk veld 1 positie barema is B
              //   !- c3    : WRK.wrk veld 1 positie barema is C
              //   !- c4    : WRK.wrk veld 1 positie barema is D
              //   !- c5    : WRK.wrk veld 1 positie barema is E
              //   !- c6    : WRK.wrk veld 1 positie barema is F
              //   '-
             If WUTTCG = 'A' OR WUTTCG = 'B' OR WUTTCG = 'C' OR WUTTCG = 'D' OR WUTTCG = 'E' OR WUTTCG = 'F'; //*IF
               ZQ = 0;
               #1DOCD = WUWRK6 + '' + '.'; //Barema RVAkode
             Endif; //*FI
           ELSE;
              // CASE: *OTHERWISE
              // Check bouwcode vnf10/2017 - Wkl betaling  *
         OUINON = 'N';            1
         BZBW = #1A4CD;              2
         WUS5CL = OUINON;
              //          'L0DPUFR' DSPLY'ROSANNE'
              //          WUGUCG    DSPLY'ROSANNE'                  MEERDERE UREN P
              //          WUHHCM    DSPLY'ROSANNE'                  F1
              //          WUDJNU    DSPLY'ROSANNE'                  TELLER
              // CASE: WRK.Switch bouw 102017 is Y
             If WUS5CL = 'Y'; //*IF
                // Send message 'BZ bouw vanaf IM 10/2017'
         ZAMSID = 'USR7035';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // Cmd4 --> Bijwerken werkloosheid
            // CASE: KEY.*CMD key is CF04
           If *IN04 = '1'; //*IF
              // Check Programma al actief - Programma Actief  *
             EXSR SARVGN;
             #1GWNB = 999999; //Datum achtersta
              // CASE: WRK.Sw0101 is EQ N
             If WUBQCF = 'N'; //*IF
                // Bijwerken Werkloosheid - Werkloze  *
               //Bijwerken Werkl
               //Afdeling nr
               //Lid nr
               //cf01
               //cf02
               //cf04
               //cf05
               //cf06
               //cf07
               //cf08

               LVI2E2R(W0RTN:WQ0121:WQ0122:WQ0123:WQ0124:WQ0125:WQ0126:WQ0127:WQ0128:WQ0129);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVI2E2R';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
                 *In31 = *On;
                 *In32 = *On;
               Endif;
     C                   COMMIT
         W0DCF = 'Y';                          *Defer confirm
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Selektie P04 n. mogelijk'
         ZAMSID = 'USR0251';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // Cmd7 --> Bijwerken ledenbeweging
            // CASE: KEY.*CMD key is CF07
           If *IN07 = '1'; //*IF
              // Check progr. actief : EEF - Programma Actief  *
             CLEAR   PORC;
             POA7NN = ##JNO; //Program Act - J
     C                   MOVEL(P)  @CN(020)      PORACO                         Program Act - P

             //Check progr. ac
             //KEY: Programma
             //sw01

             LWOLXFR(W0RTN:PORC:WQ0130);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWOLXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
             #1GWNB = 999999; //Datum achtersta
              // CASE: WRK.Sw0101 is EQ N
             If WUBQCF = 'N'; //*IF
                // Bijwerken ledenbeweging - Lid  *
               //Bijwerken leden
               //Afdeling nr
               //Lid nr
               //cf01
               //cf02
               //cf04
               //cf05
               //cf07
               //cf10

               LVFLE1R(W0RTN:WQ0131:WQ0132:WQ0133:WQ0134:WQ0135:WQ0136:WQ0137:WQ0138);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVFLE1R';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
                 *In31 = *On;
                 *In32 = *On;
               Endif;
     C                   COMMIT
         W0DCF = 'Y';                          *Defer confirm
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Selektie P07 n. mogelijk'
         ZAMSID = 'USR0253';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // Cmd13 --> Update verlof
            // CASE: KEY.*CMD key is CF13
           If *IN13 = '1'; //*IF
             #1GWNB = 999999; //Datum achtersta
              // Prompt voor keuze verlofs - verlof UB  *
             //Prompt voor keu
             //WRK Afdeling nr
             //WRK Lid nr
             //WRK Naam
             //WRK Rijksregist
             //WRK Rijksregist
             //WRK Rijksregist
             //via menu

             LZANPVR(W0RTN:WQ0139:WQ0140:WQ0141:WQ0142:WQ0143:WQ0144:WQ0145);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LZANPVR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
               *In31 = *On;
               *In32 = *On;
             Endif;
     C                   COMMIT
         W0DCF = 'Y';                          *Defer confirm
           Endif; //*FI
            // Afd=03 en dok (beroep=09) --> error : andere optie op menu /blokk
            // CASE: DTL.Afdeling nr is = 03
           If #1AACD = '03'; //*IF
              // CASE: DTL.Beroep kode is 09 : Dok A'pen
             If #1BACD = '09'; //*IF
                // Send message 'Dok A'pen andere optie'
         ZAMSID = 'USR0357';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
         WUDRCN = 'N';                         switch type51co
            // CASE:
            //  - c1ORc2
            //   !- c1    : JOB.*USER is Type51
            //   !- c2    : JOB.*USER is TYPE5L
            //   '-
           If ##USR = @CN(001) OR ##USR = @CN(002); //*IF
         WUDRCN = 'Y';                         switch type51co
           Endif; //*FI
            // Afd=04  andere optie op menu /blokkering
            // CASE: DTL.Afdeling nr is = 04
           If #1AACD = '04'; //*IF
              // CASE: WRK.switch type51corona is Y
             If WUDRCN = 'Y'; //*IF
             ELSE;
                // CASE: *OTHERWISE
                // CASE: DTL.Subberoep kode is J
               If #1BCCD = 'J'; //*IF
                  // CASE: DTL.Beroep kode is 09 : Dok A'pen
                 If #1BACD = '09'; //*IF
                    // Send message 'Dok A'pen andere optie'
         ZAMSID = 'USR0357';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
                 Endif; //*FI
               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: WRK.Switch S36 of S04 is S04
                 If WUWJCJ = 'S04'; //*IF
                    // Send message 'Dok A'pen andere optie'
         ZAMSID = 'USR0357';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Ontslag --> info message : ontslag in ledenbestand
            // CASE: DTL.Ontsl jjmm is NE *ZERO
           If #1AHNB <> *ZERO; //*IF
              // Send message 'ontslag in leden ]'
         ZAMSID = 'USR4703';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // Pens.nr d2 niet 00000 :error
            // CASE: KEY.Pensioennr d2 is <> 00000
           If #1AJNB <> '00000'; //*IF
              // Send message 'Gn betaling : Pnr d2 nt 0'
         ZAMSID = 'USR1121';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // RRNR d1/d2/d3 = blank of d1=000000 --> error message
            // CASE:
            //  - c1ORc2ORc3ORc4
            //   !- c1    : DTL.Rijksreg d1 is EQ *BLANK
            //   !- c2    : DTL.Rijksreg d2 is EQ *BLANK
            //   !- c3    : DTL.Rijksreg d3 is EQ *BLANK
            //   !- c4    : DTL.Rijksreg d1 is 000000
            //   '-
           If #1AKNB = *BLANK OR #1FGNB = *BLANK OR #1FHNB = *BLANK OR #1AKNB = @CN(021); //*IF
              // RRNR 000000 toch betalen - Wkl betaling  *
         WUZKCM = 'N';
              // CASE: WRK.switch RRNR 000000 is Y
             MDRRNR01(#1AACD:#1AFNB:WUZKCM);
               If WUZKCM = 'Y';
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Identificatienr ontbreekt'
         ZAMSID = 'USR0854';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // RVA onderafdeling moet ingevuld zijn
            // CASE: DTL.Gemeente nr is niet ingevuld
           If #1BTNB = *BLANK; //*IF
              // Send message 'Gemeente dient ingevuld t'
         ZAMSID = 'USR3013';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Type wkl=96 : niet toelaatbaar --> error message : niet toelaatba
            // CASE: DTL.Type wklh. kode is 96
           If #1A1CD = '96'; //*IF
              // Setup message data for message
         ZA0011 = WUETCK;                         Wrk datum barem
              // Send message 'Type 96 vanaf &1'
         ZAMSID = 'USR6509';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

              // Send message 'Type 96 Onmogelijk voor'
         ZAMSID = 'USR5157';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Type wkl=90 : niet toelaatbaar --> error message : niet toelaatba
            // CASE: DTL.Type wklh. kode is 90
           If #1A1CD = '90'; //*IF
              // Send message 'Type 90. Onmogelijk voor'
         ZAMSID = 'USR3763';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Type wkl=98 : niet toelaatbaar --> error message : niet toelaatba
            // CASE: DTL.Type wklh. kode is 98
           If #1A1CD = '98'; //*IF
              // Send message 'Type 98 !! Onmogelijk vr'
         ZAMSID = 'USR1499';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Type wkl=99 : niet toelaatbaar --> error message : niet toelaatba
            // CASE: DTL.Type wklh. kode is 99 : niet toelaatbaar
           If #1A1CD = '99'; //*IF
              // Send message 'Type 99 : nt toelaatbaar'
         ZAMSID = 'USR1037';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
           WUZJNR = *ZERO; //Wrk rijksregist
            // Bepalen RRNR+80 - Wkl betaling  *
           //Bepalen RRNR+80
           //Rijksreg d1
           //Rijksreg d2
           //Wrk rijksregist

           LWFEXFR(W0RTN:WQ0146:WQ0147:WQ0148);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWFEXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
           WUZKNR = 0; //wrk indieningsm
            // Ophalen ind.maand EEF - Wkl controle  *
           //Ophalen ind.maa
           //Wrk veld 1 posi
           //wrk indieningsm

           LWFHXFR(W0RTN:WQ0149:WQ0150);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWFHXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
         WUFRCD = '0';                         Switch106
            // Contr.dubb.ident.nrEEf:zo - OV betaling wklh.  *
           //Contr.dubb.iden
           //wrk indieningsm
           //Wrk rijksregist
           //Switch106
           //Zone code
           //Afdeling nr
           //Lid nr

           LWGQXFR(W0RTN:WQ0151:WQ0152:WQ0153:WQ0154:WQ0155:WQ0156);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWGQXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
             *In31 = *On;
             *In32 = *On;
           Endif;
            // Sw106=1:Dubbel ident.nr voor <>lidnrs in C2-overzicht
            // CASE: WRK.Switch106 is 1
           If WUFRCD = '1'; //*IF
              // Send message 'Dubbel identificatienr!!'
         ZAMSID = 'USR0881';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         WUFRCD = '0';                         Switch106
            // Contr dubbel ident.nr EEF - Wkl betaling  *
           //Contr dubbel id
           //Wrk rijksregist
           //Switch106
           //Afdeling nr
           //Lid nr

           LWFGXFR(W0RTN:WQ0157:WQ0158:WQ0159:WQ0160);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWFGXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
             *In31 = *On;
             *In32 = *On;
           Endif;
            // Sw106=1:Dubbel ident.nr voor <> lidnrs in dagbestand : error
            // CASE: WRK.Switch106 is 1
           If WUFRCD = '1'; //*IF
              // Send message 'Dubbel id.nr indagbestand'
         ZAMSID = 'USR1275';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Proberen of controle zelfde lid in dagbestand met execute user so
         WUFACE = *BLANK;                         Betaaldag dagbe
         WUWU56 = '0';                         Switch156
            // Oph. stop/bet,dg/dg-1:EEF - Wkl controle  *
           //Oph. stop/bet,d
           //Controle kode C
           //wrk stopperiode
           //WRK Betaaldag
           //Betaaldag dagbe

           LWKKXFR(W0RTN:WQ0161:WQ0162:WQ0163:WQ0164);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWKKXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
            // Check of lid nog in dagbe - Wkl betaling  *
           CLEAR   PQRC;
     C                   MOVEL(P)  #1AACD        PQAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        PQAFNB                         Lid nr
     C                   MOVEL(P)  WUFACE        PQCA01                         Wkl bet betaald

           //Check of lid no
           //KEY: Wkl betali
           //Switch156

           LVH0XFR(W0RTN:PQRC:WQ0165);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVH0XFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
             *In31 = *On;
             *In32 = *On;
           Endif;
            // Upd oude bestanden is nog bezig, geen betaling voor dat lid
            // CASE: WRK.Switch156 is 1
           If WUWU56 = '1'; //*IF
              // Send message 'Gelieve 2 uur te wachten'
         ZAMSID = 'USR1182';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Ophalen datum euro : EEF - Wkl controle  *
           //Ophalen datum e
           //Controle kode C
           //Wrk datum euro

           LWKPXFR(W0RTN:WQ0166:WQ0167);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWKPXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
           WUP2DD = WUBTNN; //Wrk datum Euro
            // Ophalen ind.maand EEF - Wkl controle  *
           //Ophalen ind.maa
           //Wrk veld 1 posi
           //wrk indieningsm

           LWFHXFR(W0RTN:WQ0168:WQ0169);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWFHXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
            // Bijpassing : steeds datum achterstal, nooit lopende maand
            // CASE:
            //  - c1ANDc2
            //   !- c1    : WRK.Wrk test bijpassing is Y
            //   !- c2    : KEY.Datum achterstal GE WRK.wrk indieningsmaand
            //   '-
         Y0CX01 = '0';            1
           If WUEUCO = 'Y'; //*IF
             If #1GWNB >= WUZKNR; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // Setup message data for message
              // Convert Datum achterstal to external.

             UIDTM2 = #1GWNB;
             UDTMC2 = UDTM12;
             UDTMY2 = UDTM22;
             UDTMM2 = UDTM32;
             ZA0012 = UEDTM2;
              // Send message 'Bijpassing ! Steeds datum'
         ZAMSID = 'USR3242';
             EXSR ZASNMS;
             *In99 = *On;
             *In33 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Move van wklh.maand naar datum achterstal
            // CASE:
            //  - c1ANDc2
            //   !- c1    : WRK.wrk stopperiode is L
            //   !- c2    : KEY.Datum achterstal is niet ingevuld
            //   '-
         Y0CX01 = '0';            1
           If WUR3CO = 'L'; //*IF
             If #1GWNB = *ZERO; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
             #1GWNB = WUZKNR; //Datum achtersta
           Endif; //*FI
         WUFRCD = '0';                         Switch106
           WUZQNR = 20991231; //Wrk datum betal
           WUZKNR = #1GWNB; //wrk indieningsm
            // Ophalen datum bet EEF - Wkl controle  *
           //Ophalen datum b
           //Wrk veld 1 posi
           //Wrk datum betal

           LWGBXFR(W0RTN:WQ0170:WQ0171);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWGBXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
            // Ophalen ind.maand EEF - Wkl controle  *
           //Ophalen ind.maa
           //Wrk veld 1 posi
           //wrk indieningsm

           LWFHXFR(W0RTN:WQ0172:WQ0173);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWFHXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
            // Contr zelfde betaaldag - OV betaling wklh.  *
           //Contr zelfde be
           //Afdeling nr
           //Lid nr
           //Switch106
           //OVW indieningsm
           //OVW datum betal
           //OVW refertemaan
           //OVW C12 reden
           //OVW DOK periode

           LWGAXFR(W0RTN:WQ0174:WQ0175:WQ0176:WQ0177:WQ0178:WQ0179:WQ0180:WQ0181);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWGAXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
             *In31 = *On;
             *In32 = *On;
             *In33 = *On;
             *In33 = *On;
           Endif;
            // CASE: WRK.Switch106 is 1
           If WUFRCD = '1'; //*IF
              // Send message 'ZELFDE BETAALDAG. Nog 1 d'
         ZAMSID = 'USR3420';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         WUMQCD = '0';                         Switch61
            // bepalen naar welke steunaanvraag+C9 dient gekeken te worden
            // CASE:
            //  - c1ANDc2
            //   !- c1    : KEY.Datum achterstal is >= januari 1990
            //   !- c2    : KEY.Datum achterstal is < 999999
            //   '-
         Y0CX01 = '0';            1
           If #1GWNB >= 199001; //*IF
             If #1GWNB < 999999; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
             WUK750 = #1GWNB * 100; //Wrk veld 8 posi
             WUK750 = WUK750 + 31; //Wrk veld 8 posi
           ELSE;
              // CASE: *OTHERWISE
             WUK750 = 20991231; //Wrk veld 8 posi
           Endif; //*FI
            // Betalen mag ???? EEF - Dos.beheer-Aanvr.Werksch.  *
           CLEAR   PRRC;
     C                   MOVEL(P)  #1AACD        PRAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        PRAFNB                         Lid nr
           PRTGDD = WUK750; //DOS WrkSchrm-Da

           //Betalen mag ???
           //Switch61
           //KEY: Dos.beheer

           LWNSXFR(W0RTN:WQ0182:PRRC);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWNSXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
             *In31 = *On;
             *In32 = *On;
           Endif;
            // Dossier aanwezig, maar geen geldige kode tot betaling :sw61=1
            // CASE: WRK.Switch61 is 1
           If WUMQCD = '1'; //*IF
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5
              //   !- c1    : DTL.BZ kode is VZ
              //   !- c2    : DTL.BZ kode is DZ
              //   !- c3    : DTL.BZ kode is PZ
              //   !- c4    : DTL.BZ kode is FZ
              //   !- c5    : DTL.BZ kode is 15
              //   '-
             If #1A4CD = 'VZ' OR #1A4CD = 'DZ' OR #1A4CD = 'PZ' OR #1A4CD = 'FZ' OR #1A4CD = '15'; //*IF
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Dossier heeft geen geldig'
         ZAMSID = 'USR3590';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // Geen dossier aanwezig :sw61=2
            // CASE: WRK.Switch61 is 2
           If WUMQCD = '2'; //*IF
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5ORc6ORc7
              //   !- c1    : DTL.BZ kode is VZ
              //   !- c2    : DTL.BZ kode is DZ
              //   !- c3    : DTL.BZ kode is PZ
              //   !- c4    : DTL.BZ kode is FZ
              //   !- c5    : DTL.BZ kode is 15
              //   !- c6    : DTL.BZ kode is M
              //   !- c7    : DTL.BZ kode is M1
              //   '-
             If #1A4CD = 'VZ' OR #1A4CD = 'DZ' OR #1A4CD = 'PZ' OR #1A4CD = 'FZ' OR #1A4CD = '15' OR #1A4CD = 'M' OR #1A4CD = 'M1'; //*IF
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Geen dossier aanwezig'
         ZAMSID = 'USR0411';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // Code vrij1 opvullen met Y of R
            // CASE:
            //  - c1ORc2
            //   !- c1    : WRK.Switch61 is R
            //   !- c2    : WRK.Switch61 is Y
            //   '-
           If WUMQCD = 'R' OR WUMQCD = 'Y'; //*IF
              // CASE: WRK.Switch61 is R
             If WUMQCD = 'R'; //*IF
         #1MOCE = 'R';                         Wkl bet CDE vri
             ELSE;
                // CASE: *OTHERWISE
         #1MOCE = '-';                         Wkl bet CDE vri
             Endif; //*FI
           ELSE;
              // CASE: *OTHERWISE
         #1MOCE = *BLANK;                         Wkl bet CDE vri
           Endif; //*FI
            // WB Laatste UA ophalen - Wkl betaling  *
         WUX8CM = 'YY';
            // CASE: KEY.GWB nr NE WRK.WB recentste UA
           MDDOS001(#1AACD:#1AFNB:WUX8CM);
             If #1A2CD <> WUX8CM;
              // weg wegens nieuwe werkwijze fusies WB jira 39..
           Endif; //*FI
           YRSW00 = 2;
           ZQ = 1;
           If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
           ELSE;
             WUS6CG = %Subst(#1DOCD:ZQ:YRSW00); //code59
     C   90              MOVEL     'Y2U0510'     W0RTN
           Endif;
            // CASE: KEY.Datum achterstal is <= 200612
           If #1GWNB <= 200612; //*IF
              // CASE: WRK.code59 is 59
             If WUS6CG = '59'; //*IF
                // Send message 'Barema 59 pas mogelijk va'
         ZAMSID = 'USR4973';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // CASE: KEY.Datum achterstal is < 202107
           If #1GWNB < 202107; //*IF
              // CASE: WRK.code59 is 78
             If WUS6CG = '78'; //*IF
                // Send message 'Barema geldig vnf07/2021'
         ZAMSID = 'USR7367';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // Datum achterst=999999 of > wklhmaand
            // CASE: KEY.Datum achterstal is = 999999
           If #1GWNB = 999999; //*IF
              // Setup message data for message
              // Convert Datum achterstal to external.

             UIDTM2 = #1GWNB;
             UDTMC2 = UDTM12;
             UDTMY2 = UDTM22;
             UDTMM2 = UDTM32;
             ZA0013 = UEDTM2;
              // Send message 'Datum achterstal invullen'
         ZAMSID = 'USR0471';
             EXSR ZASNMS;
             *In99 = *On;
             *In33 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           ELSE;
              // CASE: *OTHERWISE
              // Contr. dat. acht.>wklhmnd - Wkl bet  *
     EvalR   WUGBCD = '0';                         SW12 ACHT>WKLMN
     C                   MOVEA     *IN(50)       UWIN              1
             CHAIN 'C' @BYREGR ;
       *in50 = (%found() = *Off); //50=EOF
     C   50              GOTO      ENDDAT
             If NOT *In50;
               If #1GWNB > BYEENB;
             Endif;
     EvalR   WUGBCD = '1';
             Endif;
             If #1GWNB = BYEENB;
               If BYAYST = 'A'; //ACHTERSTALLEN
     EvalR   WUGBCD = '1';
               Endif;
             Endif;
     C     ENDDAT        TAG
     C                   MOVEA     UWIN          *IN(50)
              // Switch12=1 --> error message :datum achterstal>=huidige wklhmaand
              // CASE: WRK.switch12 is 1
             If WUGBCD = '1'; //*IF
                // Setup message data for message
                // Convert Datum achterstal to external.

               UIDTM2 = #1GWNB;
               UDTMC2 = UDTM12;
               UDTMY2 = UDTM22;
               UDTMM2 = UDTM32;
               ZA0014 = UEDTM2;
                // Send message 'Datum acht.>datum wklhmaa'
         ZAMSID = 'USR0274';
               EXSR ZASNMS;
               *In99 = *On;
               *In33 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // Type 24,subberoep blank : error : ofwel W, ofwel F
            // CASE:
            //  - c1ANDc2
            //   !- c1    : KEY.Type wklh. kode is 24 : wisselkoerstoeslag
            //   !- c2    : KEY.Subberoep kode is nt ingevuld
            //   '-
         Y0CX01 = '0';            1
           If #1A1CD = '24'; //*IF
             If #1BCCD = *BLANK; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // Send message 'Ofwel subberoep W, ofwel'
         ZAMSID = 'USR3313';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Type 24,subberoep niet W en niet F : error
            // CASE: KEY.Type wklh. kode is 24 : wisselkoerstoeslag
           If #1A1CD = '24'; //*IF
              // CASE:
              //  - c1ORc2
              //   !- c1    : KEY.Subberoep kode is W
              //   !- c2    : KEY.Subberoep kode is F
              //   '-
             If #1BCCD = 'W' OR #1BCCD = 'F'; //*IF
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Ofwel subberoep W, ofwel'
         ZAMSID = 'USR3313';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // lidnr >= 900000 en vsoa-nr blank --> error message : vsoa-nr verp
            // CASE:
            //  - c1ANDc2
            //   !- c1    : DTL.Lid nr is GE 900000
            //   !- c2    : DTL.VSOA groep kode is EQ *BLANK
            //   '-
         Y0CX01 = '0';            1
           If #1AFNB >= @CN(006); //*IF
             If #1BKCD = *BLANK; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // Send message 'VSOA-nr is verplicht bij'
         ZAMSID = 'USR0322';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Datum achterstal voor10/1985 --> error message
            // CASE: DTL.Datum achterstal is < 10/1985
           If #1GWNB < 198510; //*IF
              // Send message 'Datum  achterstal????????'
         ZAMSID = 'USR0480';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // BZ=BA ==> arb.ovk=6 en geen beroep=09
            // CASE:
            //  - c2ANDc3
            //   !- c2    : KEY.BZ kode is BA
            //   !- c3    : KEY.Beroep kode is 09 : Dok A'pen
            //   '-
         Y0CX01 = '0';            1
           If #1A4CD = 'BA'; //*IF
             If #1BACD = '09'; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // Send message 'Vanaf 03/1998 moet voor d'
         ZAMSID = 'USR2743';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         WUDXCC = #1DOCD;                         wrk veld substr
            // JVU : Opvullen type en barema wklh/controle jaartal+leeftijd
            // CASE:
            //  - c1ORc2
            //   !- c1    : KEY.Subberoep kode is J
            //   !- c2    : KEY.Type wklh. kode is 21
            //   '-
           If #1BCCD = 'J' OR #1A1CD = '21'; //*IF
             YRSW00 = 1;
             ZQ = 7;
             If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
             ELSE;
               WUDXCC = %Subst(#1DOCD:ZQ:YRSW00); //wrk veld substr
     C   90              MOVEL     'Y2U0510'     W0RTN
             Endif;
         #1A1CD = '21';                         Type wklh. kode
         #1DOCD = *BLANK;                         Barema RVAkode
         #1DOCD = #1KYCE;                         Barema RVAkode
              // Slechts 1 jaar JVU betalen+pas vanaf IM mei mag men JVU uitbetale
              // CASE: KEY.Werkloze DTM vrij1 is ingevuld
             If #1IEDM > 0; //*IF
               WUA195 = #1GWNB / 100; //Wrk veld 4 posi
               WUYFNR = #1IEDM / 100; //wrk veld 4 posi
                // CASE: WRK.Wrk veld 4 posities nbr NE WRK.wrk veld 4 posities nbr
               If WUA195 <> WUYFNR; //*IF
                  // Send message 'Reeds JVU betaald] info'
         ZAMSID = 'USR3832';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
               WUA195 = #1GWNB / 100; //Wrk veld 4 posi
               WUYFNR = WUZKNR / 100; //wrk veld 4 posi
                // JVU voor JJJJ kan pas vanaf IM 05/JJJJ uitbetaald worden
                // CASE: WRK.Wrk veld 4 posities nbr EQ WRK.wrk veld 4 posities nbr
               If WUA195 = WUYFNR; //*IF
                 WUYHNR = WUYFNR * 100; //wrk veld 6 posi
                 WUA196 = WUZKNR - WUYHNR; //Wrk veld 2 posi
                  // CASE: WRK.Wrk veld 2 posities nbr is <= 4
                 If WUA196 <= 4; //*IF
                    // Send message 'JVU ten vroegste uitbetaa'
         ZAMSID = 'USR3833';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // Controle type21 :+extern - Wkl betaling  *
              //=== CONTROLE OF LEEFTIJD VOOR JVU <  25 IN HET BEGIN VAN HET JAAR
              // RM=200106 ==> TOV 200101 LEEFTIJD 25 JAAR VERGELIJKEN
         WUWU48 = '0';
             TSTLFT = 25;
             RMPAR = #1GWNB / 100;
             RMPAR = RMPAR * 100;
             RMPAR = RMPAR + 01; //1STE MND V.H. JAAR
             //AFD
             //LIDNR
             //REF.MND
             //TEST LEEFTIJD
             //SWITCH148
              // CASE: WRK.Switch148 is Y
             MDLEEFT(#1AACD:#1AFNB:RMPAR:TSTLFT:WUWU48);
               If WUWU48 = 'Y';
                // Send message 'Lid is ouder dan 25 jaar]'
         ZAMSID = 'USR3831';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           ELSE;
              // CASE: *OTHERWISE
         WUDXCC = #1DOCD;                         wrk veld substr
           Endif; //*FI
            // BZ metaal 35/85 : leeftijd 57 jaar
            // CASE:
            //  - c1ORc2
            //   !- c1    : KEY.BZ kode is 35
            //   !- c2    : KEY.BZ kode is 85
            //   '-
           If #1A4CD = '35' OR #1A4CD = '85'; //*IF
              // Controle BZ=35/85+extern - Wkl betaling  *
         WUWU48 = 'N';
             TSTLFT = 57;
              // VANAF DE MAAND WAARIN LID 57 JAAR WORDT MAG ER AL BETAALD WORDEN
             RMPAR = #1GWNB + 1;
             //AFD
             //LIDNR
             //REF.MND
             //TEST LEEFTIJD
             //SWITCH148
              // CASE: WRK.Switch148 is N
             MDLEEFT(#1AACD:#1AFNB:RMPAR:TSTLFT:WUWU48);
               If WUWU48 = 'N';
                // Send message 'Lid is nog geen 57 jaar]'
         ZAMSID = 'USR3921';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // BZ metaal M/M1 : leeftijd man 57 jaar/vrouw 55 jaar
            // CASE:
            //  - c1ORc2
            //   !- c1    : KEY.BZ kode is M
            //   !- c2    : KEY.BZ kode is M1
            //   '-
           If #1A4CD = 'M' OR #1A4CD = 'M1'; //*IF
              // Controle BZ=M/M1+extern - Wkl betaling  *
         WUWU48 = 'N';
             If #1ATNB = '1'; //MAN
               TSTLFT = 57;
             ELSE; //VROUW
               TSTLFT = 55;
             ENDIF;
              // VANAF DE MAAND WAARIN LID 57 JAAR WORDT MAG ER AL BETAALD WORDEN
             RMPAR = #1GWNB + 1;
             //AFD
             //LIDNR
             //REF.MND
             //TEST LEEFTIJD
             //SWITCH148
              // CASE: WRK.Switch148 is N
             MDLEEFT(#1AACD:#1AFNB:RMPAR:TSTLFT:WUWU48);
               If WUWU48 = 'N';
                // Send message 'Lid is nog geen 55/57 jr'
         ZAMSID = 'USR5683';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // BZ metaal 15 : leeftijd 58 jaar
            // CASE: KEY.BZ kode is 15
           If #1A4CD = '15'; //*IF
              // Controle BZ15+extern - Wkl betaling  *
         WUWU48 = 'N';
             TSTLFT = 58;
              // VANAF DE MAAND WAARIN LID 58 JAAR WORDT MAG ER AL BETAALD WORDEN
             RMPAR = #1GWNB + 1;
             //AFD
             //LIDNR
             //REF.MND
             //TEST LEEFTIJD
             //SWITCH148
              // CASE: WRK.Switch148 is N
             MDLEEFT(#1AACD:#1AFNB:RMPAR:TSTLFT:WUWU48);
               If WUWU48 = 'N';
                // Send message 'Lid is nog geen 58 jaar'
         ZAMSID = 'USR6929';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // Subberoep P = PWA toeslag
            // CASE: KEY.Subberoep kode is P
           If #1BCCD = 'P'; //*IF
              // Controle PWAtoesl:+extern - Wkl betaling  *
              //=== CONTROLE OF LEEFTIJD VOOR JVU <  25 IN HET BEGIN VAN HET JAAR
              // RM=200106 ==> TOV 200101 LEEFTIJD 25 JAAR VERGELIJKEN
         WUA3CF = '0';                         SWITCH PWA TOESLAG
             RMPAR = #1GWNB;
             //AFD
             //LIDNR
             //REF.MND
             //SWITCH PWA TOESLAG
              // CASE: WRK.switch PWA toeslag is 1
             MDPWARM(#1AACD:#1AFNB:RMPAR:WUA3CF);
               If WUA3CF = '1';
                // Send message 'Refertemaand WAtoeslag va'
         ZAMSID = 'USR4188';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
              // CASE: WRK.switch PWA toeslag is 2
             If WUA3CF = '2'; //*IF
                // Send message 'PWA-toeslag : geen volled'
         ZAMSID = 'USR4192';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
           ELSE;
              // CASE: *OTHERWISE
         WUA3CF = '0';                         switch PWA toes
           Endif; //*FI
            // DISPO
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8
            //   !- c1    : KEY.Vergoedbaarheidscode is 130B1
            //   !- c2    : KEY.Vergoedbaarheidscode is 130B2
            //   !- c3    : KEY.Vergoedbaarheidscode is 130B3
            //   !- c4    : KEY.Vergoedbaarheidscode is 130B4
            //   !- c5    : KEY.Vergoedbaarheidscode is 114,4
            //   !- c6    : KEY.Vergoedbaarheidscode is 130B7
            //   !- c7    : KEY.Vergoedbaarheidscode is 130B8
            //   !- c8    : KEY.Vergoedbaarheidscode is 130B9
            //   '-
           If #1MM01 = '130B1' OR #1MM01 = '130B2' OR #1MM01 = '130B3' OR #1MM01 = '130B4' OR #1MM01 = '114,4' OR #1MM01 = '130B7' OR #1MM01 = '130B8' OR #1MM01 = '130B9'; //*IF
         WUYLCF = 'Y';                         Wrk switch disp
              // Controle DISPO:+extern - Wkl betaling  *
         WUYMCF = '0';                         SWITCH DISPO TESTEN
             RMPAR = #1GWNB;
             //AFD
             //LIDNR
             //REF.MND
             //SWITCH DISPO TESTEN
              // CASE: WRK.Wrk switch dispo testen is 1
             MDDISPRM(#1AACD:#1AFNB:RMPAR:WUYMCF);
               If WUYMCF = '1';
         WUYLCF = '0';                         Wrk switch disp
             ELSE;
                // CASE: *OTHERWISE
                // CASE: WRK.Wrk switch dispo testen is 2
               If WUYMCF = '2'; //*IF
                  // Send message 'DISPO ]]]]'
         ZAMSID = 'USR4500';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
             Endif; //*FI
              // CASE: WRK.Wrk switch dispo testen is 2
             If WUYMCF = '2'; //*IF
                // Send message 'DISPO : geen voleldige ma'
         ZAMSID = 'USR4499';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
              // Dispo vanaf 10/2004
              // CASE: WRK.Wrk switch dispo is Y
             If WUYLCF = 'Y'; //*IF
                // CASE: KEY.Datum achterstal is < 200410
               If #1GWNB < 200410; //*IF
                  // Send message 'DISPO : barema's beschikb'
         ZAMSID = 'USR4502';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
               Endif; //*FI
             Endif; //*FI
           ELSE;
              // CASE: *OTHERWISE
         WUYLCF = '0';                         Wrk switch disp
         WUYMCF = '0';                         Wrk switch disp
           Endif; //*FI
         WUIQCD = '0';                         Sw type wklh
         #1BDST = 'Y';                         Geen bedrag wkl
         #1ISCD = 'Y';                         Geen uren ged.
         #1BCST = 'Y';                         Geen dagen/bedr
            // Fetch type protect:deel1 - Type protect  *
           //Fetch type prot
           //Type pr kode
           //Pr VD6
           //Pr HD6
           //Pr VD5
           //Pr HD5
           //Pr uren ged. wk
           //Pr geen uren ge
           //Pr volle BZ
           //Pr halve BZ

           LWKNXFR(W0RTN:WQ0183:WQ0184:WQ0185:WQ0186:WQ0187:WQ0188:WQ0189:WQ0190:WQ0191);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWKNXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
            // Fetch type protect:deel2 - Type protect  *
           //Fetch type prot
           //Type pr kode
           //Pr bedrag BZ
           //Pr geen dgn/bed
           //Pr volle verlof
           //Pr halve verlof
           //Pr volle BV
           //Pr halve BV
           //Pr volle vorst
           //Pr halve vorst

           LWKOXFR(W0RTN:WQ0192:WQ0193:WQ0194:WQ0195:WQ0196:WQ0197:WQ0198:WQ0199:WQ0200);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWKOXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
         WUMT08 = *BLANK;                         Wrk type active
           WUMT09 = *ZERO; //wrk bedrag acti
         WUMT10 = *BLANK;                         Wrk barema acti
         WUSCHE = '0';                         Wrk scherm acti
         WUW268 = '0';                         Switch268
         WUW269 = '0';                         Switch269
            // Protect zetten van velden bij dokwerker (beroep = 09)+rivierarbei
            // CASE: DTL.Beroep kode is 09 : Dok A'pen
           If #1BACD = '09'; //*IF
         WUIVCD = 'Y';                         Pr VD5
         WUIWCD = 'Y';                         Pr HD5
         WUITCD = 'N';                         Pr VD6
         WUIUCD = 'N';                         Pr HD6
         WUIZCD = 'N';                         Pr volle vorst
         WUKPCD = 'N';                         Pr halve vorst
           Endif; //*FI
            // Protect zetten v velden bij type kode= 05/25/24F/24w
            // CASE: DTL.Type wklh. kode is 05
           If #1A1CD = '05'; //*IF
         WUIQCD = '5';                         Sw type wklh
         WUCA10 = '5/7';                         Wrk switch type
         WUCA65 = @CN(022);                         switch betalen
           ELSE;
              // CASE: *OTHERWISE
              // CASE: DTL.Type wklh. kode is <> 07
             If #1A1CD <> '07'; //*IF
         WUIQCD = *BLANK;                         Sw type wklh
         WUCA10 = *BLANK;                         Wrk switch type
                // CASE: DTL.Type wklh. kode is 25
               If #1A1CD = '25'; //*IF
         WUCA65 = @CN(022);                         switch betalen
               ELSE;
                  // CASE: *OTHERWISE
                  // 24F+W
                  // CASE: DTL.Type wklh. kode is 24 : wisselkoerstoeslag
                 If #1A1CD = '24'; //*IF
         WUCA65 = @CN(022);                         switch betalen
                 ELSE;
                    // CASE: *OTHERWISE
         WUCA65 = *BLANK;                         switch betalen
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // BZ<>B ->protect dgn vorst; BZ=B en type nt 02/04->pr zetten dgn v
            // CASE: DTL.BZ kode is <> B
           If #1A4CD <> 'B'; //*IF
         WUIZCD = 'N';                         Pr volle vorst
         WUKPCD = 'N';                         Pr halve vorst
           ELSE;
              // CASE: *OTHERWISE
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5
              //   !- c1    : DTL.Type wklh. kode is 02
              //   !- c2    : DTL.Type wklh. kode is 04
              //   !- c3    : DTL.Type wklh. kode is 06
              //   !- c4    : DTL.Type wklh. kode is 21
              //   !- c5    : DTL.Type wklh. kode is 18
              //   '-
             If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06' OR #1A1CD = '21' OR #1A1CD = '18'; //*IF
                // CASE: DTL.Type wklh. kode is 04
               If #1A1CD = '04'; //*IF
         WUIZCD = 'N';                         Pr volle vorst
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
         WUIZCD = 'N';                         Pr volle vorst
         WUKPCD = 'N';                         Pr halve vorst
             Endif; //*FI
           Endif; //*FI
            // Type 00,70,..,A.,B.,C.,D.,BZ=bl/TK/TT : protect zetten BZ zones/b
            // CASE:
            //  - c5ORc6ORc7ORc8ORc9ORc10ORc11ORc12ORc13ORc14
            //   !- c5    : DTL.BZ kode is TK
            //   !- c6    : DTL.BZ kode is = blank (gn kode BZ)
            //   !- c7    : DTL.BZ kode is TT
            //   !- c8    : DTL.Type wklh. kode is 00 : niet toelaatbaar
            //   !- c9    : DTL.Type wklh. kode is 71 :vrijwillig wklh
            //   !- c10   : DTL.Type wklh. kode is 72 :blijv.onmogelijkheid
            //   !- c11   : DTL.Type wklh. kode is 73 :in afwachting E301
            //   !- c12   : DTL.Type wklh. kode is 97
            //   !- c13   : DTL.Type wklh. kode is 70 :nt ingaan op uitnodig
            //   !- c14   : DTL.BZ kode is C2
            //   '-
           If #1A4CD = 'TK' OR #1A4CD = *BLANK OR #1A4CD = 'TT' OR #1A1CD = '00' OR #1A1CD = '71' OR #1A1CD = '72' OR #1A1CD = '73' OR #1A1CD = '97' OR #1A1CD = '70' OR #1A4CD = 'C2'; //*IF
         WUKMCD = 'N';                         Pr volle BZ
         WUKNCD = 'N';                         Pr halve BZ
         WUI1CD = 'N';                         Pr bedrag BZ
         WUI2CD = 'N';                         Pr geen dgn/bed
           Endif; //*FI
            // OCV barema ..ICLD. : R6/R6H input zetten
            // CASE: DTL.Barema RVAkode is ..ICLD.
           If #1DOCD = @CN(003); //*IF
         WUITCD = 'Y';                         Pr VD6
         WUIUCD = 'Y';                         Pr HD6
           Endif; //*FI
            // BZkod=VZ/DZ/FZ/PZ/15->protect zetten v alle velden behalve bedrag
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5
            //   !- c1    : DTL.BZ kode is VZ
            //   !- c2    : DTL.BZ kode is FZ
            //   !- c3    : DTL.BZ kode is PZ
            //   !- c4    : DTL.BZ kode is DZ
            //   !- c5    : DTL.BZ kode is 15
            //   '-
           If #1A4CD = 'VZ' OR #1A4CD = 'FZ' OR #1A4CD = 'PZ' OR #1A4CD = 'DZ' OR #1A4CD = '15'; //*IF
         WUI1CD = *BLANK;                         Pr bedrag BZ
         #1BDST = 'N';                         Geen bedrag wkl
         WUIQCD = '0';                         Sw type wklh
         WUKMCD = 'N';                         Pr volle BZ
         WUKNCD = 'N';                         Pr halve BZ
         WUI2CD = 'N';                         Pr geen dgn/bed
         WUIYCD = 'N';                         Pr geen uren ge
         WUIXCD = 'N';                         Pr uren ged. wk
         WURACD = 'N';                         Pr bedrag wklh
         WUKSCD = 'N';                         Pr volle BV
         WUKTCD = 'N';                         Pr halve BV
         WUKQCD = 'N';                         Pr volle verlof
         WUKRCD = 'N';                         Pr halve verlof
         WUIZCD = 'N';                         Pr volle vorst
         WUKPCD = 'N';                         Pr halve vorst
         WUITCD = 'N';                         Pr VD6
         WUIUCD = 'N';                         Pr HD6
         WUIVCD = 'N';                         Pr VD5
         WUIWCD = 'N';                         Pr HD5
           ELSE;
              // CASE: *OTHERWISE
         WURACD = 'Y';                         Pr bedrag wklh
           Endif; //*FI
            // BZkode=M/M1/35/85
            // CASE:
            //  - c1ORc2ORc3ORc4
            //   !- c1    : DTL.BZ kode is M
            //   !- c2    : DTL.BZ kode is M1
            //   !- c3    : DTL.BZ kode is 35
            //   !- c4    : DTL.BZ kode is 85
            //   '-
           If #1A4CD = 'M' OR #1A4CD = 'M1' OR #1A4CD = '35' OR #1A4CD = '85'; //*IF
         #1BDST = 'N';                         Geen bedrag wkl
         WUIYCD = 'N';                         Pr geen uren ge
         WUIXCD = 'N';                         Pr uren ged. wk
         WURACD = 'N';                         Pr bedrag wklh
         WUKSCD = 'N';                         Pr volle BV
         WUKTCD = 'N';                         Pr halve BV
         WUKQCD = 'N';                         Pr volle verlof
         WUKRCD = 'N';                         Pr halve verlof
         WUIZCD = 'N';                         Pr volle vorst
         WUKPCD = 'N';                         Pr halve vorst
         WUITCD = 'N';                         Pr VD6
         WUIUCD = 'N';                         Pr HD6
         WUIVCD = 'N';                         Pr VD5
         WUIWCD = 'N';                         Pr HD5
         WUKMCD = 'N';                         Pr volle BZ
         WUKNCD = 'N';                         Pr halve BZ
         WUI1CD = 'N';                         Pr bedrag BZ
              // Ophalen barema BZ MM13585 - Wkl betaling  *
     EvalR   WUN3CD = '0';                         SWITCH64
     C                   MOVEA     *IN(50)       UWIN              1
             If #1A4CD = 'M ' OR #1A4CD = 'M1' OR #1A4CD = '35' OR #1A4CD = '85';
               RMPAR = #1GWNB;
               MDMETDU(#1AACD:#1AFNB:RMPAR:#1A4CD:WUN3CD);
                 If WUN3CD = 'Y';
                 WULVND = 0;
               ELSE;
                 BZTER = 0;
                 HBZTER = 0;
                 WULVND = 0;
                 //REF.MND
                 //BZ KODE
                 //SWITCH
               MDBZ2(RMPAR:#1A4CD:WUN3CD:BZTER:HBZTER:WULVND);
                 ENDIF;
             ENDIF;
     C                   MOVEA     UWIN          *IN(50)
             #1GYNB = WULVND; //Bedrag BZ
              // CASE: WRK.Switch64 is Y
             If WUN3CD = 'Y'; //*IF
                // Send message 'M/M1/35/85 : reeds betaal'
         ZAMSID = 'USR6076';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

               #1GYNB = 0; //Bedrag BZ
         WUI1CD = 'Y';                         Pr bedrag BZ
             Endif; //*FI
           ELSE;
              // CASE: *OTHERWISE
           Endif; //*FI
            // BZkode=blank->Type13,14+Compl,15+dagbedr unprotect zetten v BZbed
            // CASE: DTL.BZ kode is = blank (gn kode BZ)
           If #1A4CD = *BLANK; //*IF
              // Type 15
              // CASE: DTL.Type kode is 15 : grensarbeiders
             If #1A1CD = '15'; //*IF
                // CASE: DTL.Dagbedrag is nt 0
               If #1DDNB <> *ZERO; //*IF
         WUI1CD = *BLANK;                         Pr bedrag BZ
         WUI2CD = *BLANK;                         Pr geen dgn/bed
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Subberoep=P : protect zetten van dagen BV/V
            // CASE: KEY.Subberoep kode is P
           If #1BCCD = 'P'; //*IF
         WUKSCD = 'N';                         Pr volle BV
         WUKTCD = 'N';                         Pr halve BV
         WUKQCD = 'N';                         Pr volle verlof
         WUKRCD = 'N';                         Pr halve verlof
           Endif; //*FI
            // BZ=BA : in te dienen in WB Gent WB=44
            // CASE:
            //  - c1ANDc3
            //   !- c1    : DTL.BZ kode is BA
            //   !- c3    : DTL.GWB nr is niet 44
            //   '-
         Y0CX01 = '0';            1
           If #1A4CD = 'BA'; //*IF
             If #1A2CD <> '44'; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // Send message 'Brandstoffenhandel vanaf'
         ZAMSID = 'USR2651';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Arb.ovk=7: in te dienen in WB Brugge WB=31
            // CASE:
            //  - c1ANDc3
            //   !- c1    : DTL.Arbeidsovk kode is 7
            //   !- c3    : DTL.GWB nr is niet 31
            //   '-
         Y0CX01 = '0';            1
           If #1A9CD = '7'; //*IF
             If #1A2CD <> '31'; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // Send message 'Zeevissers vanaf 09/2004'
         ZAMSID = 'USR4452';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         WUOWCE = '0';                         Sw wkl brugp ge
           WUG5NR = *ZERO; //Wrk inh.pct
            // Oph. inh.pct :bet.scherm - Werkloze brugpensioen  *
           CLEAR   PSRC;
     C                   MOVEL(P)  #1AACD        PSAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        PSAFNB                         Lid nr

           //Oph. inh.pct :b
           //KEY: Werkloze b
           //Wrk inh.pct
           //Sw wkl brugp ge
           //Wrk wrk code be

           LVK3XFR(W0RTN:PSRC:WQ0201:WQ0202:WQ0203);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVK3XFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
             *In31 = *On;
             *In32 = *On;
           Endif;
         WUSWBP = '0';                         sw brugp vanaf
         WUW275 = '0';                         Switch275
           #DVPBP = *ZERO; //Vermind.pct. br
            // CASE: KEY.Datum achterstal is <= 201003
           If #1GWNB <= 201003; //*IF
              // Testen F4 brugp. goed ingevuld en bestaat indien begin wkl>=19940
              // CASE:
              //  - c1ORc2ORc3ORc4
              //   !- c1    : KEY.Type wklh. kode is 09 : conv brugp voltijds
              //   !- c2    : KEY.Type wklh. kode is 10 : conv brugp deeltijds
              //   !- c3    : KEY.Type wklh. kode is 15 : grensarbeiders
              //   !- c4    : KEY.Type wklh. kode is 18 : halftijds brugpensio
              //   '-
             If #1A1CD = '09' OR #1A1CD = '10' OR #1A1CD = '15' OR #1A1CD = '18'; //*IF
                // CASE: KEY.Datum begin wkl is > of = 01/05/1994
               If #1AKDT >= 19940501; //*IF
                  // Geen scherm brugp. F4 gevonden: error; wel gevonden testen igv in
                  // CASE: WRK.Sw wkl brugp gev. is 1
                 If WUOWCE = '1'; //*IF
         WUSWBP = '1';                         sw brugp vanaf
                   #DVPBP = *ZERO; //Vermind.pct. br
                 ELSE;
                    // CASE: *OTHERWISE
                   #DVPBP = WUG5NR; //Vermind.pct. br
                    // Inh.%=0 en code betalen is niet Y ==>switch op 1
                    // CASE: KEY.Type wklh. kode is <> 15
                   If #1A1CD <> '15'; //*IF
                      // CASE: WRK.Wrk inh.pct is 0
                     If WUG5NR = 0; //*IF
                        // CASE: WRK.Wrk wrk code betalen is niet Y
                       If WUOVCE <> 'Y'; //*IF
         WUSWBP = '1';                         sw brugp vanaf
                       Endif; //*FI
                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           ELSE;
              // CASE: *OTHERWISE
             WUG5NR = *ZERO; //Wrk inh.pct
           Endif; //*FI
            // Switch BP=1 : werkloze brugpensioen F4 foutief
            // CASE: WRK.sw brugp vanaf 1/5/94 is EQ 1
           If WUSWBP = '1'; //*IF
              // Send message 'Werkl brugp. foutief'
         ZAMSID = 'USR1436';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // Arb.ovk=6 (BA) switch275=1
            // CASE: WRK.Wrk arb.ovk2 is 6
           If WUOUCE = '6'; //*IF
         WUW275 = '1';                         Switch275
           Endif; //*FI
         WUA199 = '0';                         Wrk veld 1 posi
           YRSW00 = 1;
           ZQ = 5;
           If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
           ELSE;
             WUA199 = %Subst(#1DOCD:ZQ:YRSW00); //Wrk veld 1 posi
     C   90              MOVEL     'Y2U0510'     W0RTN
           Endif;
            // Type 00 en data sanctie foutief of geen sanctie : error
            // CASE: DTL.Type wklh. kode is 00 : niet toelaatbaar
           If #1A1CD = '00'; //*IF
              // contr sanctie1en2 - Wkl betaling  *
         DTMSAN = *BLANK;
         WUYWCI = '0';            1
             RMPARM = #1GWNB;
             MDSANC2(#1AACD:#1AFNB:RMPARM:WUYWCI);
               If WUYWCI <> '0';
               JR001 = WUDA01 / 10000;
               DD001 = WUDA01;
               DDMM01 = WUDA01;
               MM001 = DDMM01 / 100;
     EvalR   DD001A = DD001;
     EvalR   MM001A = MM001;
     EvalR   JR001A = JR001;
         SLSAN1 = '/';
         SLSAN2 = '/';
             ENDIF;
     EvalR   WUESCK = DTMSAN;
             If WUVE01 = '132   ' OR WUVE02 = '132   ' OR WUVE03 = '132   ' OR WUVE04 = '132   ' OR WUVE05 = '132   ' OR WUVE06 = '132   ';
               If WUYWCI <> '0';
                  // WKL1768            MOVEL'4'       WUYWCI
         WUYWCI = '0';
               ENDIF;
             ENDIF;
              // CASE: WRK.Switch sanctie voorbij is 4
             If WUYWCI = '4'; //*IF
                // Setup message data for message
         ZA0015 = WUESCK;                         Wrk datum sanct
                // Send message '00-code vanaf  &1'
         ZAMSID = 'USR6605';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
              // CASE: WRK.Switch sanctie voorbij is nt 0
             If WUYWCI <> '0'; //*IF
                // CASE: WRK.Switch sanctie voorbij is nt 4
               If WUYWCI <> '4'; //*IF
                  // Setup message data for message
         ZA0016 = WUESCK;                         Wrk datum sanct
                  // Send message '00-code vanaf &1'
         ZAMSID = 'USR6508';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               Endif; //*FI
             Endif; //*FI
              // CASE: WRK.Switch sanctie voorbij is 3
             If WUYWCI = '3'; //*IF
                // CASE: WRK.error verg artikels is niet V
               If WUVTCK <> 'V'; //*IF
                  // Send message 'Type 00 en sanctie nt ing'
         ZAMSID = 'USR2530';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
               Endif; //*FI
             Endif; //*FI
              // CASE: WRK.Switch sanctie voorbij is 1
             If WUYWCI = '1'; //*IF
                // Send message 'Type 00 : sanctie nog nie'
         ZAMSID = 'USR2531';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
              // CASE: WRK.Switch sanctie voorbij is 2
             If WUYWCI = '2'; //*IF
                // Send message 'Type 00 : sanctie reeds v'
         ZAMSID = 'USR2532';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
         YRSW00 = 3;
         ZQ = 3;
         If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
         ELSE;
           WUUDCK = %Subst(#1DOCD:ZQ:YRSW00); //Wrk 3 t 5
     C   90              MOVEL     'Y2U0510'     W0RTN
         Endif;
         YRSW00 = 2;
         ZQ = 1;
         If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
         ELSE;
           WUDQCL = %Subst(#1DOCD:ZQ:YRSW00); //Wrk 1 t 2
     C   90              MOVEL     'Y2U0510'     W0RTN
         Endif;
         YRSW00 = 2;
         ZQ = 3;
         If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
         ELSE;
           WUEGCL = %Subst(#1DOCD:ZQ:YRSW00); //Wrk 3 t 4
     C   90              MOVEL     'Y2U0510'     W0RTN
         Endif;
          // CASE: WRK.Wrk 1 t 2 is ..
         If WUDQCL = '..'; //*IF
            // PH3/PH4/WH3/WH4 niet meer vanaf 01/2016
            // CASE: KEY.Datum achterstal is >= 201601
           If #1GWNB >= 201601; //*IF
              // CASE:
              //  - c1ORc2ORc3ORc4
              //   !- c1    : WRK.Wrk 3 t 5 is PH3
              //   !- c2    : WRK.Wrk 3 t 5 is PH4
              //   !- c3    : WRK.Wrk 3 t 5 is WH3
              //   !- c4    : WRK.Wrk 3 t 5 is WH4
              //   '-
             If WUUDCK = 'PH3' OR WUUDCK = 'PH4' OR WUUDCK = 'WH3' OR WUUDCK = 'WH4'; //*IF
                // Send message 'Barema foutief !'
         ZAMSID = 'USR1621';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // T/TA/TP
          // CASE:
          //  - c1ORc2ORc3ORc4
          //   !- c1    : WRK.Wrk 3 t 4 is TA
          //   !- c2    : WRK.Wrk 3 t 4 is TN
          //   !- c3    : WRK.Wrk 3 t 4 is T.
          //   !- c4    : WRK.Wrk 3 t 4 is TP
          //   '-
         If WUEGCL = 'TA' OR WUEGCL = 'TN' OR WUEGCL = 'T.' OR WUEGCL = 'TP'; //*IF
            // Contr vr 94.. altern lere - Wkl betaling  *
           RMPAR = #1GWNB;
         WUEHCL = 'N';            1
            // CASE: WRK.Switch vrijstelling 94 is N
           MDVRIJS7(#1AACD:#1AFNB:RMPAR:WUEHCL);
             If WUEHCL = 'N';
              // Send message 'Alt leren : vrijst NOK'
         ZAMSID = 'USR6874';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
         WUFECL = 'N';                         Wrk switch114&6
          // 114&6B
          // CASE:
          //  - c1ORc2ORc3ORc4ORc5ORc6
          //   !- c1    : WRK.Wrk 201211 art verg01 is 114&6B
          //   !- c2    : WRK.Wrk 201211 art verg02 is 114&6B
          //   !- c3    : WRK.Wrk 201211 art verg03 is 114&6B
          //   !- c4    : WRK.Wrk 201211 art verg04 is 114&6B
          //   !- c5    : WRK.Wrk 201211 art verg05 is 114&6B
          //   !- c6    : WRK.Wrk 201211 art verg06 is 114&6B
          //   '-
         If WUVE01 = @CN(023) OR WUVE02 = @CN(023) OR WUVE03 = @CN(023) OR WUVE04 = @CN(023) OR WUVE05 = @CN(023) OR WUVE06 = @CN(023); //*IF
         WUFECL = 'Y';                         Wrk switch114&6
            // Contr vr 94.. altern lere - Wkl betaling  *
           RMPAR = #1GWNB;
         WUEHCL = 'N';            1
            // CASE: WRK.Switch vrijstelling 94 is N
           MDVRIJS7(#1AACD:#1AFNB:RMPAR:WUEHCL);
             If WUEHCL = 'N';
              // Send message 'Alt leren : vrijst NOK'
         ZAMSID = 'USR6874';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
         YRSW00 = 1;
         ZQ = 3;
         If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
         ELSE;
           WULCCF = %Subst(#1DOCD:ZQ:YRSW00); //Wrk 1pos voor j
     C   90              MOVEL     'Y2U0510'     W0RTN
         Endif;
          // CASE: WRK.Wrk 1pos voor jongerenact is J
         If WULCCF = 'J'; //*IF
            // Hout- en stoffering kan niet : bz kode uitblanken
            // CASE: KEY.BZ kode is = I
           If #1A4CD = 'I'; //*IF
         #1A4CD = *BLANK;                         BZ kode
           Endif; //*FI
         Endif; //*FI
         WUZ2CO = '0';                         Switch type 21
         WUQZCE = 'XX';                         Wrk zone code
         WUUOCE = 'YY';                         wrk zone code2
          // Ophalen zonenr gebruiker - Gebruiker  *
         CLEAR   PTRC;
     C                   MOVEL(P)  ##USR         PTBLCD                         Gebruiker signo

         //Ophalen zonenr
         //KEY: Gebruiker
         //Wrk zone code

         LVMGXFR(W0RTN:PTRC:WQ0204);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVMGXFR';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
         Endif;
          // Error detected?
         If W0RTN <> *BLANK;
           *In99 = *On;
         Endif;
          // Gebruiker heeft enkel toelating voor zijn/haar zones
          // CASE: WRK.Wrk zone code is niet 00
         If WUQZCE <> '00'; //*IF
            // Fetch zone via afd:ex.ext - Gewest zone afdeling  *
           CLEAR   PURC;
     C                   MOVEL(P)  #1AACD        PUAACD                         Afdeling nr

           //Fetch zone via
           //KEY: Gewest zon
           //wrk zone code2

           LVQAXFR(W0RTN:PURC:WQ0205);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVQAXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
             *In31 = *On;
           Endif;
            // CASE: WRK.Wrk zone code NE WRK.wrk zone code2
           If WUQZCE <> WUUOCE; //*IF
              // Send message 'Gebruiker heeft geen toel'
         ZAMSID = 'USR3023';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
          // CASE:
          //  - c1ORc2ORc3ORc4ORc5ORc6ORc7
          //   !- c1    : DTL.Type wklh. kode is 02
          //   !- c2    : DTL.Type wklh. kode is 04
          //   !- c3    : DTL.Type wklh. kode is 06
          //   !- c4    : DTL.Type wklh. kode is 18
          //   !- c5    : DTL.Subberoep kode is X : activering
          //   !- c6    : DTL.Type wklh. kode is 21
          //   !- c7    : DTL.Subberoep kode is Y = Activering GI/GK
          //   '-
         If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06' OR #1A1CD = '18' OR #1BCCD = 'X' OR #1A1CD = '21' OR #1BCCD = 'Y'; //*IF
            // CASE:
            //  - c1ANDc2ANDc3
            //   !- c1    : DTL.Subberoep kode is niet R
            //   !- c2    : DTL.BZ kode is niet M
            //   !- c3    : DTL.BZ kode is niet M1
            //   '-
         Y0CX01 = '0';            1
           If #1BCCD <> 'R'; //*IF
             If #1A4CD <> 'M'; //*IF
               If #1A4CD <> 'M1'; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // CASE: PAR.param code bijpassing is Y = vanaf c14 werkbestand
             If P4BLCF = 'Y'; //*IF
                // Send message 'Bijpassing : duw F4'
         ZAMSID = 'USR4280';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Betaalscherm geblokkeerd'
         ZAMSID = 'USR4242';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
         WUSOCF = 'N';                         Switch integr g
         WUSPCF = 'N';                         Switch integr e
         WUSQCF = 'N';                         Switch integr b
         WUSRCF = 'N';                         switch integr e
         WUSSCF = *BLANK;                         wrk integratie
         WUSTCF = *BLANK;                         wrk integratie
         WUSUCF = *BLANK;                         wrk integratie
         WUSVCF = *BLANK;                         wrk integratie
          // Ophalen integratieperiode - Wkl betaling  *
         RMPAR = #1GWNB;
         //RRNRD1
         //RRNRD2
         //RRNRD3
         //REFMND
         //GEVONDEN
         //EINDMD INTEGR=REF.MN
         //BEGINMND=REFERTEMND
         //BEGINMND
         //BEGINDAG
         //EINDMND=REFERTEMND
         //EINDMND
         //EINDDG
          // Lid is overleden
          // CASE: WRK.Switch integr gevonden is Y
         MDINTEG2(#1AKNB:#1FGNB:#1FHNB:RMPAR:WUSOCF:WUSPCF:WUSQCF:WUSSCF:WUSTCF:WUSRCF:WUSUCF:WUSVCF);
           If WUSOCF = 'Y';
            // CASE: WRK.Switch integr eindmnd gev is Y
           If WUSPCF = 'Y'; //*IF
              // Setup message data for message
         ZA0017 = WUSUCF;                         wrk integratie
         ZA0018 = WUSVCF;                         wrk integratie
              // Send message 'betrokkene is overleden.'
         ZAMSID = 'USR4331';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           ELSE;
              // CASE: *OTHERWISE
              // CASE: WRK.switch integr eindmnd is Y
             If WUSRCF = 'Y'; //*IF
                // Setup message data for message
         ZA0019 = WUSUCF;                         wrk integratie
         ZA0020 = WUSVCF;                         wrk integratie
                // Send message 'betrokkene is  overleden'
         ZAMSID = 'USR4332';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
         WUS8CK = 'N';                         wrk switch l500
         WUXDCG = *BLANK;                         Sl15 lang L500
          // Ophalen L500maand - Wkl betaling  *
         RMPAR = #1GWNB;
         //RRNRD1
         //RRNRD2
         //RRNRD3
         //REFMND
         //GEVONDEN
         //SLEUTEL15LANG
         MDL500(#1AKNB:#1FGNB:#1FHNB:RMPAR:WUSOCF:WUXDCG);
           If WUSOCF <> 'Y';
           //RRNRD1
           //RRNRD2
           //RRNRD3
           //REFMND
           //GEVONDEN
           //SLEUTEL15LANG
         MDL500M1(#1AKNB:#1FGNB:#1FHNB:RMPAR:WUS8CK:WUXDCG);
           ENDIF;
          // CASE: WRK.Switch integr gevonden is Y
         If WUSOCF = 'Y'; //*IF
            // Send message 'L500 voor deze RM'
         ZAMSID = 'USR5112';
         ' = '*INFO;     ZAMSTP                         Message type
           EXSR ZASNMS;

         Endif; //*FI
          // Ophalen A950maand - Wkl betaling  *
         RMPAR = #1GWNB;
         RMPARX = RMPAR;            6
         //RRNRD1
         //RRNRD2
         //RRNRD3
         //REFMND
         //GEVONDEN
          // CASE: WRK.wrk switch l500 vorige md is Y
         MDA950(#1AKNB:#1FGNB:#1FHNB:RMPARX:WUSOCF);
           If WUS8CK = 'Y';
            // Send message 'L500 voor vorige RM'
         ZAMSID = 'USR6730';
         ' = '*INFO;     ZAMSTP                         Message type
           EXSR ZASNMS;

         Endif; //*FI
          // CASE: WRK.Switch integr gevonden is Y
         If WUSOCF = 'Y'; //*IF
            // Send message 'A950 voor deze RM'
         ZAMSID = 'USR5294';
         ' = '*INFO;     ZAMSTP                         Message type
           EXSR ZASNMS;

         Endif; //*FI
          // CASE:
          //  - c1ANDc2
          //   !- c1    : KEY.Type wklh. kode is 05
          //   !- c2    : KEY.Datum achterstal is >= 200507
          //   '-
         Y0CX01 = '0';            1
         If #1A1CD = '05'; //*IF
           If #1GWNB >= 200507; //*IF
         Y0CX01 = '1';
           Endif; //*FI
         Endif; //*FI
         If Y0CX01 = '1'; //*IF
            // Send message 'Betaalscherm geblokkeerd'
         ZAMSID = 'USR4242';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
          // CASE:
          //  - c1ORc2ORc3ORc4
          //   !- c1    : KEY.Type wklh. kode is 34
          //   !- c2    : KEY.Type wklh. kode is 44
          //   !- c3    : KEY.Type wklh. kode is = 16
          //   !- c4    : KEY.Type wklh. kode is = 17
          //   '-
         If #1A1CD = '34' OR #1A1CD = '44' OR #1A1CD = '16' OR #1A1CD = '17'; //*IF
         WUFNCL = 'N';                         Switch type1617
            // Contr 16/17/34/44 met WB - Wkl betaling  *
           RMPARM = #1GWNB;
            //                    CALL 'MDVLRG01'
            //                    PARM           #1AACD           AFD
            //                    PARM           #1AFNB           LIDNR
            //                    PARM           #1A1CD           TYPE
            //                    PARM           RMPARM           RM
            //                    PARM           WUFNCL
           //AFD
           //LIDNR
           //TYPE
           //BAREMA
           //RM
            // CASE: WRK.Switch type16173444 is Y
           MDVLRG02(#1AACD:#1AFNB:#1A1CD:#1DOCD:RMPARM:WUFNCL);
             If WUFNCL = 'Y';
              // Send message '05/2016 geen betaling mr'
         ZAMSID = 'USR6896';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
          // Controle vrijst. art.90 - Wkl betaling  *
         WUW305 = '0';
         RMPAR = #1GWNB;
         If #1A6CD = '90  ';
           VGBVAN = #1C9NB;
           VGBTOT = #1DANB;
           //BEGIN VRIJST
           //EINDE VRIJST
           //SWITCH305
         MDVRIJST(RMPAR:#1DOCD:VGBVAN:VGBTOT:WUW305);
           ELSE;
           If #1AYCE = '90  ';
             VGBVAN = #1MIDD;
             VGBTOT = #1MJDD;
             //BEGIN VRIJST
             //EINDE VRIJST
             //SWITCH305
           MDVRIJST(RMPAR:#1DOCD:VGBVAN:VGBTOT:WUW305);
             ENDIF;
         ENDIF;
          // CASE: WRK.Switch305 is N
         If WUW305 = 'N'; //*IF
            // Send message 'Geen geldig barema vrijst'
         ZAMSID = 'USR4729';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
          // CASE: WRK.Lansa of synon is L
         If WUHQCG = 'L'; //*IF
         WUHPCG = 'N';                         Wrk switch wkl.
            // CASE: DTL.Wkl rekening kode is Ander rekeningnr. wkl.
           If #1ARCD = 'Y'; //*IF
              // Bestaat wkl rekening? EEF - Wkl rekening  *
             CLEAR   PVRC;
     C                   MOVEL(P)  #1AACD        PVAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        PVAFNB                         Lid nr

             //Bestaat wkl rek
             //Wrk switch wkl.
             //KEY: Wkl rekeni

             LXO3XFR(W0RTN:WQ0206:PVRC);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXO3XFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
               *In31 = *On;
               *In32 = *On;
             Endif;
              // CASE: WRK.Wrk switch wkl.rek bestaa is N
             If WUHPCG = 'N'; //*IF
                // Send message 'Lid heeft geen wkl rekeni'
         ZAMSID = 'USR4701';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
         WUH0CG = 'N';                         Switch J/N
            // Lid geconverteerd? EEF - Conv.tabel SYNON-LANSA  *
           //Lid geconvertee
           //Afdeling nr
           //Lid nr
           //Switch J/N

           LXPDXFR(W0RTN:WQ0207:WQ0208:WQ0209);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXPDXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
             *In31 = *On;
             *In32 = *On;
           Endif;
            // CASE: WRK.Switch J/N is N
           If WUH0CG = 'N'; //*IF
              // Send message 'Lid werd niet geconvertee'
         ZAMSID = 'USR4710';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
          // CASE: KEY.Ontsl jjmm is NE *ZERO
         If #1AHNB <> *ZERO; //*IF
            // CASE: KEY.Datum achterstal GT KEY.Ontsl jjmm
           If #1GWNB > #1AHNB; //*IF
              // Bepaal ontslag + 3maand(2 - Wkl betaling  *
             PLMND = 3;
         FTFTXX = '0';            1
              // CASE: KEY.Datum achterstal GT WRK.wrk ontsl 6 lang
             MDADDMN2(#1AHNB:PLMND:WUJNNC:FTFTXX);
               If #1GWNB > WUJNNC;
                // Send message 'Lid is ontslag: refertema'
         ZAMSID = 'USR4988';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
         WURICG = 'NO';                         Wrk ASR F reden
          // Oph ASR's met reden F - Wkl betaling  *
         WURICG = 'NO';            2
         RMPAR = #1GWNB;
          // CASE: WRK.Wrk ASR F reden ingevuld? is JA
         MDMFAF(#1AACD:#1AFNB:#1A1CD:RMPAR:WURICG);
           If WURICG = 'JA';
         Endif; //*FI
          // CASE: WRK.Wrk ASR F reden ingevuld? is SI
         If WURICG = 'SI'; //*IF
            // Send message 'EC3A : reden verwerkt=F'
         ZAMSID = 'USR6552';
         ' = '*INFO;     ZAMSTP                         Message type
           EXSR ZASNMS;

         Endif; //*FI
          // BZ=B C32S bestaat nog niet voor deze periode van RM
          // CASE: DTL.BZ kode is B
         If #1A4CD = 'B'; //*IF
         WUD6CH = 'N';                         switch C32S
            // Controle of C3.2S bestaat - Wkl betaling  *
           RMPAR = #1GWNB;

            // INPUT
           //AFD
           //LIDNR
           //REF.MND
            // OUTPUT
           //SWITCH C32S
            // CASE: WRK.switch C32S is N
           MDC32S(#1AACD:#1AFNB:RMPAR:WUD6CH);
             If WUD6CH = 'N';
              // Send message 'C3.2S bestaat niet voor d'
         ZAMSID = 'USR5224';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
          // Controle BZ type barema - Wkl betaling  *
         RMPAR = #1GWNB;
         //VOLGNR GELDIGH
         //ACLVB OF RVA
         //FOUTKODE
          // CASE: WRK.Switch controles is 1
         MDALGBET(#1AACD:#1AFNB:#1A1CD:#1DOCD:#1A4CD:RMPAR:WUXUND:WUVMCJ:WUWUCJ);
           If WUWUCJ = '1';
            // Send message 'Type wklh BZ kode'
         ZAMSID = 'USR6364';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
          // CASE: WRK.Switch controles is 2
         If WUWUCJ = '2'; //*IF
            // CASE: DTL.Datum achterstal is >=201211
           If #1GWNB >= 201211; //*IF
              // Send message 'Barema BZ kode'
         ZAMSID = 'USR6365';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           ELSE;
              // CASE: *OTHERWISE
              // Send message 'Barema / kode BZ foutief'
         ZAMSID = 'USR6371';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
         Endif; //*FI
          // CASE: WRK.Switch controles is 3
         If WUWUCJ = '3'; //*IF
            // Setup message data for message
         ZA0021 = #1ALST;                         W1ma
         ZA0022 = #1AMST;                         W1di
         ZA0023 = #1ANST;                         W1wo
         ZA0024 = #1AOST;                         W1do
         ZA0025 = #1APST;                         W1vr
         ZA0026 = #1AQST;                         W1za
         ZA0027 = #1AKST;                         W1zo
            // Send message 'Weekreg. week1/ type fout'
         ZAMSID = 'USR0223';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
         WUFYCH = 'O';                         Wrk UTF8 Parame
         WUFXCH = *BLANK;                         Wrk UTF8 Parame
         WUFXCH = #1AMTX;                         Wrk UTF8 Parame
          // Controle UTF8 - Wkl betaling  *
         //VELD 100 LANG
         //FOUT
          // CASE: WRK.Wrk UTF8 Parameter out is E
         MDUTF8(WUFXCH:WUFYCH);
           If WUFYCH = 'E';
            // Send message 'UTF8 : Naam, adres, lokal'
         ZAMSID = 'USR5259';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
         WUFXCH = *BLANK;                         Wrk UTF8 Parame
         WUFXCH = #1ADNA;                         Wrk UTF8 Parame
          // Controle UTF8 - Wkl betaling  *
         //VELD 100 LANG
         //FOUT
          // CASE: WRK.Wrk UTF8 Parameter out is E
         MDUTF8(WUFXCH:WUFYCH);
           If WUFYCH = 'E';
            // Send message 'UTF8 : Naam, adres, lokal'
         ZAMSID = 'USR5259';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
         WUFXCH = *BLANK;                         Wrk UTF8 Parame
         WUFXCH = #1ABTX;                         Wrk UTF8 Parame
          // Controle UTF8 - Wkl betaling  *
         //VELD 100 LANG
         //FOUT
          // CASE: WRK.Wrk UTF8 Parameter out is E
         MDUTF8(WUFXCH:WUFYCH);
           If WUFYCH = 'E';
            // Send message 'UTF8 : Naam, adres, lokal'
         ZAMSID = 'USR5259';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
         #1BRCE = #1MM01;                         Wkl vergoedbaar
         WUCQCE = *BLANK;                         WRK vergoedbaar
          // WHT: type29 : subberoep=R
          // CASE:
          //  - c1ORc2
          //   !- c1    : DTL.Subberoep kode is R
          //   !- c2    : DTL.Type wklh. kode is 29 = werkhervatting
          //   '-
         If #1BCCD = 'R' OR #1A1CD = '29'; //*IF
         WUN4CH = '1';                         switch type29
           WUC5NU = *ZERO; //Bedrag type29
         WUN5CH = @CN(024);                         barema type29
            // WHT Type29 - Wkl betaling  *
           RMPAR = #1GWNB;
            // CASE: WRK.WRK vergoedbaarh.artikel is ingevuld
           MDTYPE29(#1AACD:#1AFNB:RMPAR:WUN4CH:WUC5NU:WUN5CH:WUCQCE);
             If WUCQCE <> *BLANK;
         #1BRCE = WUCQCE;                         Wkl vergoedbaar
           Endif; //*FI
            // Type 29 : gn act periode, dubbele betaling, barema opvullen, ....
            // CASE: WRK.switch type29 is 1
           If WUN4CH = '1'; //*IF
              // Send message 'WHT : gn actieve periode'
         ZAMSID = 'USR5492';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           ELSE;
              // CASE: *OTHERWISE
              // CASE: WRK.switch type29 is 3
             If WUN4CH = '3'; //*IF
                // Send message 'WHT : reeds betaald'
         ZAMSID = 'USR5491';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

               #1HPNB = WUC5NU; //Bedrag wkl
         #1DOCD = WUN5CH;                         Barema RVAkode
             ELSE;
                // CASE: *OTHERWISE
               #1HPNB = WUC5NU; //Bedrag wkl
         #1DOCD = WUN5CH;                         Barema RVAkode
             Endif; //*FI
              // CASE: DTL.Barema RVAkode is ..??...
             If #1DOCD = @CN(024); //*IF
                // Send message 'WHT : gn actieve periode'
         ZAMSID = 'USR5492';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
            // CASE:
            //  - c1ORc2
            //   !- c1    : WRK.switch type29 is I
            //   !- c2    : WRK.switch type29 is B
            //   '-
           If WUN4CH = 'I' OR WUN4CH = 'B'; //*IF
              // Send message 'WHT : verlenginsgaanvraag'
         ZAMSID = 'USR5628';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

             #1HPNB = WUC5NU; //Bedrag wkl
         #1DOCD = WUN5CH;                         Barema RVAkode
           Endif; //*FI
            // CASE:
            //  - c1ORc2
            //   !- c1    : WRK.switch type29 is J
            //   !- c2    : WRK.switch type29 is B
            //   '-
           If WUN4CH = 'J' OR WUN4CH = 'B'; //*IF
              // Send message 'WHT : Er is reeds een WHT'
         ZAMSID = 'USR6043';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

             #1HPNB = WUC5NU; //Bedrag wkl
         #1DOCD = WUN5CH;                         Barema RVAkode
           Endif; //*FI
         Endif; //*FI
          // Werkhervatting :  pas vanaf 50 jaar (acco : geen leeftijdsgrens)
          // CASE:
          //  - c1ORc2
          //   !- c1    : KEY.Subberoep kode is R
          //   !- c2    : KEY.Type wklh. kode is 29 = werkhervatting
          //   '-
         If #1BCCD = 'R' OR #1A1CD = '29'; //*IF
            // CASE: WRK.barema type29 is niet ..C....
           If WUN5CH <> @CN(025); //*IF
              // type29: vanaf 50 jaar - Wkl betaling  *
         WUWU48 = '0';
             TSTLFT = 50;
             RMPAR = #1GWNB;
             //AFD
             //LIDNR
             //REF.MND
             //TEST LEEFTIJD
             //SWITCH148
              // CASE: WRK.Switch148 is N
             MDLEEFT4(#1AACD:#1AFNB:RMPAR:TSTLFT:WUWU48);
               If WUWU48 = 'N';
                // Send message 'WHT : lid is nog geen 50'
         ZAMSID = 'USR5687';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Kinderopvang type50/subberoep K : controle actieve periode+betale
          // CASE: DTL.Subberoep kode is K
         If #1BCCD = 'K'; //*IF
           YRSW00 = 1;
           ZQ = 4;
           If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
           ELSE;
             WUMTCH = %Subst(#1DOCD:ZQ:YRSW00); //Pos04 van barem
     C   90              MOVEL     'Y2U0510'     W0RTN
           Endif;
            // CASE: WRK.Pos04 van barema testen is niet A
           If WUMTCH <> 'A'; //*IF
              // CASE: DTL.Barema RVAkode is nt .......
             If #1DOCD <> @CN(011); //*IF
                // Send message 'Kinderopvang : geen gezin'
         ZAMSID = 'USR5439';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
           Endif; //*FI
         WUK8CH = '1';                         switch type50
           WUTSNC = 0; //Bedrag type50
         WUK9CH = @CN(026);                         barema type 50
            // kinderopvang Type50 - Wkl betaling  *
           RMPAR = #1GWNB;
           //AFD
           //LIDNR
           //REF.MND
            // OUTPUT
            // CASE: WRK.WRK vergoedbaarh.artikel is ingevuld
           MDTYPE50(#1AACD:#1AFNB:RMPAR:WUK8CH:WUTSNC:WUK9CH:WUCQCE);
             If WUCQCE <> *BLANK;
         #1BRCE = WUCQCE;                         Wkl vergoedbaar
           Endif; //*FI
            // Type 50 : gn act periode, dubbele betaling, barema opvullen, ....
            // CASE: WRK.switch type50 is 1
           If WUK8CH = '1'; //*IF
              // Send message 'Kinderopvang:gn actieve p'
         ZAMSID = 'USR5401';
             EXSR ZASNMS;
             *In99 = *On;

           ELSE;
              // CASE: *OTHERWISE
              // CASE: WRK.switch type50 is 3
             If WUK8CH = '3'; //*IF
                // Send message 'Kinderopvang : reeds beta'
         ZAMSID = 'USR5402';
               EXSR ZASNMS;
               *In99 = *On;

             ELSE;
                // CASE: *OTHERWISE
               #1HPNB = WUTSNC; //Bedrag wkl
         #1DOCD = WUK9CH;                         Barema RVAkode
             Endif; //*FI
           Endif; //*FI
            // CASE: WRK.switch type50 is 4
           If WUK8CH = '4'; //*IF
              // Send message 'Kinderopvang : art.129bis'
         ZAMSID = 'USR5438';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
          // CASE: WRK.switch type51corona is Y
         If WUDRCN = 'Y'; //*IF
         ELSE;
            // CASE: *OTHERWISE
            // Crisispremie type51/subberoep T : controle actieve periode+betale
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.Subberoep kode is T
            //   !- c2    : DTL.Type wklh. kode is 51
            //   '-
           If #1BCCD = 'T' OR #1A1CD = '51'; //*IF
              // CASE: DTL.Barema RVAkode is nt .......
             If #1DOCD <> @CN(011); //*IF
                // Send message 'Crisispremie : infomessag'
         ZAMSID = 'USR5618';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
         WUK8CH = '1';                         switch type50
             WUTSNC = 0; //Bedrag type50
         WUK9CH = @CN(011);                         barema type 50
              // Crisipremie arbeiders - Wkl betaling  *
             RMPAR = #1GWNB;
         WUR9CH = '0';
         WUK8CH = '0';
             //AFD
             //LIDNR
             //REF.MND
              // OUTPUT
             //VOLGNR

             MDTYP51D(#1AACD:#1AFNB:RMPAR:WUR9CH:WUAQND);
               If WUR9CH = '1';
               //AFD
               //LIDNR
               //REF.MND
               //VOLGNR
                // OUTPUT
             MDTYPE51(#1AACD:#1AFNB:RMPAR:WUAQND:WUK8CH:WUTSNC:WUK9CH:WUCQCE:WUSFCH);
               ENDIF;
              // CASE: WRK.Wrk switcht51-2 is Y
             If WUSFCH = 'Y'; //*IF
                // Send message 'Type 51 : info : reeds be'
         ZAMSID = 'USR5653';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
              // CASE: WRK.Wrk switchT51 is B
             If WUR9CH = 'B'; //*IF
                // Send message 'Type 51 : te veel B's'
         ZAMSID = 'USR5644';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
              // CASE: WRK.Wrk switchT51 is A
             If WUR9CH = 'A'; //*IF
                // Send message 'Type 51 : te veel A's'
         ZAMSID = 'USR5645';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
              // CASE: WRK.Wrk switchT51 is X
             If WUR9CH = 'X'; //*IF
                // Send message 'Type 51 : geen A of B's'
         ZAMSID = 'USR5646';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
              // CASE: WRK.WRK vergoedbaarh.artikel is ingevuld
             If WUCQCE <> *BLANK; //*IF
         #1BRCE = WUCQCE;                         Wkl vergoedbaar
             Endif; //*FI
              // Type 51 : gn act periode, dubbele betaling, barema opvullen, ....
              // CASE: WRK.switch type50 is 1
             If WUK8CH = '1'; //*IF
                // Send message 'Crisispremie : gn act per'
         ZAMSID = 'USR5619';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             ELSE;
                // CASE: *OTHERWISE
               #1HPNB = WUTSNC; //Bedrag wkl
         #1DOCD = WUK9CH;                         Barema RVAkode
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Ontslaguitk. type52/subberoep D : controle actieve periode+betale
          // CASE:
          //  - c1ORc2
          //   !- c1    : DTL.Subberoep kode is D
          //   !- c2    : DTL.Type wklh. kode is 52
          //   '-
         If #1BCCD = 'D' OR #1A1CD = '52'; //*IF
            // CASE: DTL.Barema RVAkode is nt .......
           If #1DOCD <> @CN(011); //*IF
              // Send message 'Ontslaguitk. : infomessag'
         ZAMSID = 'USR6095';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
         WUK8CH = '1';                         switch type50
           WUTSNC = 0; //Bedrag type50
         WUK9CH = @CN(011);                         barema type 50
            // Ontslaguitkering arbeider - Wkl betaling  *
           RMPAR = #1GWNB;
         WUR9CH = '0';
         WUK8CH = '0';
           //VOLGNR
           MDTYP52D(#1AACD:#1AFNB:RMPAR:WUR9CH:WUAQND);
             If WUR9CH = '1';
             //VOLGNR
           MDTYPE52(#1AACD:#1AFNB:RMPAR:WUAQND:WUK8CH:WUTSNC:WUK9CH:WUCQCE:WUSFCH);
             ENDIF;
            // CASE: WRK.Wrk switcht51-2 is Y
           If WUSFCH = 'Y'; //*IF
              // Send message 'Type 52 : info : reeds be'
         ZAMSID = 'USR6097';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // CASE: WRK.Wrk switchT51 is B
           If WUR9CH = 'B'; //*IF
              // Send message 'Type 52 : te veel B's'
         ZAMSID = 'USR6099';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // CASE: WRK.Wrk switchT51 is A
           If WUR9CH = 'A'; //*IF
              // Send message 'Type 52 : te veel A's'
         ZAMSID = 'USR6098';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // CASE: WRK.Wrk switchT51 is X
           If WUR9CH = 'X'; //*IF
              // Send message 'Type 52 : geen A of B's'
         ZAMSID = 'USR6096';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // CASE: WRK.WRK vergoedbaarh.artikel is ingevuld
           If WUCQCE <> *BLANK; //*IF
         #1BRCE = WUCQCE;                         Wkl vergoedbaar
           Endif; //*FI
            // Type 51 : gn act periode, dubbele betaling, barema opvullen, ....
            // CASE: WRK.switch type50 is 1
           If WUK8CH = '1'; //*IF
              // Send message 'Ontslaguitk : gn act peri'
         ZAMSID = 'USR6100';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           ELSE;
              // CASE: *OTHERWISE
             #1HPNB = WUTSNC; //Bedrag wkl
         #1DOCD = WUK9CH;                         Barema RVAkode
              // CASE: WRK.switch type50 is 3
             If WUK8CH = '3'; //*IF
                // Send message 'Ontslaguitkering reeds be'
         ZAMSID = 'USR6101';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             ELSE;
                // CASE: *OTHERWISE
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Overgangspr type50/subberoep L : controle actieve periode+betalen
          // CASE: DTL.Subberoep kode is L
         If #1BCCD = 'L'; //*IF
           YRSW00 = 1;
           ZQ = 4;
           If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
           ELSE;
             WUMTCH = %Subst(#1DOCD:ZQ:YRSW00); //Pos04 van barem
     C   90              MOVEL     'Y2U0510'     W0RTN
           Endif;
            // CASE: WRK.Pos04 van barema testen is niet L
           If WUMTCH <> 'L'; //*IF
              // CASE: DTL.Barema RVAkode is nt .......
             If #1DOCD <> @CN(011); //*IF
                // Send message 'Overstappremie'
         ZAMSID = 'USR6402';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
           Endif; //*FI
         WUK8CH = '1';                         switch type50
           WUTSNC = 0; //Bedrag type50
         WUK9CH = @CN(024);                         barema type 50
            // overgangspremie T50 - Wkl betaling  *
           RMPAR = #1GWNB;
           //AFD
           //LIDNR
           //REF.MND
            // OUTPUT
            // CASE: WRK.WRK vergoedbaarh.artikel is ingevuld
           MDTYP50I(#1AACD:#1AFNB:RMPAR:WUK8CH:WUTSNC:WUK9CH:WUCQCE);
             If WUCQCE <> *BLANK;
         #1BRCE = WUCQCE;                         Wkl vergoedbaar
           Endif; //*FI
            // Type 50 : gn act periode, dubbele betaling, barema opvullen, ....
            // CASE: WRK.switch type50 is 1
           If WUK8CH = '1'; //*IF
              // Send message 'Kinderopvang:gn actieve p'
         ZAMSID = 'USR5401';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           ELSE;
              // CASE: *OTHERWISE
              // CASE: WRK.switch type50 is 3
             If WUK8CH = '3'; //*IF
                // Send message 'Kinderopvang : reeds beta'
         ZAMSID = 'USR5402';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             ELSE;
                // CASE: *OTHERWISE
               #1HPNB = WUTSNC; //Bedrag wkl
         #1DOCD = WUK9CH;                         Barema RVAkode
             Endif; //*FI
           Endif; //*FI
            // CASE: WRK.switch type50 is 4
           If WUK8CH = '4'; //*IF
           Endif; //*FI
         Endif; //*FI
          // OCV type53/subberoep N : ophalen bedrag
          // CASE: DTL.Subberoep kode is N
         If #1BCCD = 'N'; //*IF
         WUK8CH = '1';                         switch type50
           WUTSNC = 0; //Bedrag type50
         WUK9CH = WUWLCJ;                         barema type 50
            // OCV T53 - Wkl betaling  *
           RMPAR = #1GWNB;
           //AFD
           //LIDNR
           //VOLGNR
            // OUTPUT
           //BEDRAG
           //BAREMA
           MDTYP53K(#1AACD:#1AFNB:WUNRNR:WUTSNC:WUK9CH);
             #1HPNB = WUTSNC;
         #1DOCD = WUK9CH;                         Barema RVAkode
         Endif; //*FI
          // CASE: DTL.Type wklh. kode is 01 : volledig werkloos
         If #1A1CD = '01'; //*IF
            // Contr actieve per kindero - Wkl betaling  *
           RMPAR = #1GWNB;
           MDTYP50B(#1AACD:#1AFNB:RMPAR:WUK8CH);
             If WUK8CH <> '1';
             If WUK8CH <> '2';
             MDTYP29B(#1AACD:#1AFNB:RMPAR:WUK8CH);
               ENDIF;
           ENDIF;
            // CASE: WRK.switch type50 is 1
           If WUK8CH = '1'; //*IF
              // Send message 'Type01 en actieve period2'
         ZAMSID = 'USR5693';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // CASE: WRK.switch type50 is 2
           If WUK8CH = '2'; //*IF
              // Send message 'Type01 en actieve period3'
         ZAMSID = 'USR5777';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
         Endif; //*FI
          // CASE:
          //  - c1ORc2
          //   !- c1    : DTL.BZ kode is 29
          //   !- c2    : DTL.BZ kode is 79
          //   '-
         If #1A4CD = '29' OR #1A4CD = '79'; //*IF
            // CASE: DTL.Datum achterstal is < 200907
           If #1GWNB < 200907; //*IF
         #1A4CD = *BLANK;                         BZ kode
           ELSE;
              // CASE: *OTHERWISE
         WULKCH = 'N';                         switch leeftijd
              // Bepalen leeftijd BZ=29/79 - Wkl betaling  *
             RMPAR = #1GWNB;
             If #1ATNB = '1'; //MAN
               TSTLFT = 58;
             ELSE; //VROUW
               TSTLFT = 56;
             ENDIF;
             //'N' OF 'Y'
              // CASE: WRK.switch leeftijd 58 jaar is N
             MDLEEFT4(#1AACD:#1AFNB:RMPAR:TSTLFT:WULKCH);
               If WULKCH = 'N';
         #1A4CD = *BLANK;                         BZ kode
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Controle dispo actief - Wkl betaling  *
         WUK6CH = '0';
         RMPAR = #1GWNB;
          // CASE: WRK.Switch sanctie is Y
         MDVWDIS(#1AACD:#1AFNB:RMPAR:WUK6CH);
           If WUK6CH = 'Y';
            // Send message 'Geen betaling mogelijk :'
         ZAMSID = 'USR5407';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
         WULQCH = '0';                         switch 114Â§7
         YRSW00 = 1;
         ZQ = 5;
         If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
         ELSE;
           WULLCH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk pos5 barema
     C   90              MOVEL     'Y2U0510'     W0RTN
         Endif;
          // CASE: WRK.Wrk pos5 barema - suffix is 9
         If WULLCH = '9'; //*IF
            // contr verg 114Â§7 - Wkl betaling  *
           RMPAR = #1GWNB;
            // CASE: WRK.switch 114Â§7 is 1
           MDV1147(#1AACD:#1AFNB:RMPAR:WULQCH);
             If WULQCH = '1';
              // Send message 'Verg.art 114Â§7 buiten per'
         ZAMSID = 'USR5416';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.Type wklh. kode is 01 : volledig werkloos
            //   !- c2    : DTL.Type wklh. kode is 03 :vrijw.deeltijds 171.9
            //   '-
           If #1A1CD = '01' OR #1A1CD = '03'; //*IF
              // CASE: WRK.switch 114Â§7 is *
             If WULQCH = '*'; //*IF
             ELSE;
                // CASE: *OTHERWISE
         WULQCH = '9';                         switch 114Â§7
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Ophalen IBAN en BIC - Wkl betaling  *
         WUMBCH = 'N';
         TOEP = '002';              3
          // CASE: WRK.Switch iban betaalscherm is Y
         MDREKBET(#1AACD:#1AFNB:TOEP:IBANNR:BICCDE:WUMBCH);
           If WUMBCH = 'Y';
            // Send message 'IBAN/BIC foutief'
         ZAMSID = 'USR5430';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
          // Controle a052 - Wkl betaling  *
         RMPAR = #1GWNB;
         WUOSCH = '0';            1
         If RMPAR <> 999999;
         MDA052CO(#1AACD:#1AFNB:RMPAR:WUOSCH);
           ENDIF;
          // CASE: WRK.switch a052 is 1
         If WUOSCH = '1'; //*IF
            // Send message 'A052 : betaling'
         ZAMSID = 'USR5497';
         ' = '*INFO;     ZAMSTP                         Message type
           EXSR ZASNMS;

         Endif; //*FI
         WUYZCG = '0';                         switch verg. be
          // Ophalen verg art S04 - Wkl betaling  *
         WUEFCL = 'N';            1
         RMPAR = #1GWNB;
         If RMPAR >= 201211;
           //VOLGNR GELDIGH
           //ACLVB OF RVA
           MDALGBE2(#1AACD:#1AFNB:WUXUND:WUVMCJ:RMPAR:ART90:TYP90:BAR90:VGBVAN:VGBTOT);
             If ART90 = 'Y';
         ' = '90;      #1MM01
           ENDIF;

           //VOLGNR GELDIGH
           //ACLVB OF RVA
           MDALGBE3(#1AACD:#1AFNB:WUXUND:WUVMCJ:RMPAR:ART114);
             If ART114 = 'Y';
         WUEFCL = 'Y';
           ENDIF;
         ENDIF; //201211
          // CASE: KEY.Vergoedbaarheidscode is 90
         If #1MM01 = '90'; //*IF
            // Controle verg 90 - Wkl betaling  *
           RMPAR = #1GWNB;
           If RMPAR < 201211;
             VGBVAN = #1O6DD;
             VGBTOT = 20991231;
             If #1O7DD > 0;
               VGBTOT = #1O7DD;
             ENDIF;
           ENDIF;
           //SWITCH VERG BETALEN
            // CASE: WRK.switch verg. betalen is N
           MDVERG2(RMPAR:VGBVAN:VGBTOT:#1DOCD:WUYZCG);
             If WUYZCG = 'N';
              // Send message 'Verg 90 : einde vrijst so'
         ZAMSID = 'USR5677';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
            // CASE: WRK.switch verg. betalen is I
           If WUYZCG = 'I'; //*IF
              // Send message 'Bedrag wklh zelf ber (90)'
         ZAMSID = 'USR5678';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // CASE: WRK.switch verg. betalen is E
           If WUYZCG = 'E'; //*IF
              // Send message 'vrijst90:verlenging vrage'
         ZAMSID = 'USR5719';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
         Endif; //*FI
          // CASE: DTL.Type wklh. kode is 29 = werkhervatting
         If #1A1CD = '29'; //*IF
            // CASE: DTL.Vergoedbaarheidscode is 55,6
           If #1MM01 = '55,6'; //*IF
             WUBRND = #1O6DD / 100; //Wrk maand1
              // CASE: DTL.Werkloze DTD vrij2 is ingevuld
             If #1O7DD <> *ZERO; //*IF
               WUBSND = #1O7DD / 100; //Wrk maand 2
             ELSE;
                // CASE: *OTHERWISE
               WUBSND = 209912; //Wrk maand 2
             Endif; //*FI
              // CASE:
              //  - c1ANDc2
              //   !- c1    : KEY.Datum achterstal GE WRK.Wrk maand1
              //   !- c2    : KEY.Datum achterstal LE WRK.Wrk maand 2
              //   '-
         Y0CX01 = '0';            1
             If #1GWNB >= WUBRND; //*IF
               If #1GWNB <= WUBSND; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
                // Send message 'WHT : met LBO/tijdskredie'
         ZAMSID = 'USR5756';
               EXSR ZASNMS;
               *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
         WUKTCI = '0';                         Wrk switch ipa2
          // Controles ipa2011B - Wkl betaling  *
         RMPAR = #1GWNB;
         //AFD
         //LIDNR
         //REF.MND
          // CASE: WRK.Switch64 is Y
         MDIPA11B(#1AACD:#1AFNB:RMPAR:WUKTCI);
           If WUN3CD = 'Y';
            // Send message 'M/M1/35/85 : reeds betaal'
         ZAMSID = 'USR6076';
         ' = '*INFO;     ZAMSTP                         Message type
           EXSR ZASNMS;

         Endif; //*FI
          // CASE: DTL.Type wklh. kode is 79
         If #1A1CD = '79'; //*IF
            // Send message 'Type wklh. : niet vergoed'
         ZAMSID = 'USR2979';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
          // Controles inschakelingsui - Wkl betaling  *
         RMPAR = #1GWNB;
         WUQTCJ = '0';
         //AFD
         //LIDNR
         //TYPE
         //LIDNR
         //REF.MND
          // CASE: WRK.switch inschakelings001 is 1
         MDINS001(#1AACD:#1AFNB:#1A1CD:#1DOCD:RMPAR:WUQTCJ);
           If WUQTCJ = '1';
            // Send message 'insch : pas vanf 01/2012'
         ZAMSID = 'USR6296';
           EXSR ZASNMS;
           *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
         Endif; //*FI
          // KARINA  Ophalen betaaldatum
          // Ophalen datum bet EEF - Wkl controle  *
         //Ophalen datum b
         //Wrk veld 1 posi
         //Wrk datum betal

         LWGBXFR(W0RTN:WQ0210:WQ0211);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWGBXFR';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
         Endif;
          // Error detected?
         If W0RTN <> *BLANK;
           *In99 = *On;
         Endif;
          // Controle WB - Wkl betaling  *
         WUZICJ = 'NN';
         If #1GWNB <= 202412;
           //AFD.NR.
           //LID.NR.
           //WB-NR.
           //BZ KODE
           //FOUT
         MDWB001(#1AACD:#1AFNB:#1A2CD:#1A4CD:WUZICJ);
           ELSE;
           //AFD.NR.
           //LID.NR.
           //WB-NR.
           //BZ KODE
           //FOUT
         MDWB101(#1AACD:#1AFNB:#1A2CD:#1A4CD:WUZICJ);
           ENDIF;
          // CASE: WRK.Switch WB foutief is HA
         If WUZICJ = 'HA'; //*IF
         Endif; //*FI
          // Kinderopvangtoeslag niet meer mogelijk vanaf 01/2020 in Brussel
          // CASE: DTL.Type wklh. kode is 50
         If #1A1CD = '50'; //*IF
            // CASE: DTL.GWB nr is 21
           If #1A2CD = '21'; //*IF
              // Send message 'Betaling nt mogelijk gewe'
         ZAMSID = 'USR7116';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
          // CASE:
          //  - c1ORc2
          //   !- c1    : DTL.Type wklh. kode is 09 : conv brugp voltijds
          //   !- c2    : DTL.Type wklh. kode is 10 : conv brugp deeltijds
          //   '-
         If #1A1CD = '09' OR #1A1CD = '10'; //*IF
            // CASE: DTL.GeÃ¯ntegreerd is blank
           If #1ATCE = *BLANK; //*IF
              // Send message 'SWT : controlekeert verpl'
         ZAMSID = 'USR6418';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           Endif; //*FI
         Endif; //*FI
          // CASE: KEY.Datum achterstal is < 201401
         If #1GWNB < 201401; //*IF
         WUYOCI = 'N';                         Switch toelatin
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5
            //   !- c1    : JOB.*USER is kim
            //   !- c2    : JOB.*USER is nancy
            //   !- c3    : JOB.*USER is JOHAN
            //   !- c4    : JOB.*USER is KARINA
            //   !- c5    : JOB.*USER is rvdswkl
            //   '-
           If ##USR = 'KIM' OR ##USR = 'NANCY' OR ##USR = 'JOHAN' OR ##USR = @CN(027) OR ##USR = @CN(028); //*IF
         WUYOCI = 'Y';                         Switch toelatin
              // CASE: KEY.Datum achterstal is < 201301
             If #1GWNB < 201301; //*IF
         WUYOCI = 'N';                         Switch toelatin
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // CASE: DTL.Type wklh. kode is 29 = werkhervatting
         If #1A1CD = '29'; //*IF
            // Check gewest - Wkl betaling  *
         WUZ0CL = 'N';
         WUZ1CL = 'N';
         WUZ2CL = 'N';
         WBWB = #1A2CD;

           //SWITCH VLAAMS
           //SWITCH WAALS
           //SWITCH BXL
         MDGEWES(WBWB:WUZ0CL:WUZ1CL:WUZ2CL);
           Endif;
          // CASE: WRK.Wrk er is een fout is N
         If WUX5CM = 'N'; //*IF
            // check of lidnr al betaald - Wkl betaling  *
           RMPARM = #1GWNB;
           MDBET306(#1AACD:#1AFNB:RMPARM:WUX4CM:JJOBNR:JJUSER);
             WUDONG = ##JNO;
            // CASE: WRK.switch betaling bezig is Y
           If WUX4CM = 'Y'; //*IF
              // Send message 'Collega bezig mt betaling'
         ZAMSID = 'USR7267';
             EXSR ZASNMS;
             *In99 = *On;

         WUX5CM = 'Y';                         Wrk er is een f
           ELSE;
              // CASE: *OTHERWISE
              // CASE: WRK.switch betaling bezig is T
             If WUX4CM = 'T'; //*IF
                // Send message 'Collega doet betaling'
         ZAMSID = 'USR7268';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             ELSE;
                // CASE: *OTHERWISE
                // Toevoegen wie betaalt - Wkl betaling  *
               RMPARM = #1GWNB;
         JJUSER = ##USR;           10
             MDBET307(#1AACD:#1AFNB:RMPARM:WUDONG:JJUSER);
               Endif;
           Endif; //*FI
         Endif; //*FI
         WUL6ND = #1GWNB; //Wrk RM key scre
          // CASE: DTL.Krediet BZ is < 0
         If #1BDNB < *ZERO; //*IF
            // Send message 'Kredietdagen < 0'
         ZAMSID = 'USR1665';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
          // protect zetten van bedrag wklh bij type 51 eindejaarspremie TW
          // CASE:
          //  - c1ORc2
          //   !- c1    : WRK.switch type51corona is Y
          //   !- c2    : DTL.Type wklh. kode is 51
          //   '-
         If WUDRCN = 'Y' OR #1A1CD = '51'; //*IF
         WURACD = 'N';                         Pr bedrag wklh
         Endif; //*FI
          // CASE: JOB.*USER is TYPE5L
         If ##USR = @CN(002); //*IF
            // CASE: DTL.Datum achterstal is 202103
           If #1GWNB = 202103; //*IF
           ELSE;
              // CASE: *OTHERWISE
              // Setup message data for message
              // Convert Datum achterstal to external.

             UIDTM2 = #1GWNB;
             UDTMC2 = UDTM12;
             UDTMY2 = UDTM22;
             UDTMM2 = UDTM32;
             ZA0028 = UEDTM2;
              // Send message 'Refertemaand foutief !'
         ZAMSID = 'USR1559';
             EXSR ZASNMS;
             *In99 = *On;
             *In33 = *On;

           Endif; //*FI
         Endif; //*FI
          // CASE: KEY.Datum achterstal is >= 202210
         If #1GWNB >= 202210; //*IF
           YRSW00 = 2;
           ZQ = 5;
           If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
           ELSE;
             WUHVCN = %Subst(#1DOCD:ZQ:YRSW00); //Wrk barema posi
     C   90              MOVEL     'Y2U0510'     W0RTN
           Endif;
           YRSW00 = 3;
           ZQ = 3;
           If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
           ELSE;
             WUJ6CJ = %Subst(#1DOCD:ZQ:YRSW00); //Wrk barema posi
     C   90              MOVEL     'Y2U0510'     W0RTN
           Endif;
            // CASE: WRK.Wrk barema positie5t6 is 14
           If WUHVCN = '14'; //*IF
              // CASE: WRK.Wrk barema positie3 is A
             If WUJ6CJ = 'A'; //*IF
                // Send message 'Barema foutief !'
         ZAMSID = 'USR1621';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // ophalen WBs vnf 2025 - Wkl betaling  *
         RMPARM = #1GWNB;
         WBININ = #1A2CD;            2
         WBOUOU = #1A2CD;            2
         WUOTCN = 'N';            1            MEERDERE WB'S?
          //                    CALL 'MDWB025D'
          //                    PARM           #1AACD
          //                    PARM           #1AFNB
          //                    PARM           RMPARM

          //                    PARM           WUDVCL           10 WB'S
          //                    PARM           WUW3CK           5 REDENS
          //                    PARM           WUW4CK           NOG 5 REDENS
          //                    PARM           WUOTCN  1        1 OF MEER WB'S
          //                    PARM           WUBBBB  2        WB UIT F4
         MDWB025A(WBININ:RMPARM:WBOUOU);
           If WBININ <> WBOUOU;
         #1A2CD = WBOUOU;
         ENDIF;
          // Fusies WB:WB ok?of popup? - Wkl betaling  *
         RMPAMR = #1GWNB;
         WUO5CN = 'Y';                         VERSCHIL
         WUO6CN = 'Y';                         VERSCHIL
         //VERSCHIL
         //FOUT

     EvalR   WUPJCN = WBUAUA;            2            WB UA VR BETALING
          //                                                    INGEVAL VERSCH = X
     EvalR   WUPKCN = WBF4F4;            2            WB F4
          // CASE: WRK.Wrk verschil in WB is Y
         If WUO5CN = 'Y'; //*IF
            // Prompt voor fouten/info - Foutenlijsten pop-up  *
           CLEAR   PCRC;
     C                   MOVEL(P)  @CN(029)      PCJECL                         Foutenlijsten T
     C                   MOVEL(P)  WUYXCJ        PCJFCL                         Foutenlijsten t

           //Prompt voor fou
           //KEY: Foutenlijs

           L0ALPVR(W0RTN:PCRC);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'L0ALPVR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
         Endif; //*FI
          // CASE: WRK.Wrk fout in WB is Y
         If WUO6CN = 'Y'; //*IF
            // Send message 'WB, ond.afd foutief'
         ZAMSID = 'USR3031';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
          // CASE: WRK.Wrk verschil in WB is X
         If WUO5CN = 'X'; //*IF
         #1A2CD = WUPJCN;                         GWB nr
            // Prompt voor fouten/info - Foutenlijsten pop-up  *
           CLEAR   PCRC;
     C                   MOVEL(P)  @CN(030)      PCJECL                         Foutenlijsten T
     C                   MOVEL(P)  WUYXCJ        PCJFCL                         Foutenlijsten t

           //Prompt voor fou
           //KEY: Foutenlijs

           L0ALPVR(W0RTN:PCRC);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'L0ALPVR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
            // Setup message data for message
         ZA0029 = WUPJCN;                         Wrk WBnr vr bet
         ZA0030 = WUPKCN;                         Wrk WBnr uit F4
            // Send message 'WB F4<>WB recentste betal'
         ZAMSID = 'USR7577';
         ' = '*INFO;     ZAMSTP                         Message type
           EXSR ZASNMS;

         Endif; //*FI
          // Afdeling nr required
         If #1AACD = *BLANK; //IF
           *In99 = *On;
           *In31 = *On;
            // Send message '*Value required'
         ZAMSID = 'Y2U0001';
         ZAMSGF = 'Y2USRMSG';
           EXSR ZASNMS;
         Endif; //FI
          // Lid nr required
         If #1AFNB = *BLANK; //IF
           *In99 = *On;
           *In32 = *On;
            // Send message '*Value required'
         ZAMSID = 'Y2U0001';
         ZAMSGF = 'Y2USRMSG';
           EXSR ZASNMS;
         Endif; //FI
          // Datum achterstal required
         If #1GWNB = *ZERO; //IF
           *In99 = *On;
           *In33 = *On;
            // Send message '*Value required'
         ZAMSID = 'Y2U0001';
         ZAMSGF = 'Y2USRMSG';
           EXSR ZASNMS;
         Endif; //FI
          //================================================================
       ENDSR;
       BEGSR BZROUT;
         BZTER = 0;
         HBZTER = 0;
         HMDTER = 0;
         RMPAR = #1GWNB;
         BZCDET = #1A4CD;            2
         If #1A4CD = 'H ' AND #1GWNB >= 201510;
           //REF.MND
           //RDEN E OF T
           //RDEN E OF T
           MDTW002(#1AACD:#1AFNB:RMPAR:WELET:NIETET);
             If WELET = 'N' AND NIETET = 'Y';
         BZCDET = 'H2';
           ENDIF;
           If WELET = 'Y' AND NIETET = 'Y';
         WUAYCL = '1';            1
         ' = ';          BZCDET
           ENDIF;
           If #1A1CD = '21' OR #1A1CD = '22';
         BZCDET = 'H2';
           ENDIF;
            //          #1AACD    IFEQ '62'
            //          #1AFNB    ANDEQ'015870'
            //          'LVNYUFR' DSPLY'ROSANNE'
            //          WELET     DSPLY'ROSANNE'
            //          NIETET    DSPLY'ROSANNE'
            //          BZCDET    DSPLY'ROSANNE'
            //          WUAYCL    DSPLY'ROSANNE'
            //                    ENDIF
         ENDIF;
         //REF.MND
          //                    PARM           #1A4CD           BZ KODE
         //BZ KODE
         //SWITCH
          //          #1AACD    IFEQ '62'
          //          #1AFNB    ANDEQ'015870'
          //          'LVNYUFR' DSPLY'ROSANNE'
          //          BZTER     DSPLY'ROSANNE'
          //          HBZTER    DSPLY'ROSANNE'
          //          HMDTER    DSPLY'ROSANNE'
          //                    ENDIF
       MDBZ2(RMPAR:BZCDET:WUN3CD:BZTER:HBZTER:HMDTER);
         ENDSR;
        //------------------------------------------------------------------------
       BEGSR BZROU1;
         EXSR BZROUT;
         EXSR BZROUA;
       ENDSR;
        //------------------------------------------------------------------------
       BEGSR BZROUA;
         If HALFHS = 0 AND VOLHS = 0;
           HBEDBZ = HVBZ * BZTER; //VOLLE DGN
           If HHBZ <> 0;
             SOMBZZ = HHBZ * HBZTER; //+1 HALVE DAG
             HBEDBZ = HBEDBZ + SOMBZZ;
           Endif; //DECIM BZ NT0
         Endif; //HALFHS=0
         If HALFHS <> 0 OR VOLHS <> 0;
           HBEDBZ = VOLHS * BZTER; //VOLLE DGN
           SOMBZZ = HALFHS * HBZTER; //+1 HALVE DAG
           HBEDBZ = HBEDBZ + SOMBZZ;
         Endif; //VOLHS=0
       ENDSR;

       BEGSR BZROU2;
         EXSR BZROUT;
         HBEDBZ = HMDTER; //VOLLE DGN
       ENDSR;

       BEGSR BZROU3;
         BZCDOU = #1A4CD;            2
         ' = 'E;          #1A4CD
         EXSR BZROUT;
         #1A4CD = BZCDOU;
         EXSR BZROUA;
       ENDSR;

       BEGSR BZROUM;
          //          'BZROUM'  DSPLY'ROSANNE'
         EXSR BZROUT;
         HVBZ = HVTOT6;
         HHBZ = HHTOT6;
          //          HVBZ      DSPLY'ROSANNE'
          //          HHBZ      DSPLY'ROSANNE'
          //          BZTER     DSPLY'ROSANNE'
          //          HBZTER    DSPLY'ROSANNE'
         HBEDBZ = HVBZ * BZTER; //VOLLE DGN
         If HHBZ <> 0;
           SOMBZZ = HHBZ * HBZTER; //+1 HALVE DAG
           HBEDBZ = HBEDBZ + SOMBZZ;
         Endif; //DECIM BZ NT0
          //          HBEDBZ    DSPLY'ROSANNE'
       ENDSR;
        //------------------------------------------------------------------------
       /EJECT
       BEGSR CADSDA;
          //================================================================
          // Display and process detail screen
          //================================================================
          // Conduct detail screen conversation
          // - repeat until screen control flag is reset:
         Dow W0TRN = 'Y';
            // Convert internal to external form
           EXSR MOCV#D;
            // Display detail screen
           EXSR CBEXFM;
            // Process response to detail screen
            // Cancel & exit program
     C   03              CAS                     ZXEXPG
            // Redisplay previous screen
     C   12              CAS                     CCDSPV
            // HOME: Reset screen fields
     C   30              CAS                     CCDSPV
            // Process detail screen input
     C                   CAS                     CFPRSC
         Enddo;
         If W0TRN = 'R';
           If W0PMD = 'ADD';
             EXSR MAIZ#1;
           Endif;
         Endif;

         
          //================================================================
       ENDSR;
       /EJECT
       BEGSR CBEXFM;
          //================================================================
          // Display screen and process HELP requests
          //================================================================
         Dou W0HLP = 'N' AND W0ROL = 'N';
         W0HLP = 'N';             1
     EvalR   HELP25 = *IN25;            1
     EvalR   ##OFF = *ALL'0';            30
     C                   MOVEA     ##OFF         *IN(1)
     EvalR   *IN25 = HELP25;
            // Set screen conditioning indicators
           EXSR GBDSAD;
            // PUTOVR unless conditioned fields change
           *In86 = *On;
           If *IN89 <> CBIN89;
             *In86 = *Off;
           Endif;
     EvalR   CBIN89 = *IN89;            1
            // Update screen time
           ##TME = %Time();
           If W0SCR = 1;
              // Set error
     C                   MOVEA     INSCR1        *IN(31)
         W0GRP = '1';             1
              // Set cursor by *SET CURSOR data
             If YSETCS = 'Y';
               EXSR Y1SET;
             Endif;
             WRITE #MSGCTL;
             WRITE #CMDTXT2;
             EXFMT #RCDDTL1;
              // Test cursor
             EXSR Y8TST;
           ELSE;
             If W0SCR = 2;
                // Set error
     C                   MOVEA     INSCR2        *IN(31)
         W0GRP = '2';             1
                // Set cursor by *SET CURSOR data
               If YSETCS = 'Y';
                 EXSR Y2SET;
               Endif;
               WRITE #MSGCTL;
               WRITE #CMDTXT3;
               EXFMT #RCDDTL2;
                // Test cursor
               EXSR Y8TST;
             Endif;
           Endif;
            // Reset roll flag
         W0ROL = 'N';             1
            // Clear set cursor DDS indicator
           If WCSRLC = 'OFF';
             *In94 = *Off;
           Endif;
     EvalR   WCSRLC = *BLANK;
            // If help requested, display help text
           If *In25;
             EXSR ZHHPKY;
           Endif;
            // Show next page of details
           If *In27;
             EXSR CDNXSC;
           Endif;
            // Show previous page of details
           If *In28;
             EXSR CEPVSC;
           Endif;
         Enddo;
          // Update job time
         ##JTM = %Time();
          // Clear messages from program message queue
          // Reset first message only flag
         ZAFSMS = 'Y';            1      99    *
         If YSETCS = 'Y';
           EXSR Y9CLR;
         Endif;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR CCDSPV;
          //================================================================
          // Redisplay previous screen
          //================================================================
          // USER: Process key screen request
          // kalender schrappen in da2 - Wkl betaling  *
         RMPAR = WUL6ND;
         HISTCD = 'D';            1
          //                    CALL 'SCHMDKAL'
          //                    PARM           WUAPCF
          //                    PARM           RMPAR
          //                    PARM           HISTCD
          //                    CALL 'SCHMDKA2'
          //                    PARM           WUAPCF
          //                    PARM           RMPAR
          //                    PARM           HISTCD
         MDTW007B(#1AACD:#1AFNB:RMPAR);
          // Schrappen van 1 user/bet - Wkl betaling  *
         JJUSER = ##USR;
         RMPAR = WUL6ND;
          // DEL programma actief EEF - Programma Actief  *
         MDBET308(#1AACD:#1AFNB:RMPAR:WUDONG:JJUSER);
           CLEAR   PWRC;
         PWA7NN = ##JNO; //Program Act - J
     C                   MOVEL(P)  ##PGM         PWRACO                         Program Act - P

         //DEL programma a
         //KEY: Programma

         LXBQXFR(W0RTN:PWRC);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXBQXFR';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
         Endif;
          // Error detected?
         If W0RTN <> *BLANK;
           *In99 = *On;
         Endif;
         P0RTN = W0RTN;                          *Return code
         EXSR ZYEXPG;
     C   30              MOVEL     'R'           W0TRN
     C   12              MOVEL     'K'           W0TRN
          // Initialise error memories
     EvalR   INSCR1 = *ZERO;
     EvalR   INSCR2 = *ZERO;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR CDNXSC;
          //================================================================
          // Display next screen
          //================================================================
          // Set roll flag
         W0ROL = 'Y';             1
         W0SCR = 2;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR CEPVSC;
          //================================================================
          // Display previous screen
          //================================================================
          // Set roll flag
         W0ROL = 'Y';             1
         W0SCR = 1;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR CFPRSC;
          //================================================================
          // Validate record
          //================================================================
          // Confirm/update is not deferred
         W0DCF = 'N';             1
          // Validate details
     EvalR   INSCR1 = *ZEROS;
     EvalR   INSCR2 = *ZEROS;
         EXSR DCVLDL;
          // Display first screen in error
         If INSCR1 <> *ZERO;
           W0SCR = 1;
         ELSE;
           If INSCR2 <> *ZERO;
             W0SCR = 2;
           Endif;
         Endif;
          // QUIT if error:
     C     *IN99         CABEQ     '1'           CFEXIT
          // Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           CFEXIT
          // Prompt for confirmation
         EXSR EAPMCF;
          // Quit if not confirmed
         If *IN99 = '1';
           *In99 = *Off;
     C                   GOTO      CFEXIT
         Endif;
          // No error: update record
         EXSR EBPR##;
          //================================================================
       ENDSR;
       BEGSR CHKINH;
         If CODINH = 'TB-' OR CODINH = 'IR-' OR CODINH = 'TG-';
           If BDRINH > BYA4NR;
     EvalR   WUHXCD = '1';
           Endif;
         Endif;
       ENDSR;
       BEGSR COTVTV;
         If WUGDCD <> '4';
           If PS1AF1 <> 'T' AND PS1AF1 <> 'G' AND PS1AF1 <> 'H'; //TB-,TG-
     EvalR   WUGDCD = '4';                         FOUTIEF     ES0
           Endif;
         ENDIF;
         If PS1AF1 = 'G' OR PS1AF1 = 'H'; //GA,...
           TELTV = TELTV + 1;
         ENDIF;
       ENDSR;
       /EJECT
       BEGSR DCVLDL;
          //================================================================
          // Validate details
          //================================================================
          // Set screen conditioning indicators
         EXSR GBDSAD;
          // Initialise virtual fields
         EXSR MEIZ#1;
          // Validate Geen uren ged. wkl.
         W0RTN = *BLANK;
         W0NSRQ = #1ISCD;            1            Geen uren ged.
          // Name search required?
         If W0NSRQ = '?';
           //*
           //Geen uren ged.
            // Defer confirm
         W0DCF = 'Y';             1
         Endif;

         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
         @I1(34) = '1';
           *In99 = *On;
         Endif;
          // Validate Afh1 datum and convert to internal.
          // Check datum mm/ccjj MAIN
          // Check datum eeuw/jr./mnd. - *Field attribute types  *
         UEDTM = V1G0NB;
         UDTM1 = UDTMCC;
         UDTM2 = UDTMYY;
         UDTM3 = UDTMMM;
     EvalR   WUEMCD = '0';
         If UIDTM <> 0;
           EXSR UDMBEG;
     EvalR   WUEMCD = UDMMIS;
         Endif;
         #1G0NB = UIDTM;
          // CASE: WRK.Return code2 is niet leeg
         If WUEMCD = '1'; //*IF
            // Setup message data for message
           ZA0031 = V1G0NB; //DTM External
            // Send message 'Maand/jaar is foutief !!!'
         ZAMSID = 'USR0226';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
         Endif;
          // Validate Afh2 datum and convert to internal.
          // Check datum mm/ccjj MAIN
          // Check datum eeuw/jr./mnd. - *Field attribute types  *
         UEDTM = V1G2NB;
         UDTM1 = UDTMCC;
         UDTM2 = UDTMYY;
         UDTM3 = UDTMMM;
     EvalR   WUEMCD = '0';
         If UIDTM <> 0;
           EXSR UDMBEG;
     EvalR   WUEMCD = UDMMIS;
         Endif;
         #1G2NB = UIDTM;
          // CASE: WRK.Return code2 is niet leeg
         If WUEMCD = '1'; //*IF
            // Setup message data for message
           ZA0032 = V1G2NB; //DTM External
            // Send message 'Maand/jaar is foutief !!!'
         ZAMSID = 'USR0226';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
         Endif;
          // Validate Afh3 datum and convert to internal.
          // Check datum mm/ccjj MAIN
          // Check datum eeuw/jr./mnd. - *Field attribute types  *
         UEDTM = V1G4NB;
         UDTM1 = UDTMCC;
         UDTM2 = UDTMYY;
         UDTM3 = UDTMMM;
     EvalR   WUEMCD = '0';
         If UIDTM <> 0;
           EXSR UDMBEG;
     EvalR   WUEMCD = UDMMIS;
         Endif;
         #1G4NB = UIDTM;
          // CASE: WRK.Return code2 is niet leeg
         If WUEMCD = '1'; //*IF
            // Setup message data for message
           ZA0033 = V1G4NB; //DTM External
            // Send message 'Maand/jaar is foutief !!!'
         ZAMSID = 'USR0226';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
         Endif;
          // Validate Afh4 datum and convert to internal.
          // Check datum mm/ccjj MAIN
          // Check datum eeuw/jr./mnd. - *Field attribute types  *
         UEDTM = V1G6NB;
         UDTM1 = UDTMCC;
         UDTM2 = UDTMYY;
         UDTM3 = UDTMMM;
     EvalR   WUEMCD = '0';
         If UIDTM <> 0;
           EXSR UDMBEG;
     EvalR   WUEMCD = UDMMIS;
         Endif;
         #1G6NB = UIDTM;
          // CASE: WRK.Return code2 is niet leeg
         If WUEMCD = '1'; //*IF
            // Setup message data for message
           ZA0034 = V1G6NB; //DTM External
            // Send message 'Maand/jaar is foutief !!!'
         ZAMSID = 'USR0226';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
         Endif;
          // Validate Afh5 datum and convert to internal.
          // Check datum mm/ccjj MAIN
          // Check datum eeuw/jr./mnd. - *Field attribute types  *
         UEDTM = V1HENB;
         UDTM1 = UDTMCC;
         UDTM2 = UDTMYY;
         UDTM3 = UDTMMM;
     EvalR   WUEMCD = '0';
         If UIDTM <> 0;
           EXSR UDMBEG;
     EvalR   WUEMCD = UDMMIS;
         Endif;
         #1HENB = UIDTM;
          // CASE: WRK.Return code2 is niet leeg
         If WUEMCD = '1'; //*IF
            // Setup message data for message
           ZA0035 = V1HENB; //DTM External
            // Send message 'Maand/jaar is foutief !!!'
         ZAMSID = 'USR0226';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
         Endif;
          // Validate Afh6 datum and convert to internal.
          // Check datum mm/ccjj MAIN
          // Check datum eeuw/jr./mnd. - *Field attribute types  *
         UEDTM = V1HGNB;
         UDTM1 = UDTMCC;
         UDTM2 = UDTMYY;
         UDTM3 = UDTMMM;
     EvalR   WUEMCD = '0';
         If UIDTM <> 0;
           EXSR UDMBEG;
     EvalR   WUEMCD = UDMMIS;
         Endif;
         #1HGNB = UIDTM;
          // CASE: WRK.Return code2 is niet leeg
         If WUEMCD = '1'; //*IF
            // Setup message data for message
           ZA0036 = V1HGNB; //DTM External
            // Send message 'Maand/jaar is foutief !!!'
         ZAMSID = 'USR0226';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
         Endif;
          // Validate Kateg jjmm and convert to internal.
          // Check datum mm/ccjj MAIN
          // Check datum eeuw/jr./mnd. - *Field attribute types  *
         UEDTM = V1E9NB;
         UDTM1 = UDTMCC;
         UDTM2 = UDTMYY;
         UDTM3 = UDTMMM;
     EvalR   WUEMCD = '0';
         If UIDTM <> 0;
           EXSR UDMBEG;
     EvalR   WUEMCD = UDMMIS;
         Endif;
         #1E9NB = UIDTM;
          // CASE: WRK.Return code2 is niet leeg
         If WUEMCD = '1'; //*IF
            // Setup message data for message
           ZA0037 = V1E9NB; //DTM External
            // Send message 'Maand/jaar is foutief !!!'
         ZAMSID = 'USR0226';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
         Endif;
          // Validate Wkl datum laatste stempel and convert to internal.
          // Check datum 8 lang MAIN
          // Check datum 8 lang - *Field attribute types  *
         UEDTD = V1AKDD;
         UDTD1 = UDTDCC;
         UDTD2 = UDTDYY;
         UDTD3 = UDTDMM;
         UDTD4 = UDTDDD;
     EvalR   WUDACD = '0';
         If UIDTD <> 0;
           EXSR UDDBEG;
     EvalR   WUDACD = UDDMIS;
         Endif;
         #1AKDD = UIDTD;
          // CASE: WRK.Return code is niet leeg
         If WUDACD = '1'; //*IF
            // Setup message data for message
           ZA0038 = V1AKDD; //DTD External
            // Send message 'Datum is foutief !!!'
         ZAMSID = 'USR0155';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
         Endif;
          // Validate Geen bedrag wklh
         W0RTN = *BLANK;
         W0NSRQ = #1BDST;            1            Geen bedrag wkl
          // Name search required?
         If W0NSRQ = '?';
           //*
           //Geen bedrag wkl
            // Defer confirm
         W0DCF = 'Y';             1
         Endif;

         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
         Endif;
          // Validate Geen dagen/bedrag BZ
         W0RTN = *BLANK;
         W0NSRQ = #1BCST;            1            Geen dagen/bedr
          // Name search required?
         If W0NSRQ = '?';
           //*
           //Geen dagen/bedr
            // Defer confirm
         W0DCF = 'Y';             1
         Endif;

         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
         Endif;
          // USER: Validate detail screen fields
          // Fetch Niveau User/Toep - Toepassingen-Machtigingen  *
         EXSR SBRVGN;
          // CASE: WRK.Wrk veld TB- macht. num is niet 10
         If WUC1NG <> 10; //*IF
            // TB-, TG- niet toegelaten bij SWT (Guy/Pieter) jira3093
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.Type wklh. kode is 09 : conv brugp voltijds
            //   !- c2    : DTL.Type wklh. kode is 10 : conv brugp deeltijds
            //   '-
           If #1A1CD = '09' OR #1A1CD = '10'; //*IF
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5ORc6
              //   !- c1    : DTL.Afh1 kode is = TB-
              //   !- c2    : DTL.Afh2 kode is = TB-
              //   !- c3    : DTL.Afh3 kode is = TB-
              //   !- c4    : DTL.Afh4 kode is = TB-
              //   !- c5    : DTL.Afh5 kode is = TB-
              //   !- c6    : DTL.Afh6 kode is = TB-
              //   '-
             If #1DVCD = 'TB-' OR #1DWCD = 'TB-' OR #1DXCD = 'TB-' OR #1DYCD = 'TB-' OR #1EDCD = 'TB-' OR #1EECD = 'TB-'; //*IF
                // Send message 'TB-, TG- niet toegelaten'
         ZAMSID = 'USR7255';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5ORc6
              //   !- c1    : DTL.Afh1 kode is = TG-
              //   !- c2    : DTL.Afh2 kode is = TG-
              //   !- c3    : DTL.Afh3 kode is = TG-
              //   !- c4    : DTL.Afh4 kode is = TG-
              //   !- c5    : DTL.Afh5 kode is = TG-
              //   !- c6    : DTL.Afh6 kode is = TG-
              //   '-
             If #1DVCD = 'TG-' OR #1DWCD = 'TG-' OR #1DXCD = 'TG-' OR #1DYCD = 'TG-' OR #1EDCD = 'TG-' OR #1EECD = 'TG-'; //*IF
                // Send message 'TB-, TG- niet toegelaten'
         ZAMSID = 'USR7255';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Check bouwcode vnf10/2017 - Wkl betaling  *
         OUINON = 'N';            1
         BZBW = #1A4CD;              2
         WUS5CL = OUINON;
          //          'L0DPUFR' DSPLY'ROSANNE'
          //          WUGUCG    DSPLY'ROSANNE'                  MEERDERE UREN P
          //          WUHHCM    DSPLY'ROSANNE'                  F1
          //          WUDJNU    DSPLY'ROSANNE'                  TELLER
          // CASE: DTL.BZ kode is C2
         If #1A4CD = 'C2'; //*IF
         WUS5CL = 'N';                         Switch bouw 102
         Endif; //*FI
          // CASE: DTL.Kateg kode is JC
         If #1CLCD = 'JC'; //*IF
            // Send message 'Kategorie bijdrage SA/SE'
         ZAMSID = 'USR6797';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
          // Controles via POPUP - Wkl betaling  *
         CLEAR   PXRC;
     C                   MOVEL(P)  #1AACD        PXAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        PXAFNB                         Lid nr
         PXGWNB = #1GWNB; //Datum achtersta
     C                   MOVEL(P)  #1CLCD        PXCLCD                         Kateg kode
         PXE9NB = #1E9NB; //Kateg jjmm
     C                   MOVEL(P)  #1ARNB        PXARNB                         Taal kode
     C                   MOVEL(P)  #1EGCD        PXEGCD                         C12 reden kode
     C                   MOVEL(P)  #1N8CE        PXN8CE                         Wkl bet. zone
     C                   MOVEL(P)  #1N9CE        PXN9CE                         Wkl bet. gewest
         PXGGNB = #1GGNB; //VD5
         PXGHNB = #1GHNB; //HD5
         PXGINB = #1GINB; //Uren ged.wkl.
     C                   MOVEL(P)  #1ISCD        PXISCD                         Geen uren ged.
         PXGJNB = #1GJNB; //Y
         PXGKNB = #1GKNB; //Yft
         PXGRNB = #1GRNB; //VW
         PXGSNB = #1GSNB; //Min
         PXGTNB = #1GTNB; //Z+A
         PXGUNB = #1GUNB; //C3.2
         PXJJNB = #1JJNB; //Volle BZ C3.2
         PXJKNB = #1JKNB; //Halve BZ C3.2
         PXGVNB = #1GVNB; //Uren BV
         PXGLNB = #1GLNB; //VD6
         PXGMNB = #1GMNB; //HD6
         PXGNNB = #1GNNB; //Volle dagen ver
         PXJLNB = #1JLNB; //Halve dagen ver
         PXGONB = #1GONB; //Volle dagen vor
         PXJMNB = #1JMNB; //Halve dagen vor
         PXGPNB = #1GPNB; //Volle dagen BZ
         PXJNNB = #1JNNB; //Halve dagen BZ
         PXMINB = #1MINB; //Volle dagen BZ2
         PXMJNB = #1MJNB; //Halve dagen BZ2
         PXG7NB = #1G7NB; //Volle dagen BV
         PXJONB = #1JONB; //Halve dagen BV
         PXGXNB = #1GXNB; //Dagen kbf sankt
         PXHPNB = #1HPNB; //Bedrag wkl
     C                   MOVEL(P)  #1BDST        PXBDST                         Geen bedrag wkl
         PXGYNB = #1GYNB; //Bedrag BZ
     C                   MOVEL(P)  #1BCST        PXBCST                         Geen dagen/bedr
         PXHCNB = #1HCNB; //Taks
         PXJQNB = #1JQNB; //X2
         PXJRNB = #1JRNB; //RWP
         PXLPNB = #1LPNB; //BC aantal
         PXLQNB = #1LQNB; //BC bedrag
         PXT4NB = #1T4NB; //Taks wkl
         PXT5NB = #1T5NB; //Taks BZ
         PXGQNB = #1GQNB; //Netto
         PXT6NB = #1T6NB; //Netto wkl
         PXT7NB = #1T7NB; //Netto BZ
     C                   MOVEL(P)  #1DVCD        PXDVCD                         Afh1 kode
         PXGZNB = #1GZNB; //Afh1 bedrag
         PXG0NB = #1G0NB; //Afh1 datum
     C                   MOVEL(P)  #1OYCD        PXOYCD                         Afh1 kode TV
     C                   MOVEL(P)  #1O5CD        PXO5CD                         Afh1 laatste ma
     C                   MOVEL(P)  #1DWCD        PXDWCD                         Afh2 kode
         PXG1NB = #1G1NB; //Afh2 bedrag
         PXG2NB = #1G2NB; //Afh2 datum
     C                   MOVEL(P)  #1OZCD        PXOZCD                         Afh2 kode TV
     C                   MOVEL(P)  #1O6CD        PXO6CD                         Afh2 laatste ma
     C                   MOVEL(P)  #1DXCD        PXDXCD                         Afh3 kode
         PXG3NB = #1G3NB; //Afh3 bedrag
         PXG4NB = #1G4NB; //Afh3 datum
     C                   MOVEL(P)  #1O0CD        PXO0CD                         Afh3 kode TV
     C                   MOVEL(P)  #1O7CD        PXO7CD                         Afh3 laatste ma
     C                   MOVEL(P)  #1DYCD        PXDYCD                         Afh4 kode
         PXG5NB = #1G5NB; //Afh4 bedrag
         PXG6NB = #1G6NB; //Afh4 datum
     C                   MOVEL(P)  #1O1CD        PXO1CD                         Afh4 kode TV
     C                   MOVEL(P)  #1O8CD        PXO8CD                         Afh4 laatste ma
     C                   MOVEL(P)  #1EDCD        PXEDCD                         Afh5 kode
         PXHDNB = #1HDNB; //Afh5 bedrag
         PXHENB = #1HENB; //Afh5 datum
     C                   MOVEL(P)  #1O2CD        PXO2CD                         Afh5 kode TV
     C                   MOVEL(P)  #1O9CD        PXO9CD                         Afh5 laatste ma
     C                   MOVEL(P)  #1EECD        PXEECD                         Afh6 kode
         PXHFNB = #1HFNB; //Afh6 bedrag
         PXHGNB = #1HGNB; //Afh6 datum
     C                   MOVEL(P)  #1O3CD        PXO3CD                         Afh6 kode TV
     C                   MOVEL(P)  #1PACD        PXPACD                         Afh6 laatste ma
         PXHJNB = #1HJNB; //DOK periode
     C                   MOVEL(P)  #1WUCD        PXWUCD                         DOK kategorie
         PXIYNB = #1IYNB; //BZ1 dagen
         PXJHNB = #1JHNB; //BZ1 bedrag
     C                   MOVEL(P)  #1L0CD        PXL0CD                         BZ1 kode
         PXIZNB = #1IZNB; //BZ2 dagen
         PXJGNB = #1JGNB; //BZ2 bedrag
     C                   MOVEL(P)  #1L8CD        PXL8CD                         BZ2 kode
         PXI0NB = #1I0NB; //BZ3 dagen
         PXJFNB = #1JFNB; //BZ3 bedrag
     C                   MOVEL(P)  #1L9CD        PXL9CD                         BZ3 kode
         PXI1NB = #1I1NB; //BZ4 dagen
         PXJENB = #1JENB; //BZ4 bedrag
     C                   MOVEL(P)  #1L1CD        PXL1CD                         BZ4 kode
         PXI2NB = #1I2NB; //BZ5 dagen
         PXI8NB = #1I8NB; //BZ5 bedrag
     C                   MOVEL(P)  #1L2CD        PXL2CD                         BZ5 kode
     C                   MOVEL(P)  #1A7ST        PXA7ST                         Zone vorig bare
     C                   MOVEL(P)  #1KBCD        PXKBCD                         Zone vorig bare
     C                   MOVEL(P)  #1KCCD        PXKCCD                         Zone vorig bare
     C                   MOVEL(P)  #1KDCD        PXKDCD                         Zone vorig bare
     C                   MOVEL(P)  #1KECD        PXKECD                         Zone vorig bare
         PXA5DM = #1A5DM; //RVA indieningsm
         PXLONB = #1LONB; //RVA UI-afdeling
     C                   MOVEL(P)  #1BIST        PXBIST                         RVA type C10
     C                   MOVEL(P)  #1MCCD        PXMCCD                         RVA Gewestelijk
         PXMNCD = #1MNCD; //RVA identificat
     C                   MOVEL(P)  #1MDCD        PXMDCD                         Nr betaler
     C                   MOVEL(P)  #1A1CD        PXMBCD                         Type werklooshe
     C                   MOVEL(P)  #1MECD        PXMECD                         Kode beroep
     C                   MOVEL(P)  #1RQCD        PXRQCD                         Kode subberoep
     C                   MOVEL(P)  #1MFCD        PXMFCD                         Barema
         PXMGCD = #1MGCD; //Complement
     C                   MOVEL(P)  #1MOCD        PXMOCD                         Kode BZ
     C                   MOVEL(P)  #1T5CD        PXT5CD                         Wkl adres opdra
     C                   MOVEL(P)  #1T6CD        PXT6CD                         Wkl postnr opdr
     C                   MOVEL(P)  #1T7CD        PXT7CD                         Wkl lokaliteit
     C                   MOVEL(P)  #1T8CD        PXT8CD                         Wkl taal opdrac
     C                   MOVEL(P)  #1MICD        PXMICD                         Wkl naam beguns
     C                   MOVEL(P)  #1MJCD        PXMJCD                         Wkl adres begun
     C                   MOVEL(P)  #1MKCD        PXMKCD                         Wkl postnr begu
     C                   MOVEL(P)  #1VCCD        PXVCCD                         Wkl post subkod
     C                   MOVEL(P)  #1MLCD        PXMLCD                         Wkl lokaliteit
         PXMMCD = #1MMCD; //Wkl banknr begu
     C                   MOVEL(P)  #1MUCD        PXMUCD                         Wkl taalkode be
     C                   MOVEL(P)  #1V6CD        PXV6CD                         Wkl bankkode
         PXLJNB = #1LJNB; //Wkl INDIR-indie
         PXLKNB = #1LKNB; //Wkl INDIR-UI-af
     C                   MOVEL(P)  #1M4CD        PXM4CD                         Wkl INDIR-type
         PXLLNB = #1LLNB; //Wkl INDIR-GWB-n
         PXLMNB = #1LMNB; //Wkl INDIR-ident
         PXLNNB = #1LNNB; //Wkl INDIR-maand
         PXAKDD = #1AKDD; //Wkl datum laats
         PXBANR = #1BANR; //Wkl Yuur
         PXBBNR = #1BBNR; //Wkl n-verg. n-g
     C                   MOVEL(P)  #1BKCE        PXBKCE                         Wie heeft wklh
     C                   MOVEL(P)  #1BLCE        PXBLCE                         Wie heeft BZ be
     C                   MOVEL(P)  #1BMCE        PXBMCE                         Verlof 6 dagen
     C                   MOVEL(P)  #1BNCE        PXBNCE                         Verlof 6 dagen
     C                   MOVEL(P)  #1BOCE        PXBOCE                         Wkl vorstzone
         PXBCNR = #1BCNR; //Wkl inhoudingsp
         PXBDNR = #1BDNR; //Wkl dagbedrag
         PXBENR = #1BENR; //Wkl gemiddeld m
         PXBFNR = #1BFNR; //Wkl Q
         PXBGNR = #1BGNR; //Wkl S
     C                   MOVEL(P)  #1BPCE        PXBPCE                         Wkl verif.05/98
     C                   MOVEL(P)  #1BQCE        PXBQCE                         Wkl C10bis
     C                   MOVEL(P)  #1BRCE        PXBRCE                         Wkl vergoedbaar
     C                   MOVEL(P)  #1BSCE        PXBSCE                         Wkl toelaatbaar
         PXM7DD = #1M7DD; //Wkl datum begin
         PXM8DD = #1M8DD; //Wkl laatst verg
         PXM9DD = #1M9DD; //Wkl laatst geco
     C                   MOVEL(P)  #1BTCE        PXBTCE                         Wkl sanctiecode
         PXNADD = #1NADD; //Wkl begindatum
         PXNBDD = #1NBDD; //Wkl einddatum s
     C                   MOVEL(P)  #1BUCE        PXBUCE                         Wkl sanctiecode
         PXNCDD = #1NCDD; //Wkl begindatum
         PXNDDD = #1NDDD; //Wkl einddatum s
     C                   MOVEL(P)  #1PICD        PXPICD                         Wkl add-user
         PXASDD = #1ASDD; //Wkl add-datum
         PXALTM = #1ALTM; //Wkl add-time
     C                   MOVEL(P)  #1CA01        PXCA01                         Wkl bet betaald
         PXY4NB = #1Y4NB; //Wkl bet Uitv.da
         PXFXNR = #1FXNR; //Wkl bet NBR vri
         PXFYNR = #1FYNR; //Wkl bet NBR vri
         PXFZNR = #1FZNR; //Wkl bet NBR vri
         PXF0NR = #1F0NR; //Wkl bet NBR vri
         PXF1NR = #1F1NR; //Wkl bet NBR vri
     C                   MOVEL(P)  #1MOCE        PXMOCE                         Wkl bet CDE vri
     C                   MOVEL(P)  #1MPCE        PXMPCE                         Wkl bet CDE vri
     C                   MOVEL(P)  #1MQCE        PXMQCE                         Wkl bet CDE vri
     C                   MOVEL(P)  #1MRCE        PXMRCE                         Wkl bet CDE vri
         PXIVDM = #1IVDM; //Wkl bet DTM vri
         PXIWDM = #1IWDM; //Wkl bet DTM vri
         PXPWDD = #1PWDD; //Wkl bet DTD vri
         PXPXDD = #1PXDD; //Wkl bet DTD vri
     C                   MOVEL(P)  #1GDCE        PXGDCE                         Wkl betaling BE

         WXPGM = 'MDCTLBET';            10
     EvalR   WXPGM = '01';
         //Controles via P
         //RCD: Wkl betali
         //wrk error tekst
         //wrk warning tek
         //Wrk taal

         XPG(PXRC:WQ0212:WQ0213:WQ0214);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCTLBET';           10
     EvalR   W0CLPG = '01';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
           *In99 = *On;
           *In35 = *On;
           *In36 = *On;
           *In33 = *On;
           *In34 = *On;
           *In31 = *On;
           *In32 = *On;
           *In37 = *On;
           *In38 = *On;
         Endif;
          // CASE: LCL.wrk error tekst is Niet blanco
         If YL0014 <> *BLANK; //*IF
            // Setup message data for message
         ZA0039 = YL0014;                         wrk error tekst
            // Send message 'Variabele tekst'
         ZAMSID = 'USR6324';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
          // CASE: DTL.Kateg kode is UR
         If #1CLCD = 'UR'; //*IF
            // CASE: DTL.Datum laatste bijdr is >= 201507
           If #1AEDD >= 201507; //*IF
              // Send message 'Kategorie kode UR nt toeg'
         ZAMSID = 'USR6756';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
         Endif; //*FI
          // CASE:
          //  - c1ORc2
          //   !- c1    : DTL.Type wklh. kode is vraagtekenX
          //   !- c2    : DTL.Barema RVAkode is vraagtekenX
          //   '-
         If #1A1CD = '?X' OR #1DOCD = @CN(031); //*IF
            // Send message 'Geen geldig type/barema'
         ZAMSID = 'USR6392';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
          // CASE:
          //  - c1ORc2ORc3ORc4
          //   !- c1    : DTL.BZ kode is ES
          //   !- c2    : DTL.BZ kode is CS
          //   !- c3    : DTL.BZ kode is FS
          //   !- c4    : DTL.BZ kode is PS
          //   '-
         If #1A4CD = 'ES' OR #1A4CD = 'CS' OR #1A4CD = 'FS' OR #1A4CD = 'PS'; //*IF
            // CASE: DTL.Datum achterstal is > 201506
           If #1GWNB > 201506; //*IF
              // CASE:
              //  - c1ORc2ORc3
              //   !- c1    : DTL.Volle dagen BZ is niet 0
              //   !- c2    : DTL.Halve dagen BZ is niet 0
              //   !- c3    : DTL.Bedrag BZ is niet 0
              //   '-
             If #1GPNB <> *ZERO OR #1JNNB <> *ZERO OR #1GYNB <> *ZERO; //*IF
                // Send message 'Bz kode bestaat nt meer'
         ZAMSID = 'USR5284';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Type 00,70,71,72,73,97==>typeC10=00 afhoudingen worden op nul gep
          // CASE:
          //  - c1ORc2ORc3
          //   !- c1    : DTL.Type wklh. kode is 00 : niet toelaatbaar
          //   !- c2    : DTL.Type wklh. kode is 70-73
          //   !- c3    : DTL.Type wklh. kode is 97
          //   '-
         If #1A1CD = '00' OR #1A1CD >= '70' AND #1A1CD <= '73' OR #1A1CD = '97'; //*IF
         #1DVCD = *BLANK;                         Afh1 kode
           #1GZNB = *ZERO; //Afh1 bedrag
           #1G0NB = *ZERO; //Afh1 datum
         #1OYCD = *BLANK;                         Afh1 kode TV
         #1DWCD = *BLANK;                         Afh2 kode
           #1G1NB = *ZERO; //Afh2 bedrag
           #1G2NB = *ZERO; //Afh2 datum
         #1OZCD = *BLANK;                         Afh2 kode TV
         #1DXCD = *BLANK;                         Afh3 kode
           #1G3NB = *ZERO; //Afh3 bedrag
           #1G4NB = *ZERO; //Afh3 datum
         #1O0CD = *BLANK;                         Afh3 kode TV
         #1DYCD = *BLANK;                         Afh4 kode
           #1G5NB = *ZERO; //Afh4 bedrag
           #1G6NB = *ZERO; //Afh4 datum
         #1O1CD = *BLANK;                         Afh4 kode TV
         #1EDCD = *BLANK;                         Afh5 kode
           #1HDNB = *ZERO; //Afh5 bedrag
           #1HENB = *ZERO; //Afh5 datum
         #1O2CD = *BLANK;                         Afh5 kode TV
         #1EECD = *BLANK;                         Afh6 kode
           #1HFNB = *ZERO; //Afh6 bedrag
           #1HGNB = *ZERO; //Afh6 datum
         #1O3CD = *BLANK;                         Afh6 kode TV
         Endif; //*FI
         WUKTCJ = 'N';                         Switch blanko o
         WUYRCI = '0';                         switch sancties
         WUERCK = '0';                         Wrk F1 na F24
         WUUZCF = *BLANK;                         Wrk gekozen ASR
          // Werkhervatting metaal ? techniek
          // CASE:
          //  - c1ORc2ORc3
          //   !- c1    : DTL.Wkl bet CDE vrij3 is vraagteken1
          //   !- c2    : DTL.Wkl bet CDE vrij3 is vraagteken2
          //   !- c3    : DTL.Wkl bet CDE vrij3 is vraagteken3
          //   '-
         If #1MQCE = '?' OR #1MQCE = ' ?' OR #1MQCE = '  ?'; //*IF
            // Select Metaal codes werkh - Metaal codes werkhervatti  *
           //Select Metaal c
           //Metaal code wer

           LXT4SRR(W0RTN:WQ0215);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXT4SRR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
         Endif; //*FI
         ZQ = *ZERO;
         WUCACO = #1AKNB + '' + #1FGNB; //Wrk veld 9 posi
         ZQ = *ZERO;
         WUAPCF = WUCACO + '' + #1FHNB; //Wrk veld 11 pos
         WURZCJ = 'N';                         Switch type bet
          // Betaalkalender tonen? - Wkl betaling  *
         //TYPE
         //BZ
         //BAREMA
         MDK020(#1A1CD:#1A4CD:#1DOCD:WURZCJ);
           If WUYZCG = 'I';
         WURZCJ = 'Y';
         ENDIF;
          // CASE: DTL.Type wklh. kode is = 16
         If #1A1CD = '16'; //*IF
            // CASE: DTL.Bedrag wkl is = 247,89
           If #1HPNB = 247.89; //*IF
              // Betaalkalender tonen? - Wkl betaling  *
             //TYPE
             //BZ
             //BAREMA
             MDK020(#1A1CD:#1A4CD:#1DOCD:WURZCJ);
               If WUYZCG = 'I';
         WURZCJ = 'Y';
             ENDIF;
           Endif; //*FI
         Endif; //*FI
          // Cmd4 = BZ metaal overzicht attesten
          // CASE: DTL.*CMD key is CF04
         If *IN04 = '1'; //*IF
            // CASE:
            //  - c1ORc2ORc3ORc4
            //   !- c1    : DTL.BZ kode is NA
            //   !- c2    : DTL.BZ kode is DA
            //   !- c3    : DTL.BZ kode is 29
            //   !- c4    : DTL.BZ kode is 79
            //   '-
           If #1A4CD = 'NA' OR #1A4CD = 'DA' OR #1A4CD = '29' OR #1A4CD = '79'; //*IF
              // Overzicht op INSZ - Metaal BP Inh  *
             //Overzicht op IN
             //Wrk INSZ

             LYLODFR(W0RTN:WQ0216);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYLODFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           Endif; //*FI
         Endif; //*FI
          // Cmd2 = A950
          // CASE: DTL.*CMD key is CF02
         If *IN02 = '1'; //*IF
     EvalR   WUO3NC = WUAPCF;                         A950-INSS
           WURHNC = #1GWNB; //Wrk number 6 A9
         WUICCH = WURHNC;                         Wrk code 6 lang
            // Display A950 1 INSZ(par3) - A950  *
           //Display A950 1
           //A950-INSS
           //Wrk code 6 lang
           //WRK Afdeling nr
           //WRK Lid nr

           LYBGDFR(W0RTN:WQ0217:WQ0218:WQ0219:WQ0220);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYBGDFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
         Endif; //*FI
          // Cmd5=ASR's overzicht
          // CASE: DTL.*CMD key is CF05
         If *IN05 = '1'; //*IF
            // Overz.1lid/1RM alle+par - MFA WECH update  *
           //Overz.1lid/1RM
           //WECHupd afd.nr
           //WECHupd lidnr
           //WECHupd Ref.mnd
           //Wrk ASR soort
           //Wrk gekozen ASR

           LXJJDFR(W0RTN:WQ0221:WQ0222:WQ0223:WQ0224:WQ0225);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXJJDFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
         Endif; //*FI
          // Cmd7=L500
          // CASE: DTL.*CMD key is CF07
         If *IN07 = '1'; //*IF
            // CASE: WRK.Sl15 lang L500 is ingevuld
           If WUXDCG <> *BLANK; //*IF
              // Detail ons antwoord(groep - L500 historiek  *
             //Detail ons antw
             //L500 hist. BL15

             LXP5D3R(W0RTN:WQ0226);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXP5D3R';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           Endif; //*FI
         Endif; //*FI
          // Cmd8=Brief
          // CASE: DTL.*CMD key is CF08
         If *IN08 = '1'; //*IF
         YL0016 = *BLANK;                         Wrk refertemaan
         YL0016 = #1GWNB;                         Wrk refertemaan
           ZQ = *ZERO;
           YL0017 = #1AACD + '' + #1AFNB; //Param256
           ZQ = *ZERO;
           YL0017 = YL0017 + '' + #1AKNB; //Param256
           ZQ = *ZERO;
           YL0017 = YL0017 + '' + #1FGNB; //Param256
           ZQ = *ZERO;
           YL0017 = YL0017 + '' + #1FHNB; //Param256
           ZQ = *ZERO;
           YL0017 = YL0017 + '' + YL0016; //Param256
            // Call afd brief ALGM RPGLE - Brief verlof omslag5  *
         WXPGM = 'MDBRIEFW';            10
     EvalR   WXPGM = 'KL';
           //Call afd brief
           //Toepassing act.
           //Param256
           //Brief WKL type

           XPG(WQ0227:WQ0228:WQ0229);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDBRIEFW';           10
     EvalR   W0CLPG = 'KL';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
             *In99 = *On;
           Endif;
         Endif; //*FI
          // Cmd6=overzicht extra F4 naargelang type50/51/29
          // CASE: DTL.*CMD key is CF06
         If *IN06 = '1'; //*IF
            // CASE: DTL.Type wklh. kode is 51
           If #1A1CD = '51'; //*IF
              // Overzicht crisispremie - Werkloze kinderopvang  *
             //Overzicht crisi
             //Afdeling nr
             //Lid nr

             LYI6DFR(W0RTN:WQ0230:WQ0231);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYI6DFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           Endif; //*FI
            // CASE: DTL.Type wklh. kode is 29 = werkhervatting
           If #1A1CD = '29'; //*IF
              // Overzicht werkhervattings - Werkloze kinderopvang  *
             //Overzicht werkh
             //Afdeling nr
             //Lid nr

             LYEJDFR(W0RTN:WQ0232:WQ0233);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYEJDFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           Endif; //*FI
            // CASE: DTL.Type wklh. kode is 50
           If #1A1CD = '50'; //*IF
              // Overzicht kinderopvangtoe - Werkloze kinderopvang  *
             //Overzicht kinde
             //Afdeling nr
             //Lid nr

             LYC6DFR(W0RTN:WQ0234:WQ0235);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYC6DFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           Endif; //*FI
            // CASE: DTL.Type wklh. kode is 53
           If #1A1CD = '53'; //*IF
              // Overzicht OCV T53 - Werkloze kinderopvang  *
             //Overzicht OCV T
             //Afdeling nr
             //Lid nr

             LZKDDFR(W0RTN:WQ0236:WQ0237);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LZKDDFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           Endif; //*FI
         Endif; //*FI
          // Cmd10=ASR's overzicht
          // CASE: DTL.*CMD key is CF10
         If *IN10 = '1'; //*IF
            // CASE: DTL.Type wklh. kode is 12 :171bis beschutte werk
           If #1A1CD = '12'; //*IF
              // Overz.1lid/1RM Wechxxx - MFA WECH update  *
             //Overz.1lid/1RM
             //WECHupd afd.nr
             //WECHupd lidnr
             //WECHupd Ref.mnd
             //Wrk veld 7 posi

             LXOXDFR(W0RTN:WQ0238:WQ0239:WQ0240:WQ0241);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXOXDFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           Endif; //*FI
         Endif; //*FI
          // Cmd14 = S44-C66 verblijfsbewijs
          // CASE: DTL.*CMD key is CF14
         If *IN14 = '1'; //*IF
            // Overzicht S44/C66 op INSZ - S44 verblijfsbewijs  *
           //Overzicht S44/C
           //S44 INSZ lid
           //S44 afd
           //S44 lidnr
           //WRK Naam

           LYY1DFR(W0RTN:WQ0242:WQ0243:WQ0244:WQ0245);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYY1DFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
         Endif; //*FI
          // Cmd16 = Status EC3 invullen
          // CASE: DTL.*CMD key is CF16
         If *IN16 = '1'; //*IF
           YRSW00 = 3;
           ZQ = 1;
           If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00020 OR ZQ > 00020;
         W0RTN = 'Y2U0510';
           ELSE;
             WUBBCL = %Subst(WUW5CF:ZQ:YRSW00); //Wrk veld 3 posi
     C   90              MOVEL     'Y2U0510'     W0RTN
           Endif;
           YRSW00 = 3;
           ZQ = 1;
           If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00020 OR ZQ > 00020;
         W0RTN = 'Y2U0510';
           ELSE;
             WUBCCL = %Subst(WUW6CF:ZQ:YRSW00); //Wrk veld 3 posi
     C   90              MOVEL     'Y2U0510'     W0RTN
           Endif;
            // CASE: WRK.Wrk veld 3 posities EC3-1 is EC3
           If WUBBCL = 'EC3'; //*IF
              // Update reden verwerkt+dtm - MFA WECH update  *
             CLEAR   PYRC;
     C                   MOVEL(P)  WUW5CF        PYZ8CC                         WECHupd 00222 H
     C                   MOVEL(P)  'EC3'         PYY2CC                         WECHupd 00296 s

             //Update reden ve
             //KEY: MFA WECH u

             LXEAE3R(W0RTN:PYRC);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXEAE3R';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           ELSE;
              // CASE: *OTHERWISE
              // CASE: WRK.Wrk veld 3 posities EC3-2 is EC3
             If WUBCCL = 'EC3'; //*IF
                // Update reden verwerkt+dtm - MFA WECH update  *
               CLEAR   PYRC;
     C                   MOVEL(P)  WUW6CF        PYZ8CC                         WECHupd 00222 H
     C                   MOVEL(P)  'EC3'         PYY2CC                         WECHupd 00296 s

               //Update reden ve
               //KEY: MFA WECH u

               LXEAE3R(W0RTN:PYRC);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXEAE3R';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
               Endif;
             ELSE;
                // CASE: *OTHERWISE
                // Update reden verwerkt+dtm - MFA WECH update  *
               CLEAR   PYRC;
     C                   MOVEL(P)  WUW5CF        PYZ8CC                         WECHupd 00222 H
     C                   MOVEL(P)  'ASR'         PYY2CC                         WECHupd 00296 s

               //Update reden ve
               //KEY: MFA WECH u

               LXEAE3R(W0RTN:PYRC);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXEAE3R';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
               Endif;
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Cmd19=Med.werkhervatting
          // CASE: DTL.*CMD key is CF19
         If *IN19 = '1'; //*IF
            // Opvragen A052 - WKL - A052  *
           CLEAR   PZRC;
     C                   MOVEL(P)  #1AACD        PZAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        PZAFNB                         Lid nr

           //Opvragen A052 -
           //KEY: Lid

           LYANE1R(W0RTN:PZRC);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYANE1R';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
         Endif; //*FI
          // Cmd24=Meerdere barema's
          // CASE:
          //  - c1ANDc2
          //   !- c1    : DTL.*CMD key is CF24
          //   !- c2    : DTL.Datum achterstal is >=201211
          //   '-
         Y0CX01 = '0';            1
         If *IN24 = '1'; //*IF
           If #1GWNB >= 201211; //*IF
         Y0CX01 = '1';
           Endif; //*FI
         Endif; //*FI
         If Y0CX01 = '1'; //*IF
         WUTPCK = 'N';                         C105 bestaat al
            // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
           CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
           AAQLDM = #1GWNB; //Doc BD meer RM
           AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  'C105'        AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
           //Test Doc BD bes
           //KEY: Documenten
           //Wrk taal
           //WRK Barema
           //WRK Type wkl. k
           //WRK document BD

           XPG(AARC:WQ0246:WQ0247:WQ0248:WQ0249);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
             *In99 = *On;
           Endif;
         WUTRCK = 'N';                         C110A bestaat a
            // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
           CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
           AAQLDM = #1GWNB; //Doc BD meer RM
           AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  'C110A'       AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
           //Test Doc BD bes
           //KEY: Documenten
           //Wrk taal
           //WRK Barema
           //WRK Type wkl. k
           //WRK document BD

           XPG(AARC:WQ0250:WQ0251:WQ0252:WQ0253);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
             *In99 = *On;
           Endif;
            // CASE: WRK.Wrk f24 gebruikt is N
           If WUYBCJ = 'N'; //*IF
         WUZGCJ = #1MPCE;                         Wrk BD old
           Endif; //*FI
           WUGVNR = 0; //wrk bedrag resu
            // Record bestaat? EEF - Wkl betaling meerdere bar  *
           CLEAR   ABRC;
     C                   MOVEL(P)  #1AACD        ABAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        ABAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        ABRNCJ                         Wkl bet meer be
           ABQADM = #1GWNB; //Wkl bet meer RM
           ABQBDM = WUZKNR; //Wkl bet meer IM

           //Record bestaat?
           //KEY: Wkl betali
           //Wrk switch sche

         #1AACD = ABAACD;                         Afdeling nr
         #1AFNB = ABAFNB;                         Lid nr
         WUWUBE = ABRNCJ;                         Wkl bet meer be
           #1GWNB = ABQADM; //Wkl bet meer RM
           WUZKNR = ABQBDM; //Wkl bet meer IM

           If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LZCUXFR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
           WUYEND = #1AKDT; //Wrk s04 beginda
            // Betaling meerdere baremas - Wkl betaling meerdere bar  *
           CLEAR   ACRC;
     C                   MOVEL(P)  #1AACD        ACAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        ACAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        ACRNCJ                         Wkl bet meer be
           ACQADM = #1GWNB; //Wkl bet meer RM
           ACQBDM = WUZKNR; //Wkl bet meer IM

           //Betaling meerde
           //KEY: Wkl betali
           //Wrk add/change/
           //wrk bedrag resu
           //WRK Type wkl. k
           //Volgnr S04
           //Wrk s04 beginda
           //Wrk veld R6/HR6

           LZCRE3R(W0RTN:ACRC:WQ0255:WQ0256:WQ0257:WQ0258:WQ0259:WQ0260);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LZCRE3R';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK;
             *In99 = *On;
           Endif;
           #1HPNB = WUGVNR; //Bedrag wkl
           #DGVNR = WUGVNR; //wrk bedrag resu
            // CASE: DTL.Bedrag wkl is > 0
           If #1HPNB > *ZERO; //*IF
         WUYBCJ = 'Y';                         Wrk f24 gebruik
              // Opsplitsen dagen F24 naar - Wkl betaling  *
     EvalR   F24DGN = WUX1CJ;
     EvalR   #1GLNB = '00';
     EvalR   #1GMNB = '00';
     EvalR   #1GLNB = F24R6;
     EvalR   #1GMNB = F24HR6;
     EvalR   #1G7NB = '00';
     EvalR   #1JONB = '00';
     EvalR   #1G7NB = F24BV;
     EvalR   #1JONB = F24HBV;
     EvalR   #1GNNB = '00';
     EvalR   #1JLNB = '00';
     EvalR   #1GNNB = F24V;
     EvalR   #1JLNB = F24HV;
              // Ophalen beslagen na F24 - Wkl betaling  *
     C                   MOVEA     *IN(50)       UWIN              1
     EvalR   O01 = #1DVCD;               3
             CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
             If NOT *In50;
               If BOBVCD = 'B';
             Endif;
               #1GZNB = BOG9NB;
             ENDIF;
     EvalR   O01 = #1DWCD;               3
             CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
             If NOT *In50;
               If BOBVCD = 'B';
             Endif;
               #1G1NB = BOG9NB;
             ENDIF;
     EvalR   O01 = #1DXCD;               3
             CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
             If NOT *In50;
               If BOBVCD = 'B';
             Endif;
               #1G3NB = BOG9NB;
             ENDIF;
     EvalR   O01 = #1DYCD;               3
             CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
             If NOT *In50;
               If BOBVCD = 'B';
             Endif;
               #1G5NB = BOG9NB;
             ENDIF;
     EvalR   O01 = #1EDCD;               3
             CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
             If NOT *In50;
               If BOBVCD = 'B';
             Endif;
               #1HDNB = BOG9NB;
             ENDIF;
     EvalR   O01 = #1EECD;               3
             CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
             If NOT *In50;
               If BOBVCD = 'B';
             Endif;
               #1HFNB = BOG9NB;
             ENDIF;
     C                   MOVEA     UWIN          *IN(50)
           Endif; //*FI
         WUPFCD = '1';                         Switch bedrag W
            // Check Documenten - Documenten BD meerdere  *
           EXSR SCRVGN;
            // CASE: LCL.WRK record found is Yes
           If YL0018 = 'Y'; //*IF
         #1MPCE = *BLANK;                         Wkl bet CDE vri
         #1MPCE = 'Y';                         Wkl bet CDE vri
           ELSE;
              // CASE: *OTHERWISE
         #1MPCE = *BLANK;                         Wkl bet CDE vri
           Endif; //*FI
         WUZGCJ = #1MPCE;                         Wrk BD old
         Endif; //*FI
          // Controle na F24 mag men niets meer wijzigen
          // CASE: WRK.Wrk f24 gebruikt is Y
         If WUYBCJ = 'Y'; //*IF
         WUTQCK = 'N';                         C105 bestaat al
            // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
           CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
           AAQLDM = #1GWNB; //Doc BD meer RM
           AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  'C105'        AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
           //Test Doc BD bes
           //KEY: Documenten
           //Wrk taal
           //WRK Barema
           //WRK Type wkl. k
           //WRK document BD

           XPG(AARC:WQ0261:WQ0262:WQ0263:WQ0264);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
             *In99 = *On;
           Endif;
         WUTSCK = 'N';                         C110A bestaat a
            // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
           CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
           AAQLDM = #1GWNB; //Doc BD meer RM
           AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  'C110A'       AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
           //Test Doc BD bes
           //KEY: Documenten
           //Wrk taal
           //WRK Barema
           //WRK Type wkl. k
           //WRK document BD

           XPG(AARC:WQ0265:WQ0266:WQ0267:WQ0268);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
             *In99 = *On;
           Endif;
            // controle na F24 - Wkl betaling  *
         WUYCCJ = 'N';
           If #1GLNB <> F24R6;
         WUYCCJ = 'Y';
           ENDIF;
           If #1GMNB <> F24HR6;
         WUYCCJ = 'Y';
           ENDIF;
           If #1G7NB <> F24BV;
         WUYCCJ = 'Y';
           ENDIF;
           If #1JONB <> F24HBV;
         WUYCCJ = 'Y';
           ENDIF;
           If #1GNNB <> F24V;
         WUYCCJ = 'Y';
           ENDIF;
           If #1JLNB <> F24HV;
         WUYCCJ = 'Y';
           ENDIF;
            //          #1MPCE    IFNE WUZGCJ
            //                    MOVEL'Y'       WUYCCJ
            //                    ENDIF
           If WUTPCK <> WUTQCK;
         WUYCCJ = 'Y';
           ENDIF;
           If WUTRCK <> WUTSCK;
         WUYCCJ = 'Y';
           ENDIF;
            // CASE: WRK.Wijziging na f24 is Y
           If WUYCCJ = 'Y'; //*IF
              // Send message 'F24 gebruikt!'
         ZAMSID = 'USR6380';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
         Endif; //*FI
         WUCA77 = '0';                         Wrk hidden zett
          // CASE: WRK.Wrk switch dispo testen is 2
         If WUYMCF = '2'; //*IF
            // Testen bedrag wkl berekenen, zelf ingevuld, manueel gewijzigd
            // CASE: WRK.Switch bedrag Wklh is =0 : 1ste maal in program
           If WUPFCD = '0'; //*IF
              // CASE: DTL.Bedrag wkl is = 0
             If #1HPNB = *ZERO; //*IF
                // Send message 'Dispo. U dient zelf bedra'
         ZAMSID = 'USR5123';
               EXSR ZASNMS;
               *In99 = *On;

             ELSE;
                // CASE: *OTHERWISE
         WUPFCD = '1';                         Switch bedrag W
               WUMLNB = #1HPNB; //wrk bedrag Wklh
             Endif; //*FI
           ELSE;
              // CASE: *OTHERWISE
              // CASE: WRK.Switch bedrag Wklh is =3 :bedr wkl comput.berek
             If WUPFCD = '3'; //*IF
                // dit betekent 1 maal progr.doorlopen en computer bedrag bepaald
                // CASE: DTL.Bedrag wkl EQ WRK.wrk bedrag Wklh
               If #1HPNB = WUMLNB; //*IF
                 #1HPNB = *ZERO; //Bedrag wkl
                  // Send message 'Dispo. U dient zelf bedra'
         ZAMSID = 'USR5123';
                 EXSR ZASNMS;
                 *In99 = *On;

               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: DTL.Bedrag wkl is niet 0
                 If #1HPNB <> *ZERO; //*IF
         WUPFCD = '1';                         Switch bedrag W
                   WUMLNB = #1HPNB; //wrk bedrag Wklh
                 ELSE;
                    // CASE: *OTHERWISE
         WUPFCD = '0';                         Switch bedrag W
                    // Send message 'Dispo. U dient zelf bedra'
         ZAMSID = 'USR5123';
                   EXSR ZASNMS;
                   *In99 = *On;

                 Endif; //*FI
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // CASE: WRK.Switch bedrag Wklh is =1 :bedr wklh was ingevul
               If WUPFCD = '1'; //*IF
                  // CASE: DTL.Bedrag wkl EQ WRK.wrk bedrag Wklh
                 If #1HPNB = WUMLNB; //*IF
                 ELSE;
                    // CASE: *OTHERWISE
                    // CASE: DTL.Bedrag wkl is niet 0
                   If #1HPNB <> *ZERO; //*IF
                     WUMLNB = #1HPNB; //wrk bedrag Wklh
                   ELSE;
                      // CASE: *OTHERWISE
         WUPFCD = '0';                         Switch bedrag W
                      // Send message 'Dispo. U dient zelf bedra'
         ZAMSID = 'USR5123';
                     EXSR ZASNMS;
                     *In99 = *On;

                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Switch Bz v kred aftrekke - Wkl betaling  *
         SWBZVJ = '0';            1
     EvalR   MMIIII = BYEENB;            2 0
         JJIIII = BYEENB;            4 0
         JJIII1 = JJIIII - 1;
         If WUJRJR = JJIII1;
           If MMIIII = 01; //ENKEL IN JANUARI
             If BYAYST = 'A'; //ACHTERSTAL
         SWBZVJ = '1';            1
             ENDIF;
           ENDIF;
         ENDIF;
          // !!! Wrk hidden zetten calcul=0 : controles
          // CASE: WRK.Wrk hidden zetten calcul is 0
         If WUCA77 = '0'; //*IF
            // Contr GB/type bij achters - Wkl betaling  *
         WUW207 = '0';            1
         JRGBTY = BYEENB;            4 0
     EvalR   MDGBTY = BYEENB;            2 0
           If MDGBTY > 5;
             MDGBTY = MDGBTY - 5;
           ELSE;
             JRGBTY = JRGBTY - 1;
             If MDGBTY = 5;
               MDGBTY = 12;
             ELSE;
               If MDGBTY = 4;
                 MDGBTY = 11;
               ELSE;
                 If MDGBTY = 3;
                   MDGBTY = 10;
                 ELSE;
                   If MDGBTY = 2;
                     MDGBTY = 9;
                   ELSE;
                     If MDGBTY = 1;
                       MDGBTY = 8;
                     Endif; //END MND=1
                   Endif; //END MND=2
                 Endif; //END MND=3
               Endif; //END MND=4
             Endif; //END MND=5
           Endif; //END MND>5
         JRTYGB = JRGBTY;            6 0
     EvalR   JRTYGB = MDGBTY;
            //          #1GWNB    IFLE JRTYGB                     MEER DN 5 MND ACHTERS
            // WKL3537 : IGU TOELATEN ALS BIJP NA BETALING TW
            // VOOR ALLE MAANDEN, NIET ENKEL 5 MAAND GELEDEN
           If #1GWNB <= BYEENB; //MEER DN 5 MND ACHTER
     C                   MOVEA     *IN(54)       UWIN4             1
              //- TESTEN ALS ACHTERSTAL OF BIJPASSING IS,ZO JA WIJZIGT GB-NR EN/OF TYPE?
         GNC12N = '0000';            4
         C10KKK = '0';            1
             GBKKKK = 0;
             //AFD
             //LIDNR
             //IND.MND
             //DAT.ACHT.
             //DAT.ACHT
             //C12 REDEN
             //TYPE C10
             //GWB-NR
             SETLL (#1AACD:#1AFNB:#1GWNB:#1GWNB:#1GWNB:GNC12N:C10KKK:GBKKKK) @BZREFY;
             READ @BZREFY ;
       *in54 = %eof();
             If *In54;
               *InLR = *On;
             Endif;
     C   54              GOTO      XYZXYZ
     C     VOLGBZ        TAG
             If #1AACD = BZAACD AND #1AFNB = BZAFNB; //AFD
               If #1GWNB = BZK5NB AND #1GWNB = BZBJDM AND GNC12N = BZCGCD; //REFMND
                 If BZCDCD <> #1A1CD; //TYPE VERSCH.
         WUW207 = '1';
     C                   GOTO      XYZXYZ
                 ENDIF;
     EvalR   GBTSTN = '00';            2
     EvalR   GBTSTN = BZK3NB;
                 If GBTSTN <> #1A2CD; //GB-NR VERSCH
         WUW207 = '2';
     C                   GOTO      XYZXYZ
                 ENDIF;
               ENDIF; //ZELFDE REF.M
             ELSE;
     C                   GOTO      XYZXYZ
             ENDIF; //ZELFDE LIDNR
             READ @BZREFY ;
       *in54 = %eof();
             If *In54;
               *InLR = *On;
             Endif;
     C   54              GOTO      XYZXYZ
     C     XYZXYZ        TAG
     C                   MOVEA     UWIN4         *IN(54)
           ENDIF; //GWNB<LP.MD-5
            // Switch207=1:Type wklh. verschilt met oorspronkelijke betaling.
            // CASE: WRK.switch207 is 1
           If WUW207 = '1'; //*IF
              // Send message 'Type wklh. verschilt met'
         ZAMSID = 'USR2036';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // Switch207=2:GB-nr verschilt met oorspronkelijke betaling
            // CASE: WRK.switch207 is 2
           If WUW207 = '2'; //*IF
              // Send message 'GB-nr verschilt met 1ste'
         ZAMSID = 'USR2035';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // Cmd23 --> Display wkl controlerecord
            // CASE: DTL.*CMD key is CF23
           If *IN23 = '1'; //*IF
              // Display Wkl controlerecor - Wkl controle  *
             //Display Wkl con

             LVO6D1R(W0RTN);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVO6D1R';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
         W0DCF = 'Y';                          *Defer confirm
           Endif; //*FI
         WUC6CD = *BLANK;                         blanko
         WULNCD = 'N';                         Sw type 02/04
         WULOCD = 'N';                         Sw type01/03/08
         WULQCD = 'N';                         Sw type 09/10
         WULPCD = 'N';                         Sw type 13/14
         WUTY18 = 'N';                         Switch type 18
         WUCC18 = *BLANK;                         WRK controle 18
         WUPSCD = '0';                         Switch berekeni
         WUCA75 = '0';                         Wrk switch hidd
         WUCA40 = '0';                         Regime 6 - 5 BA
            // vraagteken in BD veld (betaaldossier)
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.Wkl bet CDE vrij2 is vraagteken1
            //   !- c2    : DTL.Wkl bet CDE vrij2 is vraagteken2
            //   '-
           If #1MPCE = '?' OR #1MPCE = ' ?'; //*IF
              // Overzicht documenten BD - Documenten Betaaldossier  *
             CLEAR   ADRC;
     C                   MOVEL(P)  @CN(034)      ADYVCJ                         Documenten BD T
     C                   MOVEL(P)  WUYXCJ        ADYXCJ                         Documenten BD t
             CLEAR   AERC;
     C                   MOVEL(P)  #1AACD        AEAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AEAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AEY0CJ                         Doc BD meer bet
             AEQLDM = #1GWNB; //Doc BD meer RM
             AEQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AEY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  *BLANK        AEY2CJ                         Doc BD meer doc
     C                   MOVEL(P)  *BLANK        AEW3TN                         Doc BD meer doc
     C                   MOVEL(P)  #1EGCD        AEY3CJ                         Doc BD meer C12
             AEQ4DE = WUQ4DE; //Doc BD meer dtm
             AEQNDM = #1HJNB; //Doc BD meer dok
     C                   MOVEL(P)  'D'           AEY4CJ                         Doc BD meer dag

             //Overzicht docum
             //KEY: Documenten
             //RCD: Documenten
             //wrk return key
             //WRK document BD

             LZGWEFR(W0RTN:ADRC:AERC:WQ0269:WQ0270);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LZGWEFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
              // Check Documenten - Documenten BD meerdere  *
             EXSR SDRVGN;
              // CASE: LCL.WRK record found is Yes
             If YL0018 = 'Y'; //*IF
         #1MPCE = *BLANK;                         Wkl bet CDE vri
         #1MPCE = 'Y';                         Wkl bet CDE vri
             ELSE;
                // CASE: *OTHERWISE
         #1MPCE = *BLANK;                         Wkl bet CDE vri
             Endif; //*FI
           ELSE;
              // CASE: *OTHERWISE
              // Test veld BD  (Karina)
              // CASE:
              //  - NOTc1 AND NOT c2
              //   !- c1    : DTL.Wkl bet CDE vrij2 is Y
              //   !- c2    : DTL.Wkl bet CDE vrij2 is Blanco
              //   '-
         Y0CX01 = '0';            1
             If #1MPCE = 'Y'; //*IF
             ELSE;
               If #1MPCE = *BLANK; //*IF
               ELSE;
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
                // Setup message data for message
         ZA0040 = #1MPCE;                         Wkl bet CDE vri
         ZA0041 = @CN(035);                         Wrk veld 15 lan
                // Send message 'Waarde moet &2 zijn'
         ZAMSID = 'USR6029';
               EXSR ZASNMS;
               *In99 = *On;

                // *Set Cursor: DTL.Wkl bet CDE vrij2  (*Override=*YES)
               W0ROW1 = 015;
               W0COL1 = 068;
         W0OVR1 = '1';                         *YES
         WUPSCD = '1';                         Switch berekeni
             ELSE;
                // CASE: *OTHERWISE
                // Check Documenten - Documenten BD meerdere  *
               EXSR SERVGN;
                // CASE:
                //  - c1 AND c2
                //   !- c1    : DTL.Wkl bet CDE vrij2 is Y
                //   !- c2    : LCL.WRK record found is No
                //   '-
         Y0CX01 = '0';            1
               If #1MPCE = 'Y'; //*IF
                 If YL0018 = 'N'; //*IF
         Y0CX01 = '1';
                 Endif; //*FI
               Endif; //*FI
               If Y0CX01 = '1'; //*IF
                  // Setup message data for message
         ZA0042 = #1MPCE;                         Wkl bet CDE vri
                  // Send message 'Geen documenten BD'
         ZAMSID = 'USR6400';
                 EXSR ZASNMS;
                 *In99 = *On;

                  // *Set Cursor: DTL.Wkl bet CDE vrij2  (*Override=*YES)
                 W0ROW1 = 015;
                 W0COL1 = 068;
         W0OVR1 = '1';                         *YES
         WUPSCD = '1';                         Switch berekeni
               ELSE;
                  // CASE: *OTHERWISE
                  // CASE:
                  //  - c1 AND c2
                  //   !- c1    : DTL.Wkl bet CDE vrij2 is Blanco
                  //   !- c2    : LCL.WRK record found is Yes
                  //   '-
         Y0CX01 = '0';            1
                 If #1MPCE = *BLANK; //*IF
                   If YL0018 = 'Y'; //*IF
         Y0CX01 = '1';
                   Endif; //*FI
                 Endif; //*FI
                 If Y0CX01 = '1'; //*IF
                    // Setup message data for message
         ZA0043 = #1MPCE;                         Wkl bet CDE vri
                    // Send message 'Er zijn documenten BD'
         ZAMSID = 'USR6401';
                   EXSR ZASNMS;
                   *In99 = *On;

                    // *Set Cursor: DTL.Wkl bet CDE vrij2  (*Override=*YES)
                   W0ROW1 = 015;
                   W0COL1 = 068;
         W0OVR1 = '1';                         *YES
         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // OCV +barema ICLD
            // CASE:
            //  - c1ANDc2
            //   !- c1    : DTL.Type wklh. kode is 53
            //   !- c2    : DTL.Barema RVAkode is ..ICLD.
            //   '-
         Y0CX01 = '0';            1
           If #1A1CD = '53'; //*IF
             If #1DOCD = @CN(003); //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
             WUGENE = WUX8ND / 100; //Wrk eindmaand t
              // CASE: DTL.Datum achterstal EQ WRK.Wrk eindmaand type53
             If #1GWNB = WUGENE; //*IF
                // CASE: DTL.VD6 GT WRK.Aantal dgn R6 OCV te bet
               If #1GLNB > WUGHNE; //*IF
                  // Setup message data for message
         ZA0044 = WUPYCK;                         Wrk dtm 10 lang
                  // Send message 'Aantal dagn OCV ICLD te g'
         ZAMSID = 'USR6701';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // BZ=BA regime 5 dagen of 6 dagen naargelang codes ingevuld
            // CASE: DTL.BZ kode is BA
           If #1A4CD = 'BA'; //*IF
              // CASE: DTL.Beroep kode is 09 : Dok A'pen
             If #1BACD = '09'; //*IF
         WUCA40 = '5';                         Regime 6 - 5 BA
             ELSE;
                // CASE: *OTHERWISE
         WUCA40 = '6';                         Regime 6 - 5 BA
             Endif; //*FI
           Endif; //*FI
            // Alle TV'en passief en minstens 1 met saldo>0: info
            // CASE: WRK.Switch205 is 1
           If WUW205 = '1'; //*IF
              // Send message 'Geen enkele Tv aktief,wel'
         ZAMSID = 'USR1858';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // Opv hulpzones vr betaling - Wkl betaling  *
     EvalR   PD1AL = #1AINB;             6 0          1E DL PENS.NR
         BARACL = *BLANK;            5
         BARVW5 = *BLANK;            5
         BARFOR = *BLANK;            5
         POST1 = *BLANK;             1
           If WUW002 = '0'; //TYPE02,F1
             HVD6 = 0; //VD6
             HHD6 = 0; //HD6
           Endif;
           If WUW002 <> 'D'; //TYPE02,F1
             HVD5 = 0; //VD5
             HHD5 = 0; //HD5
           ENDIF;
           HUREN = 0; //UREN P GED W
           HVBZ = 0; //VBZ
           HHBZ = 0; //HBZ
           HVBZ1B = 0; //VBZ1
           HHBZ1B = 0; //HBZ1
           HVBZ2B = 0; //VBZ2
           HHBZ2B = 0; //HBZ2
           HVVOR = 0; //VVORST
           HHVOR = 0; //HVORST
           HVVERL = 0; //VVERLOF
           HHVERL = 0; //HVERLOF
           HVBV = 0; //VBVERLOF
           HHBV = 0; //HBVERLOF
           HWKL = 0; //WKLH
           HBEDBZ = 0; //BEDR BZ
           BZINH = 0; //BEDR BZINH BP
           HTAKS = 0; //TAKS
           HTAKSW = 0; //TAKS WKL
           HTAKSB = 0; //TAKS BZ
           NET = 0; //NETTO
           HNET = 0; //NETTO TV
           HNET1 = 0;
           HNET2 = 0;
           RWP = 0; //RWP
           HX2 = 0; //X2 BEDR
           HBEDBC = 0; //BEDRAG BC
           HBEDB1 = 0;
           HBEDB2 = 0;
           BCAAN1 = 0;
           BCAAN2 = 0;
           BCAAAA = 0;
           AFDBD1 = 0;
           AFDBD2 = 0;
           HY = 0; //Y
           HYFT = 0; //YFT
           HUBV = 0; //UREN BET VER
           HVW = 0; //VW
           HMIN = 0; //MIN
           HZA = 0; //Z+A
           HC32 = 0; //C3.2
           VMHAL = 0; //HALVE VOOR KUMULDGN
            //                    Z-ADD0         DAGB1   84       COMPL TEXTIE
           HQX4 = #1F3NB; //QX4
           HVBAR = 0; //BEDR BAR.VOL
           HHBAR = 0; //BEDR BAR.HAL
           HVBARB = 0; //T09 BAR.VOL
           HHBARB = 0; //T18 BAR.HAL
           HVFOR = 0; //BAR.VOL FORF
           HHFOR = 0; //BAR.HAL FORF
           HV05 = 0; //BDR.BARVOL05
           HH05 = 0; //BDR.BARHAL05
           HVBAR5 = 0; //BEDR BAR.VOL
           HHBAR5 = 0; //BEDR BAR.HAL
           HV501 = 0; //BEDR 01VOLLE
           HH501 = 0; //BEDR 01HALVE
           VVLOER = 0; //VLOERBEDRAG VOL
           HVLOER = 0; //VLOERBEDRAG HALF
         FOUTKO = '0';            1
           HBEDVO = 0; //BEDR VORST
           HBBVO = 0; //BEDR VORST BB
           SOMBVO = 0;
           PROD = 0;
           DEEL = 0;
           DECIM = 0;
           HOOFD = 0;
           HVTOT6 = 0;
           HHTOT6 = 0;
           HVAL6 = 0;
           HHAL6 = 0;
           DELVOR = 0;
           VORST2 = 0;
           DECIMV = 0;
           HOOFDV = 0;
           DELWKL = 0;
           DELW27 = 0;
         ' = ';           SWT27             1
           MIN = 0;
           GPNBVR = 0;
           GPNBNA = 0;
           HHAL6 = 0;
           DELBZ = 0;
           SOMBZ = 0;
           SOMBZV = 0;
           DELVER = 0;
           DELV = 0;
           DELBV = 0;
           DELWK2 = 0;
           PRODY = 0;
           FORM1 = 0;
           DELY = 0; //?
           DECIMY = 0; //?
           DECBVY = 0; //?
           AFTREK = 0;
           PROBVY = 0;
           DELBVY = 0;
           HHDBV = 0;
           SOM = 0;
           SOM2 = 0;
           SOM3 = 0;
           VERS1 = 0;
           VERS2 = 0;
           RESULT = 0;
           S0010 = 0;
           S00BED = 0;
           BAFH1 = 0;
           BAFH2 = 0;
           BAFH3 = 0;
           BAFH4 = 0;
           BAFH5 = 0;
           BAFH6 = 0;
           HAFH1B = 0;
           HAFH2B = 0;
           HAFH3B = 0;
           HAFH4B = 0;
           HAFH5B = 0;
           HAFH6B = 0;
           VERSC3 = 0;
           VERSC2 = 0;
           DEEL25 = 0;
           DEEL27 = 0;
           DEEL33 = 0;
           TOTBZ = 0;
           TOTBZX = 0;
           TOTBZY = 0;
           TOTBOU = 0;
           HKRBZ = 0;
           HHBZHU = 0;
           HVBZD1 = 0;
           HKRRES = 0;
           RESUL2 = 0;
           KUMLM = 0;
           KUMVM = 0;
           KUMHAL = 0;
           JJAACH = 0;
           MMAACH = 0;
           JJMACH = 0;
           JBIJDR = 0;
           MBIJDR = 0;
           MAXAAN = 0;
           JBCJBC = 0;
           JWKLJ = 0;
           MWKLM = 0;
           XXKBF = 0;
           XXNTV = 0; //NIET-VERGOEDBAAR
           LEEFT = 0;
           LEEFTT = 0;
           HHHHBZ = 0;
           DATFO = #1A6DM;
           DGNLM = 0;
           DAGHS = 0;
           HDAGHS = 0;
           HALFHS = 0;
           VOLHS = 0;
           HHD6T1 = 0;
           HVD6T1 = 0;
           HHD6T2 = 0;
           HVD6T2 = 0;
           HHBZ1 = 0;
           HVBZ1 = 0;
           HHBZ2 = 0;
           HVBZ2 = 0;
           RES = 0;
           RES1 = 0;
           RES2 = 0;
           VERM1 = 0;
           VERM11 = 0;
           VERM2 = 0;
           VERM22 = 0;
           HUV = 0; //?
           HYUUR = 0;
           ARBURN = 0;
           ARBUR = 0;
           NAKOM = 0;
           YNETB = 0;
           YNET = 0;
           VOORH = 0;
           DAGT = 0;
         SITUAT = *BLANK;            3
           VOLBED = 0;
           HALBED = 0;
           C32NK = 0;
           HWKL1 = 0;
           HWKL2 = 0;
           DEC05 = 0;
           DEC05V = 0;
           DEC05N = 0;
           HHD605 = 0;
           HVD605 = 0;
           NEGTAK = 0;
           TOTPLU = 0;
           NEGPOS = 0;
           HVD6T2 = 0;
           HHD6T2 = 0;
           HBED02 = 0;
           BV12MD = 0; //BV DGN 12E MND
         CATBC = *BLANK;             2
           JRCATB = 0;
           MDKAT = 0;
           WYZKAT = 0;
           S18TOT = 0;
           T02IND = 0;
           T02REF = 0;
         WULECF = *BLANK;            1            T27
           ZPLA = 0;
           ZDLA = 0;
           WKREG = 0;
     EvalR   W1MA = #1ALST;              1 0
     EvalR   W1DI = #1AMST;              1 0
     EvalR   W1WO = #1ANST;              1 0
     EvalR   W1DO = #1AOST;              1 0
     EvalR   W1VR = #1APST;              1 0
     EvalR   W1ZA = #1AQST;              1 0
           WKREG = WKREG + W1MA;
           WKREG = WKREG + W1DI;
           WKREG = WKREG + W1WO;
           WKREG = WKREG + W1DO;
           WKREG = WKREG + W1VR;
           WKREG = WKREG + W1ZA;
            // Veld geen uren ged.wkl opvullen als blank is
            // CASE: DTL.Geen uren ged. wkl. EQ WRK.blanko
           If #1ISCD = WUC6CD; //*IF
         #1ISCD = 'Y';                         Geen uren ged.
           Endif; //*FI
            // Veld geen bedrag BZ opvullen als blank is
            // CASE: DTL.Geen bedrag wklh EQ WRK.blanko
           If #1BDST = WUC6CD; //*IF
         #1BDST = 'Y';                         Geen bedrag wkl
           Endif; //*FI
            // Veld geen dagen/bedrag BZ opvullen als blank is
            // CASE: DTL.Geen dagen/bedrag BZ EQ WRK.blanko
           If #1BCST = WUC6CD; //*IF
         #1BCST = 'Y';                         Geen dagen/bedr
           Endif; //*FI
            // Controle 12e mnd en V/BV - Wkl betaling  *
     EvalR   WUWU57 = '0';            1            SWITCH157
           If MNDACH = 12;
             If #1A1CD <> '02' AND #1A1CD <> '04' AND #1A1CD <> '06' AND #1A1CD <> '50' AND #1A1CD <> '51' AND #1A1CD <> '52' AND #1A1CD <> '29' AND #1A1CD <> '27';
               If #DMTNB <> *ZERO; //BV
                 BV12MD = #1JONB / 2; //HBV/2
                 BV12MD = BV12MD + #1G7NB; //+VOLLE BV
                 If BV12MD < #DMTNB; //INGEBRACHTE
     EvalR   WUWU57 = '1';                         BV<BV F13-SCHER
                 ENDIF; //BV12MD<F13BV
               Endif; //NOG BV DAGEN
             Endif; //NT 02/NT04/NT06
           Endif; //12E MAAND
           If #1A4CD = '35' OR #1A4CD = '85' OR #1A4CD = 'BA' OR #1A4CD = 'FZ' OR #1A4CD = 'PZ';
     EvalR   WUWU57 = '0';                         BV<BV F13-SCHER
           ENDIF; //BV12MD<F13BV
            // CASE: DTL.Datum achterstal is < 201401
           If #1GWNB < 201401; //*IF
              // 12e maand en er zijn nog V / BV dagen : error bericht
              // CASE: WRK.Switch157 is 1
             If WUWU57 = '1'; //*IF
                // Send message 'Opgelet : nog BV dagen'
         ZAMSID = 'USR1261';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             ELSE;
                // CASE: *OTHERWISE
                // CASE: WRK.Switch157 is 2
               If WUWU57 = '2'; //*IF
               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: WRK.Switch157 is 3
                 If WUWU57 = '3'; //*IF
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Eerst BV, dan V uitputten : 071995
            // CASE: DTL.Wkl Kr.BV is > 0
           If #DMTNB > *ZERO; //*IF
              // CASE:
              //  - c1ORc2
              //   !- c1    : DTL.Volle dagen verlof is niet 0
              //   !- c2    : DTL.Halve dagen verlof is niet 0
              //   '-
             If #1GNNB <> *ZERO OR #1JLNB <> *ZERO; //*IF
               WUCA80 = *ZERO; //Wrk delen halve
               WUCA80 = #1JONB / 2; //Wrk delen halve
               WUCA80 = WUCA80 + #1G7NB; //Wrk delen halve
                // CASE: WRK.Wrk delen halve dagen LT DTL.Wkl Kr.BV
               If WUCA80 < #DMTNB; //*IF
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Controle afhouding IR,IR- - Wkl betaling  *
     EvalR   WUW1CD = '0';
           If #1A1CD <> '15'; //TYPE 15
             If #1DVCD = 'IR ' OR #1DVCD = 'IR-' OR #1DWCD = 'IR ' OR #1DWCD = 'IR-' OR #1DXCD = 'IR ' OR #1DXCD = 'IR-' OR #1DYCD = 'IR ' OR #1DYCD = 'IR-' OR #1EDCD = 'IR ' OR #1EDCD = 'IR-' OR #1EECD = 'IR ' OR #1EECD = 'IR-'; //AFH1 KODE
     EvalR   WUW1CD = '1';
             Endif; //AFH KODES
           Endif; //NT 13,14,15
            // swIR = 1 --> IR en IR- enkel mogelijk bij type 13, 14 en 15
            // CASE: WRK.swIR is 1
           If WUW1CD = '1'; //*IF
              // Send message 'IR & IR- : type 13,14,15!'
         ZAMSID = 'USR0764';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
            // Controle wijziging afh. - Wkl bet  *
           If RESULT >= 0;
     EvalR   WUPRCD = '0';
         AFHP1 = #1DVCD;             1            POS1 AFHKODE
         WAFHP1 = WUPJCD;            1
             If #1DVCD <> WUPJCD; //AFH1 KODE
               EXSR AFHWYZ;
               If WUPRCD = '2';
     EvalR   #1OYCD = *BLANK;                         AFH1 KODE TV
     EvalR   WUPJCD = *BLANK;
               Endif;
             Endif;
         AFHP1 = #1DWCD;             1
         WAFHP1 = WUPKCD;            1
             If #1DWCD <> WUPKCD; //AFH2 KODE
               EXSR AFHWYZ;
               If WUPRCD = '2';
     EvalR   #1OZCD = *BLANK;                         AFH2 KODE TV
     EvalR   WUPKCD = *BLANK;
               Endif;
             Endif;
         AFHP1 = #1DXCD;             1
         WAFHP1 = WUPLCD;            1
             If #1DXCD <> WUPLCD; //AFH3 KODE
               EXSR AFHWYZ;
               If WUPRCD = '2';
     EvalR   #1O0CD = *BLANK;                         AFH3 KODE TV
     EvalR   WUPLCD = *BLANK;
               Endif;
             Endif;
         AFHP1 = #1DYCD;             1
         WAFHP1 = WUPMCD;            1
             If #1DYCD <> WUPMCD; //AFH4 KODE
               EXSR AFHWYZ;
               If WUPRCD = '2';
     EvalR   #1O1CD = *BLANK;                         AFH4 KODE TV
     EvalR   WUPMCD = *BLANK;
               Endif;
             Endif;
         AFHP1 = #1EDCD;             1
         WAFHP1 = WUPNCD;            1
             If #1EDCD <> WUPNCD; //AFH5 KODE
               EXSR AFHWYZ;
               If WUPRCD = '2';
     EvalR   #1O2CD = *BLANK;                         AFH5 KODE TV
     EvalR   WUPNCD = *BLANK;
               Endif;
             Endif;
         AFHP1 = #1EECD;             1
         WAFHP1 = WUPOCD;            1
             If #1EECD <> WUPOCD; //AFH6 KODE
               EXSR AFHWYZ;
               If WUPRCD = '2';
     EvalR   #1O3CD = *BLANK;                         AFH6 KODE TV
     EvalR   WUPOCD = *BLANK;
               Endif;
             Endif;
           Endif;
            // Swafh=1:O01,..,S01,.. en TV werden gewijzigd door bediende-->erro
            // CASE: WRK.swafh is 1
           If WUPRCD = '1'; //*IF
              // Send message 'Wijzig.afh kodes nt toege'
         ZAMSID = 'USR0464';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Contr TV's&TB-'s omwissel - Wkl betaling  *
     EvalR   WUWUTV = '0';            1
         LET1 = *BLANK;              1
         LET11 = *BLANK;             1
         LET1 = #1DVCD;
         LET11 = #1OYCD;
           EXSR OMWIS;
         LET1 = #1DWCD;
         LET11 = #1OZCD;
           EXSR OMWIS;
         LET1 = #1DXCD;
         LET11 = #1O0CD;
           EXSR OMWIS;
         LET1 = #1DYCD;
         LET11 = #1O1CD;
           EXSR OMWIS;
         LET1 = #1EDCD;
         LET11 = #1O2CD;
           EXSR OMWIS;
         LET1 = #1EECD;
         LET11 = #1O3CD;
           EXSR OMWIS;
            // SwTV=1: TV kodes G. zonder kode T01, T02, .... --> error
            // CASE: WRK.Wrk controle TV's is 1
           If WUWUTV = '1'; //*IF
              // Send message 'Wijzig.afh kodes nt toege'
         ZAMSID = 'USR0464';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Contr data barema,vrijst4 - Wkl betaling  *
     EvalR   WUF9CD = '0';                         SW10 DGN>MAX
     EvalR   WUGACD = '0';                         SW11 DGN>MAX
     EvalR   WUGCCD = '0';                         SW13 BV>MAX
     EvalR   WUGECD = '0';                         SW15 BZ>MAX
     EvalR   WUGXCD = '0';                         SW16 VO>MAX
     EvalR   WUGYCD = '0';                         SW17 KBF>MA
     EvalR   WUGZCD = '0';                         SW18 ZELF BEREK
     EvalR   WUG0CD = '0';            1            SW19 0-KODE
     EvalR   WUG1CD = '0';            1            SW20 VERBLI
     EvalR   WUG2CD = '0';                         SW21 SANKTI
     EvalR   WUG4CD = '0';            1            SW23 ARBEID
     EvalR   WUG5CD = '0';                         SW24 PENSIOEN
     EvalR   WUG6CD = '0';            1            SW25 Y,YFT
     EvalR   WUHXCD = '0';                         SW26 TB-,IR-
     EvalR   WUJHCD = '0';            1            SW40 BZ ZEL
     EvalR   WUJICD = '0';            1            SW41 BZ=B
     EvalR   WUOWCD = '0';                         SW80 ACHT
     EvalR   WUW194 = '0';                         SW194 ..T...
            // 6-DAGENSTELSEL
           SOM6DD = #1GMNB / 2; //HD6/2
           SOMVD = #1JLNB / 2; //HVERL/2
           If #1JONB >= 0;
             SOMBVD = #1JONB / 2; //HBV/2
           ENDIF;
           SOM6D = SOM6DD + SOMBVD; //HD6/2+HV/2
           SOM6D = SOM6D + SOMVD; //SOM6D+HBV/2
           SOM6D = SOM6D + #1GLNB; //SOM+VD6
           SOM6D = SOM6D + #1GNNB; //SOM+V
           If #1G7NB >= 0;
             SOM6D = SOM6D + #1G7NB; //SOM+BV
           ENDIF;
           DELBZ = #1JNNB / 2;
           DELVOR = #1JMNB / 2;
           DELBZ = DELBZ + #1GPNB;
           DELVOR = DELVOR + #1GONB;
           DELBZ = DELBZ + DELVOR;
            // 5-DAGENSTELSEL : DOK NIET A'PEN EN RIVIERARBEIDERS
           DELDOK = #1GHNB / 2;
           DELDOK = DELDOK + #1GGNB;

           If #1GWNB = BYEENB; //ACHT=LOP MND
              // VD6 + HD6 + V + HV + BV + HBV MOET <= AAN MAX VD6/WKLMAAND
             If SOM6D > BYD6NB;
     EvalR   WUF9CD = '1';
               If #1A1CD = '12';
         WUF9CD = '0';
                 If SOM6D > 30;
         WUF9CD = '1';
                 ENDIF; //30DAGEN
               ENDIF; //TYPE 12
               If #1A1CD = '27';
         WUF9CD = '0';
               ENDIF; //TYPE 27
               If #1A1CD = '05' OR #1A1CD = '57';
         WUF9CD = '0';
                 If SOM6D > 33;
         WUF9CD = '1';
                 ENDIF; //33DAGEN
               ENDIF; //TYPE 05/57
             ELSE;
               SOMKBF = 0;
               SOMKBF = SOM6D + #1GXNB; //+KBF
               SOMKBF = SOMKBF + #1BBNR; //+KBF
               If SOMKBF > BYD6NB;
     EvalR   WUF9CD = '1';
                 If #1A1CD = '12';
         WUF9CD = '0';
                   If SOMKBF > 30;
         WUF9CD = '1';
                   ENDIF; //30DAGEN
                 ENDIF; //TYPE 12
                 If #1A1CD = '27';
         WUF9CD = '0';
                 ENDIF; //TYPE 27
                 If #1A1CD = '05' OR #1A1CD = '57';
         WUF9CD = '0';
                   If SOMKBF > 33;
         WUF9CD = '1';
                   ENDIF; //33DAGEN
                 ENDIF; //TYPE 05/57
               Endif;
             Endif;
              // DAGEN VD5 + HD5 KLEINER OF GELIJK AAN MAXIMUM
             If DELDOK > BYD7NB;
     EvalR   WUGACD = '1';
             ELSE;
               If DELDOK > 0;
                 SOMKBF = 0;
                 SOMKBF = DELDOK + #1GXNB; //+KBF
                 SOMKBF = SOMKBF + #1BBNR; //+KBF
                 If SOMKBF > BYD7NB;
     EvalR   WUGACD = '1';
                 Endif;
               Endif;
             Endif;
              //  DAGEN BZ+HBZ+VORST+HVORST KLEINER OF GELIJK AAN MAXIMUM VD6
             If #1A1CD <> '02';
               If #1A1CD <> '05';
                 If #1A1CD <> '57';
                   If #1A1CD <> '12';
                     If DELBZ > BYEANB;
     EvalR   WUGECD = '1';
                     Endif;
                   ELSE; //TYPE 12
                     If DELBZ > 30;
     EvalR   WUGECD = '1';
                     Endif; //END 30
                   ENDIF; //TYPE 12
                 ELSE; //TYPE 57
                   If DELBZ > 28;
     EvalR   WUGECD = '1';
                   Endif; //END 28
                 Endif; //END TYPE 57
               ELSE; //TYPE 05
                 If DELBZ > 28;
     EvalR   WUGECD = '1';
                 Endif; //END 28
               Endif; //END TYPE 05
             ELSE; //TYPE 02
               If DELBZ > 31;
                 If #1A4CD = 'B ';
                   If DELVOR > 0;
                     DELBZ = DELBZ - DELVOR;
                     If DELBZ > 31;
     EvalR   WUGECD = '1';
                       DELBZ = DELBZ + DELVOR;
                     ELSE; //<= 28 DAGEN
                       DELBZ = DELBZ + DELVOR;
                     ENDIF; //END > 28
                   ELSE; //DELVOR=0
     EvalR   WUGECD = '1';
                   ENDIF; //END DELVOR>0
                 ELSE; //BZ <> B
     EvalR   WUGECD = '1';
                 ENDIF; //GEEN BOUW
               Endif; //END 28
             Endif; //END TYPE 02
              // DGN KBF SANKTIE/DGN NT VERGOEDBAAR KLEINER OF GELIJK AAN MAXIMUM VD6
             If #1GXNB > BYD6NB OR #1BBNR > BYD6NB;
     EvalR   WUGYCD = '1';
             Endif;

           ELSE; //ACHT<WKLMAAND
             If SOM6D > 27;
     EvalR   WUOWCD = '1';                         ACHT DGN>27
               If #1A1CD = '12';
     EvalR   WUOWCD = '0';
                 If SOM6D > 30;
     EvalR   WUOWCD = '1';                         ACHT DGN>30
                 ENDIF; //30DAGEN
               ENDIF; //TYPE 12
               If #1A1CD = '02';
     EvalR   WUOWCD = '0';
                 If SOM6D > 31;
     EvalR   WUOWCD = '1';                         ACHT DGN>28
                 ENDIF; //28DAGEN
               ENDIF; //TYPE 02
               If #1A1CD = '27';
     EvalR   WUOWCD = '0';
                 If SOM6D >= 28;
     EvalR   WUOWCD = '1';                         ACHT DGN>27,5
                 ENDIF; //28DAGEN
               ENDIF; //TYPE 27
               If #1A1CD = '05' OR #1A1CD = '57';
     EvalR   WUOWCD = '0';
                 If SOM6D > 33;
     EvalR   WUOWCD = '1';                         ACHT DGN>33
                 ENDIF; //33DAGEN
               ENDIF; //TYPE 05/57
             ELSE;
               SOMKBF = 0;
               SOMKBF = SOM6D + #1GXNB; //+KBF
               SOMKBF = SOMKBF + #1BBNR; //+NT VERGOEDBAAR
               If SOMKBF > 27;
     EvalR   WUOWCD = '1';                         ACHT DGN>27
               Endif;
               If #1A1CD = '27';
     EvalR   WUOWCD = '0';
                 If SOMKBF >= 28;
     EvalR   WUOWCD = '1';                         ACHT DGN>27,5
                 Endif;
               ENDIF; //TYPE 27
             Endif;
             If DELBZ > 27;
     EvalR   WUOWCD = '1';                         ACHT BZ>27
               If #1A1CD = '27';
     EvalR   WUOWCD = '0';
                 If DELBZ >= 28;
     EvalR   WUOWCD = '1';                         ACHT DGN>27,5
                 Endif;
               ENDIF; //TYPE 27
             Endif;
             If DELDOK > 23;
     EvalR   WUOWCD = '1';                         ACHT DOK>25
             ELSE;
               If DELDOK > 0;
                 SOMKBF = 0;
                 SOMKBF = DELDOK + #1GXNB;
                 SOMKBF = SOMKBF + #1BBNR; //+NT VERGOEDBAAR
                 If SOMKBF > 23;
     EvalR   WUOWCD = '1';                         ACHT DGN>23
                 Endif; //END>23
               Endif; //END DELDOK<>
             Endif; //END DELDOK23
             If #1A1CD = '02';
     EvalR   WUOWCD = '0';                         ACHT DGN>32 IPV 27
     EvalR   WUGECD = '0';                         ACHT DGN>28,5
               DELBZ = DELBZ - DELVOR;
               If SOM6D > 31;
     EvalR   WUOWCD = '1';                         ACHT DGN>28,5
               ENDIF;
               If DELBZ > 31;
     EvalR   WUGECD = '1';                         ACHT DGN>28,5
               ENDIF;
               DELBZ = DELBZ + DELVOR;
             ENDIF;
           Endif; //ACHT=WKLMND
            //  DAGEN BV + HBV EN V + HV KLEINER OF GELIJK AAN 24
           DELBV = #1JONB / 2;
           DELBV = DELBV + #1G7NB;
           If DELBV > 24;
     EvalR   WUGCCD = '1';
           Endif;
           DELV = #1JLNB / 2;
           DELV = DELV + #1GNNB;
           If DELV > 24;
     EvalR   WUGCCD = '1';
           Endif;
            // VOOR 199707 WKLH EN BZ ZELF INBRENGEN
           If #1GWNB < 199707 AND #1GYNB = *ZERO AND #1HPNB = *ZERO; //ACK<KL DATUM
     EvalR   WUGZCD = '1';
           ENDIF;
           If #1GWNB >= BYEHNB;
             If #1GKNB <> *ZERO; //YFT NT NUL
               If #1GJNB = *ZERO; //Y=0
     EvalR   WUG6CD = '2';                         SWITCH25
               Endif;
             Endif;
           Endif;
            //  DATUM 0-KODE <= DATUM WKLHMAAND
         JJMMBV = #1AEDT;            6 0          JJJJMM 0-KODE
            //  DATUM VERBLIJFSVERG <= DATUM WKLHMAAND, BEDRAG BZ EN WKL = 0
           EXTBDR = #1HPNB;
           EXTBZ = #1GYNB;
           RMPAR = #1GWNB;
           T02IND = BYEENB;
           //AFD.
           //LIDNR
           //REF.MND
           //IM.MND
           //SWITCH20
            //  DATUM ARBEIDSVERGUNNING <= DATUM WKLHMAAND
         JJMMBV = #1AIDT;            6 0          JJJJMM ARBVE
           If JJMMBV <> *ZERO;
             If JJMMBV <= BYEENB AND JJMMBV < #1GWNB AND #1HPNB = *ZERO AND #1GYNB = *ZERO;
     EvalR   WUG4CD = '1';
             Endif;
           Endif;
            // DATUM EINDE SANKTIE >= WKLHMAAND ==> NT BETALEN/ZELF BEDR INVUL
         JJMMBV = #1ALDT;            6 0          BEGIN SANKTI
         JJMMVR = #1AMDT;            6 0          EIND SANKTIE
           If JJMMVR <> *ZERO; //EIND NT 0
             If #1GWNB >= JJMMBV AND #1GWNB <= JJMMVR; //ACH>BEG SANK
               If #1HPNB = *ZERO AND #1GYNB = *ZERO AND #1GXNB = *ZERO AND #1BBNR = *ZERO; //BEDR WKLH=0
                 If #1A1CD <> '00' AND #1A1CD <> '21' AND #1A1CD <> '22'; //NT TYPE 00
     EvalR   WUG2CD = '1';
                 Endif;
               Endif;
             Endif;
           Endif;
           If JJMMVR = *ZERO; //EIND=0
             If JJMMBV <> *ZERO; //BEGIN INGEV.
               If #1GWNB >= JJMMBV AND #1HPNB = *ZERO AND #1GYNB = *ZERO AND #1GXNB = *ZERO AND #1BBNR = *ZERO; //ACH>BEG SANK
                 If #1A1CD <> '00' AND #1A1CD <> '21' AND #1A1CD <> '22';
     EvalR   WUG2CD = '1';
                 Endif;
               Endif;
             Endif;
           Endif;
            // DATUM EINDE SANKTIE >= WKLHMAAND ==> NT BETALEN/ZELF BEDR INVUL
         JJMMBV = #1MBDD;            6 0          BEGIN SANKTI
         JJMMVR = #1MCDD;            6 0          EIND SANKTIE
           If JJMMVR <> *ZERO; //EIND NT 0
             If #1GWNB >= JJMMBV AND #1GWNB <= JJMMVR; //ACH>BEG SANK
               If #1HPNB = *ZERO AND #1GYNB = *ZERO AND #1GXNB = *ZERO AND #1BBNR = *ZERO; //BEDR WKLH=0
                 If #1A1CD <> '00' AND #1A1CD <> '21' AND #1A1CD <> '22'; //NT TYPE 00
     EvalR   WUG2CD = '1';
                 Endif;
               Endif;
             Endif;
           Endif;
           If JJMMVR = *ZERO; //EIND=0
             If JJMMBV <> *ZERO; //BEGIN INGEV.
               If #1GWNB >= JJMMBV AND #1HPNB = *ZERO AND #1GYNB = *ZERO AND #1GXNB = *ZERO AND #1BBNR = *ZERO; //ACH>BEG SANK
                 If #1A1CD <> '00' AND #1A1CD <> '21' AND #1A1CD <> '22';
     EvalR   WUG2CD = '1';
                 Endif;
               Endif;
             Endif;
           Endif;
            //PD1AL=EERSTE DL PENS.NR)/PD1AL+6500 (MAN)OF +6000 VR <= REFMND ==>PENSIOE
            //          WUVE01    IFEQ '64,2,2'
            //          WUVE02    OREQ '64,2,2'
            //          WUVE03    OREQ '64,2,2'
            //          WUVE04    OREQ '64,2,2'
            //          WUVE05    OREQ '64,2,2'
            //          WUVE06    OREQ '64,2,2'
            //                    MOVE '0'       WUG5CD           SW24 PENSIOEN
            //                    CALL 'MDPENS5'
            //                    PARM           #1ATNB
            //                    PARM           PD1AL
            //                    PARM           RMPARM
            //                    PARM           WUG5CD
            //                    ENDIF
            // GEBOORTEDTM+18 JR <= REFMND EN OVERBRUGGINGSUITK. WEIGERING VNF 18 JAAR
         BOVERB = *BLANKS;
         BOVERB = #1DOCD;            3            BAREMA      R
     EvalR   T = BOVERB;                 1            OVERBRUGGINGR
           If T = 'T';
             If #1A1CD <> '29';
         JRGEBT = #1AINB;            4 0          JR GEBOORTE R
     EvalR   MNDGBT = #1AINB;            2 0          MAAND GEBOORR
                //IEMAND DIE 18 WORDT IN MEI1996 HEEFT RECHT TOT30/06/1196//VNF 072010 25JR
               JR18JR = 25 + JRGEBT;
               If JR18JR < JRACHT; //REEDS 18 JR
                 If MNDGBT <= 08;
     EvalR   WUW194 = '1';
                 ELSE; //SEPTEMBER->DEC
                   JR19JR = JR18JR + 1;
                   If JR19JR = JRACHT; //1995=1995
                     If MNDACH >= 07; //VNF JULI GEEN
     EvalR   WUW194 = '1';                         GEBOREN VR SEPT
                     Endif; //END 07
                   Endif; //END JR18
                 Endif; //END 08
               ELSE; //END<=ACHT
                 If JR18JR = JRACHT; //1995=1995
                   If MNDACH >= 07; //VNF JULI GEEN
                     If MNDGBT <= 08; //RECHT MEER ALS
     EvalR   WUW194 = '1';                         GEBOREN VR SEPT
                     Endif; //END 08 AUGUS
                   Endif; //END 07
                 Endif; //END = JR18
               Endif; //END < JR18
             ENDIF;
           Endif; //END T
            //KODES TB-/IR-/TG- >= MAX.BDR==>ERROR/ MAXIMUM BDRG IN CONTR.RECORD BYA4NR
         CODINH = #1DVCD;            3
           BDRINH = #1GZNB;
           EXSR CHKINH;
         CODINH = #1DWCD;            3
           BDRINH = #1G1NB;
           EXSR CHKINH;
         CODINH = #1DXCD;            3
           BDRINH = #1G3NB;
           EXSR CHKINH;
         CODINH = #1DYCD;            3
           BDRINH = #1G5NB;
           EXSR CHKINH;
         CODINH = #1EDCD;            3
           BDRINH = #1HDNB;
           EXSR CHKINH;
         CODINH = #1EECD;            3
           BDRINH = #1HFNB;
           EXSR CHKINH;
            // Sw18=1-->err:acht.<kleinste baremadatum+WIE WKLH/BZ BETAALD
            // CASE: WRK.switch18 is 1
           If WUGZCD = '1'; //*IF
              // Send message 'Datum acht.<dat. kl.barem'
         ZAMSID = 'USR0284';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           ELSE;
              // CASE: *OTHERWISE
              // Testen bedrag wkl ingevuld, comp.berekend of gewijzigd
              // CASE: DTL.Type kode is <> 24
             If #1A1CD <> '24'; //*IF
                // Testen bedrag wkl berekenen, zelf ingevuld, manueel gewijzigd
                // CASE: WRK.Switch bedrag Wklh is =0 : 1ste maal in program
               If WUPFCD = '0'; //*IF
                  // CASE: DTL.Bedrag wkl is niet 0
                 If #1HPNB <> *ZERO; //*IF
                    // CASE:
                    //  - c8ORc9
                    //   !- c8    : DTL.Type wklh. kode is G.
                    //   !- c9    : DTL.Type wklh. kode is 29 = werkhervatting
                    //   '-
                   If #1A1CD = 'G.' OR #1A1CD = '29'; //*IF
                      // CASE: DTL.Type wklh. kode is 29 = werkhervatting
                     If #1A1CD = '29'; //*IF
                        // CASE: DTL.Bedrag wkl EQ WRK.Bedrag type29
                       If #1HPNB = WUC5NU; //*IF
         WUPFCD = '3';                         Switch bedrag W
                       ELSE;
                          // CASE: *OTHERWISE
         WUPFCD = '1';                         Switch bedrag W
                       Endif; //*FI
                     ELSE;
                        // CASE: *OTHERWISE
                        // CASE: DTL.Bedrag wkl EQ WRK.wrk bedrag activering
                       If #1HPNB = WUMT09; //*IF
         WUPFCD = '3';                         Switch bedrag W
                       ELSE;
                          // CASE: *OTHERWISE
         WUPFCD = '1';                         Switch bedrag W
                       Endif; //*FI
                     Endif; //*FI
                   ELSE;
                      // CASE: *OTHERWISE
         WUPFCD = '1';                         Switch bedrag W
                     WUMLNB = #1HPNB; //wrk bedrag Wklh
                   Endif; //*FI
                 Endif; //*FI
               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: WRK.Switch bedrag Wklh is =3 :bedr wkl comput.berek
                 If WUPFCD = '3'; //*IF
                    // dit betekent 1 maal progr.doorlopen en computer bedrag bepaald
                    // CASE: DTL.Bedrag wkl EQ WRK.wrk bedrag Wklh
                   If #1HPNB = WUMLNB; //*IF
                     #1HPNB = *ZERO; //Bedrag wkl
                   ELSE;
                      // CASE: *OTHERWISE
                      // CASE: DTL.Bedrag wkl is niet 0
                     If #1HPNB <> *ZERO; //*IF
                        // CASE:
                        //  - c8ORc9
                        //   !- c8    : DTL.Type wklh. kode is G.
                        //   !- c9    : DTL.Type wklh. kode is 29 = werkhervatting
                        //   '-
                       If #1A1CD = 'G.' OR #1A1CD = '29'; //*IF
                          // CASE: DTL.Type wklh. kode is 29 = werkhervatting
                         If #1A1CD = '29'; //*IF
                            // CASE: DTL.Bedrag wkl EQ WRK.Bedrag type29
                           If #1HPNB = WUC5NU; //*IF
         WUPFCD = '3';                         Switch bedrag W
                           ELSE;
                              // CASE: *OTHERWISE
         WUPFCD = '1';                         Switch bedrag W
                           Endif; //*FI
                         ELSE;
                            // CASE: *OTHERWISE
                            // CASE: DTL.Bedrag wkl EQ WRK.wrk bedrag activering
                           If #1HPNB = WUMT09; //*IF
         WUPFCD = '3';                         Switch bedrag W
                           ELSE;
                              // CASE: *OTHERWISE
         WUPFCD = '1';                         Switch bedrag W
                           Endif; //*FI
                         Endif; //*FI
                       ELSE;
                          // CASE: *OTHERWISE
         WUPFCD = '1';                         Switch bedrag W
                         WUMLNB = #1HPNB; //wrk bedrag Wklh
                       Endif; //*FI
                     ELSE;
                        // CASE: *OTHERWISE
         WUPFCD = '0';                         Switch bedrag W
                     Endif; //*FI
                   Endif; //*FI
                 ELSE;
                    // CASE: *OTHERWISE
                    // CASE: WRK.Switch bedrag Wklh is =1 :bedr wklh was ingevul
                   If WUPFCD = '1'; //*IF
                      // CASE: DTL.Bedrag wkl EQ WRK.wrk bedrag Wklh
                     If #1HPNB = WUMLNB; //*IF
                     ELSE;
                        // CASE: *OTHERWISE
                        // CASE: DTL.Bedrag wkl is niet 0
                       If #1HPNB <> *ZERO; //*IF
                          // CASE:
                          //  - c7ORc8ORc9
                          //   !- c7    : DTL.Type wklh. kode is F.
                          //   !- c8    : DTL.Type wklh. kode is G.
                          //   !- c9    : DTL.Type wklh. kode is 29 = werkhervatting
                          //   '-
                         If #1A1CD = 'F.' OR #1A1CD = 'G.' OR #1A1CD = '29'; //*IF
                            // CASE: DTL.Type wklh. kode is 29 = werkhervatting
                           If #1A1CD = '29'; //*IF
                              // CASE: DTL.Bedrag wkl EQ WRK.Bedrag type29
                             If #1HPNB = WUC5NU; //*IF
         WUPFCD = '3';                         Switch bedrag W
                             ELSE;
                                // CASE: *OTHERWISE
         WUPFCD = '1';                         Switch bedrag W
                             Endif; //*FI
                           Endif; //*FI
                            // CASE:
                            //  - c1ORc2
                            //   !- c1    : DTL.Type wklh. kode is F.
                            //   !- c2    : DTL.Type wklh. kode is G.
                            //   '-
                           If #1A1CD = 'F.' OR #1A1CD = 'G.'; //*IF
                              // CASE: DTL.Bedrag wkl EQ WRK.wrk bedrag activering
                             If #1HPNB = WUMT09; //*IF
         WUPFCD = '3';                         Switch bedrag W
                             ELSE;
                                // CASE: *OTHERWISE
         WUPFCD = '1';                         Switch bedrag W
                             Endif; //*FI
                           Endif; //*FI
                         ELSE;
                            // CASE: *OTHERWISE
                           WUMLNB = #1HPNB; //wrk bedrag Wklh
                         Endif; //*FI
                       ELSE;
                          // CASE: *OTHERWISE
         WUPFCD = '0';                         Switch bedrag W
                       Endif; //*FI
                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // CASE:
                //  - c1ORc2
                //   !- c1    : DTL.Subberoep kode is F
                //   !- c2    : DTL.Subberoep kode is W
                //   '-
               If #1BCCD = 'F' OR #1BCCD = 'W'; //*IF
                  // Testen bedrag wkl berekenen, zelf ingevuld, manueel gewijzigd
                  // CASE: WRK.Switch bedrag Wklh is =0 : 1ste maal in program
                 If WUPFCD = '0'; //*IF
         WUPFCD = '1';                         Switch bedrag W
                   WUMLNB = #1HPNB; //wrk bedrag Wklh
                 ELSE;
                    // CASE: *OTHERWISE
                    // CASE: WRK.Switch bedrag Wklh is =3 :bedr wkl comput.berek
                   If WUPFCD = '3'; //*IF
                      // dit betekent 1 maal progr.doorlopen en computer bedrag bepaald
                      // CASE: DTL.Bedrag wkl EQ WRK.wrk bedrag Wklh
                     If #1HPNB = WUMLNB; //*IF
                       #1HPNB = *ZERO; //Bedrag wkl
                     ELSE;
                        // CASE: *OTHERWISE
                        // CASE: DTL.Bedrag wkl is niet 0
                       If #1HPNB <> *ZERO; //*IF
         WUPFCD = '1';                         Switch bedrag W
                         WUMLNB = #1HPNB; //wrk bedrag Wklh
                       ELSE;
                          // CASE: *OTHERWISE
         WUPFCD = '0';                         Switch bedrag W
                       Endif; //*FI
                     Endif; //*FI
                   ELSE;
                      // CASE: *OTHERWISE
                      // CASE: WRK.Switch bedrag Wklh is =1 :bedr wklh was ingevul
                     If WUPFCD = '1'; //*IF
                        // CASE: DTL.Bedrag wkl EQ WRK.wrk bedrag Wklh
                       If #1HPNB = WUMLNB; //*IF
                       ELSE;
                          // CASE: *OTHERWISE
                          // CASE: DTL.Bedrag wkl is niet 0
                         If #1HPNB <> *ZERO; //*IF
                           WUMLNB = #1HPNB; //wrk bedrag Wklh
                         ELSE;
                            // CASE: *OTHERWISE
         WUPFCD = '0';                         Switch bedrag W
                         Endif; //*FI
                       Endif; //*FI
                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               ELSE;
                  // CASE: *OTHERWISE
         WUPFCD = '2';                         Switch bedrag W
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Sw10=1 --> message : # ingebrachte dgn VD6 of HD6 > max dgn wklhm
            // CASE: WRK.switch10 is 1
           If WUF9CD = '1'; //*IF
              // CASE:
              //  - c1ORc2ORc3
              //   !- c1    : DTL.Type wklh. kode is 03 :vrijw.deeltijds 171.9
              //   !- c2    : DTL.Type wklh. kode is 10 : conv brugp deeltijds
              //   !- c3    : DTL.Type wklh. kode is 14 : brugp textiel deelti
              //   '-
             If #1A1CD = '03' OR #1A1CD = '10' OR #1A1CD = '14'; //*IF
                // Setup message data for message
               ZA0045 = #1GMNB; //HD6
               ZA0046 = #1JLNB; //Halve dagen ver
                // Send message 'Wklhdagen>maximum type03'
         ZAMSID = 'USR0495';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             ELSE;
                // CASE: *OTHERWISE
                // Setup message data for message
               ZA0047 = #1GLNB; //VD6
               ZA0048 = #1GMNB; //HD6
               ZA0049 = #1GNNB; //Volle dagen ver
               ZA0050 = #1JLNB; //Halve dagen ver
                // Send message 'Werkloosheidsdgn>maximum'
         ZAMSID = 'USR0364';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(31) = '1';                        *
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // CASE: DTL.Type wklh. kode is <> 03
             If #1A1CD <> '03'; //*IF
                // CASE: DTL.Type kode is <> 10
               If #1A1CD <> '10'; //*IF
                  // CASE: DTL.Type kode is <> 14
                 If #1A1CD <> '14'; //*IF
                    // Setup message data for message
                   ZA0051 = #1GLNB; //VD6
                   ZA0052 = #1GMNB; //HD6
                   ZA0053 = #1GNNB; //Volle dagen ver
                   ZA0054 = #1JLNB; //Halve dagen ver
                    // Send message 'Werkloosheidsdgn>maximum'
         ZAMSID = 'USR0364';
                   EXSR ZASNMS;
                   *In99 = *On;
         @I1(31) = '1';                        *
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
                 ELSE;
                    // CASE: *OTHERWISE
                    // Setup message data for message
                   ZA0055 = #1GMNB; //HD6
                   ZA0056 = #1JLNB; //Halve dagen ver
                    // Send message 'Wklhdagen>maximum type03'
         ZAMSID = 'USR0495';
                   EXSR ZASNMS;
                   *In99 = *On;
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
               ELSE;
                  // CASE: *OTHERWISE
                  // Setup message data for message
                 ZA0057 = #1GMNB; //HD6
                 ZA0058 = #1JLNB; //Halve dagen ver
                  // Send message 'Wklhdagen>maximum type03'
         ZAMSID = 'USR0495';
                 EXSR ZASNMS;
                 *In99 = *On;
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // Setup message data for message
               ZA0059 = #1GMNB; //HD6
               ZA0060 = #1JLNB; //Halve dagen ver
                // Send message 'Wklhdagen>maximum type03'
         ZAMSID = 'USR0495';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Sw11=1 --> message :# ingebrachte dgn VD5 of HD5 > max dgn wklhma
            // CASE: WRK.switch11 is 1
           If WUGACD = '1'; //*IF
              // Setup message data for message
             ZA0061 = #1GGNB; //VD5
             ZA0062 = #1GHNB; //HD5
              // Send message 'Aantal dgn VD5/HD5 > max.'
         ZAMSID = 'USR0282';
             EXSR ZASNMS;
             *In99 = *On;
         @I1(35) = '1';                        *
         @I1(36) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Sw13=1 --> error :BV & V max. 24 ,behalve bij beroep=63=onderwijs
            // CASE: WRK.switch13 is 1
           If WUGCCD = '1'; //*IF
              // Send message 'BV of V > 24'
         ZAMSID = 'USR0281';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Sw15=1 --> error: # ingebrachte dgn BZ >max dgn BZ wklhmaand
            // CASE: WRK.switch15 is 1
           If WUGECD = '1'; //*IF
              // Send message 'Aantal dgn BZ > max BZ/ma'
         ZAMSID = 'USR0280';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Sw16=1 --> message : # ingebrachte vorstdgn > max vorstdgn wklhma
            // CASE: WRK.switch16 is 1
           If WUGXCD = '1'; //*IF
              // Send message 'Aantal vorstdgn > max Vd6'
         ZAMSID = 'USR0279';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Sw17=1 --> message : # ingebrachte kbf dgn > max kbf dgn wklhmaan
            // CASE: WRK.switch17 is 1
           If WUGYCD = '1'; //*IF
              // Send message 'Aantal dgn kbf sanktie>ma'
         ZAMSID = 'USR0278';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Type 00 : codes TB/TB-/TG/TG- onmogelijk
            // CASE: DTL.Type wklh. kode is 00 : niet toelaatbaar
           If #1A1CD = '00'; //*IF
              // Afh1 =TB/TB-/TG/TG-  kan niet voor de indiening belastingen
              // CASE:
              //  - c1ORc2ORc3ORc4
              //   !- c1    : DTL.Afh1 kode is = TB
              //   !- c2    : DTL.Afh1 kode is = TG
              //   !- c3    : DTL.Afh1 kode is = TB-
              //   !- c4    : DTL.Afh1 kode is = TG-
              //   '-
             If #1DVCD = 'TB' OR #1DVCD = 'TG' OR #1DVCD = 'TB-' OR #1DVCD = 'TG-'; //*IF
                // Send message 'Geen  code TB mogelijk'
         ZAMSID = 'USR4395';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
              // Afh2 =TB/TB-/TG/TG-  kan niet voor de indiening belastingen
              // CASE:
              //  - c1ORc2ORc3ORc4
              //   !- c1    : DTL.Afh2 kode is = TB
              //   !- c2    : DTL.Afh2 kode is = TG
              //   !- c3    : DTL.Afh2 kode is = TB-
              //   !- c4    : DTL.Afh2 kode is = TG-
              //   '-
             If #1DWCD = 'TB' OR #1DWCD = 'TG' OR #1DWCD = 'TB-' OR #1DWCD = 'TG-'; //*IF
                // Send message 'Geen  code TB mogelijk'
         ZAMSID = 'USR4395';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
              // Afh3 =TB/TB-/TG/TG-  kan niet voor de indiening belastingen
              // CASE:
              //  - c1ORc2ORc3ORc4
              //   !- c1    : DTL.Afh3 kode is = TB
              //   !- c2    : DTL.Afh3 kode is = TG
              //   !- c3    : DTL.Afh3 kode is = TB-
              //   !- c4    : DTL.Afh3 kode is = TG-
              //   '-
             If #1DXCD = 'TB' OR #1DXCD = 'TG' OR #1DXCD = 'TB-' OR #1DXCD = 'TG-'; //*IF
                // Send message 'Geen  code TB mogelijk'
         ZAMSID = 'USR4395';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
              // Afh4 =TB/TB-/TG/TG-  kan niet voor de indiening belastingen
              // CASE:
              //  - c1ORc2ORc3ORc4
              //   !- c1    : DTL.Afh4 kode is = TB
              //   !- c2    : DTL.Afh4 kode is = TG
              //   !- c3    : DTL.Afh4 kode is = TB-
              //   !- c4    : DTL.Afh4 kode is = TG-
              //   '-
             If #1DYCD = 'TB' OR #1DYCD = 'TG' OR #1DYCD = 'TB-' OR #1DYCD = 'TG-'; //*IF
                // Send message 'Geen  code TB mogelijk'
         ZAMSID = 'USR4395';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
              // Afh5 =TB/TB-/TG/TG-  kan niet voor de indiening belastingen
              // CASE:
              //  - c1ORc2ORc3ORc4
              //   !- c1    : DTL.Afh5 kode is = TB
              //   !- c2    : DTL.Afh5 kode is = TG
              //   !- c3    : DTL.Afh5 kode is = TB-
              //   !- c4    : DTL.Afh5 kode is = TG-
              //   '-
             If #1EDCD = 'TB' OR #1EDCD = 'TG' OR #1EDCD = 'TB-' OR #1EDCD = 'TG-'; //*IF
                // Send message 'Geen  code TB mogelijk'
         ZAMSID = 'USR4395';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
              // Afh6 =TB/TB-/TG/TG-  kan niet voor de indiening belastingen
              // CASE:
              //  - c1ORc2ORc3ORc4
              //   !- c1    : DTL.Afh6 kode is = TB
              //   !- c2    : DTL.Afh6 kode is = TG
              //   !- c3    : DTL.Afh6 kode is = TB-
              //   !- c4    : DTL.Afh6 kode is = TG-
              //   '-
             If #1EECD = 'TB' OR #1EECD = 'TG' OR #1EECD = 'TB-' OR #1EECD = 'TG-'; //*IF
                // Send message 'Geen  code TB mogelijk'
         ZAMSID = 'USR4395';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // ibo sanctie
            // CASE: WRK.Wrk 1pos voor jongerenact is niet J
           If WULCCF <> 'J'; //*IF
              // CASE: WRK.Wrk ibo sanctie aan is 0
             If WUXBCG = '0'; //*IF
                // Sw21=1 --> error: datum einde sanktie >= wklhmaand
                // CASE: WRK.switch21 is 1
               If WUG2CD = '1'; //*IF
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Sw24=1 -->error: pensioenleeftijd bereikt 60jr(Vr)/65jr(Man)
            // CASE: WRK.switch24 is 1
           If WUG5CD = '1'; //*IF
              // CASE:
              //  - c1ORc2ORc3
              //   !- c1    : DTL.Type wklh. kode is 24 : wisselkoerstoeslag
              //   !- c2    : DTL.Type wklh. kode is 25
              //   !- c3    : DTL.Barema RVAkode is ..ICLD.
              //   '-
             If #1A1CD = '24' OR #1A1CD = '25' OR #1DOCD = @CN(003); //*IF
             ELSE;
                // CASE: *OTHERWISE
                // pensioen buitenlanders:hier actief maken en onderste berichten op
                // Fetch RM tem - Buitenlanders niet-gepens  *
               EXSR SFRVGN;
                // CASE: WRK.Wrk RM TEM nbr is 190001
               If WUI7NG = 190001; //*IF
                  // Send message 'Pensioenleeftijd bereikt'
         ZAMSID = 'USR0294';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: DTL.Datum achterstal GT WRK.Wrk RM TEM nbr
                 If #1GWNB > WUI7NG; //*IF
                    // Send message 'Pensioenleeftijd bereikt'
         ZAMSID = 'USR0294';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Sw26=1 --> error: TB- en IR- maximum is 3657Fr
            // CASE: WRK.switch26 is 1
           If WUHXCD = '1'; //*IF
              // Send message 'Afh=TB-/IR- en bedr >2999'
         ZAMSID = 'USR0296';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Sw80=1 : ingebrachte dagen > 27/23 bij achterstal --> error messa
            // CASE: WRK.Switch80 is = 1
           If WUOWCD = '1'; //*IF
              // CASE: DTL.Beroep kode is Nt 09 : geen dok A'pen
             If #1BACD <> '09'; //*IF
                // CASE:
                //  - c1ORc2ORc3
                //   !- c1    : DTL.Type wklh. kode is 03 :vrijw.deeltijds 171.9
                //   !- c2    : DTL.Type wklh. kode is 10 : conv brugp deeltijds
                //   !- c3    : DTL.Type wklh. kode is 14 : brugp textiel deelti
                //   '-
               If #1A1CD = '03' OR #1A1CD = '10' OR #1A1CD = '14'; //*IF
                  // Setup message data for message
                 ZA0063 = #1GMNB; //HD6
                 ZA0064 = #1JLNB; //Halve dagen ver
                  // Send message 'Achterstal halve dgn < 54'
         ZAMSID = 'USR0498';
                 EXSR ZASNMS;
                 *In99 = *On;
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
               ELSE;
                  // CASE: *OTHERWISE
                  // Setup message data for message
                 ZA0065 = #1GLNB; //VD6
                 ZA0066 = #1GMNB; //HD6
                 ZA0067 = #1GNNB; //Volle dagen ver
                 ZA0068 = #1JLNB; //Halve dagen ver
                  // Send message 'Achterstal dgn < 27'
         ZAMSID = 'USR0448';
                 EXSR ZASNMS;
                 *In99 = *On;
         @I1(31) = '1';                        *
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // Setup message data for message
               ZA0069 = #1GGNB; //VD5
               ZA0070 = #1GHNB; //HD5
                // Send message 'Achterstal dagen < 23'
         ZAMSID = 'USR0499';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(35) = '1';                        *
         @I1(36) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Sw194=1 : barema ..T.... en ouder of 18 jaar : error
            // CASE: WRK.Switch194 is 1
           If WUW194 = '1'; //*IF
              // Send message 'Overbr.uitk. en >= 18jaar'
         ZAMSID = 'USR1632';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Werkhervatting metaal
            // CASE: DTL.Wkl bet CDE vrij3 is ingevuld
           If #1MQCE <> *BLANK; //*IF
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5ORc6ORc7
              //   !- c1    : DTL.Wkl bet CDE vrij3 is 001
              //   !- c2    : DTL.Wkl bet CDE vrij3 is 002
              //   !- c3    : DTL.Wkl bet CDE vrij3 is 003
              //   !- c4    : DTL.Wkl bet CDE vrij3 is 004
              //   !- c5    : DTL.Wkl bet CDE vrij3 is 005
              //   !- c6    : DTL.Wkl bet CDE vrij3 is 006
              //   !- c7    : DTL.Wkl bet CDE vrij3 is 099
              //   '-
             If #1MQCE = '001' OR #1MQCE = '002' OR #1MQCE = '003' OR #1MQCE = '004' OR #1MQCE = '005' OR #1MQCE = '006' OR #1MQCE = '099'; //*IF
             ELSE;
                // CASE: *OTHERWISE
                // Setup message data for message
         ZA0071 = #1MQCE;                         Wkl bet CDE vri
                // Send message 'Geen geldige code werkher'
         ZAMSID = 'USR4981';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Contr 0&5 als dec./BC opv - Wkl bet  *
            // CONTROLE DGN KBF : ENKEL 0 & 5 ALS DECIMALEN ZIJN TOEGELATEN
     EvalR   WUHYCD = '0';                         SWITCH27
           KBFD2 = 0;
     EvalR   KBFD2 = #1GXNB;             1 0
           EXSR NULVYF;
     EvalR   KBFD2 = #1GRNB;             1 0          VW TYPE05/07
           EXSR NULVYF;
     EvalR   KBFD2 = #1GUNB;             1 0          C3.2 T05/07
           EXSR NULVYF;
     EvalR   KBFD2 = #1GSNB;             1 0          MIN TYP05/07
           EXSR NULVYF;
     EvalR   KBFD2 = #1GTNB;             1 0          Z+A TYP05/07
           EXSR NULVYF;
     EvalR   KBFD2 = #1BBNR;             1 0          NT-VERG.DAGEN
           EXSR NULVYF;
            //BC AANTAL INGEVULD & CATEG.KODE OF MM/JJJJ NIET==>DEZE VAN F7 ->BET.SCHER
           If #1LPNB <> 0; //BC AANT NT 0
             If #1CLCD = *BLANK OR #1E9NB = 0; //KAT KODE BLA
     EvalR   #1CLCD = #1M5CD;                         KATEG KODE
     EvalR   #1E9NB = #1ANDM;                             MM/JJJJ
             Endif;
           Endif;
            // Sw27=3 -->Dagen kbf/sanktie/type05/ kan enkel  0 & 5 als decimale
            // CASE: WRK.switch27 is 3
           If WUHYCD = '3'; //*IF
              // Send message '0 en 5 na de komma vr dgn'
         ZAMSID = 'USR3996';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // BV/V optellen en controleren met dagen uit verlofscherm
            // CASE: WRK.Wrk switch hidden zetten is 0
           If WUCA75 = '0'; //*IF
             WUF8NB = *ZERO; //Som BV/V
             WUJPNB = *ZERO; //rest deling
             WUF8NB = WUF8NB + #1JLNB; //Som BV/V
             WUF8NB = WUF8NB / 2; //Som BV/V
     C                   MVR                     WUJPNB                         rest deling
             WUF8NB = WUF8NB + #1GNNB; //Som BV/V
              // Som BV/V = ingebrachte verlofdgn > rest krediet verlof  --> error
              // CASE: WRK.Som BV/V GT DTL.Wkl Kr.V
             If WUF8NB > #DMUNB; //*IF
             Endif; //*FI
              // Som BV/V = ingebrachte verlofdagen > rest krediet V --> error mes
              // CASE: WRK.Som BV/V EQ DTL.Wkl Kr.V
             If WUF8NB = #DMUNB; //*IF
                // CASE: WRK.rest deling is = 1
               If WUJPNB = 1; //*IF
               Endif; //*FI
             Endif; //*FI
             WUF8NB = *ZERO; //Som BV/V
             WUJPNB = *ZERO; //rest deling
             WUF8NB = WUF8NB + #1JONB; //Som BV/V
             WUF8NB = WUF8NB / 2; //Som BV/V
     C                   MVR                     WUJPNB                         rest deling
             WUF8NB = WUF8NB + #1G7NB; //Som BV/V
              // Som BV/V = ingebrachte BVdagen > rest krediet BV  --> error messa
              // CASE: WRK.Som BV/V GT DTL.Wkl Kr.BV
             If WUF8NB > #DMTNB; //*IF
             Endif; //*FI
              // Som BV/V = ingebrachte BVdagen > rest krediet BV --> error messag
              // CASE: WRK.Som BV/V EQ DTL.Wkl Kr.BV
             If WUF8NB = #DMTNB; //*IF
                // CASE: WRK.rest deling is = 1
               If WUJPNB = 1; //*IF
               Endif; //*FI
             Endif; //*FI
             WUF8NB = *ZERO; //Som BV/V
             WUJPNB = *ZERO; //rest deling
           Endif; //*FI
            // Dok nt A'pen/BZ=K/BZ dgn of bedr BZ=0 --> error message
            // CASE: DTL.BZ kode is = K : Dok maar niet A'pen
           If #1A4CD = 'K'; //*IF
              // CASE: DTL.Geen dagen/bedrag BZ is Y
             If #1BCST = 'Y'; //*IF
                // CASE: DTL.Bedrag BZ is 0
               If #1GYNB = *ZERO; //*IF
                  // Setup message data for message
                 ZA0072 = #1GPNB; //Volle dagen BZ
                 ZA0073 = #1JNNB; //Halve dagen BZ
                 ZA0074 = #1GYNB; //Bedrag BZ
                  // Send message 'Dagen & bedrag BZ moeten'
         ZAMSID = 'USR0452';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               ELSE;
                  // CASE: *OTHERWISE
                  // CASE:
                  //  - c1ANDc2
                  //   !- c1    : DTL.Volle dagen BZ is 0
                  //   !- c2    : DTL.Halve dagen BZ is 0
                  //   '-
         Y0CX01 = '0';            1
                 If #1GPNB = *ZERO; //*IF
                   If #1JNNB = *ZERO; //*IF
         Y0CX01 = '1';
                   Endif; //*FI
                 Endif; //*FI
                 If Y0CX01 = '1'; //*IF
                    // Setup message data for message
                   ZA0075 = #1GPNB; //Volle dagen BZ
                   ZA0076 = #1JNNB; //Halve dagen BZ
                   ZA0077 = #1GYNB; //Bedrag BZ
                    // Send message 'Dagen & bedrag BZ moeten'
         ZAMSID = 'USR0452';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Kode BZ=VZ/DZ/FZ/PZ/15 --> zelf bedrag BZ invullen
            // CASE:
            //  - c1ORc2ORc3
            //   !- c1    : DTL.Kode BZ is VZ
            //   !- c2    : DTL.Kode BZ is FZ
            //   !- c3    : DTL.BZ kode is 15
            //   '-
           If #1MOCD = 'VZ' OR #1MOCD = 'FZ' OR #1A4CD = '15'; //*IF
              // CASE:
              //  - c1ANDc2
              //   !- c1    : DTL.Bedrag BZ is 0
              //   !- c2    : DTL.Geen dagen/bedrag BZ is Y
              //   '-
         Y0CX01 = '0';            1
             If #1GYNB = *ZERO; //*IF
               If #1BCST = 'Y'; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
                // Setup message data for message
               ZA0078 = #1GYNB; //Bedrag BZ
         ZA0079 = #1BCST;                         Geen dagen/bedr
                // Send message 'Zelf bedrag BZ invul (VZ)'
         ZAMSID = 'USR0410';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           ELSE;
              // CASE: *OTHERWISE
              // CASE:
              //  - c1ORc2
              //   !- c1    : DTL.Kode BZ is DZ
              //   !- c2    : DTL.Kode BZ is PZ
              //   '-
             If #1MOCD = 'DZ' OR #1MOCD = 'PZ'; //*IF
                // CASE:
                //  - c1ANDc2
                //   !- c1    : DTL.Bedrag BZ is 0
                //   !- c2    : DTL.Geen dagen/bedrag BZ is Y
                //   '-
         Y0CX01 = '0';            1
               If #1GYNB = *ZERO; //*IF
                 If #1BCST = 'Y'; //*IF
         Y0CX01 = '1';
                 Endif; //*FI
               Endif; //*FI
               If Y0CX01 = '1'; //*IF
                  // Setup message data for message
                 ZA0080 = #1GYNB; //Bedrag BZ
         ZA0081 = #1BCST;                         Geen dagen/bedr
                  // Send message 'Zelf bedrag BZ invul (VZ)'
         ZAMSID = 'USR0410';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Geen X2/BC/TA/BR/TF in afh1 : error message
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10ORc11ORc12ORc13ORc14OR
            //  - c15ORc16ORc17ORc18ORc19ORc20ORc21ORc22ORc23ORc24
            //   !- c1    : DTL.Afh1 kode is = BC
            //   !- c2    : DTL.Afh1 kode is = X2
            //   !- c3    : DTL.Afh1 kode is = BR
            //   !- c4    : DTL.Afh1 kode is = TA
            //   !- c5    : DTL.Afh2 kode is = BC
            //   !- c6    : DTL.Afh2 kode is = X2
            //   !- c7    : DTL.Afh2 kode is = TA
            //   !- c8    : DTL.Afh2 kode is = BR
            //   !- c9    : DTL.Afh3 kode is = BC
            //   !- c10   : DTL.Afh3 kode is = X2
            //   !- c11   : DTL.Afh3 kode is = TA
            //   !- c12   : DTL.Afh3 kode is = BR
            //   !- c13   : DTL.Afh4 kode is = BC
            //   !- c14   : DTL.Afh4 kode is = X2
            //   !- c15   : DTL.Afh4 kode is = TA
            //   !- c16   : DTL.Afh4 kode is = BR
            //   !- c17   : DTL.Afh5 kode is = BC
            //   !- c18   : DTL.Afh5 kode is = X2
            //   !- c19   : DTL.Afh5 kode is = TA
            //   !- c20   : DTL.Afh5 kode is = BR
            //   !- c21   : DTL.Afh6 kode is = BC
            //   !- c22   : DTL.Afh6 kode is = X2
            //   !- c23   : DTL.Afh6 kode is = TA
            //   !- c24   : DTL.Afh6 kode is = BR
            //   '-
           If #1DVCD = 'BC' OR #1DVCD = 'X2' OR #1DVCD = 'BR' OR #1DVCD = 'TA' OR #1DWCD = 'BC' OR #1DWCD = 'X2' OR #1DWCD = 'TA' OR #1DWCD = 'BR' OR #1DXCD = 'BC' OR #1DXCD = 'X2' OR #1DXCD = 'TA' OR #1DXCD = 'BR' OR #1DYCD = 'BC' OR #1DYCD = 'X2' OR #1DYCD = 'TA' OR #1DYCD = 'BR' OR #1EDCD = 'BC' OR #1EDCD = 'X2' OR #1EDCD = 'TA' OR #1EDCD = 'BR' OR #1EECD = 'BC' OR #1EECD = 'X2' OR #1EECD = 'TA' OR #1EECD = 'BR'; //*IF
              // Send message 'Geen X2/BC in afh1-->afh6'
         ZAMSID = 'USR0407';
             EXSR ZASNMS;
             *In99 = *On;

              // Send message 'Geen TA/BR in afh1-->afh6'
         ZAMSID = 'USR0408';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Achterstal voor 06/92, bedrag wklh zelf invullen
            // CASE: DTL.Datum achterstal is < 199206
           If #1GWNB < 199206; //*IF
              // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
             If WUPFCD <> '1'; //*IF
                // Setup message data for message
               ZA0082 = #1HPNB; //Bedrag wkl
                // Send message 'Zelf bedrag wklh opgeven!'
         ZAMSID = 'USR0781';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // wkl-785:niet controleren bij subberoep J,K,P,R,S,T,X==>ik zeg:bij
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.Subberoep kode is blank
            //   !- c2    : DTL.Subberoep kode is I
            //   '-
           If #1BCCD = *BLANK OR #1BCCD = 'I'; //*IF
              // CASE: DTL.Datum achterstal is >=201211
             If #1GWNB >= 201211; //*IF
                // Overgang barema->zelf ber - Wkl betaling  *
               RMPAR = #1GWNB;
               DATIN1 = #1AEDT;
               DATIN2 = #1ADDT;
               DATIN3 = #1AHDT;
               DATIN4 = #1AKDT;
         WUR3CJ = 'N';
               //FOUTBERICHT
               MDCHK02(DATIN1:DATIN2:DATIN3:DATIN4:RMPAR:WUR3CJ);
                 If WUR3CJ = 'N';
                 //FOUTBERICHT
               MDCHK03(#1AACD:#1AFNB:#1DOCD:RMPAR:WUR3CJ);
                 ENDIF;
               If #1BDST = 'N';
         WUR3CJ = 'N';
               ENDIF;
                // Datum 1 2 3 wijzigt in loop der maand ==> zelf bdrg wklh invullen
                // CASE: WRK.Switch overgang barema is Y
               If WUR3CJ = 'Y'; //*IF
                  // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
                 If WUPFCD <> '1'; //*IF
         WUERCK = '1';                         Wrk F1 na F24
                    // CASE: DTL.Geen bedrag wklh is Y
                   If #1BDST = 'Y'; //*IF
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // Dat.forfait : zelf bedrag invullen bij overgang RM
                // CASE: WRK.sw datum forfait is 1
               If WUXGCD = '1'; //*IF
                  // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
                 If WUPFCD <> '1'; //*IF
                    // Send message 'Overgang --> forfait'
         ZAMSID = 'USR2097';
                   EXSR ZASNMS;
                   *In99 = *On;

                 Endif; //*FI
               Endif; //*FI
                // Dat.1ste Per.B : zelf bedrag invullen bij overgang RM
                // CASE: WRK.sw datum 0-kode is 1
               If WUXHCD = '1'; //*IF
                  // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
                 If WUPFCD <> '1'; //*IF
                    // Send message 'Overgang per1A->per1B'
         ZAMSID = 'USR5262';
                   EXSR ZASNMS;
                   *In99 = *On;

                 Endif; //*FI
               Endif; //*FI
                // Dat.2de Per.C : zelf bedrag invullen bij overgang RM
                // CASE: WRK.sw datum 40% is 1
               If WUXFCD = '1'; //*IF
                 YRSW00 = 2;
                 ZQ = 5;
                 If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
                 ELSE;
                   WUF1CH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk pos56 barem
     C   90              MOVEL     'Y2U0510'     W0RTN
                 Endif;
                  // CASE:
                  //  - c1ORc2
                  //   !- c1    : WRK.Wrk pos56 barema is 1C
                  //   !- c2    : WRK.Wrk pos56 barema is 1B
                  //   '-
                 If WUF1CH = '1C' OR WUF1CH = '1B'; //*IF
                    // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
                   If WUPFCD <> '1'; //*IF
                      // Send message 'Overgang 2de periode 1C'
         ZAMSID = 'USR5267';
                     EXSR ZASNMS;
                     *In99 = *On;

                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
                // overgang periode 1A naar 1B
                // CASE: WRK.Wrk pos6 barema is geen B
               If WUF4CH <> 'B'; //*IF
                  // CASE: WRK.Wrk pos5 barema is 1
                 If WUF3CH = '1'; //*IF
                   WUQJNC = #1AEDT / 100; //Maand om te tes
                    // CASE: WRK.Maand om te testen EQ DTL.Datum achterstal
                   If WUQJNC = #1GWNB; //*IF
                     WUQKNC = WUQJNC * 100; //Wrk datum 8 lan
                     WUQKNC = WUQKNC + 01; //Wrk datum 8 lan
                      // CASE: WRK.Wrk datum 8 lang testen EQ DTL.Datum OP-code
                     If WUQKNC = #1AEDT; //*IF
                        // Send message 'Overgang per1A->per1B'
         ZAMSID = 'USR5262';
                       EXSR ZASNMS;
                       *In99 = *On;

                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
         WUACCK = 'N';                         C98 bestaat
            // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
           CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
           AAQLDM = #1GWNB; //Doc BD meer RM
           AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  'C98'         AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
           //Test Doc BD bes
           //KEY: Documenten
           //Wrk taal
           //WRK Barema
           //WRK Type wkl. k
           //WRK document BD

           XPG(AARC:WQ0271:WQ0272:WQ0273:WQ0274);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
             *In99 = *On;
           Endif;
            // Controle bet.dos. C98 vri - Wkl betaling  *
         WULDCJ = '0';
           If WUACCK = 'Y';
         C98C98 = '06';            2
           ELSE;
         ' = ';          C98C98
           ENDIF;
            // CASE: DTL.GWB nr is 63
           MDVRIJS6(#1AACD:#1AFNB:#1A1CD:C98C98:RMPARM:WULDCJ);
             If #1A2CD = '63';
              // CASE: DTL.Datum achterstal is >= 201901
             If #1GWNB >= 201901; //*IF
                // CASE: DTL.Post nr is 4700-4799
               If #1ADCD >= '4700' AND #1ADCD <= '4799'; //*IF
         WULDCJ = '0';                         Switch C98
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // C98
            // CASE: WRK.Switch C98 is 1
           If WULDCJ = '1'; //*IF
              // CASE: DTL.Type wklh. kode is 53
             If #1A1CD = '53'; //*IF
             ELSE;
                // CASE: *OTHERWISE
                // CASE:
                //  - c1ORc2
                //   !- c1    : DTL.Subberoep kode is blank
                //   !- c2    : DTL.Subberoep kode is I
                //   '-
               If #1BCCD = *BLANK OR #1BCCD = 'I'; //*IF
                  // Send message 'BD moet code 11 ijn = C98'
         ZAMSID = 'USR6197';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // C98 deel2
            // CASE: WRK.Wrk switch114&6B is Y
           If WUFECL = 'Y'; //*IF
             WUVPNE = #1GWNB; //MM van RM
              // CASE: WRK.C98 bestaat is N
             If WUACCK = 'N'; //*IF
                // CASE:
                //  - c1ORc2
                //   !- c1    : WRK.MM van RM is 07
                //   !- c2    : WRK.MM van RM is 08
                //   '-
               If WUVPNE = 07 OR WUVPNE = 08; //*IF
               ELSE;
                  // CASE: *OTHERWISE
                  // Send message 'BD moet code 11 ijn = C98'
         ZAMSID = 'USR6197';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // IS C3A verplicht bij kunstwerker? Zo ja, staat deze in BD?
          // CASE: WRK.Wrk C3A verplicht is Y
         If WUM1CN = 'Y'; //*IF
            // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
           CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
           AAQLDM = #1GWNB; //Doc BD meer RM
           AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  'C3A'         AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
           //Test Doc BD bes
           //KEY: Documenten
           //Wrk taal
           //WRK Barema
           //WRK Type wkl. k
           //WRK document BD

           XPG(AARC:WQ0275:WQ0276:WQ0277:WQ0278);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
             *In99 = *On;
           Endif;
            // CASE: WRK.C3A bestaat is Y
           If WUM4CN = 'Y'; //*IF
           ELSE;
              // CASE: *OTHERWISE
              // Send message 'kunstwerker:C3A verplicht'
         ZAMSID = 'USR7549';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
         Endif; //*FI
          // Cmd01 kalender automatisch of F1
          // CASE: WRK.Switch toelating Y/N is Y
         If WUYOCI = 'Y'; //*IF
            // Type kode = 01,09,... : oproepen kalender
            // CASE: WRK.Switch type betaalkalende is Y
           If WURZCJ = 'Y'; //*IF
             YRSW00 = 2;
             ZQ = 4;
             If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
             ELSE;
               WUWRK2 = %Subst(#1DOCD:ZQ:YRSW00); //Wrk veld 2 pos
     C   90              MOVEL     'Y2U0510'     W0RTN
             Endif;
              // CASE:
              //  - c1ORc2ORc3
              //   !- c1    : WRK.Wrk veld 2 pos is A6
              //   !- c2    : WRK.Wrk veld 2 pos is A7
              //   !- c3    : WRK.Wrk veld 2 pos is A8
              //   '-
             If WUWRK2 = 'A6' OR WUWRK2 = 'A7' OR WUWRK2 = 'A8'; //*IF
             ELSE;
                // CASE: *OTHERWISE
                // CASE:
                //  - c1ORc2ORc3ORc4ORc5ORc6ORc7
                //   !- c1    : DTL.VD6 is niet 0
                //   !- c2    : DTL.HD6 is niet 0
                //   !- c3    : DTL.Volle dagen BV is niet 0
                //   !- c4    : DTL.Halve dagen BV is niet 0
                //   !- c5    : DTL.Volle dagen verlof is niet 0
                //   !- c6    : DTL.Halve dagen verlof is niet 0
                //   !- c7    : DTL.Dagen kbf sanktie is ingevuld
                //   '-
               If #1GLNB <> *ZERO OR #1GMNB <> *ZERO OR #1G7NB <> *ZERO OR #1JONB <> *ZERO OR #1GNNB <> *ZERO OR #1JLNB <> *ZERO OR #1GXNB <> *ZERO; //*IF
                  // CASE: WRK.Wrk teller cf01 is 1
                 If WUK7ND = 1; //*IF
         WUW8CI = 'Y';                         Wrk F1 oproepen
         WUXICI = 'Y';                         Wrk F1 record v
                   WUK7ND = WUK7ND + 1; //Wrk teller cf01
                 ELSE;
                    // CASE: *OTHERWISE
         WUW8CI = 'N';                         Wrk F1 oproepen
                 Endif; //*FI
               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: DTL.Bedrag wkl is niet 0
                 If #1HPNB <> *ZERO; //*IF
         WUW8CI = 'N';                         Wrk F1 oproepen
         WUXICI = 'Y';                         Wrk F1 record v
                 ELSE;
                    // CASE: *OTHERWISE
         WUW8CI = 'Y';                         Wrk F1 oproepen
                   WUK7ND = WUK7ND + 1; //Wrk teller cf01
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Contr alle dgn&bedr=0:tst - Wkl betaling  *
     EvalR   WUGDCD = '0';                         SWITCH14 ALLES0
         HC7H = '0';              1            HULPSWITCH  ES0
         If #1GLNB = *ZERO AND #1GMNB = *ZERO AND #1GYNB = *ZERO AND #1G7NB = *ZERO AND #1JONB = *ZERO AND #1GPNB = *ZERO AND #1JNNB = *ZERO AND #1GNNB = *ZERO AND #1JLNB = *ZERO AND #1GONB = *ZERO AND #1JMNB = *ZERO AND #1GVNB = *ZERO AND #1GINB = *ZERO AND #1GJNB = *ZERO AND #1GKNB = *ZERO AND #1GRNB = *ZERO AND #1GSNB = *ZERO AND #1GTNB = *ZERO AND #1GUNB = *ZERO AND #1JJNB = *ZERO AND #1JKNB = *ZERO AND #1GGNB = *ZERO AND #1GHNB = *ZERO; //VD6
           If #1HPNB = *ZERO; //BEDR WKLH
     EvalR   HC7H = '1';                           SWITCH14 AAN
             If #1GXNB = *ZERO AND #1BBNR = *ZERO; //DAGEN KBF SANKT
     EvalR   WUGDCD = '1';                         SWITCH14 AAN
               If #1DVCD <> *BLANK OR #1DWCD <> *BLANK OR #1DXCD <> *BLANK OR #1DYCD <> *BLANK OR #1EDCD <> *BLANK OR #1EECD <> *BLANK; //AFH1KODE
                  //          #1LPNB    ORNE *ZERO                      BCAANTAL
                 EXSR TBTV;
                 If WUGDCD <> '4';
                   If #1A1CD <> '02' AND #1A1CD <> '04' AND #1A1CD <> '06' AND #1A1CD <> '91' AND #1A1CD <> 'B.' AND #1A1CD <> 'C.' AND #1A1CD <> 'D.' AND #1A1CD <> 'A.' AND #1A1CD <> 'CA' AND #1A1CD <> 'E.' AND #1A1CD <> 'F.' AND #1A1CD <> 'G.' AND #1A1CD <> 'GI' AND #1A1CD <> 'GK';
         #1BCST = 'N';                         BEDR BZ
         #1BDST = 'N';                         BEDR WKL
         #1ISCD = 'N';                         GN UREN GW
                   ENDIF; //END 02/04/06
                 ENDIF; //SW<>4
               Endif; //END AFH ING
                //                                                    DGN KBF ING
             ELSE; //NT 0
               If #1DVCD <> *BLANK OR #1DWCD <> *BLANK OR #1DXCD <> *BLANK OR #1DYCD <> *BLANK OR #1EDCD <> *BLANK OR #1EECD <> *BLANK OR #1LPNB <> *ZERO; //AFH1KODE
                 If HC7H = '1';
     EvalR   WUGDCD = '2';                         SWITCH14 AAN
                 Endif; //END HC7H
               Endif; //END AFH.EN
               If HC7H = '1';
                 If WUGDCD <> '2';
                   If WUGDCD <> '4';
     EvalR   WUGDCD = '3';                         ENKEL KBF DG
                   Endif; //END 4
                 Endif; //END 2
               Endif; //END HC7H
             Endif; //DGN KBF
           Endif; //BDR WKLG
         Endif; //REST DGN
          //---------------------------------------------------------------
          // blanco opdrachtkaart afhoudingen zonder bedragen,....
          // CASE:
          //  - c1ORc2
          //   !- c1    : DTL.*CMD key is CF01
          //   !- c2    : WRK.Wrk F1 oproepen is Y
          //   '-
         If *IN01 = '1' OR WUW8CI = 'Y'; //*IF
         ELSE;
            // CASE: *OTHERWISE
            // Switch14=2 --> error : enkel W3 kaart, geen W1
            // CASE: WRK.switch14 is 2
           If WUGDCD = '2'; //*IF
              // Send message 'Enkel afhoudingen,gn beta'
         ZAMSID = 'USR0741';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Switch14=4 --> error : enkel W3 kaart, geen W1 met beslagen,onder
            // CASE: WRK.switch14 is 4
           If WUGDCD = '4'; //*IF
              // Send message 'Foutieve afhoudingen'
         ZAMSID = 'USR1832';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
         Endif; //*FI
         WUCC18 = *BLANK;                         WRK controle 18
          // CASE: WRK.Wrk hidden zetten calcul is 0
         If WUCA77 = '0'; //*IF
            // wrk BV/V ingevuld opvullen met Y of N
            // CASE:
            //  - c1ORc2ORc3ORc4
            //   !- c1    : DTL.Volle dagen BV is niet 0
            //   !- c2    : DTL.Halve dagen BV is niet 0
            //   !- c3    : DTL.Volle dagen verlof is niet 0
            //   !- c4    : DTL.Halve dagen verlof is niet 0
            //   '-
           If #1G7NB <> *ZERO OR #1JONB <> *ZERO OR #1GNNB <> *ZERO OR #1JLNB <> *ZERO; //*IF
         WUJYCH = 'Y';                         Wrk BV/V ingevu
           ELSE;
              // CASE: *OTHERWISE
         WUJYCH = 'N';                         Wrk BV/V ingevu
           Endif; //*FI
         Endif; //*FI
          // !!! Omzetting uren->dagen wkl->dagen BZ + berekenen wklh/BZ/taks/
          // CASE: WRK.Wrk hidden zetten calcul is 0
         If WUCA77 = '0'; //*IF
            // Type = 01 : switch op Y   (maar gn dok of rivierarbeider)
            // CASE: DTL.Type kode is 01 : volledig werkloos
           If #1A1CD = '01'; //*IF
              // CASE: DTL.Beroep kode is Nt 09 : geen dok A'pen
             If #1BACD <> '09'; //*IF
         WULOCD = 'Y';                         Sw type01/03/08
             Endif; //*FI
           Endif; //*FI
            // Type = 03/08/11/12/16/17/23/33/29 : switch op Y
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10ORc11ORc12ORc13
            //   !- c1    : DTL.Type kode is 03 :vrijw.deeltijds 171.9
            //   !- c2    : DTL.Type wklh. kode is 07
            //   !- c3    : DTL.Type wklh. kode is 08 : E303 invoerrecht
            //   !- c4    : DTL.Type wklh. kode is 11 : beroepsopleiding
            //   !- c5    : DTL.Type wklh. kode is 12 :171bis beschutte werk
            //   !- c6    : DTL.Type wklh. kode is 16 : voltijds opleiding
            //   !- c7    : DTL.Type wklh. kode is 17 : deeltijds opleiding
            //   !- c8    : DTL.Type wklh. kode is 33 : studenten + wklh
            //   !- c9    : DTL.Type wklh. kode is 23
            //   !- c10   : DTL.Type wklh. kode is 29 = werkhervatting
            //   !- c11   : DTL.Type wklh. kode is 27 = opvanguitkering
            //   !- c12   : DTL.Type wklh. kode is 31 : deelt.opl/stage
            //   !- c13   : DTL.Type wklh. kode is 40 : vestigingsuitkering
            //   '-
           If #1A1CD = '03' OR #1A1CD = '07' OR #1A1CD = '08' OR #1A1CD = '11' OR #1A1CD = '12' OR #1A1CD = '16' OR #1A1CD = '17' OR #1A1CD = '33' OR #1A1CD = '23' OR #1A1CD = '29' OR #1A1CD = '27' OR #1A1CD = '31' OR #1A1CD = '40'; //*IF
         WULOCD = 'Y';                         Sw type01/03/08
           Endif; //*FI
            // Type = 05 : switch op Y
            // CASE: DTL.Type wklh. kode is 05
           If #1A1CD = '05'; //*IF
         WUCA11 = 'Y';                         Sw type 05
           Endif; //*FI
            // Type = 09/10 : switch op Y
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.Type wklh. kode is 09 : conv brugp voltijds
            //   !- c2    : DTL.Type wklh. kode is 10 : conv brugp deeltijds
            //   '-
           If #1A1CD = '09' OR #1A1CD = '10'; //*IF
         WULQCD = 'Y';                         Sw type 09/10
           Endif; //*FI
            // Type=34-->39 en 44-->49 en 54/55: switch op Y(zelfde als 01,...)
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10ORc11ORc12ORc13ORc14
            //   !- c1    : DTL.Type wklh. kode is 34
            //   !- c2    : DTL.Type wklh. kode is 35
            //   !- c3    : DTL.Type wklh. kode is 36
            //   !- c4    : DTL.Type wklh. kode is 37
            //   !- c5    : DTL.Type wklh. kode is 38
            //   !- c6    : DTL.Type wklh. kode is 39
            //   !- c7    : DTL.Type wklh. kode is 44
            //   !- c8    : DTL.Type wklh. kode is 45
            //   !- c9    : DTL.Type wklh. kode is 46
            //   !- c10   : DTL.Type wklh. kode is 47
            //   !- c11   : DTL.Type wklh. kode is 48
            //   !- c12   : DTL.Type wklh. kode is 49
            //   !- c13   : DTL.Type wklh. kode is 54
            //   !- c14   : DTL.Type wklh. kode is 55
            //   '-
           If #1A1CD = '34' OR #1A1CD = '35' OR #1A1CD = '36' OR #1A1CD = '37' OR #1A1CD = '38' OR #1A1CD = '39' OR #1A1CD = '44' OR #1A1CD = '45' OR #1A1CD = '46' OR #1A1CD = '47' OR #1A1CD = '48' OR #1A1CD = '49' OR #1A1CD = '54' OR #1A1CD = '55'; //*IF
         WULOCD = 'Y';                         Sw type01/03/08
           Endif; //*FI
         WUZDCJ = 'N';                         C105 bestaat al
            // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
           CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
           AAQLDM = #1GWNB; //Doc BD meer RM
           AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  'C105'        AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
           //Test Doc BD bes
           //KEY: Documenten
           //Wrk taal
           //WRK Barema
           //WRK Type wkl. k
           //WRK document BD

           XPG(AARC:WQ0279:WQ0280:WQ0281:WQ0282);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
             *In99 = *On;
           Endif;
         WUAPCK = 'N';                         C110A bestaat a
            // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
           CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
           AAQLDM = #1GWNB; //Doc BD meer RM
           AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  'C110A'       AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
           //Test Doc BD bes
           //KEY: Documenten
           //Wrk taal
           //WRK Barema
           //WRK Type wkl. k
           //WRK document BD

           XPG(AARC:WQ0283:WQ0284:WQ0285:WQ0286);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
             *In99 = *On;
           Endif;
            // CASE: WRK.C110A bestaat al is Y
           If WUAPCK = 'Y'; //*IF
              // beslag terug verhogen!! - Wkl betaling  *
             If BESL99 <> '0';
               If BESL99 = '1';
                 #1GZNB = 999999;
               ENDIF;
               If BESL99 = '2';
                 #1G1NB = 999999;
               ENDIF;
               If BESL99 = '3';
                 #1G3NB = 999999;
               ENDIF;
               If BESL99 = '4';
                 #1G5NB = 999999;
               ENDIF;
               If BESL99 = '5';
                 #1HDNB = 999999;
               ENDIF;
               If BESL99 = '6';
                 #1HFNB = 999999;
               ENDIF;
             ENDIF;
           Endif; //*FI
         WUHUCN = 'N';                         Doc 250.1 besta
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.Type wklh. kode is 54
            //   !- c2    : DTL.Type wklh. kode is 55
            //   '-
           If #1A1CD = '54' OR #1A1CD = '55'; //*IF
              // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
             CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
             AAQLDM = #1GWNB; //Doc BD meer RM
             AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  @CN(036)      AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
             //Test Doc BD bes
             //KEY: Documenten
             //Wrk taal
             //WRK Barema
             //WRK Type wkl. k
             //WRK document BD

             XPG(AARC:WQ0287:WQ0288:WQ0289:WQ0290);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
               *In99 = *On;
             Endif;
              // CASE: WRK.Doc 250.1 bestaat al is Y
             If WUHUCN = 'Y'; //*IF
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Document 250.1 toevoegen'
         ZAMSID = 'USR7441';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // CASE: DTL.Datum achterstal is >=201211
           If #1GWNB >= 201211; //*IF
              // Ophalen dagbdrg barema de - Wkl betaling  *
     EvalR   WUAGCD = '0';                         SW102
     EvalR   WUF0CD = '0';                         SW109
              //                    MOVE '0'       WUF1CD           SW110
     EvalR   WUF2CD = '0';                         SW111
         WUW241 = '0';
             RMPAR = #1GWNB;
             LEEFTX = 10;
     EvalR   PD1PD1 = #1AINB;            6 0

         LFTDL9 = #1AKNB;            9
     EvalR   LFTDL9 = #1FGNB;
         LFTD11 = LFTD11;           11
     EvalR   LFTD11 = #1FHNB;
         GEVD11 = 'N';            1
             MDGEB01(LFTD11:GEVD11:GEBDAT);
               If GEVD11 = 'Y';
               PD1PD1 = GEBDAT / 100;
             ENDIF;
              //**
             MDLEEF3A(PD1PD1:RMPAR:LEEFTX);
               If #1BCCD <> 'P';
         DOCD7L = #1DOCD;            7
               If #1A1CD = '18' AND WUCC18 = '18';
                 If P45 = 'A0';
         DOCD7L = '...E...';
                 ENDIF;
                 If P45 = 'B0';
         DOCD7L = '..GB...';
                 ENDIF;
                 If P45 = 'N0';
         DOCD7L = '..GN...';
                 ENDIF;
               ENDIF;
               If WUAPCK = 'Y';
         XOCD7L = DOCD7L;            7
         DOCD7L = XOCD7L;
               ENDIF;
               If P33 = 'J' OR P33 = 'S';
                 If #1A1CD <> '11';
     EvalR   DOCD7L = '.';
                 ENDIF;
               ENDIF;
         BBEE = 'E';              1
               DDD1 = 0;
               DDD2 = 0;
               DDD3 = 0;
         LFTCOD = '0';            1
         BRDOK = *BLANK;             2
               BVLID = 0;
               BDBVOL = 0;
               BDBHAL = 0;
               BDEVOL = 0;
               BDEHAL = 0;
               BD5VOL = 0;
               BD5HAL = 0;
               BDFVOL = 0;
               BDFHAL = 0;
               RMPAR = #1GWNB;
         ' = ';           BEVOOR            1
         BEVOOR = WUZDCJ;            1
         COM126 = WUCO01;            3
                //                    MOVEL'BT'      PBOFBT  2
         BTVER1 = *BLANK;            6
         BTVER2 = *BLANK;            6
         BTVER3 = *BLANK;            6
         BTTOE1 = *BLANK;           11
         BTTOE2 = *BLANK;           11
         BTTOE3 = *BLANK;           11
               //REFMND BAREM
               //DAGBEDRAG
               //DAGBEDRAG EU
               //DAGBEDRAG F9
               //BEF OF EURO ?
               //ANC.CODE
               //BEROEP 09
               //BEROEPSVERLE
               //VOLGNR WERKLOZE BARE
               //ACLVB-RVA (A)
               //VOL BAREMABD
               //IDEM IN EURO
               //HALF BAREMA
               //IDEM IN EURO
               //TYPE5IN EURO
               //TYPE5IN EURO
               //FORF IN EURO
               //FORF IN EURO
               POSBARX9(PBOFBT:#1AACD:#1AFNB:LEEFTX:DOCD7L:#1A1CD:RMPAR:DDD1:DDD2:DDD3:BBEE:LFTCOD:BRDOK:BVLID:COM126:BEVOOR:WUXUND:WUVMCJ:BTVER1:BTVER2:BTVER3:BTTOE1:BTTOE2:BTTOE3:BDBVOL:BDEVOL:BDBHAL:BDEHAL:BD5VOL:BD5HAL:BDFVOL:BDFHAL);
                 HVBAR = BDEVOL;
               HHBAR = BDEHAL;
               HVBAR5 = BD5VOL;
               HHBAR5 = BD5HAL;
               HVFOR = BDFVOL;
               HHFOR = BDFHAL;
               If P33 = 'S' AND #1A1CD = '11';
         DOCD7L = '..W';
                 //REFMND BAREM
                 //DAGBEDRAG
                 //DAGBEDRAG EU
                 //DAGBEDRAG F9
                 //BEF OF EURO ?
                 //ANC.CODE
                 //BEROEP 09
                 //BEROEPSVERLE
                 //VOLGNR WERKLOZE BARE
                 //ACLVB-RVA (A)
                 //VOL BAREMABD
                 //IDEM IN EURO
                 //HALF BAREMA
                 //IDEM IN EURO
                 //TYPE5IN EURO
                 //TYPE5IN EURO
                 //FORF IN EURO
                 //FORF IN EURO
                 POSBARX9(PBOFBT:#1AACD:#1AFNB:LEEFTX:DOCD7L:#1A1CD:RMPAR:DDD1:DDD2:DDD3:BBEE:LFTCOD:BRDOK:BVLID:COM126:BEVOOR:WUXUND:WUVMCJ:BTVER1:BTVER2:BTVER3:BTTOE1:BTTOE2:BTTOE3:BDBVOL:BDEVOL:BDBHAL:BDEHAL:BD5VOL:BD5HAL:BDFVOL:BDFHAL);
                   If BDEVOL > HVBAR;
                   HVBAR = BDEVOL;
                   HHBAR = BDEHAL;
                 ENDIF;
               ENDIF; //11+S
             ENDIF; //SUBBEROEP=P
             EXSR TESTIN;
           ELSE;
              // CASE: *OTHERWISE
              // Ophalen barema+bdr 092012 - Wkl betaling  *
             //REFMND
     C                   MOVEA     *IN(50)       UWIN              1
         BARC10 = #1DOCD;
     EvalR   WUAGCD = '0';                         SW102
     EvalR   WUF0CD = '0';                         SW109
              //                    MOVE '0'       WUF1CD           SW110
     EvalR   WUF2CD = '0';                         SW111
         WUW241 = '0';
             LEEFTX = 10;
         FOR40 = A1ADDT;             6 0          DAT40%
         FORF = A1AHDT;              6 0          DAT.FORFAIT
             VERLL = #1A9NB;
             If #1A9NB = 19;
               If #1BANB >= 156;
                 VERLL = 20;
               ENDIF;
             ENDIF;
         TYPCON = 'N';
             If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06';
         TYPCON = 'Y';
             ENDIF;
             If #1A1CD = '52';
     C                   GOTO      NTAB52
             ENDIF;
             If #1BCCD <> 'P'; //NTS DOEN VR PWATOESL
               If #1A1CD = '01' OR #1A1CD = '03' OR #1A1CD = '33';
                 If P45 = 'B1' OR P45 = 'B2' OR P45 = 'N1' OR P45 = 'N2';
                   If FOR40 = #1GWNB; //DAT.ACHT.
                     If #1BDST <> 'N';
         WUF2CD = '2';                         ZELF BER.
                     ENDIF; //SW111
                   ENDIF;
                 ENDIF;
                 If P45 = 'B2' OR P45 = 'P.';
                   If FORF = #1GWNB; //DAT.ACHT.
                     If #1BDST <> 'N';
         WUF2CD = '3';                         ZELF BER.
                     ENDIF;
                   ENDIF;
                 ENDIF;
               ENDIF; //01,03,05,33
                //SW110=1:LID MET BAREMA B3,N3,A3/B2,N2,A2/P3/OP3/A8 & JARIG IN DIE MAAND
                //SW111=1:LID MET WACHT-OF OVERBR.UITKERING & JARIG IN DIE MND->ZELF BEREKE
                //VR TYPE 05 IS BEDRAG FORFAIT NODIG==>GAAN CHAINEN NR BAREMA...P...=B10 P
         P' = 'B10;       BARFOR            5
                //----------------------------------------------------------------
     EvalR   BARACL = P12;
     EvalR   BARVW5 = P12;
               If P45 = 'A0';
         BARACL = 'B24';            5            TAB15
         BARVW5 = 'B24';            5            TAB15
               Endif; //END A0
               If P45 = 'N0';
         BARACL = 'B24';            5            TAB15
         BARVW5 = 'B24';            5            TAB15
               Endif; //END N0
               If P45 = 'B0';
         BARACL = 'B25';            5            TAB15
         BARVW5 = 'B25';            5            TAB15
               Endif; //END B0

               If P46 = 'B3*';
         BARACL = 'B15';            5            TAB15
     EvalR   BARACL = P12;
         BARVW5 = 'B15';            5            TAB15
     EvalR   BARVW5 = P12;
                 If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06';
         BARACL = 'B07';                         TAB07
                 Endif; //02/04/07
               Endif; //END B3*
               If P46 = 'N3*';
         BARACL = 'B14';                         TAB14
     EvalR   BARACL = P12;
         BARVW5 = 'B14';                         TAB14
     EvalR   BARVW5 = P12;
                 If TYPCON = 'Y';
                   If #1GWNB < 199904;
         BARACL = 'B05';                         TAB05
                   ELSE; //VNF199904
                     If #1GWNB >= 199904 AND #1GWNB <= 200003;
         BARACL = 'B20';                         TAB20
                     ELSE; //VNF199904
                       If #1GWNB >= 200004;
         BARACL = 'B21';                         TAB21
                       ENDIF; //>=200004
                     ENDIF; //9904-0003
                   ENDIF; //<199904
                 Endif; //02/04/07
                 If #1A1CD = '05';
         BARACL = 'B21';                         TAB21
                 ENDIF; //TYPE05
               Endif; //END N3*
               If P46 = 'B3.' OR P46 = 'N3.' OR P46 = 'A3.' OR P46 = 'A3*' OR P46 = 'P3.' OR P46 = 'A8.' OR P46 = 'A8*';
                 OUD50 = 0;
                 OUD50 = 5000 + PD1AL;
                 OUD55 = 0;
                 OUD55 = 5500 + PD1AL;
                 OUD58 = 0;
                 OUD58 = 5800 + PD1AL;
                 If OUD50 > #1GWNB; //JNGER OF 50
                   LEEFTX = 49;
                 ENDIF;
                 If OUD50 <= #1GWNB; //OUDER OF 50
                   LEEFTX = 50;
                 ENDIF;
                 If OUD55 <= #1GWNB;
                   LEEFTX = 55;
                 ENDIF;
                 If OUD58 <= #1GWNB;
                   LEEFTX = 58;
                 ENDIF;

                 If OUD50 <= #1GWNB; //OUDER OF 50
                   If P46 = 'N3.';
         BARACL = 'B04';                         TAB04
     EvalR   BARACL = P12;
         BARVW5 = 'B04';                         TAB04
     EvalR   BARVW5 = P12;
                     If TYPCON = 'Y';
                       If #1GWNB < 199904;
         BARACL = 'B05';                         TAB05
                       ELSE; //VNF199904
                         If #1GWNB >= 199904 AND #1GWNB <= 200003;
         BARACL = 'B20';                         TAB20
                         ELSE; //VNF199904
                           If #1GWNB >= 200004;
         BARACL = 'B21';                         TAB21
                           ENDIF; //>=200004
                         ENDIF; //9904-0003
                       ENDIF; //<199904
                     Endif; //02/04/07
                     If #1A1CD = '05';
         BARACL = 'B21';                         TAB21
                     ENDIF;
                   Endif; //N3
                 Endif; //> 50 JR
                 If OUD50 > #1GWNB; //JNGER OF 50
                   If VERLL >= 20; //BV > 20JR
                     If P46 = 'N3.';
     EvalR   BARACL = P12;
     EvalR   BARVW5 = P12;
                       If #1GWNB < 199904;
         BARACL = 'B05';                         TAB05
         BARVW5 = 'B05';                         TAB05
                       ELSE;
                         If #1GWNB >= 199904 AND #1GWNB <= 200003;
         BARACL = 'B20';                         TAB20
         BARVW5 = 'B20';                         TAB20
                         ELSE;
                           If #1GWNB >= 200004;
         BARACL = 'B21';                         TAB21
         BARVW5 = 'B21';                         TAB21
                           ENDIF; //>=200004
                         ENDIF; //9904-0003
                       ENDIF; //<199904
                     Endif; //N3
                   Endif; //20 BV
                 Endif; //< 50 JR
                 If OUD55 <= #1GWNB; //OUDER OF 55
                   If P46 = 'N3.';
         BARACL = 'B14';                         TAB14
     EvalR   BARACL = P12;
         BARVW5 = 'B14';                         TAB14
     EvalR   BARVW5 = P12;
                     If TYPCON = 'Y';
                       If #1GWNB < 199904;
         BARACL = 'B05';                         TAB05
                       ELSE; //VNF199904
                         If #1GWNB >= 199904 AND #1GWNB <= 200003;
         BARACL = 'B20';                         TAB20
                         ELSE; //VNF199904
                           If #1GWNB >= 200004;
         BARACL = 'B21';                         TAB21
                           ENDIF; //>=200004
                         ENDIF; //9904-0003
                       ENDIF; //<199904
                     Endif; //02/04/07
                     If #1A1CD = '05';
         BARACL = 'B21';                         TAB21
                     ENDIF;
                   Endif; //N3
                 Endif; //> 55 JR
                  // 01/97
                 If #1GWNB < 199701;
                   If OUD50 <= #1GWNB; //OUDER OF 50
                     If P46 = 'B3.';
         BARACL = 'B06';                         TAB06
     EvalR   BARACL = P12;
         BARVW5 = 'B06';                         TAB06
     EvalR   BARVW5 = P12;
                       If TYPCON = 'Y';
         BARACL = 'B07';                         TAB07
                       Endif; //02/04/07
                       If #1A1CD = '05' AND #1GWNB < 200007;
         BARACL = 'B07';                         TAB07
                       ENDIF;
                     Endif; //B3
                   Endif; //> 50 JR
                   If OUD50 > #1GWNB; //JNGER OF 50
                     If VERLL >= 20; //BV > 20JR
                       If P46 = 'B3.';
         BARACL = 'B07';                         TAB07
     EvalR   BARACL = P12;
         BARVW5 = 'B07';                         TAB07
     EvalR   BARVW5 = P12;
                       Endif; //B3
                     Endif; //20 BV
                   Endif; //< 50 JR
                   If OUD55 <= #1GWNB; //OUDER OF 55
                     If P46 = 'B3.';
         BARACL = 'B15';                         TAB15
     EvalR   BARACL = P12;
         BARVW5 = 'B15';                         TAB15
     EvalR   BARVW5 = P12;
                       If TYPCON = 'Y';
         BARACL = 'B07';                         TAB07
                       Endif; //02/04/07
                       If #1A1CD = '05' AND #1GWNB < 200007;
         BARACL = 'B07';                         TAB07
                       ENDIF;
                     Endif; //B3
                   Endif; //> 55 JR
                    // 01/97
                 ELSE; //WEL REF.MND
                   If OUD50 <= #1GWNB; //OUDER OF 50
                     If P46 = 'B3.';
                       If #1GWNB < 199707;
                         If #1ASST = ' '; //NIEUW REGIME
         BARACL = 'B17';                         TAB17=45%
     EvalR   BARACL = P12;
         BARVW5 = 'B17';                         TAB17=45%
     EvalR   BARVW5 = P12;
                         ELSE; //KODE 1=42,5%
         BARACL = 'B06';                         TAB06
     EvalR   BARACL = P12;
         BARVW5 = 'B06';                         TAB06
     EvalR   BARVW5 = P12;
                         ENDIF;
                       ELSE; //VANAF 199707
                         If #1ASST = ' ' OR #1ASST = '1' OR #1ASST = '2' OR #1ASST = '3' OR #1ASST = '4' OR #1ASST = '5'; //NIEUW REGIME
         BARACL = 'B17';                         TAB17=45%
     EvalR   BARACL = P12;
         BARVW5 = 'B17';                         TAB17=45%
     EvalR   BARVW5 = P12;
                         ELSE; //KODE 1=42,5%
         BARACL = 'B06';                         TAB06
     EvalR   BARACL = P12;
         BARVW5 = 'B06';                         TAB06
     EvalR   BARVW5 = P12;
                         ENDIF; //END ASST
                       ENDIF; //END 199707
                       If TYPCON = 'Y';
         BARACL = 'B07';                         TAB07
     EvalR   BARACL = P12;
                       Endif; //02/04/07
                       If #1A1CD = '05' AND #1GWNB < 200007;
         BARACL = 'B07';                         TAB07
     EvalR   BARACL = P12;
                       ENDIF;
                     Endif; //B3
                   Endif; //> 50 JR
                   If OUD50 > #1GWNB; //JNGER OF 50
                     If VERLL >= 20; //BV > 20JR
                       If P46 = 'B3.';
         BARACL = 'B07';                         TAB07
     EvalR   BARACL = P12;
         BARVW5 = 'B07';                         TAB07
     EvalR   BARVW5 = P12;
                       Endif; //B3
                     Endif; //20 BV
                   Endif; //< 50 JR
                   If OUD55 <= #1GWNB; //OUDER OF 55
                     If P46 = 'B3.';
                       If #1ASST = ' ' OR #1ASST = '1' OR #1ASST = '2' OR #1ASST = '3' OR #1ASST = '4' OR #1ASST = '5'; //1 OF BLANK
         BARACL = 'B18';                         TABXX:50%
     EvalR   BARACL = P12;
         BARVW5 = 'B18';                         TABXX:50%
     EvalR   BARVW5 = P12;
                       ELSE; //WEL 0=60%
         BARACL = 'B15';                         TAB15
     EvalR   BARACL = P12;
         BARVW5 = 'B15';                         TAB15
     EvalR   BARVW5 = P12;
                       ENDIF;
                       If TYPCON = 'Y';
         BARACL = 'B07';                         TAB07
     EvalR   BARACL = P12;
                       Endif; //02/04/07
                       If #1A1CD = '05' AND #1GWNB < 200007;
         BARACL = 'B07';                         TAB07
     EvalR   BARACL = P12;
                       ENDIF;
                     Endif; //B3
                   Endif; //> 55 JR
                   If OUD58 <= #1GWNB; //OUDER OF 58
                     If P46 = 'B3.';
                       If #1ASST = ' ' OR #1ASST = '1' OR #1ASST = '2' OR #1ASST = '3' OR #1ASST = '4' OR #1ASST = '5'; //1 OF BLANK
         BARACL = 'B19';                         TABYY:55%
     EvalR   BARACL = P12;
         BARVW5 = 'B19';                         TABYY:55%
     EvalR   BARVW5 = P12;
                       ELSE; //WEL 0=60%
         BARACL = 'B15';                         TAB15
     EvalR   BARACL = P12;
         BARVW5 = 'B15';                         TAB15
     EvalR   BARVW5 = P12;
                       ENDIF;
                       If TYPCON = 'Y';
         BARACL = 'B07';                         TAB07
     EvalR   BARACL = P12;
                       Endif; //02/04/07
                       If #1A1CD = '05' AND #1GWNB < 200007;
         BARACL = 'B07';                         TAB07
     EvalR   BARACL = P12;
                       ENDIF;
                     Endif; //B3
                   Endif; //> 55 JR
                 ENDIF;
                  //                                                     >=01/97
                 If OUD50 <= #1GWNB; //OUDER OF 50
                   If P46 = 'A3.' OR P46 = 'A3*';
 OR P46 = 'A8*'                      //          P46       OREQ 'A8.'
         BARACL = 'B03';                         TAB03
     EvalR   BARACL = P12;
         BARVW5 = 'B03';                         TAB03
     EvalR   BARVW5 = P12;
                     If TYPCON = 'Y';
         BARACL = 'B01';                         TAB07
                     Endif; //02/04/06/05/
                     If #1A1CD = '05' AND #1GWNB < 200007;
         BARACL = 'B01';                         TAB07
         BARVW5 = 'B01';                         TAB07
                     ENDIF;
                      //                    END                             B3
                   Endif; //A3,A3*,A8,A8
                 Endif; //> 50 JR
                 If OUD50 > #1GWNB; //JNGER OF 50
                   If VERLL >= 20; //BV > 20JR
                     If P46 = 'A3.' OR P46 = 'A3*';
 OR P46 = 'A8*'                        //          P46       OREQ 'A8.'
         BARACL = 'B01';                         TAB01
     EvalR   BARACL = P12;
         BARVW5 = 'B01';                         TAB01
     EvalR   BARVW5 = P12;
                     Endif; //A3,A3*,A8,A8
                   Endif; //20 BV
                 Endif; //< 50 JR
                 If P46 = 'A8.';
         BARACL = 'B01';                         TAB01
     EvalR   BARACL = P12;
         BARVW5 = 'B01';                         TAB01
     EvalR   BARVW5 = P12;
                 Endif; //A8
               Endif; //B3 OF N3 A3
               If OUD50 <= #1GWNB; //OUDER OF 50
                 If P46 = 'P3.';
         BARACL = 'B11';                         TAB11
     EvalR   P' = ';          BARACL                         B11 P
         BARVW5 = 'B11';                         TAB11
     EvalR   P' = ';          BARVW5                         B11 P
                   If TYPCON = 'Y';
         BARACL = 'B10';                         TAB10
         BARVW5 = 'B10';                         TAB10
                   Endif; //02/04/07
                   If #1A1CD = '05' AND #1GWNB < 200007;
         BARACL = 'B10';                         TAB10
         BARVW5 = 'B10';                         TAB10
                   ENDIF;
                 Endif; //P3
               Endif; //> 50 JR
               If OUD50 > #1GWNB; //JNGER OF 50
                 If VERLL >= 20; //BV > 20JR
                   If P46 = 'P3.';
         BARACL = 'B10';                         TAB10
     EvalR   P' = ';          BARACL
         BARVW5 = 'B10';                         TAB10
     EvalR   P' = ';          BARVW5
                   Endif; //P3
                 Endif; //20 BV
               Endif; //< 50 JR
               If #1BACD = '09'; //BER.=09/DOK
                 If P35 = 'WA6';
     EvalR   BARACL = 'B13CC';
     EvalR   BARVW5 = 'B13CC';
                   If P36 = 'WA6F';
     EvalR   ' = 'B13A;       BARACL
     EvalR   ' = 'B13A;       BARVW5
                   ENDIF;
                 ELSE;
                   If P45 = 'A6';
                     If #1GWNB <= 200112;
     EvalR   BARACL = 'B1354';
     EvalR   BARVW5 = 'B1354';
                     ELSE; //VANAF 01/2002
                       If #1GWNB <= 200812;
                         If P12 = '70';
     EvalR   BARACL = 'B1370';
     EvalR   BARVW5 = 'B1370';
                         ENDIF;
                         If P12 <= '59';
         ' = 'B13;       BARACL
         ' = 'B13;       BARVW5
     EvalR   BARACL = P12;
     EvalR   BARVW5 = P12;
                         ENDIF;
                       ELSE; //01/2009
         ' = 'B13;       BARACL
         ' = 'B13;       BARVW5
     EvalR   BARACL = P12;
     EvalR   BARVW5 = P12;
                       ENDIF; //200812
                     ENDIF; //12/2001
                   ELSE; //GEEN A6
                     If P35 = 'WA0';
     EvalR   BARACL = 'B33CC';
     EvalR   BARVW5 = 'B33CC';
                     ELSE;
         BARACL = 'B33';
         BARVW5 = 'B33';
     EvalR   BARACL = P12;
     EvalR   BARVW5 = P12;
                     ENDIF; //WA0
                   ENDIF; //A6
                 ENDIF; //WA6
               Endif;
               If P36 <> '.B3.';
                 If P36 <> 'WB3.';
                   If P36 <> '.N3.';
                     If P36 <> 'WN3.';
                       If P36 <> '.A3.';
                         If P46 <> 'A3*';
                           If P46 <> 'B3*';
                             If P46 <> 'N3*';
                               If P36 <> '.P3.';
                                 If P36 <> 'WP3.';
                                   If P46 <> 'A8.';
                                     If P46 <> 'A8*';
                                       If #1BACD <> '09';
                                         If #1GWNB <= 201102;
                                           CHAIN #1DOCD @B9REGH ;
       *in50 = (%found() = *Off); //BAREMA RVA
     C   50              MOVE      '1'           WUAGCD
     C   50              GOTO      ENDBRM
         BARACL = B9DUCD;            5
         BARVW5 = B9DUCD;
                                         ELSE;
     C     NTAB52        TAG
                                           CHAIN #1DOCD LYD4REL1 ;
       *in50 = (%found() = *Off);
     C   50              MOVE      '1'           WUAGCD
     C   50              GOTO      ENDBRM
         BARACL = D4J7CI;            5
         BARVW5 = D4J7CI;
                                           If #1A1CD = '52';
     C                   GOTO      TOCHBD
                                           ENDIF;
                                         ENDIF;
                                         If P45 = 'N2' OR P45 = 'N4' OR P45 = 'N5';
                                           If #1GWNB >= 199904;
         BARACL = 'B20';
         BARVW5 = 'B20';
                                           ELSE;
         BARACL = 'B05';
         BARVW5 = 'B05';
                                           ENDIF;
                                           If #1GWNB >= 200004;
         BARACL = 'B21';
         BARVW5 = 'B21';
                                           ENDIF;
                                         ENDIF; //N2,N4,N5
                                       Endif; //END 09
                                     Endif; //END P3.
                                   Endif; //END N3*
                                 Endif; //END B3*
                               Endif; //END A3*
                             Endif; //END A3.
                           Endif; //END N3.
                         Endif; //END B3.
                       Endif; //END A8*
                     Endif; //END A8.
                   Endif; //END B3.
                 Endif; //END A8*
               Endif; //END A8.
                //200901 BAREMA'S TOT 70 TERWIJL A3,... SLECHTS TOT BEDRAGEN 59 GAAT
               If #1GWNB <= 201102;
                 If P45 = 'A3' OR P45 = 'N3' OR P45 = 'B3';
                   If P12 >= '60';
                     If P12 <> '..';
                       If P35 <> 'WA3';
     EvalR   BARACL = '59';
     EvalR   BARVW5 = '59';
                       ENDIF;
                     ENDIF;
                   ENDIF;
                 ENDIF;
               ELSE;
                 If P45 = 'A3' OR P45 = 'B3';
                   If P12 >= '61';
                     If P12 <> '..';
                       If P35 <> 'WA3';
     EvalR   BARACL = '60';
     EvalR   BARVW5 = '60';
                       ENDIF;
                     ENDIF;
                   ENDIF;
                 ENDIF;
                 If P45 = 'N3';
                   If P35 <> 'WN3';
                     If PD1AL <> *ZERO;
                       LEEFTT = #1GWNB - PD1AL;
                     ENDIF;
                     If LEEFTT >= 5000;
                       If P12 >= '61';
                         If P12 <> '..';
     EvalR   BARACL = '60';
     EvalR   BARVW5 = '60';
                         ENDIF;
                       ENDIF;
                     ELSE;
                       If P12 >= '60';
                         If P12 <> '..';
     EvalR   BARACL = '59';
     EvalR   BARVW5 = '59';
                         ENDIF;
                       ENDIF;
                     ENDIF;
                   ENDIF;
                 ENDIF;
               ENDIF;
               If #1GWNB >= 201209;
                 If P46 = 'N3.' OR P46 = 'B3.' OR P46 = 'A3.' OR P46 = 'P3.';
         BBEE = 'E';              1
                   DDD1 = 0;
                   DDD2 = 0;
                   DDD3 = 0;
         LFTCOD = '0';            1
         BRDOK = *BLANK;             2
                   BVLID = 0;
                   BDBVOL = 0;
                   BDBHAL = 0;
                   BDEVOL = 0;
                   BDEHAL = 0;
                   RMPAR = #1GWNB; //BEDRAG C3.2 OPHALEN
                   //REFMND BAREM
                   //DAGBEDRAG
                   //DAGBEDRAG EU
                   //DAGBEDRAG F9
                   //BEF OF EURO ?
                   //ANC.CODE
                   //BEROEP 09
                   //BEROEPSVERLE
                   //VOL BAREMABD
                   //IDEM IN EURO
                   //HALF BAREMA
                   //IDEM IN EURO
                   //TABEL BAREMA
                   POSBARK9(#1AACD:#1AFNB:LEEFTX:BARC10:#1A1CD:RMPAR:DDD1:DDD2:DDD3:BBEE:LFTCOD:BRDOK:BVLID:BDBVOL:BDEVOL:BDBHAL:BDEHAL:BARACL);
                     If BARACL = 'XXXXX';
         WUAGCD = '2';
     C                   GOTO      ENDBRM
                   ENDIF;
                 ENDIF;
               ENDIF;
                //----------------------------------------------------------------
                // BARACL BEPAALD VOOR B3 OF N3 OF A3,A8,DOK,EN NIET B3,N3 OF DOK
                //BARACL BEPALEN VR BAREMA'S T,W,TN,WN,TP,WP + LAATSTE POSITIE=A,B,C,D,E,F
                //----------------------------------------------------------------
               EXSR TESTIN;
               If POS6 = '..T...' OR POS6 = '..W...' OR POS6 = '..WB3.' OR POS6 = '..WB4.' OR POS6 = '..X...' OR POS6 = '..J...' OR POS6 = '..I...' OR POS6 = '..H...' OR POS6 = '..V...';
                 If LEEFT >= 21;
         1' = 'B09;       BARACL
                 ELSE; //GN21JR
                   If LEEFT = 20;
         2' = 'B09;       BARACL
                   ELSE; //GN21,20
                     If LEEFT = 19;
         3' = 'B09;       BARACL
                     ELSE; //GN21,20,19
                       If LEEFT = 18;
         4' = 'B09;       BARACL
                       ELSE; //21,20,19,18
                         If LEEFT = 17;
         5' = 'B09;       BARACL
                         ELSE; //21,20,19,18
                           If LEEFT = 16;
         6' = 'B09;       BARACL
                           ELSE; //21,20,19,18
         WUF0CD = '1';                         < DAN 16
                           Endif; //16 JR
                         Endif; //17 JR
                       Endif; //18 JR
                     Endif; //19 JR
                   Endif; //20 JR
                 Endif; //21 JR
         BARVW5 = BARACL;
               Endif; //..T...,..W..
               If POS6 = '..TN..' OR POS6 = '..WN..' OR POS6 = '..WN3.' OR POS6 = '..WN4.' OR POS6 = '..XN..' OR POS6 = '..JN..' OR POS6 = '..IN..' OR POS6 = '..HN..' OR POS6 = '..VN..';
                 If LEEFT >= 25;
                   If #1GWNB >= 200007;
         BARACL = 'B09N8';
                   ELSE; //VNF 200007
                     If #1GWNB >= 199907;
         BARACL = 'B09N7';
                     ELSE; //VNF 200007
         BARACL = 'B09N1';
                     ENDIF; //199907
                   ENDIF; //200007
                 ELSE; //GN21JR
                   If LEEFT >= 21;
         BARACL = 'B09N1';
                   ELSE; //GN21JR
                     If LEEFT = 20;
         BARACL = 'B09N2';
                     ELSE; //GN21,20
                       If LEEFT = 19;
         BARACL = 'B09N3';
                       ELSE; //GN21,20,19
                         If LEEFT = 18;
         BARACL = 'B09N4';
                         ELSE; //21,20,19,18
                           If LEEFT = 17;
         BARACL = 'B09N5';
                           ELSE; //21,20,19,18
                             If LEEFT = 16;
         BARACL = 'B09N6';
                             ELSE; //21,20,19,18
         WUF0CD = '1';                         < DAN 16
                             Endif; //16 JR
                           Endif; //17 JR
                         Endif; //18 JR
                       Endif; //19 JR
                     Endif; //20 JR
                   Endif; //21 JR
                 Endif; //25 JR
         BARVW5 = BARACL;
               Endif; //..TN..,..WN.
               If POS6 = '..TP..' OR POS6 = '..WP..' OR POS6 = '..WP3.' OR POS6 = '..WP4.' OR POS6 = '..XP..' OR POS6 = '..JP..' OR POS6 = '..IP..' OR POS6 = '..HP..' OR POS6 = '..VP..';
                 If LEEFT >= 21;
         BARACL = 'B09P1';
                 ELSE; //GN21JR
                   If LEEFT = 20;
         BARACL = 'B09P2';
                   ELSE; //GN21,20
                     If LEEFT = 19;
         BARACL = 'B09P3';
                     ELSE; //GN21,20,19
                       If LEEFT = 18;
         BARACL = 'B09P4';
                       ELSE; //21,20,19,18
                         If LEEFT = 17;
         BARACL = 'B09P5';
                         ELSE; //21,20,19,18
                           If LEEFT = 16;
         BARACL = 'B09P6';
                           ELSE; //21,20,19,18
         WUF0CD = '1';                         < DAN 16
                           Endif; //16 JR
                         Endif; //17 JR
                       Endif; //18 JR
                     Endif; //19 JR
                   Endif; //20 JR
                 Endif; //21 JR
         BARVW5 = BARACL;
               Endif; //..TN..,..WN.
                //BARACL BEPALEN VOOR TYPE 18 ZONDER TYPE 02 ; INDIEN TYPE 02 DAN
                // GEWONE BAREMA OPHALEN NAARGELANG A1, B1 OF N1
               If #1A1CD = '18' AND WUCC18 = '18';
                 If #1GWNB <= 200112;
         BARACL = 'B1654';
         BARVW5 = 'B1654';
                 ELSE;
         BARACL = 'B1658';
         BARVW5 = 'B1658';
                 ENDIF;
               Endif; //END 18
                //BARACL BEPALEN VOOR TYPE 23/29/27
               If #1A1CD = '23';
                 If #1GWNB <= 200112;
         BARACL = 'B2254';
         BARVW5 = 'B2254';
                 ELSE;
         BARACL = 'B2258';
         BARVW5 = 'B2258';
                 ENDIF;
               Endif; //END 23
               If #1A1CD = '29';
                 If BARC10 = '.......';
         BARACL = 'B2958';
         BARVW5 = 'B2958';
                 ENDIF;
                 If BARC10 = '..T1...';
         BARACL = 'B29T1';
         BARVW5 = 'B29T1';
                 ENDIF;
                 If BARC10 = '..T2...';
         BARACL = 'B29T2';
         BARVW5 = 'B29T2';
                 ENDIF;
                 If BARC10 = '..T3...';
         BARACL = 'B29T3';
         BARVW5 = 'B29T3';
                 ENDIF;
               Endif; //END 29
               If #1A1CD = '27';
         BARACL = 'B2758';
         BARVW5 = 'B2758';
               Endif; //END 27

               If BARC10 = '.......';
                 HVBAR = 0;
                 HHBAR = 0;
                 If #1A1CD = '23' OR #1A1CD = '29' OR #1A1CD = '27';
     C                   GOTO      TOCHBD
                 ENDIF;
               ELSE; //BAR<>.......
     C     TOCHBD        TAG
                  // OPHALEN BEDRAGEN BAREMA & STOCKEREN IN HULPBEDRAGEN HVBAR&HHBAR
                 If #1GWNB >= BYEINB; //HUIDIGE TABEL
                   If #1A1CD = '05' OR #1A1CD = '57';
         SITUAT = 'NIE';            3            NIEUWE
                   Endif;
                 ELSE;
                   If #1GWNB >= BYEHNB; //OUDSTE TABEL
                     If #1A1CD = '05' OR #1A1CD = '57';
         SITUAT = 'OUD';            3            NIEUWE
                     Endif;
                   ENDIF; //OUDSTE TABEL
                 ENDIF; //HUIDIGE TABEL

         TAB3PO = BARACL;            3            B01/B02/....
                 //REF.MND
                 //TYPE
                 //TABBEL
                 //BAREMA

         TAB3PO = BARVW5;            3            B01/B02/....
         TYTPTY = '05';            2
                 VVLOE5 = 0;
                 HVLOE5 = 0;
                 //REF.MND
                 //TYPE
                 //TABBEL
                 //BAREMA
                  //  DISPO ==> TABEL B30
                 MDVLOER(#1GWNB:TYTPTY:TAB3PO:BARC10:VVLOE5:HVLOE5:FOUTKO);
                   If TYPCON = 'Y';
                   If #1GWNB >= 200906;
     C                   GOTO      GNDIS
                   ENDIF;
                 ENDIF;
                 If WUYLCF = 'Y'; //DISPO ACTIEF
         ABN = *BLANK;               1
         FTGEZI = *BLANK;            1
                   //GEZINSSIT.GN OPHALEN
                   //BAREMA
                   //GEZINSTOESTAND

                   MDDISPGZ(BARC10:ABN:FTGEZI);
                     If FTGEZI = '1';
         WUXXXX = '?';
         BARACL = *BLANK;
                   ELSE; //GEEN FOUT IN GEZINS
                     If ABN = 'A';
         C' = 'B30;       BARACL
                     ELSE;
                       If ABN = 'N';
         D' = 'B30;       BARACL
                       ELSE;
         P' = 'B10;       BARACL
                       ENDIF; //N
                     ENDIF; //A
                   ENDIF; //FTGEZI=1
                 ENDIF; //WUYLCF=Y
     C     GNDIS         TAG
                 SETLL (#1GWNB) @MZREBU; //MAAND BAREMA
                 READ @MZREBU ;
       *in50 = %eof();
                 If *In50;
                   MNDBAR = BYEINB;
                 Endif;
                 If *In50;
                   HVBAR = 0;
                 Endif;
                 If *In50;
                   HHBAR = 0;
                 Endif;
     C   50              GOTO      ENDBRM
                 If NOT *In50;
                   MNDBAR = MZHDDM;
                 Endif;
                 CHAIN (MNDBAR:BARACL) @MZREEA ;
       *in50 = (%found() = *Off); //MND/TABEL
                 If *In50;
                   HVBAR = 0;
                 Endif;
                 If *In50;
                   HHBAR = 0;
                 Endif;
                 If *In50;
                   HVBAR = VVLOER;
                 Endif;
                 If *In50;
                   HHBAR = HVLOER;
                 Endif;
                 If *In50;
                   If VVLOER = 0;
                 Endif;
     EvalR   WUAGCD = '1';                         SW102
     C                   GOTO      ENDBRM
                 ENDIF;
                 If NOT *In50;
                   HVBAR = MZMZ02;
                 Endif;
                 If NOT *In50;
                   HHBAR = MZMZ03;
                 Endif;
                 If NOT *In50;
                   If WUYLCF = 'Y';
                 Endif;
                 ELSE;
                   If NOT *In50;
                     If HVBAR < VVLOER;
                   Endif;
                     HVBAR = VVLOER;
                   ENDIF;
                   If NOT *In50;
                     If HHBAR < HVLOER;
                   Endif;
                     HHBAR = HVLOER;
                   ENDIF;
                 ENDIF;
                 If NOT *In50;
                   If #1A1CD = '33';
                 Endif;
                   HVBAR = MZMZ03;
                   HHBAR = 0;
                 Endif;
                 If #1A1CD = '52';
         BARFOR = BARACL;
                 ENDIF;
                 CHAIN (MNDBAR:BARFOR) @MZREEA ;
       *in50 = (%found() = *Off); //MND/TABEL
                 If *In50;
                   HVFOR = 0;
                 Endif;
                 If *In50;
                   HHFOR = 0;
                 Endif;
     C   50              MOVE      '1'           WUAGCD                         SW102
     C   50              GOTO      ENDBRM
                 If NOT *In50;
                   HVFOR = MZMZ02;
                 Endif;
                 If NOT *In50;
                   HHFOR = MZMZ03;
                 Endif;
                 CHAIN (MNDBAR:BARVW5) @MZREEA ;
       *in50 = (%found() = *Off); //MND/TABEL
                 If *In50;
                   HV501 = 0;
                 Endif;
                 If *In50;
                   HH501 = 0;
                 Endif;
                  //        50          MOVE '1'       WUAGCD           SW102
                  //        50          GOTO ENDBRM
                 If *In50;
                   HV501 = VVLOE5;
                 Endif;
                 If *In50;
                   HH501 = HVLOE5;
                 Endif;
                 If *In50;
                   If VVLOE5 = 0;
                 Endif;
     EvalR   WUAGCD = '1';                         SW102
     C                   GOTO      ENDBRM
                 ENDIF;
                 If NOT *In50;
                   HV501 = MZMZ02;
                 Endif;
                 If NOT *In50;
                   HH501 = MZMZ03;
                 Endif;
     C     ENDBRM        TAG
                 If #1A1CD = '05' OR #1A1CD = '57';
                   If P55 = '3';
                     LFTT05 = 40;
         B15 = *BLANK;               5
         B15 = P14;
     EvalR   B15 = '2';
         BARTW = B15;             7
     EvalR   BARTW = P67;
                     If P45 = 'P3';
         B15 = P14;
     EvalR   B15 = '.';
         BARTW = B15;
     EvalR   BARTW = P67;
                     ENDIF;
         BBEE = 'E';              1
                     DDD1 = 0;
                     DDD2 = 0;
                     DDD3 = 0;
         LFTCOD = '0';            1
         BRDOK = *BLANK;             2
                     BVLID = 0;
                     BDBVOL = 0;
                     BDBHAL = 0;
                     BDEVOL = 0;
                     BDEHAL = 0;
         T0502 = '02';             2
                     //BDRG C3.2 GN OPHALEN
                     //BAREMA A2/N2/...
                     //TYPEWKL
                     //REFMND BAREM
                     //DAGBEDRAG
                     //DAGBEDRAG EU
                     //DAGBEDRAG F9
                     //BEF OF EURO ?
                     //ANC.CODE
                     //BEROEP 09
                     //BEROEPSVERLE
                     //VOL BAREMABD
                     //IDEM IN EURO
                     //HALF BAREMA
                     //IDEM IN EURO
                     POSBARF9(#1AACD:#1AFNB:LFTT05:BARTW:T0502:MNDBAR:DDD1:DDD2:DDD3:BBEE:LFTCOD:BRDOK:BVLID:BDBVOL:BDEVOL:BDBHAL:BDEHAL);
                       If #1GWNB <= 200111;
                       HH501 = BDBHAL;
                       HV501 = BDBVOL;
                     ELSE;
                       HH501 = BDEHAL;
                       HV501 = BDEVOL;
                     ENDIF;
                   ENDIF;
                 ENDIF;

               Endif; //BAR=.......
                // BIJ TYPE 09, 10, 18 EN DATUM BEGIN WKLH. > OF = 01/05/1994 :
                // VERMINDERING DAGBEDRAG (HVBAR EN HHBAR) ADHV. VERMINDERINGSPCT.
               If #1GWNB < 201004;
                 If #1AKDT >= 19940501;
                   If #1A1CD = '09';
                      //+         #1DDNB    IFEQ 0
                      // HERREKEND BEDRAG VOOR VOLLE DAGEN
                     If #1DDNB > 0;
                       HVBAR = #1DDNB;
                       EVAL(H) HHBAR = #1DDNB / 2;
                       If BYEURO = 'B'; //BELG.FRANK
     EvalR   HHBAR = '0000';
                       ELSE; //EURO
                         If #1GWNB <= 200111;
     EvalR   HHBAR = '0000';
                         ENDIF;
                       ENDIF; //BELG FR
                     ENDIF;
                     HVBARB = HVBAR;
                     MINBP4 = HVBAR * #DVPBP;
                     MINBP4 = MINBP4 / 100;
                     MINBP2 = MINBP4;
                      //          HVBAR     SUB  MINBP2    MINBP  116
                     If BYEURO = 'B'; //BELG.FRANK
                       RES4NK = HVBAR * #DVPBP;
                       RES2NK = RES4NK / 100;
                       MINBP = HVBAR - RES2NK;
                     ELSE; //EURO
                       If #1GWNB <= 200111;
                         RES4NK = HVBAR * #DVPBP;
                         RES2NK = RES4NK / 100;
                         MINBP = HVBAR - RES2NK;
                       ELSE;
                         RES6NK = HVBAR * #DVPBP;
                         RES4NK = RES6NK / 100;
                         MINBP = HVBAR - RES4NK;
                       ENDIF; //200111
                     ENDIF;
                     If BYEURO = 'B'; //BELG.FRANK
                       EVAL(H) RESBF = MINBP;
                       HVBAR = RESBF;
                     ELSE; //EURO
                       If #1GWNB <= 200111;
                         EVAL(H) RESBF = MINBP;
                         HVBAR = RESBF;
                       ELSE;
     EvalR   DECBP = MINBP;             4 0
                         If DECBP >= 5000;
                           HVBAR = MINBP + 0.01;
     EvalR   HVBAR = '00';                          (4NA DE KOMMA)
                         ELSE;
                           HVBAR = MINBP;
     EvalR   HVBAR = '00';                          (4NA DE KOMMA)
                         ENDIF; //END >=50
                       ENDIF; //200111
                     ENDIF; //BELG.FRANK
                      // HERREKEND BEDRAG VOOR EVENTUELE HALVE DAGEN
                     MINBP4 = HHBAR * #DVPBP;
                     MINBP4 = MINBP4 / 100;
                     MINBP2 = MINBP4;
                      //          HHBAR     SUB  MINBP2    MINBP
                     If BYEURO = 'B'; //BELG.FRANK
                       RES4NK = HHBAR * #DVPBP;
                       RES2NK = RES4NK / 100;
                       MINBP = HHBAR - RES2NK;
                     ELSE;
                       If #1GWNB <= 200111;
                         RES4NK = HHBAR * #DVPBP;
                         RES2NK = RES4NK / 100;
                         MINBP = HHBAR - RES2NK;
                       ELSE;
                         RES6NK = HHBAR * #DVPBP;
                         RES4NK = RES6NK / 100;
                         MINBP = HHBAR - RES4NK;
                       ENDIF; //200111
                     ENDIF;
                     If BYEURO = 'B'; //BELG.FRANK
                       EVAL(H) RESBF = MINBP;
                       HHBAR = RESBF;
                     ELSE; //EURO
                       If #1GWNB <= 200111;
                         EVAL(H) RESBF = MINBP;
                         HHBAR = RESBF;
                       ELSE;
     EvalR   DECBP = MINBP;
                         If DECBP >= 5000;
                           HHBAR = MINBP + 0.01;
     EvalR   HHBAR = '00';                          4 NA DE KOMMA
                         ELSE;
                           HHBAR = MINBP;
     EvalR   HHBAR = '00';                          4 NA DE KOMMA
                         ENDIF; //END >=50
                       ENDIF; //200111
                     ENDIF; //BELG.FRANK
                      // HERREKEND BEDRAG VOOR VOLLE DAGEN / VOOR EVENTUELE HALVE DAGEN
                   ELSE; //ELSE GN 09

                     If #1A1CD = '10'; //TYPE 10
                       If #1DDNB > 0;
                          //                    Z-ADD#1DDNB    HHBAR
                         EVAL(H) HHBAR = #1DDNB / 2;
                         If BYEURO = 'B'; //BELG.FRANK
     EvalR   HHBAR = '0000';
                         ELSE;
                           If #1GWNB <= 200111;
     EvalR   HHBAR = '0000';
                           ENDIF; //200111
                         ENDIF; //BELG FR
                       ENDIF;
                       HHBARB = HHBAR;
                       MINBP4 = HHBAR * #DVPBP;
                       MINBP4 = MINBP4 / 100;
                       MINBP2 = MINBP4;
                        //          HHBAR     SUB  MINBP2    MINBP
                       If BYEURO = 'B'; //BELG.FRANK
                         RES4NK = HHBAR * #DVPBP;
                         RES2NK = RES4NK / 100;
                         MINBP = HHBAR - RES2NK;
                       ELSE;
                         If #1GWNB <= 200111;
                           RES4NK = HHBAR * #DVPBP;
                           RES2NK = RES4NK / 100;
                           MINBP = HHBAR - RES2NK;
                         ELSE;
                           RES6NK = HHBAR * #DVPBP;
                           RES4NK = RES6NK / 100;
                           MINBP = HHBAR - RES4NK;
                         ENDIF; //200111
                       ENDIF;
                       If BYEURO = 'B'; //BELG.FRANK
                         EVAL(H) RESBF = MINBP;
                         HHBAR = RESBF;
                       ELSE; //EURO
                         If #1GWNB <= 200111;
                           EVAL(H) RESBF = MINBP;
                           HHBAR = RESBF;
                         ELSE;
     EvalR   DECBP = MINBP;
                           If DECBP >= 5000;
                             HHBAR = MINBP + 0.01;
     EvalR   HHBAR = '00';                          4 POS NA DE KOMMA
                           ELSE;
                             HHBAR = MINBP;
     EvalR   HHBAR = '00';                          4 POS NA DE KOMMA
                           ENDIF; //END >=50
                         ENDIF; //200111
                       ENDIF; //BELG.FRANK

                     ELSE; //GN 09,10

                       If #1A1CD = '18'; //TYPE 18
                         If #1DDNB > 0;
                           HVBAR = #1DDNB;
                         ENDIF;
                         HVBARB = HVBAR;
                         MINBP4 = HVBAR * #DVPBP;
                         MINBP4 = MINBP4 / 100;
                         MINBP2 = MINBP4;
                          //          HVBAR     SUB  MINBP2    MINBP
                         If BYEURO = 'B'; //BELG.FRANK
                           RES4NK = HVBAR * #DVPBP;
                           RES2NK = RES4NK / 100;
                           MINBP = HVBAR - RES2NK;
                         ELSE;
                           If #1GWNB <= 200111;
                             RES4NK = HVBAR * #DVPBP;
                             RES2NK = RES4NK / 100;
                             MINBP = HVBAR - RES2NK;
                           ELSE;
                             RES6NK = HVBAR * #DVPBP;
                             RES4NK = RES6NK / 100;
                             MINBP = HVBAR - RES4NK;
                           ENDIF; //200111
                         ENDIF;
                         If BYEURO = 'B'; //BELG.FRANK
                           EVAL(H) RESBF = MINBP;
                           HVBAR = RESBF;
                         ELSE; //EURO
                           If #1GWNB <= 200111;
                             EVAL(H) RESBF = MINBP;
                             HVBAR = RESBF;
                           ELSE;
     EvalR   DECBP = MINBP;
                             If DECBP >= 5000;
                               HVBAR = MINBP + 0.01;
     EvalR   HVBAR = '00';                          4 POS NA KOMMA
                             ELSE;
                               HVBAR = MINBP;
     EvalR   HVBAR = '00';                          4 POS NA KOMMA
                             ENDIF; //END >=50
                           ENDIF; //200111
                         ENDIF; //BELG.FRANK
                       ENDIF; //END TYPE 18
                     ENDIF; //END TYPE 10
                   ENDIF; //END TYPE 09
                 ENDIF; //END BEGIN WK
               ENDIF; //END 201004
                //BIJ TYPE 05 BAREMA B1 MOET MEN VERMENIGVULDIGEN MET 0.897 DOOR TAKS 10,3
               If #1A1CD = '05' OR #1A1CD = '57';
                 RK897 = 0.8991;
                 If P45 = 'B1';
                   HV05 = HVBAR * RK897;
                   HH05 = HHBAR * RK897;
                   If BYEURO = 'B';
                     HVBAR5 = HV05 + 0.99; //AFRONDEN
                     HHBAR5 = HH05 + 0.99; //HOGERE EENHE
     EvalR   HVBAR5 = '0000';
     EvalR   HHBAR5 = '0000';
                   ELSE; //EURO
                     If #1GWNB <= 200111;
                       HVBAR5 = HV05 + 0.99; //AFRONDEN
                       HHBAR5 = HH05 + 0.99; //HOGERE EENHE
     EvalR   HVBAR5 = '0000';
     EvalR   HHBAR5 = '0000';
                     ELSE;
                       HVBAR5 = HV05 + 0.0099; //AFRONDEN
                       HHBAR5 = HH05 + 0.0099; //HOGERE EENHE
     EvalR   HVBAR5 = '00';
     EvalR   HHBAR5 = '00';
                     ENDIF; //200111
                   ENDIF; //BELG.FRANK
                 ELSE; //A1,A2,B2,N1,
                   HVBAR5 = HVBAR; //N2,...
                   HHBAR5 = HHBAR;
                 Endif; //END B1
               Endif; //END 05
                // BAREMA P, OP, P3 MET EEN CIJFERCODE --> INFO MESSAGE C110A
               If P46 = 'P3.' OR P45 = 'P.' OR P34 = 'OP';
                 If P12 <> '..'; //CIJFERCODE
         WUW241 = '1';
                 ENDIF;
               ENDIF;

             ENDIF; //SUBBEROEP=P
     C                   MOVEA     UWIN          *IN(50)

           Endif; //*FI
            // switch102=2 suffix 3 en geen complement  ingevuld
            // CASE: WRK.Switch102 is 2
           If WUAGCD = '2'; //*IF
              // Send message 'Suffix 3 en leeftijd >50'
         ZAMSID = 'USR6284';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
            // Sw241 : code P, OP, P3 : C110A partner : info message
            // CASE: WRK.Switch241 is 1
           If WUW241 = '1'; //*IF
              // Send message 'Code P, OP of P3-->C110A'
         ZAMSID = 'USR2376';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // Lid met wacht- of overbr.uitk en < 16 jaar : error message
            // CASE: WRK.Switch109 is 1
           If WUF0CD = '1'; //*IF
              // Send message 'Lid<16jaar:wachtuitkering'
         ZAMSID = 'USR0903';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Jarig in mnd v achterstal&wacht-of overbr-->zelf bedr.wklh invull
            // CASE: WRK.Switch111 is 1
           If WUF2CD = '1'; //*IF
              // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
             If WUPFCD <> '1'; //*IF
                // Send message 'Bedrag wkl zelf berekenen'
         ZAMSID = 'USR0904';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Jarig in mnd van B1-->B2, N1-->N2 : zelf bedr.wklh invullen:error
            // CASE: WRK.Switch111 is 2
           If WUF2CD = '2'; //*IF
              // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
             If WUPFCD <> '1'; //*IF
                // Send message 'Overgang periode 1-->2'
         ZAMSID = 'USR2096';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // Jarig in mnd van B2-->P forfait : zelf bedr.wklh invullen:error
            // CASE: WRK.Switch111 is 3
           If WUF2CD = '3'; //*IF
              // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
             If WUPFCD <> '1'; //*IF
                // Send message 'Overgang --> forfait'
         ZAMSID = 'USR2097';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // Barema komt niet meer voor in RVA-tabellen: vb  1.B1.. --> error
            // CASE: WRK.Switch102 is 1
           If WUAGCD = '1'; //*IF
              // CASE:
              //  - c1ANDc2ANDc3ANDc4ANDc5ANDc6ANDc7ANDc8ANDc9
              //   !- c1    : DTL.Type wklh. kode is <> B.
              //   !- c2    : DTL.Type wklh. kode is <> C.
              //   !- c3    : DTL.Type wklh. kode is <> D.
              //   !- c4    : DTL.Type wklh. kode is <> A.
              //   !- c5    : DTL.Type wklh. kode is <> CA
              //   !- c6    : DTL.Type wklh. kode is <> E.
              //   !- c7    : DTL.Type wklh. kode is <> F.
              //   !- c8    : DTL.Type wklh. kode is <> G.
              //   !- c9    : DTL.Type wklh. kode is <> 27
              //   '-
         Y0CX01 = '0';            1
             If #1A1CD <> 'B.'; //*IF
               If #1A1CD <> 'C.'; //*IF
                 If #1A1CD <> 'D.'; //*IF
                   If #1A1CD <> 'A.'; //*IF
                     If #1A1CD <> 'CA'; //*IF
                       If #1A1CD <> 'E.'; //*IF
                         If #1A1CD <> 'F.'; //*IF
                           If #1A1CD <> 'G.'; //*IF
                             If #1A1CD <> '27'; //*IF
         Y0CX01 = '1';
                             Endif; //*FI
                           Endif; //*FI
                         Endif; //*FI
                       Endif; //*FI
                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
                // Send message 'Geen geldig barema!'
         ZAMSID = 'USR0856';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // TYPE 05 :Sw14=3-->TYPE 05:dgn&bedr wklh BEREKENEN+omzetten-->dgn
            // CASE: WRK.switch14 is nt 3
           If WUGDCD <> '3'; //*IF
              // Type kode = 05 : Berekenen wklh en omzetten dagen wkl naar BZ
              // CASE: DTL.Type wklh. kode is 05
             If #1A1CD = '05'; //*IF
                // type 05 oud - Wkl betaling  *
         DAT1 = #1GWNB;              4 0          JR ACHTERSTA
         DAT2 = BYEENB;              4 0          JR WKLH
                // Send message 'Betalen via type 01'
         ZAMSID = 'USR6302';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // Controle S44 - Wkl betaling  *
         WUG4CD = 'N';
           RMPAR = #1GWNB;
           NRS44 = 0;
           AANS44 = 0;
            //                    CALL 'S44003'
            //                    PARM           WUAPCF           AFD
            //                    PARM           RMPAR
            //                    PARM           WUG4CD
           //AFD
           S44003C(WUAPCF:RMPAR:WUG4CD:NRS44:AANS44);
             WUK7NE = NRS44;
           WUK8NE = AANS44;
            // CASE: WRK.switch23 is N
           If WUG4CD = 'N'; //*IF
              // CASE: WRK.Wrk aantal s44 open is 1
             If WUK8NE = 1; //*IF
                // Update datum aanbieding - S44 verblijfsbewijs  *
               CLEAR   AFRC;
     C                   MOVEL(P)  WUAPCF        AFLFCJ                         S44 INSZ lid
               AFQ9ND = WUK7NE; //S44 volgnr

               //Update datum aa
               //KEY: S44 verbli
               //WRK Naam
               //WRK Afdeling nr
               //WRK Lid nr

               LYY2E1R(W0RTN:AFRC:WQ0291:WQ0292:WQ0293);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYY2E1R';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
               Endif;
             ELSE;
                // CASE: *OTHERWISE
                // Overzicht S44/C66 op INSZ - S44 verblijfsbewijs  *
               //Overzicht S44/C
               //S44 INSZ lid
               //S44 afd
               //S44 lidnr
               //WRK Naam

               LYY1DFR(W0RTN:WQ0294:WQ0295:WQ0296:WQ0297);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYY1DFR';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
               Endif;
             Endif; //*FI
           Endif; //*FI
            // Controle S44 - Wkl betaling  *
         WUG4CD = 'N';
           RMPAR = #1GWNB;
           NRS44 = 0;
           AANS44 = 0;
            //                    CALL 'S44003'
            //                    PARM           WUAPCF           AFD
            //                    PARM           RMPAR
            //                    PARM           WUG4CD
           //AFD
           S44003C(WUAPCF:RMPAR:WUG4CD:NRS44:AANS44);
             WUK7NE = NRS44;
           WUK8NE = AANS44;
            // CASE: WRK.switch23 is N
           If WUG4CD = 'N'; //*IF
              // Send message 'S44/C66 niet in orde'
         ZAMSID = 'USR6205';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Cmd01 kalender automatisch of F1
            // CASE: WRK.Switch toelating Y/N is Y
           If WUYOCI = 'Y'; //*IF
              // Type kode = 01,09,... : oproepen kalender
              // CASE: WRK.Switch type betaalkalende is Y
             If WURZCJ = 'Y'; //*IF
               YRSW00 = 2;
               ZQ = 4;
               If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
               ELSE;
                 WUWRK2 = %Subst(#1DOCD:ZQ:YRSW00); //Wrk veld 2 pos
     C   90              MOVEL     'Y2U0510'     W0RTN
               Endif;
                // Ophalen kalenderscherm type 01,...
                // CASE:
                //  - c1ORc2ORc3
                //   !- c1    : WRK.Switch berekening is 0
                //   !- c2    : WRK.switch sancties is 1
                //   !- c3    : WRK.Wrk F1 na F24 is 1
                //   '-
               If WUPSCD = '0' OR WUYRCI = '1' OR WUERCK = '1'; //*IF
                  // CASE:
                  //  - c1ANDc2
                  //   !- c1    : WRK.Wrk F1 oproepen is Y
                  //   !- c2    : WRK.Wrk f1 oproepen bis is N
                  //   '-
         Y0CX01 = '0';            1
                 If WUW8CI = 'Y'; //*IF
                   If WUFBCK = 'N'; //*IF
         Y0CX01 = '1';
                   Endif; //*FI
                 Endif; //*FI
                 If Y0CX01 = '1'; //*IF
         WUW8CI = 'N';                         Wrk F1 oproepen
                 Endif; //*FI
                  // F1 oproepen
                  // CASE:
                  //  - c1ORc2
                  //   !- c1    : DTL.*CMD key is CF01
                  //   !- c2    : WRK.Wrk F1 oproepen is Y
                  //   '-
                 If *IN01 = '1' OR WUW8CI = 'Y'; //*IF
         WUXICI = 'Y';                         Wrk F1 record v
                   ZQ = *ZERO;
                   WUCACO = #1AKNB + '' + #1FGNB; //Wrk veld 9 posi
                   ZQ = *ZERO;
                   WUAPCF = WUCACO + '' + #1FHNB; //Wrk veld 11 pos
                   WURHNC = #1GWNB; //Wrk number 6 A9
         WUW1CI = 'A';                         Wrk add/update
                   WUK6ND = 1; //Wrk volgnr kale
                    // Ophalen volgnr kalender - Wkl betaling  *
                   RMPAR = #1GWNB;
         HISTCD = 'D';            1
                    // Opvullen dagen 16 lang - Wkl betaling  *
         P01T16 = '00000000';           16
     EvalR   P01T16 = '00000000';
         P01T32 = P01T16;
     EvalR   P01T32 = P01T16;
     EvalR   DG0102 = #1GLNB;
     EvalR   DG0304 = #1GMNB;
     EvalR   DG0506 = #1G7NB;
     EvalR   DG0708 = #1JONB;
     EvalR   DG0910 = #1GNNB;
     EvalR   DG1112 = #1JLNB;
         DG1314 = *BLANK;
         DG1516 = *BLANK;
         DG1718 = *BLANK;
         DG1920 = *BLANK;
         DG2122 = *BLANK;
         DG2324 = *BLANK;
         DG2526 = *BLANK;
         DG2728 = *BLANK;
         DG2930 = *BLANK;
         DG3132 = *BLANK;
         WUXJCI = P01T32;
                    // Check bouwcode vnf10/2017 - Wkl betaling  *
         OUINON = 'N';            1
         BZBW = #1A4CD;              2
         WUS5CL = OUINON;
                    //          'L0DPUFR' DSPLY'ROSANNE'
                    //          WUGUCG    DSPLY'ROSANNE'                  MEERDERE UREN P
                    //          WUHHCM    DSPLY'ROSANNE'                  F1
                    //          WUDJNU    DSPLY'ROSANNE'                  TELLER
                    // Indien 2de keer F1 duwt bedrag BZ uitblanken
                    // CASE:
                    //  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10
                    //   !- c1    : WRK.Switch bouw 102017 is Y
                    //   !- c2    : DTL.BZ kode is C
                    //   !- c3    : DTL.BZ kode is E
                    //   !- c4    : DTL.BZ kode is = I
                    //   !- c5    : DTL.BZ kode is NA
                    //   !- c6    : DTL.BZ kode is 29
                    //   !- c7    : DTL.BZ kode is 79
                    //   !- c8    : DTL.BZ kode is DA
                    //   !- c9    : DTL.BZ kode is FA
                    //   !- c10   : DTL.BZ kode is PA
                    //   '-
                   If WUS5CL = 'Y' OR #1A4CD = 'C' OR #1A4CD = 'E' OR #1A4CD = 'I' OR #1A4CD = 'NA' OR #1A4CD = '29' OR #1A4CD = '79' OR #1A4CD = 'DA' OR #1A4CD = 'FA' OR #1A4CD = 'PA'; //*IF
                      // CASE: DTL.Bedrag BZ is > 0
                     If #1GYNB > *ZERO; //*IF
                        // CASE: DTL.Wie heeft BZ berekend ? is C
                       If #1BLCE = 'C'; //*IF
                         #1GYNB = 0; //Bedrag BZ
                       Endif; //*FI
                     Endif; //*FI
                   Endif; //*FI
                    // Update maandoverzicht - Maandoverzicht  *
                   CLEAR   AGRC;
     C                   MOVEL(P)  WUAPCF        AGR7CH                         Maandov INSZ
                   AGPPDM = WURHNC; //Maandov RM
                   AGJ7ND = WUK6ND; //Maandov volgnr

                   //Update maandove
                   //KEY: Maandoverz
                   //Afdeling nr
                   //Lid nr
                   //Switch add
                   //Wrk afkomst kal
                   //Wrk dagen 32 la
                   //Wrk dtm laatste

                   LYT0E3R(W0RTN:AGRC:WQ0298:WQ0299:WQ0300:WQ0301:WQ0302:WQ0303);
                     If *IN90 = '1';
                      // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LYT0E3R';
                      // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                     EXSR ZASNMS;
                   Endif;
                    // Error detected?
                   If W0RTN <> *BLANK;
                     *In99 = *On;
                   Endif;
         WUFACK = WUXJCI;                         Wrk 32 lang bis
                    // Uitsplitsen dagen na F1 - Wkl betaling  *
         P01T32 = WUXJCI;
     EvalR   #1GLNB = DG0102;
     EvalR   #1GMNB = DG0304;
     EvalR   #1G7NB = DG0506;
     EvalR   #1JONB = DG0708;
     EvalR   #1GNNB = DG0910;
     EvalR   #1JLNB = DG1112;
     EvalR   D1314N = DG1314;            2 0
     EvalR   D1516N = DG1516;            2 0
                   #1GTNB = D1516N / 2;
                   #1GTNB = #1GTNB + D1314N;
         PPPLST = WUXKCI;            8 0
                   If PPPLST <> 20991231;
                     #1AKDD = PPPLST;
                      // WKL3703
                   ELSE;
                     RMPARM = #1GWNB;
                     MDK222(WUKRCN:RMPARM:PP2LST);
                       If PP2LST <> 20991231;
                       #1AKDD = PP2LST;
                     ELSE;
                       #1AKDD = 20771231;
                     ENDIF;
                   ENDIF;
                   WUS3ND = 0;
     EvalR   WUS3ND = DG2122;
                   #DS3ND = 0;
     EvalR   #DS3ND = DG2122;
                    // Cmd24=Meerdere barema's
                    // CASE:
                    //  - c1ANDc2
                    //   !- c1    : WRK.Switch overgang barema is Y
                    //   !- c2    : DTL.Datum achterstal is >=201211
                    //   '-
         Y0CX01 = '0';            1
                   If WUR3CJ = 'Y'; //*IF
                     If #1GWNB >= 201211; //*IF
         Y0CX01 = '1';
                     Endif; //*FI
                   Endif; //*FI
                   If Y0CX01 = '1'; //*IF
                      // CASE: WRK.Wrk f24 gebruikt is N
                     If WUYBCJ = 'N'; //*IF
         WUZGCJ = #1MPCE;                         Wrk BD old
                     Endif; //*FI
                     WUGVNR = 0; //wrk bedrag resu
                      // Record bestaat? EEF - Wkl betaling meerdere bar  *
                     CLEAR   ABRC;
     C                   MOVEL(P)  #1AACD        ABAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        ABAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        ABRNCJ                         Wkl bet meer be
                     ABQADM = #1GWNB; //Wkl bet meer RM
                     ABQBDM = WUZKNR; //Wkl bet meer IM

                     //Record bestaat?
                     //KEY: Wkl betali
                     //Wrk switch sche

         #1AACD = ABAACD;                         Afdeling nr
         #1AFNB = ABAFNB;                         Lid nr
         WUWUBE = ABRNCJ;                         Wkl bet meer be
                     #1GWNB = ABQADM; //Wkl bet meer RM
                     WUZKNR = ABQBDM; //Wkl bet meer IM

                     If *IN90 = '1';
                        // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LZCUXFR';
                        // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                       EXSR ZASNMS;
                     Endif;
                      // Error detected?
                     If W0RTN <> *BLANK;
                       *In99 = *On;
                     Endif;
                     WUYEND = #1AKDT; //Wrk s04 beginda
                      // Betaling meerdere baremas - Wkl betaling meerdere bar  *
                     CLEAR   ACRC;
     C                   MOVEL(P)  #1AACD        ACAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        ACAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        ACRNCJ                         Wkl bet meer be
                     ACQADM = #1GWNB; //Wkl bet meer RM
                     ACQBDM = WUZKNR; //Wkl bet meer IM

                     //Betaling meerde
                     //KEY: Wkl betali
                     //Wrk add/change/
                     //wrk bedrag resu
                     //WRK Type wkl. k
                     //Volgnr S04
                     //Wrk s04 beginda
                     //Wrk veld R6/HR6

                     LZCRE3R(W0RTN:ACRC:WQ0305:WQ0306:WQ0307:WQ0308:WQ0309:WQ0310);
                       If *IN90 = '1';
                        // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LZCRE3R';
                        // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                       EXSR ZASNMS;
                     Endif;
                      // Error detected?
                     If W0RTN <> *BLANK;
                       *In99 = *On;
                     Endif;
                     #1HPNB = WUGVNR; //Bedrag wkl
                     #DGVNR = WUGVNR; //wrk bedrag resu
                      // CASE: DTL.Bedrag wkl is > 0
                     If #1HPNB > *ZERO; //*IF
         WUYBCJ = 'Y';                         Wrk f24 gebruik
                        // Opsplitsen dagen F24 naar - Wkl betaling  *
     EvalR   F24DGN = WUX1CJ;
     EvalR   #1GLNB = '00';
     EvalR   #1GMNB = '00';
     EvalR   #1GLNB = F24R6;
     EvalR   #1GMNB = F24HR6;
     EvalR   #1G7NB = '00';
     EvalR   #1JONB = '00';
     EvalR   #1G7NB = F24BV;
     EvalR   #1JONB = F24HBV;
     EvalR   #1GNNB = '00';
     EvalR   #1JLNB = '00';
     EvalR   #1GNNB = F24V;
     EvalR   #1JLNB = F24HV;
                        // Ophalen beslagen na F24 - Wkl betaling  *
     C                   MOVEA     *IN(50)       UWIN              1
     EvalR   O01 = #1DVCD;               3
                       CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
                       If NOT *In50;
                         If BOBVCD = 'B';
                       Endif;
                         #1GZNB = BOG9NB;
                       ENDIF;
     EvalR   O01 = #1DWCD;               3
                       CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
                       If NOT *In50;
                         If BOBVCD = 'B';
                       Endif;
                         #1G1NB = BOG9NB;
                       ENDIF;
     EvalR   O01 = #1DXCD;               3
                       CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
                       If NOT *In50;
                         If BOBVCD = 'B';
                       Endif;
                         #1G3NB = BOG9NB;
                       ENDIF;
     EvalR   O01 = #1DYCD;               3
                       CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
                       If NOT *In50;
                         If BOBVCD = 'B';
                       Endif;
                         #1G5NB = BOG9NB;
                       ENDIF;
     EvalR   O01 = #1EDCD;               3
                       CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
                       If NOT *In50;
                         If BOBVCD = 'B';
                       Endif;
                         #1HDNB = BOG9NB;
                       ENDIF;
     EvalR   O01 = #1EECD;               3
                       CHAIN (#1AACD:#1AFNB:O01) LVBOCPL1 ;
       *in50 = (%found() = *Off);
                       If NOT *In50;
                         If BOBVCD = 'B';
                       Endif;
                         #1HFNB = BOG9NB;
                       ENDIF;
     C                   MOVEA     UWIN          *IN(50)
         WUPFCD = '1';                         Switch bedrag W
                     Endif; //*FI
                      // Check Documenten - Documenten BD meerdere  *
                     EXSR SGRVGN;
                      // CASE: LCL.WRK record found is Yes
                     If YL0018 = 'Y'; //*IF
         #1MPCE = *BLANK;                         Wkl bet CDE vri
         #1MPCE = 'Y';                         Wkl bet CDE vri
                     ELSE;
                        // CASE: *OTHERWISE
         #1MPCE = *BLANK;                         Wkl bet CDE vri
                     Endif; //*FI
         WUZGCJ = #1MPCE;                         Wrk BD old
                   Endif; //*FI
         W0DCF = 'Y';                          *Defer confirm
                 Endif; //*FI
                  // F1 verplicht en er is geen record kalender : error
                  // CASE: WRK.Wrk F1 record verplicht is Y
                 If WUXICI = 'Y'; //*IF
                   ZQ = *ZERO;
                   WUCACO = #1AKNB + '' + #1FGNB; //Wrk veld 9 posi
                   ZQ = *ZERO;
                   WUAPCF = WUCACO + '' + #1FHNB; //Wrk veld 11 pos
                    // Contr of kalender in dagb - Wkl betaling  *
         WUW9CI = 'N';
                   RMPAR = #1GWNB;
                   MDK003(WUAPCF:RMPAR:WUW9CI);
                     If #1A1CD = '16' AND #1HPNB = 247.89;
         WUW9CI = 'Y';
                   ENDIF;
                    // CASE: WRK.wrk switch kalender ok is N
                   If WUW9CI = 'N'; //*IF
                      // Send message 'Er is geen kalender gereg'
         ZAMSID = 'USR6060';
                     EXSR ZASNMS;
                     *In99 = *On;

         WUAKCJ = 'Y';                         Switch cmd12
         WUPSCD = '0';                         Switch berekeni
                   ELSE;
                      // CASE: *OTHERWISE
                      // CASE:
                      //  - c1ANDc2ANDc3ANDc4ANDc5ANDc6ANDc7ANDc8
                      //   !- c1    : DTL.VD6 is = 0
                      //   !- c2    : DTL.HD6 is = 0
                      //   !- c3    : DTL.Volle dagen BV is = 0
                      //   !- c4    : DTL.Halve dagen BV is = 0
                      //   !- c5    : DTL.Volle dagen verlof is = 0
                      //   !- c6    : DTL.Halve dagen verlof is = 0
                      //   !- c7    : DTL.Bedrag wkl is = 0
                      //   !- c8    : DTL.Dagen kbf sanktie is = 0
                      //   '-
         Y0CX01 = '0';            1
                     If #1GLNB = *ZERO; //*IF
                       If #1GMNB = *ZERO; //*IF
                         If #1G7NB = *ZERO; //*IF
                           If #1JONB = *ZERO; //*IF
                             If #1GNNB = *ZERO; //*IF
                               If #1JLNB = *ZERO; //*IF
                                 If #1HPNB = *ZERO; //*IF
                                   If #1GXNB = *ZERO; //*IF
         Y0CX01 = '1';
                                   Endif; //*FI
                                 Endif; //*FI
                               Endif; //*FI
                             Endif; //*FI
                           Endif; //*FI
                         Endif; //*FI
                       Endif; //*FI
                     Endif; //*FI
                     If Y0CX01 = '1'; //*IF
                        // CASE: DTL.Geen bedrag wklh is Y
                       If #1BDST = 'Y'; //*IF
         WUAKCJ = 'Y';                         Switch cmd12
         WUKTCJ = 'Y';                         Switch blanko o
                       ELSE;
                          // CASE: *OTHERWISE
         WUFBCK = 'N';                         Wrk f1 oproepen
         WUAKCJ = 'N';                         Switch cmd12
                       Endif; //*FI
                     ELSE;
                        // CASE: *OTHERWISE
                        // controle na F1 kalender - Wkl betaling  *
         WUYCCJ = 'N';
         P01T32 = WUFACK;
     EvalR   F1R6 = DG0102;              2 0
     EvalR   F1HR6 = DG0304;             2 0
     EvalR   F1BV = DG0506;              2 0
     EvalR   F1HBV = DG0708;             2 0
     EvalR   F1V = DG0910;               2 0
     EvalR   F1HV = DG1112;              2 0
                       If #1GLNB <> F1R6;
         WUYCCJ = 'Y';
                       ENDIF;
                       If #1GMNB <> F1HR6;
         WUYCCJ = 'Y';
                       ENDIF;
                       If #1G7NB <> F1BV;
         WUYCCJ = 'Y';
                       ENDIF;
                       If #1JONB <> F1HBV;
         WUYCCJ = 'Y';
                       ENDIF;
                       If #1GNNB <> F1V;
         WUYCCJ = 'Y';
                       ENDIF;
                       If #1JLNB <> F1HV;
         WUYCCJ = 'Y';
                       ENDIF;
                        // CASE: WRK.Wijziging na f24 is Y
                       If WUYCCJ = 'Y'; //*IF
                          // Send message 'F1 gebruikt!'
         ZAMSID = 'USR6526';
                         EXSR ZASNMS;
                         *In99 = *On;

         WUPSCD = '0';                         Switch berekeni
                       Endif; //*FI
                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // CASE: WRK.switch er zijn afhoudinge is 1
           If WUAJCJ = '1'; //*IF
              // CASE: WRK.Switch cmd12 is Y
             If WUAKCJ = 'Y'; //*IF
                // CASE: DTL.Geen bedrag wklh is Y
               If #1BDST = 'Y'; //*IF
                  // CASE: WRK.wrk veld 5 posities user is BYPAS
                 If WUDTCC = 'BYPAS'; //*IF
                   WUGCNE = WUGCNE + 1; //Wrk teller inho
                    // CASE: WRK.Wrk teller inhoudingen is 1
                   If WUGCNE = 1; //*IF
                      // Send message 'Bijpassing --> bedrag wkl'
         ZAMSID = 'USR6689';
                     EXSR ZASNMS;
                     *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                   Endif; //*FI
                 ELSE;
                    // CASE: *OTHERWISE
                   WUGCNE = WUGCNE + 1; //Wrk teller inho
                    // CASE: WRK.Wrk teller inhoudingen is 1
                   If WUGCNE = 1; //*IF
                      // Send message '.'
         ZAMSID = 'USR5917';
                     EXSR ZASNMS;
                     *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                   ELSE;
                      // CASE: *OTHERWISE
                      // CASE: WRK.Wrk teller inhoudingen is 2
                     If WUGCNE = 2; //*IF
                     Endif; //*FI
                      // CASE: WRK.Wrk teller inhoudingen is >=3
                     If WUGCNE >= 3; //*IF
                        // Send message 'Er waren inhoudingen! duw'
         ZAMSID = 'USR6123';
                       EXSR ZASNMS;
                       *In99 = *On;

                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // wkl-785:niet controleren bij subberoep J,K,P,R,S,T,X==>ik zeg:bij
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.Subberoep kode is blank
            //   !- c2    : DTL.Subberoep kode is I
            //   '-
           If #1BCCD = *BLANK OR #1BCCD = 'I'; //*IF
              // CASE: DTL.Datum achterstal is >=201211
             If #1GWNB >= 201211; //*IF
                // Overgang barema->zelf ber - Wkl betaling  *
               RMPAR = #1GWNB;
               DATIN1 = #1AEDT;
               DATIN2 = #1ADDT;
               DATIN3 = #1AHDT;
               DATIN4 = #1AKDT;
         WUR3CJ = 'N';
               //FOUTBERICHT
               MDCHK02(DATIN1:DATIN2:DATIN3:DATIN4:RMPAR:WUR3CJ);
                 If WUR3CJ = 'N';
                 //FOUTBERICHT
               MDCHK03(#1AACD:#1AFNB:#1DOCD:RMPAR:WUR3CJ);
                 ENDIF;
               If #1BDST = 'N';
         WUR3CJ = 'N';
               ENDIF;
                // Datum 1 2 3 wijzigt in loop der maand ==> zelf bdrg wklh invullen
                // CASE: WRK.Switch overgang barema is Y
               If WUR3CJ = 'Y'; //*IF
                  // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
                 If WUPFCD <> '1'; //*IF
                    // Send message 'Overgang barema : zelf be'
         ZAMSID = 'USR6303';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUERCK = '1';                         Wrk F1 na F24
                    // CASE: DTL.Geen bedrag wklh is Y
                   If #1BDST = 'Y'; //*IF
         WUPSCD = '1';                         Switch berekeni
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // Dat.forfait : zelf bedrag invullen bij overgang RM
                // CASE: WRK.sw datum forfait is 1
               If WUXGCD = '1'; //*IF
                  // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
                 If WUPFCD <> '1'; //*IF
                    // Send message 'Overgang --> forfait'
         ZAMSID = 'USR2097';
                   EXSR ZASNMS;
                   *In99 = *On;

                 Endif; //*FI
               Endif; //*FI
                // Dat.1ste Per.B : zelf bedrag invullen bij overgang RM
                // CASE: WRK.sw datum 0-kode is 1
               If WUXHCD = '1'; //*IF
                  // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
                 If WUPFCD <> '1'; //*IF
                    // Send message 'Overgang per1A->per1B'
         ZAMSID = 'USR5262';
                   EXSR ZASNMS;
                   *In99 = *On;

                 Endif; //*FI
               Endif; //*FI
                // Dat.2de Per.C : zelf bedrag invullen bij overgang RM
                // CASE: WRK.sw datum 40% is 1
               If WUXFCD = '1'; //*IF
                 YRSW00 = 2;
                 ZQ = 5;
                 If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
                 ELSE;
                   WUF1CH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk pos56 barem
     C   90              MOVEL     'Y2U0510'     W0RTN
                 Endif;
                  // CASE:
                  //  - c1ORc2
                  //   !- c1    : WRK.Wrk pos56 barema is 1C
                  //   !- c2    : WRK.Wrk pos56 barema is 1B
                  //   '-
                 If WUF1CH = '1C' OR WUF1CH = '1B'; //*IF
                    // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
                   If WUPFCD <> '1'; //*IF
                      // Send message 'Overgang 2de periode 1C'
         ZAMSID = 'USR5267';
                     EXSR ZASNMS;
                     *In99 = *On;

                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
                // overgang periode 1A naar 1B
                // CASE: WRK.Wrk pos6 barema is geen B
               If WUF4CH <> 'B'; //*IF
                  // CASE: WRK.Wrk pos5 barema is 1
                 If WUF3CH = '1'; //*IF
                   WUQJNC = #1AEDT / 100; //Maand om te tes
                    // CASE: WRK.Maand om te testen EQ DTL.Datum achterstal
                   If WUQJNC = #1GWNB; //*IF
                     WUQKNC = WUQJNC * 100; //Wrk datum 8 lan
                     WUQKNC = WUQKNC + 01; //Wrk datum 8 lan
                      // CASE: WRK.Wrk datum 8 lang testen EQ DTL.Datum OP-code
                     If WUQKNC = #1AEDT; //*IF
                        // Send message 'Overgang per1A->per1B'
         ZAMSID = 'USR5262';
                       EXSR ZASNMS;
                       *In99 = *On;

                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Datum laatste stempel: verplichte zone als dagen<>maximum of nt i
            // CASE: WRK.Wrk switch hidden zetten is 0
           If WUCA75 = '0'; //*IF
             WUR5R5 = *ZERO; //wrk totaal R5
             WUR6R6 = *ZERO; //wrk totaal R6
             WUR5R5 = #1JLNB + #1JONB; //wrk totaal R5
             WUR5R5 = WUR5R5 + #1GHNB; //wrk totaal R5
             WUR5R5 = WUR5R5 / 2; //wrk totaal R5
             WUR5R5 = WUR5R5 + #1GGNB; //wrk totaal R5
             WUR5R5 = WUR5R5 + #1GNNB; //wrk totaal R5
             WUR5R5 = WUR5R5 + #1G7NB; //wrk totaal R5
             WUR5R5 = WUR5R5 + #1GXNB; //wrk totaal R5
             WUR5R5 = WUR5R5 + #1BBNR; //wrk totaal R5
             WUR6R6 = #1JLNB + #1JONB; //wrk totaal R6
             WUR6R6 = WUR6R6 + #1GMNB; //wrk totaal R6
             WUR6R6 = WUR6R6 / 2; //wrk totaal R6
             WUR6R6 = WUR6R6 + #1GLNB; //wrk totaal R6
             WUR6R6 = WUR6R6 + #1GNNB; //wrk totaal R6
             WUR6R6 = WUR6R6 + #1G7NB; //wrk totaal R6
             WUR6R6 = WUR6R6 + #1GXNB; //wrk totaal R6
             WUR6R6 = WUR6R6 + #1BBNR; //wrk totaal R6
             WUJYNG = #1JLNB + #1GMNB; //Wrk totaalR6 zo
             WUJYNG = WUJYNG / 2; //Wrk totaalR6 zo
             WUJYNG = WUJYNG + #1GLNB; //Wrk totaalR6 zo
             WUJYNG = WUJYNG + #1GNNB; //Wrk totaalR6 zo
              // Controle laatste stempel3 - Wkl betaling  *
     C                   MOVEA     *IN(50)       UWIN              1
     EvalR   WUW202 = '0';            1            SWITCH202
     EvalR   WUW252 = '0';            1            SWITCH252
         WUKOCN = '0';            1
             R6MX = 0;
             R5MX = 0;
             LST = 0; //L.STEMPEL
     EvalR   DGLST = #1AKDD;             2 0          DAG L.STEMPE
     EvalR   C = #1GWNB;                 2 0
         WRKLS2 = #1AKDD;            8 0          L.STEMPEL
         USRP6 = ##USR;             6
              // WKL-3692 : BIJ USER BYPAS OOK CONTROLEREN OP LAATSTE STEMPEL
             If ##USR <> 'RVDS    ';
                //          WUDTCC    ANDNE'BYPAS'
               If WUR6R6 > 0;
                 *In50 = (%Lookup(#1GWNB:JJH:C) > 0);
     C  N50              GOTO      C1VER1
         R6MX = D6H(C);              2 0
                  //          WUR6R6    IFLT R6MX                       MAXR6
                 If WUR6R6 <> R6MX; //MAXR6
                   If #1AKDD = 0; //L.STEMP NT I
     EvalR   WUW202 = '1';
     C                   GOTO      GNTST
                   ELSE; //INGEVULD
         ZON6 = #1AKDD;              6 0          199504
                     EXSR ROUTLS;
                     If TSTLST = '1';
     C                   GOTO      GNTST
                     ENDIF;
                   Endif; //END L.STEMP
                 ELSE;
         ZON6 = #1AKDD;              6 0          199504
                   EXSR ROUTL2;
                   If TSTLST = '1';
     C                   GOTO      GNTST
                   ENDIF;
                 Endif; //END R6H,X
     C     C1VER1        TAG
                 *In50 = (%Lookup(#1GWNB:JJV:C) > 0);
     C  N50              GOTO      C1VER2
         R6MX = D6V(C);              2 0
                 If WUR6R6 <> R6MX; //MAXR6
                   If #1AKDD = 0; //L.STEMP NT I
     EvalR   WUW202 = '1';
     C                   GOTO      GNTST
                   ELSE; //INGEVULD
         ZON6 = #1AKDD;              6 0          199504
                     EXSR ROUTLS;
                     If TSTLST = '1';
     C                   GOTO      GNTST
                     ENDIF;
                   Endif; //END L.STEMP
                 ELSE;
         ZON6 = #1AKDD;              6 0          199504
                   EXSR ROUTL2;
                   If TSTLST = '1';
     C                   GOTO      GNTST
                   ENDIF;
                 Endif; //END R6V,X
     C     C1VER2        TAG
                 *In50 = (%Lookup(#1GWNB:JJK:C) > 0);
     C  N50              GOTO      GNTST
         R6MX = D6K(C);              2 0
                 If WUR6R6 <> R6MX; //MAXR6
                   If #1AKDD = 0; //L.STEMP NT I
     EvalR   WUW202 = '1';
     C                   GOTO      GNTST
                   ELSE; //INGEVULD
         ZON6 = #1AKDD;              6 0          199504
                     EXSR ROUTLS;
                     If TSTLST = '1';
     C                   GOTO      GNTST
                     ENDIF;
                   Endif; //END L.STEMP
                 ELSE;
         ZON6 = #1AKDD;              6 0          199504
                   EXSR ROUTL2;
                   If TSTLST = '1';
     C                   GOTO      GNTST
                   ENDIF;
                 Endif; //END R6K,X
     C                   GOTO      GNTST
               Endif; //R6>0
               If WUR5R5 > 0;
                 *In50 = (%Lookup(#1GWNB:JJH:C) > 0);
     C  N50              GOTO      C1VER3
     EvalR   R5MX = D6H(C);              2 0
                 If WUR5R5 <> R5MX; //MAXR5
                   If #1AKDD = 0; //L.STEMP NT I
     EvalR   WUW202 = '1';
     C                   GOTO      GNTST
                   ELSE; //INGEVULD
         ZON6 = #1AKDD;              6 0          199504
                     EXSR ROUTLS;
                     If TSTLST = '1';
     C                   GOTO      GNTST
                     ENDIF;
                   Endif; //END L.STEMPE
                 Endif; //DAGEN R5
     C     C1VER3        TAG
                 *In50 = (%Lookup(#1GWNB:JJV:C) > 0);
     C  N50              GOTO      C1VER4
     EvalR   R5MX = D6V(C);              2 0
                 If WUR5R5 <> R5MX; //MAXR5
                   If #1AKDD = 0; //L.STEMP NT I
     EvalR   WUW202 = '1';
     C                   GOTO      GNTST
                   ELSE; //INGEVULD
         ZON6 = #1AKDD;              6 0          199504
                     EXSR ROUTLS;
                     If TSTLST = '1';
     C                   GOTO      GNTST
                     ENDIF;
                   Endif;
                 Endif;
     C     C1VER4        TAG
                 *In50 = (%Lookup(#1GWNB:JJK:C) > 0);
     C  N50              GOTO      GNTST
     EvalR   R5MX = D6K(C);              2 0
                 If WUR5R5 <> R5MX; //MAXR5
                   If #1AKDD = 0; //L.STEMP NT I
     EvalR   WUW202 = '1';
     C                   GOTO      GNTST
                   ELSE; //INGEVULD
         ZON6 = #1AKDD;              6 0          199504
                     EXSR ROUTLS;
                     If TSTLST = '1';
     C                   GOTO      GNTST
                     ENDIF;
                   Endif; //END L.ST.=0
                 Endif; //END R5<MAXR5
               Endif; //R5>0
             Endif; //END RVDS/BYPAS
     C     GNTST         TAG
              //VNF 01/1997 OOK VR TYPES ZONDER DGN-->02,04,06,05 MOET L.STEMPEL ING WORD
              //WKL-3454
             If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06' OR #1A1CD = '05' OR #1A1CD = '21' OR #1A1CD = '22' OR #1A1CD = '57' OR #1A1CD = '58';
         ZON6 = #1AKDD;              6 0          199504
               EXSR ROUTLS;
             ENDIF; //02,04,06,05,21
             If #1AKDD > 0;
               MMLST = #1AKDD / 100; //MND L STEMP
               If MMLST <> #1GWNB;
         WUKOCN = '1';
               ENDIF;
             ENDIF;
              // WKL3704 : INDIEN EERSTE BETALING MOETEN ER DAGEN ZIJN INGEVULD
         TTTYYY = #1A1CD;            2
             DGRDBT = 0;
             //71,.. NT MEETELLEN
             //AFD
             //LIDNR
             //REF.MND
             //TYPE WKL
             //TOTAAL REEDS BETAALD
         WULECN = '0';            1
             If DGRDBT = 0; //NOG NIETS BETAALD
         WULECN = '1';                         VOOR DIT TYPE WKL
             ENDIF;
     C                   MOVEA     UWIN          *IN(50)
              //---------------------------------------------------------------
         WULQCN = 'N';                         switch type53 b
              // CASE: DTL.Type wklh. kode is 53
             If #1A1CD = '53'; //*IF
                // CASE: DTL.Barema RVAkode is ..ICL..
               If #1DOCD = @CN(008); //*IF
         WULQCN = 'Y';                         switch type53 b
               Endif; //*FI
             Endif; //*FI
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10ORc11ORc12ORc13ORc14
              //   !- c1    : DTL.BZ kode is FZ
              //   !- c2    : DTL.BZ kode is PZ
              //   !- c3    : DTL.BZ kode is VZ
              //   !- c4    : DTL.BZ kode is PZ
              //   !- c5    : DTL.BZ kode is M
              //   !- c6    : DTL.BZ kode is M1
              //   !- c7    : DTL.BZ kode is 35
              //   !- c8    : DTL.BZ kode is 85
              //   !- c9    : DTL.Type wklh. kode is 24 : wisselkoerstoeslag
              //   !- c10   : DTL.Type wklh. kode is 29 = werkhervatting
              //   !- c11   : DTL.Type wklh. kode is 50
              //   !- c12   : DTL.Type wklh. kode is 51
              //   !- c13   : DTL.Type wklh. kode is 52
              //   !- c14   : WRK.switch type53 bar ..ICL.. is Y
              //   '-
             If #1A4CD = 'FZ' OR #1A4CD = 'PZ' OR #1A4CD = 'VZ' OR #1A4CD = 'PZ' OR #1A4CD = 'M' OR #1A4CD = 'M1' OR #1A4CD = '35' OR #1A4CD = '85' OR #1A1CD = '24' OR #1A1CD = '29' OR #1A1CD = '50' OR #1A1CD = '51' OR #1A1CD = '52' OR WULQCN = 'Y'; //*IF
                // CASE: DTL.Wkl datum laatste stempel is ingevuld
               If #1AKDD > 0; //*IF
                  // Send message 'Laatste stempel moet 0 zi'
         ZAMSID = 'USR7499';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // CASE:
                //  - c1ORc2ORc3
                //   !- c1    : WRK.wrk totaal R6 is > 0
                //   !- c2    : DTL.Bedrag wkl is > 0
                //   !- c3    : DTL.Bedrag BZ is > 0
                //   '-
               If WUR6R6 > 0 OR #1HPNB > *ZERO OR #1GYNB > *ZERO; //*IF
                  // CASE: DTL.Wkl datum laatste stempel is niet ingevuld
                 If #1AKDD = *ZERO; //*IF
                    // Setup message data for message
                    // Convert Wkl datum laatste stempel to external.

                   UIDTD2 = #1AKDD;
                   UDTDC2 = UDTD12;
                   UDTDY2 = UDTD22;
                   UDTDM2 = UDTD32;
                   UDTDD2 = UDTD42;
                   ZA0083 = UEDTD2;
                    // Send message 'Datum laatste stempel inv'
         ZAMSID = 'USR1759';
                   EXSR ZASNMS;
                   *In99 = *On;

                    // *Set Cursor: DTL.Wkl datum laatste stempel  (*Override=*NO)
                   W0ROW1 = 020;
                   W0COL1 = 072;
         W0OVR1 = '0';                         *NO
                 Endif; //*FI
                  // CASE: WRK.Switch laatste stempel RM is 1
                 If WUKOCN = '1'; //*IF
                    // Setup message data for message
                    // Convert Wkl datum laatste stempel to external.

                   UIDTD2 = #1AKDD;
                   UDTDC2 = UDTD12;
                   UDTDY2 = UDTD22;
                   UDTDM2 = UDTD32;
                   UDTDD2 = UDTD42;
                   ZA0084 = UEDTD2;
                    // Send message 'Laatste stempel refertem'
         ZAMSID = 'USR7455';
                   EXSR ZASNMS;
                   *In99 = *On;

                    // *Set Cursor: DTL.Wkl datum laatste stempel  (*Override=*NO)
                   W0ROW1 = 020;
                   W0COL1 = 072;
         W0OVR1 = '0';                         *NO
                 Endif; //*FI
               Endif; //*FI
                // Sw202=1 : Datum laatste stempel invullen
                // CASE: WRK.Switch202 is 1
               If WUW202 = '1'; //*IF
                  // Setup message data for message
                  // Convert Wkl datum laatste stempel to external.

                 UIDTD2 = #1AKDD;
                 UDTDC2 = UDTD12;
                 UDTDY2 = UDTD22;
                 UDTDM2 = UDTD32;
                 UDTDD2 = UDTD42;
                 ZA0085 = UEDTD2;
                  // Send message 'Datum laatste stempel inv'
         ZAMSID = 'USR1759';
                 EXSR ZASNMS;
                 *In99 = *On;

                  // *Set Cursor: DTL.Wkl datum laatste stempel  (*Override=*NO)
                 W0ROW1 = 020;
                 W0COL1 = 072;
         W0OVR1 = '0';                         *NO
               Endif; //*FI
                // CASE:
                //  - c1ORc2
                //   !- c1    : DTL.Type wklh. kode is 54
                //   !- c2    : DTL.Type wklh. kode is 55
                //   '-
               If #1A1CD = '54' OR #1A1CD = '55'; //*IF
                  // CASE: DTL.Wkl datum laatste stempel GT WRK.S36 datum tot
                 If #1AKDD > WUX8ND; //*IF
                    // Send message 'LaatsteStempel>einddtmS36'
         ZAMSID = 'USR7509';
                   EXSR ZASNMS;
                   *In99 = *On;

                 Endif; //*FI
               Endif; //*FI
                // CASE:
                //  - c1ANDc2
                //   !- c1    : DTL.Type wklh. kode is 53
                //   !- c2    : DTL.Barema RVAkode is ..ICLD.
                //   '-
         Y0CX01 = '0';            1
               If #1A1CD = '53'; //*IF
                 If #1DOCD = @CN(003); //*IF
         Y0CX01 = '1';
                 Endif; //*FI
               Endif; //*FI
               If Y0CX01 = '1'; //*IF
                  // CASE: DTL.Wkl datum laatste stempel GT WRK.S36 datum tot
                 If #1AKDD > WUX8ND; //*IF
                    // Send message 'LaatsteStempel>einddtmS36'
         ZAMSID = 'USR7509';
                   EXSR ZASNMS;
                   *In99 = *On;

                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // Sw252=1 : Dagen R6/R5 > dagen van datum laatste stempel
              // CASE: WRK.Switch252 is 1
             If WUW252 = '1'; //*IF
                // Setup message data for message
                // Convert Wkl datum laatste stempel to external.

               UIDTD2 = #1AKDD;
               UDTDC2 = UDTD12;
               UDTDY2 = UDTD22;
               UDTDM2 = UDTD32;
               UDTDD2 = UDTD42;
               ZA0086 = UEDTD2;
                // Send message 'Dagen R6/R5 groter dan da'
         ZAMSID = 'USR2526';
               EXSR ZASNMS;
               *In99 = *On;

                // *Set Cursor: DTL.Wkl datum laatste stempel  (*Override=*NO)
               W0ROW1 = 020;
               W0COL1 = 072;
         W0OVR1 = '0';                         *NO
             Endif; //*FI
           Endif; //*FI
            // Type 00 : omzetting dagen wklh/KBF --> dagen BZ=0
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5ORc6
            //   !- c1    : DTL.Type wklh. kode is 00 : niet toelaatbaar
            //   !- c2    : DTL.Type wklh. kode is 71 :vrijwillig wklh
            //   !- c3    : DTL.Type wklh. kode is 72 :blijv.onmogelijkheid
            //   !- c4    : DTL.Type wklh. kode is 73 :in afwachting E301
            //   !- c5    : DTL.Type wklh. kode is 97
            //   !- c6    : DTL.Type wklh. kode is 70 :nt ingaan op uitnodig
            //   '-
           If #1A1CD = '00' OR #1A1CD = '71' OR #1A1CD = '72' OR #1A1CD = '73' OR #1A1CD = '97' OR #1A1CD = '70'; //*IF
              // Omzetting dagen type 00 - Wkl betaling  *
              //20 VD6+5 HD6-->EERST DGN OMZETTEN IN HULPZONE(=DELWKL) --> DELWKL=22,50
             HVD6 = #1GLNB;
             HHD6 = #1GMNB;
             HVVERL = #1GNNB;
             HHVERL = #1JLNB;
             HVBV = #1G7NB;
             HHBV = #1JONB;
             DELWKL = #1GMNB / 2;
             DELWKL = DELWKL + #1GLNB;
             DELVER = #1JLNB / 2;
             DELVER = DELVER + #1GNNB;
             DELWKL = DELWKL + DELVER;
             HVTOT6 = #1GLNB + #1GNNB;
             HHTOT6 = #1GMNB + #1JLNB;
             DELBV = #1JONB / 2;
             DELBV = DELBV + #1G7NB;
             DELWK2 = DELWKL + DELBV;
             HVAL6 = HVTOT6 + #1G7NB;
             HHAL6 = HHTOT6 + #1JONB;
              //                    Z-ADD#1GXNB    XXKBF
             HVVOR = 0; //VORSTDGN=0
             HHVOR = 0; //HVORST=0
             HVBZ = 0; //VORSTDGN=0
             HHBZ = 0; //HVORST=0
             HBEDBZ = 0;
             DELBZ = 0;
           Endif; //*FI
            // Type kode=01/11 : Omzetting dgn wklh-->dgn BZ (gn dok of rivierar
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.Type wklh. kode is 01 : volledig werkloos
            //   !- c2    : DTL.Type wklh. kode is 11 : beroepsopleiding
            //   '-
           If #1A1CD = '01' OR #1A1CD = '11'; //*IF
              // CASE: DTL.BZ kode is C2
             If #1A4CD = 'C2'; //*IF
         WUS5CL = 'N';                         Switch bouw 102
             Endif; //*FI
              // CASE: DTL.Beroep kode is Nt 09 : geen dok A'pen
             If #1BACD <> '09'; //*IF
                // Omz dgn-->BZ:type01 gndok - Wkl betaling  *
     EvalR   WUJKCD = '0';                         SWITCH43
     EvalR   WUKVCD = '0';                         SWITCH47
               HVD6 = #1GLNB;
               HHD6 = #1GMNB;
               HVVERL = #1GNNB;
               HHVERL = #1JLNB;
               HVBV = #1G7NB;
               HHBV = #1JONB;
               DELWKL = #1GMNB / 2;
               DELWKL = DELWKL + #1GLNB;
               DELVER = #1JLNB / 2;
               DELVER = DELVER + #1GNNB;
               DELWKL = DELWKL + DELVER;
               HVTOT6 = #1GLNB + #1GNNB;
               HHTOT6 = #1GMNB + #1JLNB;
               DELBV = #1JONB / 2;
               DELBV = DELBV + #1G7NB;
               DELWK2 = DELWKL + DELBV;
               HVAL6 = HVTOT6 + #1G7NB;
               HHAL6 = HHTOT6 + #1JONB;
               If #1AACD = '29' AND #1AFNB = '183475';
                 DSPLY ('LVMUUFR') 'ROSANNE';
                 DSPLY ('HVTOT6') 'ROSANNE';
                 DSPLY (HVTOT6) 'ROSANNE';
                 DSPLY ('WUS5CL') 'ROSANNE';
                 DSPLY (WUS5CL) 'ROSANNE';
               ENDIF;
                //***************************************************************
               If #1BCCD <> 'P'; //SUBBEROEP <>P
                 If #1A4CD <> *BLANK; //BZ KODE NT
                    // IS KODE BZ = B --> GN VORSTDAGEN SINDS 1/10/91
                   HVVOR = 0; //VORSTDGN=0
                   HHVOR = 0; //HVORST=0
                    // BZ-DAGEN --> HULPZONES ALS DE DAGEN  OPGEGEVEN WERDEN
                   If #1GPNB <> *ZERO OR #1JNNB <> *ZERO; //BZDGN=0
                     HVBZ = #1GPNB; //VORSTDGN=0
                     HHBZ = #1JNNB; //HVORST=0
                   Endif;
                    //IS BZ=A,NA,Z & DGN WKL<15 DAN MOETEN DGN EN BEDR BZ INGEV. ZIJN
                   If #1A4CD = 'A ' OR #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = 'M1' OR #1A4CD = 'NA' OR #1A4CD = 'FA' OR #1A4CD = 'FS' OR #1A4CD = '35' OR #1A4CD = '29';

                     If #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = 'M1' OR #1A4CD = '35';
                       DELWKL = HHBZ / 2;
                       DELWKL = DELWKL + HVBZ;
                       DELBZ = HHBZ / 2;
                       DELBZ = DELBZ + HVBZ;
                     ENDIF;
                     If #1A4CD = 'NA' OR #1A4CD = 'FA' OR #1A4CD = 'FS' OR #1A4CD = '29';
                       If #1GPNB <> *ZERO OR #1JNNB <> *ZERO; //BZDGN=0
                         HVBZ = #1GPNB; //VORSTDGN=0
                         HHBZ = #1JNNB; //HVORST=0
                       ELSE;
                         HVBZ = HVTOT6; //BZDGN=0
                         HHBZ = HHTOT6; //HBZ=0
                       Endif;
                       DELBZ = HHBZ / 2;
                       DELBZ = DELBZ + HVBZ;
                     ENDIF;

                     If #1BCST = 'Y'; //DGN/BZ=Y
                       METACH = #1GWNB;
                       METDGN = 99;

                        //          DELWKL    IFLT METDGN
                       METAALD(METACH:METDGN);
                         If DELBZ < METDGN;
                         If #1GPNB = *ZERO AND #1JNNB = *ZERO; //VOLLE BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                         Endif;
                         If #1GYNB = *ZERO; //BEDR BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                         Endif;
                         If #1A4CD = 'NA' OR #1A4CD = 'FA' OR #1A4CD = 'FS' OR #1A4CD = '29' OR #1A4CD = 'M ' OR #1A4CD = 'M1' OR #1A4CD = '35' OR #1A4CD = '85';
         WUKVCD = '0';                         SWITCH47
                         ENDIF;
                       Endif; //END METDGN
                     Endif; //BZ=Y

                   Endif; //END A,NA,Z
                    // BZ-DAGEN BEPALEN ALS DE DAGEN NIET OPGEGEVEN WERDEN
                   If #1AACD = '29' AND #1AFNB = '183475';
                     DSPLY ('LVMUUFR') 'ROSANNE';
                     DSPLY ('#1GPNB') 'ROSANNE';
                     DSPLY (#1GPNB) 'ROSANNE';
                     DSPLY (#1JNNB) 'ROSANNE';
                     DSPLY (#1GWNB) 'ROSANNE';
                     DSPLY (BYAUDM) 'ROSANNE';
                   ENDIF;
                   If #1GPNB = *ZERO AND #1JNNB = *ZERO; //BZDGN=0
                      // BZ DAGEN BOUW (KREDIETDAGEN)
                      //          #1A4CD    IFEQ 'B '                       BZ=B
                     If WUS5CL = 'Y' AND #1GWNB >= BYAUDM; //BZ=B
                       HVBZ = HVTOT6; //BZDGN=0
                       HHBZ = HHTOT6; //HBZ=0
                     Endif; //END KOD BZ=B
                     If #1AACD = '29' AND #1AFNB = '183475';
                       DSPLY ('LVMUUFR') 'ROSANNE';
                       DSPLY ('HVBZ HHB') 'ROSANNE';
                       DSPLY (HVBZ) 'ROSANNE';
                       DSPLY (HHBZ) 'ROSANNE';
                     ENDIF;
                      // BZ = H OF KH : HOUT EN STOFFERING --> BZ-DAGEN = WKLHDAGEN
                      // IDEM METAAL BZ=C (CONTROLE MET KREDIET GEBEURT LATER)
                     If #1A4CD = 'I ' OR #1A4CD = 'SC' OR #1A4CD = 'BA'; //BZ=HOUT EN
                       If WUJRJR = WUJRRR; //HUIDIG JAAR
                         HVBZ = HVTOT6; //BZDGN=VD6
                         HHBZ = HHTOT6; //HBZ=HD6
                       Endif; //END HUID JR
                     Endif; //END BZ=H/KH
                      //VNF12/2004 OOK BZ=E=FM61 ERBIJ VR VW OMWILLE VAN IBO DEELT.BEROEPSOPL.,
                      //KRIJGEN TYPE01/11 MAAR V H FONDS EEN FM61=>E MOET VNF122004 MET TYPE01/11
                     If #1A4CD = 'C ' OR #1A4CD = 'E ' OR #1A4CD = 'CS' OR #1A4CD = 'ES'; //BZ=METAAL
                       If #1BCST <> 'N'; //BEDRAG BZ<>N
                         HVBZ = HVTOT6; //BZDGN=VD6
                         HHBZ = HHTOT6; //HBZ=HD6
                       ELSE; //GN BZ UITB
                         HVBZ = 0; //BZDGN=VD6
                         HHBZ = 0; //HBZ=HD6
                       ENDIF;
                     Endif; //END BZ=H/KH

                   Endif; //DAGEN BZ=0
                    //**  EINDE BZ DAGEN NIET INGEVULD
                    //**  IS BZ BEDRAG INGEVULD
                   If #1GYNB <> *ZERO; //BZ BEDRAG=0
                     HBEDBZ = #1GYNB;
                   Endif; //END BEDR =0
                    //DGN BZ > DGN BZ CONTROLERECORD -->ERROR NIET BETALEN (REF.MND=IND.MND)
                   If #1GWNB = BYEENB; //ACHT=WKLMAAN
                     DELBZ = HHBZ / 2;
                     DELBZ = DELBZ + HVBZ;
                     If DELBZ > BYEANB; //DGNBZ>MAX BZ
     EvalR   WUJKCD = '1';                         NT BETALEN
                     Endif; //DUS <=MAX BZ
                   Endif; //END DATUM AC

                 Endif; //END BZ NT BL
               ENDIF; //END SUBBEROEP<>P
                // Sw43=1:dagen BZ>maximum
                // CASE: WRK.Switch43 is 1
               If WUJKCD = '1'; //*IF
                  // Setup message data for message
                 ZA0087 = #1GLNB; //VD6
                 ZA0088 = #1GMNB; //HD6
                 ZA0089 = #1JLNB; //Halve dagen ver
                 ZA0090 = #1GNNB; //Volle dagen ver
                  // Send message 'Dagen BZ>maximum'
         ZAMSID = 'USR0365';
                 EXSR ZASNMS;
                 *In99 = *On;
         @I1(31) = '1';                        *
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
                // Sw47=1;:zelf dagen en bedrag opgeven
                // CASE: WRK.Switch47 is 1
               If WUKVCD = '1'; //*IF
                  // Setup message data for message
                 ZA0091 = #1JNNB; //Halve dagen BZ
                 ZA0092 = #1GYNB; //Bedrag BZ
                 ZA0093 = #1GPNB; //Volle dagen BZ
                  // Send message 'zelf dagen & bedrag opgev'
         ZAMSID = 'USR0366';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Type kode = 03 : Omzetting dgn wklh --> dgn BZ
            // CASE: DTL.Type wklh. kode is 03 :vrijw.deeltijds 171.9
           If #1A1CD = '03'; //*IF
              // CASE: DTL.BZ kode is C2
             If #1A4CD = 'C2'; //*IF
         WUS5CL = 'N';                         Switch bouw 102
             Endif; //*FI
              // Omz dgn-->BZ dgn : type03 - Wkl bet  *
     EvalR   WUJKCD = '0';                         SWITCH43
     EvalR   WUKVCD = '0';                         SWITCH47
             HHD6 = #1GMNB;
             HHVERL = #1JLNB;
             HHBV = #1JONB;
             HHTOT6 = #1GMNB + #1JLNB;
             HHAL6 = HHTOT6 + #1JONB;

             If #1BCCD <> 'P'; //SUBBEROEP NIET P
               If #1A4CD <> *BLANK; //BZ NT BLANK
                  //***************************************************************
                  // HALVE BZ-DAGEN --> HULPZONES ALS DE DAGEN OPGEGEVEN WERDEN
                 If #1JNNB <> *ZERO; //HBZ NT 0
                   HHBZ = #1JNNB;
                 Endif;
                  //***************************************************************
                  // HALVE BZ-DAGEN BEPALEN ALS DE DAGEN NIET OPGEGEVEN WERDEN
                 If #1JNNB = *ZERO; //HBZ=0
                    //***************************************************************
                    // IS KODE BZ = B EN VORSTDAGEN INGEVULD --> BESTAAT NT MEER
                    //          #1A4CD    IFEQ 'B '                       KODE BZ=B
                   If WUS5CL = 'Y' AND #1GWNB >= BYAUDM; //KODE BZ=B
                     HHVOR = 0;
                     HHBZ = HHTOT6;
                   Endif; //END KOD BZ=B
                    //***************************************************************
                    // BZ= HOUT EN STOFFERING --> HALVE BZ-DAGEN = HALVE WKLHDAGEN
                    // IDEM METAAL BZ=E (CONTROLE MET KREDIET GEBEURT LATER)
                   If #1A4CD = 'I ' AND WUJRJR = WUJRRR; //BZ=HOUT EN
                     HHBZ = HHTOT6; //HBZ=HD6
                   Endif; //END BZ=I/KH
                   If #1A4CD = 'E ' OR #1A4CD = 'ES'; //METAAL
                     If #1BCST <> 'N'; //BZ BEDRAG<>N
                       HHBZ = HHTOT6; //HBZ=HD6
                     ELSE;
                       HHBZ = 0;
                     ENDIF;
                   Endif; //END BZ=E

                 Endif; //HBZ=0
                  //**  EINDE HALVE BZ DAGEN NIET INGEVULD
                  //IS BZ=METAAL. BZ=VA,DA,Z1 VANAF 15 DGN WKLH HEBBEN DEZE EEN VAST MAANDBDR
                  //IS DGN WKLH<15,DAN MOETEN BZ-DGN EN BZ BEDRAG ZELF INGEVULD WORDEN
                  // BZ-DGN NT INGEVULD
                 If #1A4CD = 'VA' OR #1A4CD = 'Z1' OR #1A4CD = 'M1' OR #1A4CD = 'DA' OR #1A4CD = 'PA' OR #1A4CD = 'PS' OR #1A4CD = '85';
                   HHHHBZ = HHTOT6;
                   If #1A4CD = 'Z1' OR #1A4CD = 'M1' OR #1A4CD = '85';
                     HHHHBZ = HHBZ;
                   ENDIF;
                   If #1A4CD = 'PA' OR #1A4CD = 'PS';
                     If #1JNNB <> *ZERO; //HBZ=0
                       HHBZ = #1JNNB; //HVORST=0
                     ELSE;
                       HHBZ = HHTOT6; //HBZ=0
                     Endif;
                     HHHHBZ = HHBZ;
                   ENDIF;

                   If #1BCST = 'Y'; //DGN/BZ=Y

                     METACH = #1GWNB;
                     METDGN = 99;

                     METAALD(METACH:METDGN);
                       If HHHHBZ < METDGN;
                       If #1GPNB = *ZERO AND #1JNNB = *ZERO; //VOLLE BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                       Endif;
                       If #1GYNB = *ZERO; //BEDR BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                       Endif;
                       If #1A4CD = 'PA' OR #1A4CD = 'PS' OR #1A4CD = 'M ' OR #1A4CD = 'M1' OR #1A4CD = '35' OR #1A4CD = '85';
     EvalR   WUKVCD = '0';                         SWITCH47
                       ENDIF;
                     Endif; //END METDGN

                   Endif; //BZ=Y

                 Endif; //BZ=VA OF Z1
                  //DGN BZ > DGN BZ CONTROLERECORD -->ERROR NIET BETALEN  (REF.MND=IND.MND)
                 If #1GWNB = BYEENB; //ACHT=WKLMAAN
                   DELBZ = HHBZ / 2;
                   If DELBZ > BYEANB; //DGNBZ>MAX BZ
     EvalR   WUJKCD = '1';                         NT BETALEN
                   Endif; //DUS <=MAX BZ
                 Endif; //END DATUM AC

               Endif; //END BZ NT BL
             Endif; //END SUBBEROEP<>P
              // Sw43=1:dagen BZ>maximum
              // CASE: WRK.Switch43 is 1
             If WUJKCD = '1'; //*IF
                // Setup message data for message
               ZA0094 = #1GMNB; //HD6
               ZA0095 = #1JLNB; //Halve dagen ver
                // Send message 'Dagen BZ>maximum type03'
         ZAMSID = 'USR0496';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // SW47=1:zelf dagen en bedragen opgeven
              // CASE: WRK.Switch47 is 1
             If WUKVCD = '1'; //*IF
                // Setup message data for message
               ZA0096 = #1JNNB; //Halve dagen BZ
               ZA0097 = #1GYNB; //Bedrag BZ
                // Send message 'Zelf dgn&bedr opg. type03'
         ZAMSID = 'USR0497';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Type kode = 08 : Omzetting dgn wklh --> geen BZ
            // CASE: DTL.Type kode is 08 : E303 invoerrecht
           If #1A1CD = '08'; //*IF
              // Omzetting dagen : type 08 - Wkl bet  *
              //20 VD6+5 HD6 -->EERST DAGEN OMZETTEN IN EEN HUKPZONE==> DELWKL=22,5
             HVD6 = #1GLNB;
             HHD6 = #1GMNB;
             HVVERL = #1GNNB;
             HHVERL = #1JLNB;
             HVBV = #1G7NB;
             HHBV = #1JONB;
             DELWKL = #1GMNB / 2;
             DELWKL = DELWKL + #1GLNB;
             DELVER = #1JLNB / 2;
             DELVER = DELVER + #1GNNB;
             DELWKL = DELWKL + DELVER;
             HVTOT6 = #1GLNB + #1GNNB;
             HHTOT6 = #1GMNB + #1JLNB;
             DELBV = #1JONB / 2;
             DELBV = DELBV + #1G7NB;
             DELWK2 = DELWKL + DELBV;
             HVAL6 = HVTOT6 + #1G7NB;
             HHAL6 = HHTOT6 + #1JONB;
              //** BZ-KODE INGEVULD --> MOVE VAN 0 NAAR BZ DAGEN EN BEDRAG BZ
             If #1A4CD <> *BLANK; //KODE BZ INGE
               HVVOR = 0; //VORSTDGN=0
               HHVOR = 0; //HVORST=0
     EvalR   #1GONB = 0;                         VORSTDGN=0
     EvalR   #1JMNB = 0;                         HVORST=0
               HVBZ = 0; //BZ=0
               HHBZ = 0; //HBZ=0
               HBEDBZ = 0;
     EvalR   #1GYNB = 0;                         BEDR BZ = 0
     EvalR   #1GPNB = 0;                         BZDGN=0
     EvalR   #1JNNB = 0;                         H BZDGN =0
             Endif; //END BZ NT BL
           Endif; //*FI
            // Type kode = 09 : omzetting dgn wklh --> dgn BZ
            // CASE: DTL.Type kode is 09 : conv brugp voltijds
           If #1A1CD = '09'; //*IF
              // Omz. dgn-->BZ:type09 - Wkl bet  *
              //20 VD6+5 HD6 --> EERST DAGEN OMZETTEN IN EEN HULPZONE-->DELWKL=22,5
     EvalR   WUJKCD = '0';                         SWITCH43
     EvalR   WUKVCD = '0';                         SWITCH47
             HVD6 = #1GLNB;
             HHD6 = #1GMNB;
             HVVERL = #1GNNB;
             HHVERL = #1JLNB;
             HVBV = #1G7NB;
             HHBV = #1JONB;
             DELWKL = #1GMNB / 2;
             DELWKL = DELWKL + #1GLNB; //VD6+HD6/2
             DELVER = #1JLNB / 2;
             DELVER = DELVER + #1GNNB;
             DELWKL = DELWKL + DELVER;
             HVTOT6 = #1GLNB + #1GNNB;
             HHTOT6 = #1GMNB + #1JLNB;
             DELBV = #1JONB / 2;
             DELBV = DELBV + #1G7NB;
             DELWK2 = DELWKL + DELBV;
             HVAL6 = HVTOT6 + #1G7NB;
             HHAL6 = HHTOT6 + #1JONB;
              //*** IS KODE BZ NIET BLANK
             If #1A4CD <> *BLANK;
                //***************************************************************
                // IS KODE BZ = B ,VORSTDAGEN EN BZ-DAGEN BESTAAN NIET
                // IS KODE BZ=H/KH/I (HOUT&STOFFERING) : GEEN BZ DAGEN
         OUINON = 'N';            1
         BZBW = #1A4CD;              2
               MDBW001(BZBW:OUINON);
                 If #1A4CD = 'B ' OR #1A4CD = 'H ' OR #1A4CD = 'I ' OR OUINON = 'Y';
                 HVVOR = 0; //VORST=0
                 HHVOR = 0; //HVORST=0
                 HVBZ = 0; //BZ=0
                 HHBZ = 0; //HBZ=0
               Endif; //BZ=B/H/KH
                //***************************************************************
                // BZ-DAGEN --> HULPZONES ALS DE DAGEN OPGEGEVEN WERDEN
               If #1GPNB <> *ZERO OR #1JNNB <> *ZERO; //BZDGN NT 0
                 If #1A4CD <> 'H ' AND #1A4CD <> 'I ' AND #1A4CD <> 'B ' AND OUINON <> 'Y'; //KODE BZ=H
                   HVBZ = #1GPNB; //BZ=0
                   HHBZ = #1JNNB; //HBZ=0
                 Endif;
               ELSE;
                 If #1A4CD <> 'H ' AND #1A4CD <> 'I ' AND #1A4CD <> 'B ' AND OUINON <> 'Y'; //KODE BZ=H
                   HVBZ = HVTOT6; //BZDGN=0
                   HHBZ = HHTOT6; //HBZ=0
                 ENDIF;
               Endif;
                //BZ=METAAL.KODES BZ=A,NA,Z VANAF 15 DGN WKLH HEBBEN DEZE EEN VAST MAANDBDR
                //IS DGN WKLH<15 DAN BZ DGN EN BEDRAG ZELF INVULLEN
               If #1A4CD = 'A ' OR #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = 'M1' OR #1A4CD = 'NA' OR #1A4CD = 'FA' OR #1A4CD = 'FS' OR #1A4CD = '35' OR #1A4CD = '29';

                 If #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = 'M1' OR #1A4CD = '35';
                   DELWKL = HHBZ / 2;
                   DELWKL = DELWKL + HVBZ;
                   DELBZ = HHBZ / 2;
                   DELBZ = DELBZ + HVBZ;
                 ENDIF;
                 If #1A4CD = '29' OR #1A4CD = 'NA';
                   DELBZ = HHBZ / 2;
                   DELBZ = DELBZ + HVBZ;
                 ENDIF;

                 If #1BCST = 'Y'; //DGN/BZ=Y
                   METACH = #1GWNB;
                   METDGN = 99;

                   METAALD(METACH:METDGN);
                     If DELBZ < METDGN;
                     If #1GPNB = *ZERO AND #1JNNB = *ZERO; //VOLLE BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                     Endif;
                     If #1GYNB = *ZERO; //BEDR BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                     Endif;
                     If #1A4CD = 'NA' OR #1A4CD = '29' OR #1A4CD = 'M ' OR #1A4CD = 'M1' OR #1A4CD = '35' OR #1A4CD = '85';
         WUKVCD = '0';                         SWITCH47
                     ENDIF;
                   Endif; //END METDGN
                 Endif; //BZ=Y

               Endif; //BZ=A OF Z
                //DGN BZ > DGN BZ CONTROLERECORD -->ERROR NIET BETALEN (REF.MND=IND.MND)
               If #1GWNB = BYEENB; //ACHT=WKLMAAN
                 DELBZ = HHBZ / 2;
                 DELBZ = DELBZ + HVBZ;
                 If DELBZ > BYEANB; //DGNBZ>MAX BZ
     EvalR   WUJKCD = '1';                         NT BETALEN
                 Endif; //DUS <=MAX BZ
               Endif; //END DATUM AC

             Endif; //END BZ NT BL
              // CASE: WRK.Switch43 is 1
             If WUJKCD = '1'; //*IF
                // Setup message data for message
               ZA0098 = #1GLNB; //VD6
               ZA0099 = #1GMNB; //HD6
               ZA0100 = #1JLNB; //Halve dagen ver
               ZA0101 = #1GNNB; //Volle dagen ver
                // Send message 'Dagen BZ>maximum'
         ZAMSID = 'USR0365';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(31) = '1';                        *
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // CASE: JOB.*USER is RVDS
             If ##USR = 'RVDS'; //*IF
         WUKVCD = '0';                         Switch47
             Endif; //*FI
              // CASE: DTL.Geen dagen/bedrag BZ is Y
             If #1BCST = 'Y'; //*IF
                // CASE: WRK.Switch47 is 1
               If WUKVCD = '1'; //*IF
                  // Setup message data for message
                 ZA0102 = #1JNNB; //Halve dagen BZ
                 ZA0103 = #1GYNB; //Bedrag BZ
                 ZA0104 = #1GPNB; //Volle dagen BZ
                  // Send message 'zelf dagen & bedrag opgev'
         ZAMSID = 'USR0366';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Type kode = 10 : omzetting dgn wklh --> dgn BZ
            // CASE: DTL.Type kode is 10 : conv brugp deeltijds
           If #1A1CD = '10'; //*IF
              // Omz dgn-->dgn BZ : type10 - Wkl betaling  *
     EvalR   WUJKCD = '0';                         SWITCH43
     EvalR   WUKVCD = '0';                         SWITCH47
             HHD6 = #1GMNB;
             HHVERL = #1JLNB;
             HHBV = #1JONB;
             HHTOT6 = #1GMNB + #1JLNB;
             HHAL6 = HHTOT6 + #1JONB;

             If #1A4CD <> *BLANK; //BZKODE INGEV
                //***************************************************************
                // IS KODE BZ = B ,VORSTDAGEN EN BZ-DAGEN BESTAAN NIET
                // IS KODE BZ=H/KH (HOUT&STOFFERING) : GEEN BZ DAGEN
               If #1A4CD = 'B ' OR #1A4CD = 'H ' OR #1A4CD = 'I '; //KODE BZ=B
                 HVVOR = 0; //VORST=0
                 HHVOR = 0; //HVORST=0
                 HVBZ = 0; //BZ=0
                 HHBZ = 0; //HBZ=0
               Endif; //END KOD BZ=B
                // BZ-DAGEN --> HULPZONES ALS DE DAGEN OPGEGEVEN WERDEN
               If #1GPNB <> *ZERO OR #1JNNB <> *ZERO; //BZDGN=0
                 If #1A4CD <> 'B ' AND #1A4CD <> 'H ' AND #1A4CD <> 'I ';
                   HVBZ = #1GPNB;
                   HHBZ = #1JNNB;
                 Endif;
               ELSE;
                 If #1A4CD <> 'H ' AND #1A4CD <> 'I ' AND #1A4CD <> 'B '; //KODE BZ=H
                   HVBZ = HVTOT6; //BZDGN=0
                   HHBZ = HHTOT6; //HBZ=0
                 ENDIF;
               Endif;
                //IS BZ=METAAL BZ=A,NA,Z VANAF 15 HALVE DGN WKLH --> VAST MAANDBEDRAG
                //IS HALVE DGN<15 OF BEDR BZ=0, DAN HALVE BZ DGN EN BDRG ZELF INVULLEN
               If #1A4CD = 'VA' OR #1A4CD = 'Z1' OR #1A4CD = 'M1' OR #1A4CD = 'DA' OR #1A4CD = 'PA' OR #1A4CD = 'PS' OR #1A4CD = '85' OR #1A4CD = '79';
                 HHHHBZ = HHTOT6;
                 If #1A4CD = 'Z1' OR #1A4CD = 'M1' OR #1A4CD = '85' OR #1A4CD = '79' OR #1A4CD = 'DA';
                   HHHHBZ = HHBZ;
                 ENDIF;

                 If #1BCST = 'Y'; //DGN/BZ=Y
                   METACH = #1GWNB;
                   METDGN = 99;

                   METAALD(METACH:METDGN);
                     If HHHHBZ < METDGN;
                     If #1GPNB = *ZERO AND #1JNNB = *ZERO; //VOLLE BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                     Endif;
                     If #1GYNB = *ZERO; //BEDR BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                     Endif;
                     If #1A4CD = 'DA' OR #1A4CD = '79' OR #1A4CD = 'M ' OR #1A4CD = 'M1' OR #1A4CD = '35' OR #1A4CD = '85';
     EvalR   WUKVCD = '0';                         SWITCH47
                     ENDIF;
                   Endif; //END METDGN

                 Endif; //BZ=Y

               Endif; //END VA,Z1,..
                //DGN BZ > DGN BZ CONTROLERECORD -->ERROR NIET BETALEN (REF.MNF=IND.MND)
               If #1GWNB = BYEENB; //ACHT=WKLMAAN
                 DELBZ = HHBZ / 2;
                 DELBZ = DELBZ + HVBZ;
                 If DELBZ > BYEANB; //DGNBZ>MAX BZ
     EvalR   WUJKCD = '1';                         NT BETALEN
                 Endif; //DUS <=MAX BZ
               Endif; //END DATUM AC

             Endif; //END BZ NT BL
              // CASE: WRK.Switch43 is 1
             If WUJKCD = '1'; //*IF
                // Setup message data for message
               ZA0105 = #1GMNB; //HD6
               ZA0106 = #1JLNB; //Halve dagen ver
                // Send message 'Dagen BZ>maximum type03'
         ZAMSID = 'USR0496';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // CASE: JOB.*USER is RVDS
             If ##USR = 'RVDS'; //*IF
         WUKVCD = '0';                         Switch47
             Endif; //*FI
              // CASE: DTL.Geen dagen/bedrag BZ is Y
             If #1BCST = 'Y'; //*IF
                // CASE: WRK.Switch47 is 1
               If WUKVCD = '1'; //*IF
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Type kode = 31/40 : Omzetting dgn wklh --> dgn BZ
            // CASE:
            //  - c2ORc3
            //   !- c2    : DTL.Type wklh. kode is 31 : deelt.opl/stage
            //   !- c3    : DTL.Type wklh. kode is 40 : vestigingsuitkering
            //   '-
           If #1A1CD = '31' OR #1A1CD = '40'; //*IF
              // Omz. dgn --> BZ : type 11 - Wkl bet  *
              // 20 VD6+5 HD6 --> EERST DAGEN OMZETTEN IN EEN HULPZONE-->DELWKL=22,5
     EvalR   WUJKCD = '0';                         SWITCH43
     EvalR   WUKVCD = '0';                         SWITCH47
             HVD6 = #1GLNB;
             HHD6 = #1GMNB;
             HVVERL = #1GNNB;
             HHVERL = #1JLNB;
             HVBV = #1G7NB;
             HHBV = #1JONB;
             DELWKL = #1GMNB / 2;
             DELWKL = DELWKL + #1GLNB;
             DELVER = #1JLNB / 2;
             DELVER = DELVER + #1GNNB;
             DELWKL = DELWKL + DELVER;
             HVTOT6 = #1GLNB + #1GNNB;
             HHTOT6 = #1GMNB + #1JLNB;
             DELBV = #1JONB / 2;
             DELBV = DELBV + #1G7NB;
             DELWK2 = DELWKL + DELBV;
             HVAL6 = HVTOT6 + #1G7NB;
             HHAL6 = HHTOT6 + #1JONB;
              //***************************************************************
             If #1BCCD <> 'P'; //SUBBEROEP NIET P
               If #1A4CD <> *BLANK;
                  // IS KODE BZ = B --> GN VORSTDAGEN SINDS 1/10/91
                 HVVOR = 0; //VORSTDGN=0
                 HHVOR = 0; //HVORST=0
                  // BZ-DAGEN --> HULPZONES ALS DE DAGEN  OPGEGEVEN WERDEN
                 If #1GPNB <> *ZERO OR #1JNNB <> *ZERO; //BZDGN NT 0
                   HVBZ = #1GPNB; //VOL BZ
                   HHBZ = #1JNNB; //HALVE BZ
                 Endif;
                  //IS BZ=A,NA,Z & IS DGN WKL<15 DAN MOETEN DGN BZ&BEDR BZ INGEV ZIJN
                 If #1A4CD = 'A ' OR #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = 'NA' OR #1A4CD = 'FA' OR #1A4CD = '35';

                   If #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = '35';
                     DELWKL = HHBZ / 2;
                     DELWKL = DELWKL + HVBZ;
                   ENDIF;

                   If #1BCST = 'Y'; //DGN/BZ=Y
                     METACH = #1GWNB;
                     METDGN = 99;

                     METAALD(METACH:METDGN);
                       If DELWKL < METDGN;
                       If #1GPNB = *ZERO AND #1JNNB = *ZERO; //VOLLE BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                       Endif;
                       If #1GYNB = *ZERO; //BEDR BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                       Endif;
                     Endif; //END METDGN
                   Endif; //BZ=Y

                 Endif; //END A,..
                  // BZ-DAGEN BEPALEN ALS DE DAGEN NIET OPGEGEVEN WERDEN
                 If #1GPNB = *ZERO AND #1JNNB = *ZERO; //BZDGN=0
                    // BZ DAGEN BOUW (KREDIETDAGEN)
                   If #1A4CD = 'B ' AND #1GWNB >= BYAUDM; //BZ=B
                     HVBZ = HVTOT6; //BZDGN=0
                     HHBZ = HHTOT6; //HBZ=0
                   Endif; //END KOD BZ=B
                    // BZ =H OF KH :HOUT EN STOFFERING --> BZ-DAGEN = WKLHDAGEN
                    //IDEM METAAL BZ=G (CONTROLE MET KREDIET GEBEURT LATER)
                   If #1A4CD = 'I '; //BZ=HOUT EN
                     If WUJRJR = WUJRRR;
                       HVBZ = HVTOT6; //BZDGN=VD6
                       HHBZ = HHTOT6; //HBZ=HD6
                     Endif; //END BZ=H/KH
                   Endif; //END BZ=H/KH

                   If #1A4CD = 'C ' OR #1A4CD = 'CS'; //BZ=METAAL
                     If #1BCST <> 'N'; //BEDRAG BZ<>N
                       HVBZ = HVTOT6; //BZDGN=VD6
                       HHBZ = HHTOT6; //HBZ=HD6
                     ELSE; //GN BZ UITB
                       HVBZ = 0; //BZDGN=VD6
                       HHBZ = 0; //HBZ=HD6
                     ENDIF;
                   Endif; //END BZ=C

                 Endif; //DAGEN BZ=0
                  //**  EINDE BZ DAGEN NIET INGEVULD
                  //**  IS BZ BEDRAG INGEVULD
                 If #1GYNB <> *ZERO; //BZ BEDRAG=0
                   HBEDBZ = #1GYNB;
                 Endif; //END BEDR =0
                  //DGN BZ > DGN BZ CONTROLERECORD -->ERROR NIET BETALEN (REF.MND=IND.MND)
                 If #1GWNB = BYEENB; //ACHT=WKLMAAN
                   DELBZ = HHBZ / 2;
                   DELBZ = DELBZ + HVBZ;
                   If DELBZ > BYEANB; //DGNBZ>MAX BZ
     EvalR   WUJKCD = '1';                         NT BETALEN
                   Endif; //DUS <=MAX BZ
                 Endif; //END DATUM AC

               Endif; //END BZ NT BL
             Endif; //END SUBBEROEP <>P
              // CASE: WRK.Switch43 is 1
             If WUJKCD = '1'; //*IF
                // Setup message data for message
               ZA0107 = #1GLNB; //VD6
               ZA0108 = #1GMNB; //HD6
               ZA0109 = #1JLNB; //Halve dagen ver
               ZA0110 = #1GNNB; //Volle dagen ver
                // Send message 'Dagen BZ>maximum'
         ZAMSID = 'USR0365';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(31) = '1';                        *
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // CASE: WRK.Switch47 is 1
             If WUKVCD = '1'; //*IF
                // Setup message data for message
               ZA0111 = #1JNNB; //Halve dagen BZ
               ZA0112 = #1GYNB; //Bedrag BZ
               ZA0113 = #1GPNB; //Volle dagen BZ
                // Send message 'zelf dagen & bedrag opgev'
         ZAMSID = 'USR0366';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Type kode = 12 : Omzetting dgn wklh --> dgn BZ
            // CASE: DTL.Type kode is 12 :171bis beschutte werk
           If #1A1CD = '12'; //*IF
              // CASE: DTL.*CMD key is CF01
             If *IN01 = '1'; //*IF
                // CASE:
                //  - c1ORc2ORc3ORc4
                //   !- c1    : DTL.VD6 is niet 0
                //   !- c2    : DTL.HD6 is niet 0
                //   !- c3    : DTL.Volle dagen verlof is > 0
                //   !- c4    : DTL.Halve dagen verlof is niet 0
                //   '-
               If #1GLNB <> *ZERO OR #1GMNB <> *ZERO OR #1GNNB > *ZERO OR #1JLNB <> *ZERO; //*IF
         WUEWCH = '1';                         Wrk gebruik F1
         WUCQCH = *BLANK;                         Wrk bedrag besc
         WUCQCH = '0';                         Wrk bedrag besc
         WUCRCH = *BLANK;                         Wrk bedrag TB c
         WUCRCH = '0';                         Wrk bedrag TB c
         WUDHCH = *BLANK;                         Wrk 6 lang refe
         WUDHCH = #1GWNB;                         Wrk 6 lang refe
                 ZQ = *ZERO;
                 WUKE03 = #1AACD + '' + #1AFNB; //Wrk veld 8 posi
                 ZQ = *ZERO;
                 WUU3CF = WUKE03 + '' + WUDHCH; //wrk veld 14 pos
         WUDICH = #1GLNB;                         Wrk veld 2 posi
         WUDJCH = #1GMNB;                         Wrk veld 2 posi
                 ZQ = *ZERO;
                 WUDKCH = WUDICH + '' + WUDJCH; //Wrk 4 lang dl1
         WUDICH = #1GNNB;                         Wrk veld 2 posi
         WUDJCH = #1JLNB;                         Wrk veld 2 posi
                 ZQ = *ZERO;
                 WUDLCH = WUDICH + '' + WUDJCH; //Wrk 4 lang dl2
                 ZQ = *ZERO;
                 WUKE03 = WUDKCH + '' + WUDLCH; //Wrk veld 8 posi
                  // Simulatie type 12 - Wkl betaling  *
                 //Simulatie type
                 //wrk vanaf menu
                 //wrk veld 14 pos
                 //Wrk veld 8 posi
                 //Wrk bedrag besc
                 //Wrk bedrag TB c

                 LXYBPVR(W0RTN:WQ0311:WQ0312:WQ0313:WQ0314:WQ0315);
                   If *IN90 = '1';
                    // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXYBPVR';
                    // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                   EXSR ZASNMS;
                 Endif;
                  // Error detected?
                 If W0RTN <> *BLANK;
                   *In99 = *On;
                 Endif;
               ELSE;
                  // CASE: *OTHERWISE
                  // Send message 'Type 12 : eerst dagen inv'
         ZAMSID = 'USR5244';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
             Endif; //*FI
             YRSW00 = 1;
             ZQ = 5;
             If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
             ELSE;
               WUEXCH = %Subst(#1DOCD:ZQ:YRSW00); //Wrk pos5 anc
     C   90              MOVEL     'Y2U0510'     W0RTN
             Endif;
              // CASE:
              //  - c1ORc2ORc3
              //   !- c1    : WRK.Wrk pos5 anc is 3
              //   !- c2    : DTL.Volle dagen verlof is niet 0
              //   !- c3    : DTL.Halve dagen verlof is niet 0
              //   '-
             If WUEXCH = '3' OR #1GNNB <> *ZERO OR #1JLNB <> *ZERO; //*IF
                // CASE: WRK.Wrk gebruik F1 simul.T12 is 0
               If WUEWCH = '0'; //*IF
                  // Send message 'F1 gebruiken voor type12'
         ZAMSID = 'USR5243';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Omz. dgn --> BZ : type 12 - Wkl bet  *
     EvalR   WUJKCD = '0';                         SWITCH43
     EvalR   WUKVCD = '0';                         SWITCH47
             HVD6 = #1GLNB;
             HHD6 = #1GMNB;
             HVVERL = #1GNNB;
             HHVERL = #1JLNB;
             HVBV = #1G7NB;
             HHBV = #1JONB;
             DELWKL = #1GMNB / 2;
             DELWKL = DELWKL + #1GLNB;
             DELVER = #1JLNB / 2;
             DELVER = DELVER + #1GNNB;
             DELWKL = DELWKL + DELVER;
             HVTOT6 = #1GLNB + #1GNNB;
             HHTOT6 = #1GMNB + #1JLNB;
             DELBV = #1JONB / 2;
             DELBV = DELBV + #1G7NB;
             DELWK2 = DELWKL + DELBV;
             HVAL6 = HVTOT6 + #1G7NB;
             HHAL6 = HHTOT6 + #1JONB;
              //***************************************************************
             If #1A4CD <> *BLANK; //BZ KODE INGE
                // IS KODE BZ = B --> GN VORSTDAGEN SINDS 1/10/91
               If #1A4CD = 'B '; //KODE BZ=B
                 HVVOR = 0; //VORSTDGN=0
                 HHVOR = 0; //HVORST=0
               Endif; //END KOD BZ=B
                // BZ-DAGEN --> HULPZONES ALS DE DAGEN  OPGEGEVEN WERDEN
               If #1GPNB <> *ZERO OR #1JNNB <> *ZERO; //BZDGN=0
                 HVBZ = #1GPNB; //VORSTDGN=0
                 HHBZ = #1JNNB; //HVORST=0
               Endif;
                //IS BZ=A,NA,Z & IS DGN WKL<15 DAN MOETEN DGN & BEDR BZ INGEV ZIJN
               If #1A4CD = 'A ' OR #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = 'NA' OR #1A4CD = 'FA' OR #1A4CD = 'FS' OR #1A4CD = '35';

                 If #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = '35';
                   DELWKL = HHBZ / 2;
                   DELWKL = DELWKL + HVBZ;
                 ENDIF;

                 If #1BCST = 'Y'; //DGN/BZ=Y
                   METACH = #1GWNB;
                   METDGN = 99;

                   METAALD(METACH:METDGN);
                     If DELWKL < METDGN;
                     If #1GPNB = *ZERO AND #1JNNB = *ZERO; //VOLLE BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                     Endif;
                     If #1GYNB = *ZERO; //BEDR BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                     Endif;
                   Endif; //END METDGN
                 Endif; //BZ=Y

               Endif; //END A,...
                //***************************************************************
                //** BZ-DAGEN BEPALEN ALS DE DAGEN NIET OPGEGEVEN WERDEN
               If #1GPNB = *ZERO AND #1JNNB = *ZERO; //BZDGN=0
                  //***************************************************************
                  // BZ DAGEN BOUW (KREDIETDAGEN)
                 If #1A4CD = 'B ' AND #1GWNB >= BYAUDM; //BZ=B
                   HVBZ = HVTOT6; //BZDGN=0
                   HHBZ = HHTOT6; //HBZ=0
                 Endif; //END KOD BZ=B
                  //***************************************************************
                  // BZ = H OF KH : HOUT EN STOFFERING --> BZ-DAGEN = WKLHDAGEN
                  // IDEM METAAL BZ=C (CONTROLE MET KREDIET GEBEURT LATER)
                 If #1A4CD = 'I ' OR #1A4CD = 'C ' OR #1A4CD = 'CS'; //BZ=HOUT EN
                   If WUJRJR = WUJRRR;
                     HVBZ = HVTOT6; //BZDGN=VD6
                     HHBZ = HHTOT6; //HBZ=HD6
                   Endif; //END BZ=H/KH
                 Endif; //END BZ=H/KH

               Endif; //DAGEN BZ=0
                //**  EINDE BZ DAGEN NIET INGEVULD
                //**  IS BZ BEDRAG INGEVULD
               If #1GYNB <> *ZERO; //BZ BEDRAG=0
                 HBEDBZ = #1GYNB;
               Endif; //END BEDR =0
                //DGN BZ > DGN BZ CONTROLERECORD -->ERROR NIET BETALEN (REF.MND=IND.MND)
               If #1GWNB = BYEENB; //ACHT=WKLMAAN
                 DELBZ = HHBZ / 2;
                 DELBZ = DELBZ + HVBZ;
                 If DELBZ > 30; //DGNBZ>30
     EvalR   WUJKCD = '1';                         NT BETALEN
                 Endif; //DUS <=MAX BZ
               Endif; //END DATUM AC

             Endif; //END BZ NT BL
              // CASE: WRK.Switch43 is 1
             If WUJKCD = '1'; //*IF
                // Setup message data for message
               ZA0114 = #1GLNB; //VD6
               ZA0115 = #1GMNB; //HD6
               ZA0116 = #1JLNB; //Halve dagen ver
               ZA0117 = #1GNNB; //Volle dagen ver
                // Send message 'Dagen BZ>maximum'
         ZAMSID = 'USR0365';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(31) = '1';                        *
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // CASE: WRK.Switch47 is 1
             If WUKVCD = '1'; //*IF
                // Setup message data for message
               ZA0118 = #1JNNB; //Halve dagen BZ
               ZA0119 = #1GYNB; //Bedrag BZ
               ZA0120 = #1GPNB; //Volle dagen BZ
                // Send message 'zelf dagen & bedrag opgev'
         ZAMSID = 'USR0366';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Type kode = 15 : Omzetting dgn wklh/maandbedrag BZ
            // CASE: DTL.Type kode is 15 : grensarbeiders
           If #1A1CD = '15'; //*IF
              // Omz. dgn,dagbedrag:type15 - Wkl bet  *
             HVD6 = #1GLNB;
             HHD6 = #1GMNB;
             HVVERL = #1GNNB;
             HHVERL = #1JLNB;
             HVBV = #1G7NB;
             HHBV = #1JONB;
             DELWKL = #1GMNB / 2;
             DELWKL = DELWKL + #1GLNB;
             DELVER = #1JLNB / 2;
             DELVER = DELVER + #1GNNB;
             DELWKL = DELWKL + DELVER;
             HVTOT6 = #1GLNB + #1GNNB;
             HHTOT6 = #1GMNB + #1JLNB;
             DELBV = #1JONB / 2;
             DELBV = DELBV + #1G7NB;
             DELWK2 = DELWKL + DELBV;
             HVAL6 = HVTOT6 + #1G7NB;
             HHAL6 = HHTOT6 + #1JONB;
              //GN BZ:ENKEL DAGBEDR=(IN FEITE MAANDBEDR) INVULLEN IN ZONE HBEDBZ
             If #1A4CD <> *BLANK;
               HBEDBZ = 0;
             Endif;
             If #1DDNB <> *ZERO; //DAGBEDR INGE
               HBEDBZ = #1DDNB;
             Endif;
           Endif; //*FI
            // Type kode = 16+44->49 : Omzetting dgn wklh
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5ORc6ORc7
            //   !- c1    : DTL.Type wklh. kode is 16 : voltijds opleiding
            //   !- c2    : DTL.Type wklh. kode is 44
            //   !- c3    : DTL.Type wklh. kode is 45
            //   !- c4    : DTL.Type wklh. kode is 46
            //   !- c5    : DTL.Type wklh. kode is 47
            //   !- c6    : DTL.Type wklh. kode is 48
            //   !- c7    : DTL.Type wklh. kode is 49
            //   '-
           If #1A1CD = '16' OR #1A1CD = '44' OR #1A1CD = '45' OR #1A1CD = '46' OR #1A1CD = '47' OR #1A1CD = '48' OR #1A1CD = '49'; //*IF
              // Omzet dgn type 16 : gn BZ - Wkl betaling  *
     EvalR   WUJKCD = '0';                         SWITCH43
     EvalR   WUKVCD = '0';                         SWITCH47
             HVD6 = #1GLNB;
             HHD6 = #1GMNB;
             HVVERL = #1GNNB;
             HHVERL = #1JLNB;
             HVBV = #1G7NB;
             HHBV = #1JONB;
             DELWKL = #1GMNB / 2;
             DELWKL = DELWKL + #1GLNB;
             DELVER = #1JLNB / 2;
             DELVER = DELVER + #1GNNB;
             DELWKL = DELWKL + DELVER;
             HVTOT6 = #1GLNB + #1GNNB;
             HHTOT6 = #1GMNB + #1JLNB;
             DELBV = #1JONB / 2;
             DELBV = DELBV + #1G7NB;
             DELWK2 = DELWKL + DELBV;
             HVAL6 = HVTOT6 + #1G7NB;
             HHAL6 = HHTOT6 + #1JONB;
              //****************************************************************
             If #1BCCD <> 'P'; //SUBBEROEP NIET P
               If #1A4CD <> *BLANK; //BZ KODE INGE
                  //    IS KODE BZ = B --> GN VORSTDAGEN SINDS 1/10/91
                 HVVOR = 0; //VORSTDGN=0
                 HHVOR = 0; //HVORST=0
                  //  BZ-DAGEN --> HULPZONES ALS DE DAGEN OPGEGEVEN WERDEN
                 If #1GPNB <> *ZERO OR #1JNNB <> *ZERO; //BZDGN NT 0
                   HVBZ = #1GPNB; //VOL BZ
                   HHBZ = #1JNNB; //HALVE BZ
                 Endif;
                  // IS BZ=A,NA,Z & IS DGN WKL<15 DAN MOETEN DGN&BEDR BZ INGEV. ZIJN
                 If #1A4CD = 'A ' OR #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = 'NA' OR #1A4CD = 'FA' OR #1A4CD = 'FS' OR #1A4CD = '35';

                   If #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = '35';
                     DELWKL = HHBZ / 2;
                     DELWKL = DELWKL + HVBZ;
                   ENDIF; //Z,M

                   If #1BCST = 'Y'; //DGN/BZ=Y
                     METACH = #1GWNB;
                     METDGN = 99;

                     METAALD(METACH:METDGN);
                       If DELWKL < METDGN;
                       If #1GPNB = *ZERO AND #1JNNB = *ZERO; //VOLLE BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                       Endif;
                       If #1GYNB = *ZERO; //BEDR BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                       Endif;
                     Endif; //END METDGN
                   Endif; //BZ=Y

                 Endif; //A,Z,...
                  //   BZ-DAGEN BEPALEN ALS DE DAGEN NIET OPGEGEVEN WERDEN
                 If #1GPNB = *ZERO AND #1JNNB = *ZERO; //BZDGN=0
                    //    BZ DAGEN BOUW (KREDIETDAGEN)
                   If #1A4CD = 'B ' AND #1GWNB >= BYAUDM; //BZ=B
                     HVBZ = HVTOT6; //BZDGN=0
                     HHBZ = HHTOT6; //HBZ=0
                   Endif; //END KOD BZ=B
                    // BZ=H OF KH :HOUT EN STOFFERING --> BZ-DAGEN = WKLHDAGEN
                    // IDEM METAAL BZ=G (CONTROLE MET KREDIET GEBEURT LATER)
                   If #1A4CD = 'I ' OR #1A4CD = 'C ' OR #1A4CD = 'CS'; //BZ=HOUT EN
                     If WUJRJR = WUJRRR;
                       HVBZ = HVTOT6; //BZDGN=VD6
                       HHBZ = HHTOT6; //HBZ=HD6
                     Endif; //END BZ=H/KH
                   Endif; //END BZ=H/KH

                 Endif; //DAGEN BZ=0
                  //    EINDE BZ DAGEN NIET INGEVULD
                  //    IS BZ BEDRAG INGEVULD
                 If #1GYNB <> *ZERO; //BZ BEDRAG=0
                   HBEDBZ = #1GYNB;
                 Endif; //END BEDR =0
                  //DGN BZ > DGN BZ CONTROLERECORD -->ERROR NIET BETALEN (REF.MND=IND.MND)
                 If #1GWNB = BYEENB; //ACHT=WKLMAAN
                   DELBZ = HHBZ / 2;
                   DELBZ = DELBZ + HVBZ;
                   If DELBZ > BYEANB; //DGNBZ>MAX BZ
     EvalR   WUJKCD = '1';                         NT BETALEN
                   Endif; //DUS <=MAX BZ
                 Endif; //END DATUM AC

               Endif; //END BZ NT BL
             Endif; //END SUBBEROEP<>P
              // CASE: WRK.Switch43 is 1
             If WUJKCD = '1'; //*IF
                // Setup message data for message
               ZA0121 = #1GLNB; //VD6
               ZA0122 = #1GMNB; //HD6
               ZA0123 = #1JLNB; //Halve dagen ver
               ZA0124 = #1GNNB; //Volle dagen ver
                // Send message 'Dagen BZ>maximum'
         ZAMSID = 'USR0365';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(31) = '1';                        *
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // CASE: WRK.Switch47 is 1
             If WUKVCD = '1'; //*IF
                // Setup message data for message
               ZA0125 = #1JNNB; //Halve dagen BZ
               ZA0126 = #1GYNB; //Bedrag BZ
               ZA0127 = #1GPNB; //Volle dagen BZ
                // Send message 'zelf dagen & bedrag opgev'
         ZAMSID = 'USR0366';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Type kode = 17+34-->39 : Omzetting dgn wklh
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5ORc6ORc7
            //   !- c1    : DTL.Type wklh. kode is 17 : deeltijds opleiding
            //   !- c2    : DTL.Type wklh. kode is 34
            //   !- c3    : DTL.Type wklh. kode is 35
            //   !- c4    : DTL.Type wklh. kode is 36
            //   !- c5    : DTL.Type wklh. kode is 37
            //   !- c6    : DTL.Type wklh. kode is 38
            //   !- c7    : DTL.Type wklh. kode is 39
            //   '-
           If #1A1CD = '17' OR #1A1CD = '34' OR #1A1CD = '35' OR #1A1CD = '36' OR #1A1CD = '37' OR #1A1CD = '38' OR #1A1CD = '39'; //*IF
              // Omzet dgn type 17 : gn BZ - Wkl betaling  *
     EvalR   WUJKCD = '0';                         SWITCH43
     EvalR   WUKVCD = '0';                         SWITCH47
             HVD6 = #1GLNB;
             HHD6 = #1GMNB;
             HVVERL = #1GNNB;
             HHVERL = #1JLNB;
             HVBV = #1G7NB;
             HHBV = #1JONB;
             DELWKL = #1GMNB / 2;
             DELWKL = DELWKL + #1GLNB;
             DELVER = #1JLNB / 2;
             DELVER = DELVER + #1GNNB;
             DELWKL = DELWKL + DELVER;
             HVTOT6 = #1GLNB + #1GNNB;
             HHTOT6 = #1GMNB + #1JLNB;
             DELBV = #1JONB / 2;
             DELBV = DELBV + #1G7NB;
             DELWK2 = DELWKL + DELBV;
             HVAL6 = HVTOT6 + #1G7NB;
             HHAL6 = HHTOT6 + #1JONB;
              //***************************************************************
             If #1BCCD <> 'P'; //SUBBEROEP <> P
               If #1A4CD <> *BLANK;
                  //*** IS KODE BZ = B --> GN VORSTDAGEN SINDS 1/10/91
                 HVVOR = 0; //VORSTDGN=0
                 HHVOR = 0; //HVORST=0
                  //** BZ-DAGEN --> HULPZONES ALS DE DAGEN  OPGEGEVEN WERDEN
                 If #1GPNB <> *ZERO OR #1JNNB <> *ZERO; //BZDGN NT 0
                   HVBZ = #1GPNB; //VOL BZ
                   HHBZ = #1JNNB; //HALVE BZ
                 Endif;
                  // IS BZ=A,NA,Z & DGN WKL<19 DAN MOETEN DGN&BEDR BZ INGEVULD ZIJN
                 If #1A4CD = 'A ' OR #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = 'NA' OR #1A4CD = 'FA' OR #1A4CD = 'FS' OR #1A4CD = '35';

                   If #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = '35';
                     DELWKL = HHBZ / 2;
                     DELWKL = DELWKL + HVBZ;
                   ENDIF; //Z,M

                   If #1BCST = 'Y'; //DGN/BZ=Y
                     METACH = #1GWNB;
                     METDGN = 99;

                     METAALD(METACH:METDGN);
                       If DELWKL < METDGN;
                       If #1GPNB = *ZERO AND #1JNNB = *ZERO; //VOLLE BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                       Endif;
                       If #1GYNB = *ZERO; //BEDR BZ
     EvalR   WUKVCD = '1';                         SWITCH47
                       Endif;
                     Endif; //END METDGN
                   Endif; //BZ=Y

                 Endif; //Z,A,...
                  //** BZ-DAGEN BEPALEN ALS DE DAGEN NIET OPGEGEVEN WERDEN
                 If #1GPNB = *ZERO AND #1JNNB = *ZERO; //BZDGN=0
                    //*** BZ DAGEN BOUW (KREDIETDAGEN)
                   If #1A4CD = 'B ' AND #1GWNB >= BYAUDM; //BZ=B
                     HVBZ = HVTOT6; //BZDGN=0
                     HHBZ = HHTOT6; //HBZ=0
                   Endif; //END KOD BZ=B
                    // BZ =H OF KH :HOUT EN STOFFERING --> BZ-DAGEN = WKLHDAGEN
                    // IDEM METAAL BZ=G (CONTROLE MET KREDIET GEBEURT LATER)
                   If #1A4CD = 'I ' OR #1A4CD = 'C ' OR #1A4CD = 'CS'; //BZ=HOUT EN
                     If WUJRJR = WUJRRR;
                       HVBZ = HVTOT6; //BZDGN=VD6
                       HHBZ = HHTOT6; //HBZ=HD6
                     Endif; //END BZ=H/KH
                   Endif; //END BZ=H/KH

                 Endif; //DAGEN BZ=0
                  //**  EINDE BZ DAGEN NIET INGEVULD
                  //**  IS BZ BEDRAG INGEVULD
                 If #1GYNB <> *ZERO; //BZ BEDRAG=0
                   HBEDBZ = #1GYNB;
                 Endif; //END BEDR =0
                  //DGN BZ > DGN BZ CONTROLERECORD -->ERROR NIET BETALEN (REF.MND=IND.MND)
                 If #1GWNB = BYEENB; //ACHT=WKLMAAN
                   DELBZ = HHBZ / 2;
                   DELBZ = DELBZ + HVBZ;
                   If DELBZ > BYEANB; //DGNBZ>MAX BZ
     EvalR   WUJKCD = '1';                         NT BETALEN
                   Endif; //DUS <=MAX BZ
                 Endif; //END DATUM AC

               Endif; //END BZ NT BL
             Endif; //END SUBBEROEP <> P
              // CASE: WRK.Switch43 is 1
             If WUJKCD = '1'; //*IF
                // Setup message data for message
               ZA0128 = #1GLNB; //VD6
               ZA0129 = #1GMNB; //HD6
               ZA0130 = #1JLNB; //Halve dagen ver
               ZA0131 = #1GNNB; //Volle dagen ver
                // Send message 'Dagen BZ>maximum'
         ZAMSID = 'USR0365';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(31) = '1';                        *
         @I1(32) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // CASE: WRK.Switch47 is 1
             If WUKVCD = '1'; //*IF
                // Setup message data for message
               ZA0132 = #1JNNB; //Halve dagen BZ
               ZA0133 = #1GYNB; //Bedrag BZ
               ZA0134 = #1GPNB; //Volle dagen BZ
                // Send message 'zelf dagen & bedrag opgev'
         ZAMSID = 'USR0366';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Type kode = 23/33/27/53/54/55 : Omzetting dgn wklh
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5ORc6
            //   !- c1    : DTL.Type wklh. kode is 33 : studenten + wklh
            //   !- c2    : DTL.Type wklh. kode is 23
            //   !- c3    : DTL.Type wklh. kode is 27 = opvanguitkering
            //   !- c4    : DTL.Type wklh. kode is 53
            //   !- c5    : DTL.Type wklh. kode is 54
            //   !- c6    : DTL.Type wklh. kode is 55
            //   '-
           If #1A1CD = '33' OR #1A1CD = '23' OR #1A1CD = '27' OR #1A1CD = '53' OR #1A1CD = '54' OR #1A1CD = '55'; //*IF
              // Omzet dgn type 33 : gn BZ - Wkl betaling  *
             EXSR REG27;
           Endif; //*FI
            // Dok nt A'pen+rivierarb : omzetting dagen --> BZ (BZ=K;rivier BZ=B
            // CASE: DTL.Beroep kode is 09 : Dok A'pen
           If #1BACD = '09'; //*IF
              // Omz dagen vr dok nt A'pen - Wkl bet  *
     EvalR   WUJJCD = '0';                         SWITCH42
     EvalR   WUJKCD = '0';                         SWITCH43
             If #1A1CD <> '02';
               If #1A1CD <> '04';
                 If #1A1CD <> '06';
                   HVD5 = #1GGNB;
                   HHD5 = #1GHNB;
                 ENDIF;
               ENDIF;
             ENDIF;
             HVVERL = #1GNNB;
             HHVERL = #1JLNB;
             HVBV = #1G7NB;
             HHBV = #1JONB;
             If #1A1CD <> '02';
               If #1A1CD <> '04';
                 If #1A1CD <> '06';
                   HVTOT5 = #1GGNB + #1GNNB;
                   HHTOT5 = #1GHNB + #1JLNB;
                   HVAL5 = HVTOT5 + #1G7NB;
                   HHAL5 = HHTOT5 + #1JONB;
                 ENDIF;
               ENDIF;
             ENDIF;
             DELWK2 = HHAL5 / 2;
             DELWK2 = DELWK2 + HVAL5;
              //DGN VD5+HD5 >VD5 CONTROLERECORD-->ERROR NIET BETALEN (REF.MND=IND.MND)
             If #1GWNB = BYEENB AND DELWK2 > BYD7NB; //ACHT=WKLMAAN
     EvalR   WUJJCD = '1';                         NT BETALEN
             Endif; //END DATUM AC
              // BZ-DAGEN --> HULPZONES ALS DE DAGEN  OPGEGEVEN WERDEN
             If #1A4CD = 'K '; //BZ=DOK GENT
               HVBZ = #1GPNB; //BZ=
               HHBZ = #1JNNB; //HBZ=
             Endif; //END BZ=C
              // RIVIERARBEIDERS HEBBEN BZ=BA EN SUBKODE BEROEP=5
             If #1A4CD = 'BA'; //BZ=BRANDSTOFFEN
               If #1GPNB = 0 AND #1JNNB = 0 AND WUJRJR = WUJRRR; //VOLLE BZ
                 HVBZ = HVTOT5; //BZ=
                 HHBZ = HHTOT5; //HBZ=
               Endif; //END BZDGN=0
               If #1GPNB <> 0 OR #1JNNB <> 0;
                 HVBZ = #1GPNB; //BZ=
                 HHBZ = #1JNNB; //HBZ=
               Endif;
             Endif; //END BZ=BA
              //  IS BZ BEDRAG INGEVULD
             If #1GYNB <> *ZERO; //BZ BEDRAG=0
               HBEDBZ = #1GYNB;
             Endif; //END BEDR =0
              //DGN BZ > DGN BZ CONTROLERECORD-->ERROR NIET BETALEN (REF.MND=IND.MND)
             DELBZ = HHBZ / 2; //HBZ/2
             DELBZ = DELBZ + HVBZ;
             If #1GWNB = BYEENB AND DELBZ > BYEANB; //ACHT=WKLMAAN
     EvalR   WUJKCD = '1';                         NT BETALEN
             Endif; //DUS <=MAX BZ
              // CASE: WRK.Switch42 is 1
             If WUJJCD = '1'; //*IF
                // Setup message data for message
               ZA0135 = #1GGNB; //VD5
               ZA0136 = #1GHNB; //HD5
                // Send message 'Wklhdgn>max type01:DOK'
         ZAMSID = 'USR0493';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(35) = '1';                        *
         @I1(36) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // CASE: WRK.Switch43 is 1
             If WUJKCD = '1'; //*IF
                // Setup message data for message
               ZA0137 = #1GGNB; //VD5
               ZA0138 = #1GHNB; //HD5
                // Send message 'Dagen BZ>max type01:rivie'
         ZAMSID = 'USR0494';
               EXSR ZASNMS;
               *In99 = *On;
         @I1(35) = '1';                        *
         @I1(36) = '1';                        *

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // controle VW versus activa - Wkl betaling  *
         WUWNCI = '0';            1
         WUWOCI = '0';            1
         WUWPCI = '0';            1
            // Er wordt VW betaald en in RM is reeds activa betaald
            // CASE: WRK.Switch333 is 2
           MDACTVW(#1AACD:#1AFNB:RMPARM:#1A1CD:HVTOT6:HHTOT6:WUWNCI:WUWOCI:WUWPCI);
             If WUWPCI = '2';
              // Send message 'Wkl1190 : reeds werkuitke'
         ZAMSID = 'USR6048';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // CASE: DTL.Subberoep kode is niet P
           If #1BCCD <> 'P'; //*IF
              // Dagen > maximum? 05/2006 - Wkl betaling  *
         WUOWCD = '0';
         WUTLCG = '0';            1
         WUAQCK = '0';            1
             RMPAR = #1GWNB;
             DGNRBD = 0; //DAGEN REEDS BETAALD
             DGNZBV = 0; //DAGEN REEDS BET+BV
             MAXR6 = 27;
             MAXR5 = 23;
             HHA65 = 0;
             HVA65 = 0;
             D54RBD = 0; //DAGEN REEDS BETAALD
             D54ZBV = 0; //DAGEN REEDS BET+BV
             M54R6 = 27;
             M54R5 = 23;
             D54ZBV = 0; //DAGEN REEDS BET+BV
             D02RBD = 0; //DAGEN REEDS BETAALD
             D02ZBV = 0; //DAGEN REEDS BET+BV
             M02R6 = 27;
             M02R5 = 23;
             D02ZBV = 0; //DAGEN REEDS BET+BV
              //          A1A1CD    IFEQ '00' OR 71 72 73 97
             If A1A1CD = '?X';
               //71,... OOK MEETELLEN
               //AFD
               //LIDNR
               //REF.MND
               //TOTAAL REEDS BETAALD
             MDTOTDGN(#1AACD:#1AFNB:RMPAR:DGNRBD:MAXR6:MAXR5);
               ELSE;
               //71,.. NT MEETELLEN
               //AFD
               //LIDNR
               //REF.MND
               //TOTAAL REEDS BETAALD
               MDTOTDG5(#1AACD:#1AFNB:RMPAR:DGNRBD:MAXR6:MAXR5:DGNZBV);
                 DGNRBD = DGNZBV;
             ENDIF;
             If #1A1CD = '02' OR #1A1CD = '06' OR #1A1CD = '04' OR #1A1CD = '21' OR #1A1CD = '22' OR #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58';
               //KNELPUNTBEROEPEN
               //AFD
               //LIDNR
               //REF.MND
               //TOTAAL REEDS BETAALD
               MDTOTD54(#1AACD:#1AFNB:RMPAR:D54RBD:M54R6:M54R5:D54ZBV);
                 D54RBD = D54ZBV;
               If D54ZBV > 0;
                 DGNRBD = DGNRBD - D54ZBV;
               ENDIF;
             ENDIF;
             If #1A1CD = '54' OR #1A1CD = '55';
               //KNELPUNTBEROEPEN
               //AFD
               //LIDNR
               //REF.MND
               //TOTAAL REEDS BETAALD
               MDTOTDTW(#1AACD:#1AFNB:RMPAR:D02RBD:M02R6:M02R5:D02ZBV);
                 D02RBD = D02ZBV;
               If D02ZBV > 0;
                 DGNRBD = DGNRBD - D02ZBV;
               ENDIF;
             ENDIF;

             If #1A1CD = '02' OR #1A1CD = '06';
                // WKL 3193 MAX 30    04/2020 EN 05/2020 MAX 31DGN
                //                    Z-ADD31        MAXR6
               MAXR6 = 30;
               If #1GWNB = 202004 OR #1GWNB = 202005;
                 MAXR6 = 31;
               ENDIF;
             ENDIF;
             If #1A1CD = '05' OR #1A1CD = '57';
               MAXR6 = 33;
             ENDIF;
             If #1A1CD = '12';
               MAXR6 = 30;
             ENDIF;
             If #1A1CD = '27';
               MAXR6 = 27.5;
             ENDIF;
             If #1A1CD = '03' OR #1A1CD = '10';
               MAXR6B = WKREG * 4.7;
     EvalR   MAXR6N = MAXR6B;            1 0
               MAXR6C = MAXR6B;
               If MAXR6N > 0;
                 MAXR6C = MAXR6C + 1;
               ENDIF;
               MAXR6 = MAXR6C / 2;
             ENDIF; //03/10
              // BEPAAL TOTAAL VAN BETAALSCHERM ZELF
             HHA65 = HHAL6 + HHAL5;
             HVA65 = HHA65 / 2;
             HVA65 = HVA65 + HVAL6;
             HVA65 = HVA65 + HVAL5;
             HVA65 = HVA65 + #1GXNB; //TOT DGN BETAALSCHERM
              // DAGEN REEDS BETAALD OPGEHAALD UIT C2-OVERZICHT BIJTELLEN
             HVA65 = HVA65 + DGNRBD;
              // VERGELIJK VOLGENS AFD/BZ CODE
             If #1AACD = '04' OR #1A4CD = 'K '; //5 DAGEN REGIME
               If HVA65 > MAXR5;
         WUOWCD = '1';
               ENDIF;
             ELSE; //6 DAGEN REGIME
               If HVA65 > MAXR6;
         WUOWCD = '1';
               ENDIF;
                //C105DAN DAGEN = MAX VAND E MAAND
               If WUZDCJ = 'Y';
                 If HVA65 <> MAXR6;
         WUAQCK = '1';
                   If #1A1CD = '03' OR #1A1CD = '10' OR #1A1CD = '31';
         WUAQCK = '0';
                   ENDIF;
                 ENDIF;
               ENDIF;
               If #1A4CD = 'NA' OR #1A4CD = 'DA' OR #1A4CD = '29' OR #1A4CD = '79';
                 If HVA65 = MAXR6;
                   If #1MQCE <> *BLANK;
                     If #1G7NB = 0 AND #1JONB = 0;
         WUTLCG = '1';
                     ENDIF; //NIET NUL
                   ENDIF; //*NT BLANK
                 ENDIF; //MAXR6
                 If HVA65 < MAXR6;
                   If #1MQCE = *BLANK;
         WUTLCG = '2';
                   ENDIF; //BLANK
                 ENDIF; //MAXR6
                 If #1G7NB > 0 OR #1JONB > 0;
                   If #1MQCE = *BLANK;
         WUTLCG = '2';
                   ENDIF; //BLANK
                 ENDIF; //BV/HBV INGEVULD
               ENDIF; //NA/DA
             ENDIF;

             If HVAL6 = 0 AND HVAL5 = 0 AND HHAL6 = 0 AND HHAL5 = 0 AND #1GXNB = 0;
               If #1HPNB > 0; //BEDRAG WKLH
         WUOWCD = '0';
               ENDIF;
             ENDIF;
           Endif; //*FI
            // Sw80=1 #dgn betaalscherm + #dgn reeds betaald > maximum/maand
            // CASE: WRK.Switch80 is = 1
           If WUOWCD = '1'; //*IF
              // Send message 'Aantal dagen > maximum to'
         ZAMSID = 'USR4287';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
            // Switch C105 : dagen >> maximum van deze maand
            // CASE: WRK.Switch c105 is 1
           If WUAQCK = '1'; //*IF
              // Send message 'C105: dgn <> max INFO'
         ZAMSID = 'USR6613';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // Sw501=1 : code werkhervatting kan niet : dagen=maximum per maand
            // CASE: WRK.switch501 is 1
           If WUTLCG = '1'; //*IF
              // Send message 'Metaal werkhervatting : i'
         ZAMSID = 'USR4985';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Sw501=2 : code werkhervatting leeg : dagen<maximum per maand
            // CASE: WRK.switch501 is 2
           If WUTLCG = '2'; //*IF
              // Send message 'Metaal werkhervatting:inf'
         ZAMSID = 'USR4986';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
            // Contr. dgn BZ <= krediet - Wkl bet  *
     EvalR   WUPTCD = '0';                         SW87 JRBZ<>JRAC
     EvalR   WUTQCF = '0';            1            BOUW ONTSLAG
         WUOWCD = '0';                         SW80
         TYPCON = 'N';            1

         OUINON = 'N';            1
         BZBW = #1A4CD;              2

           MDBW001(BZBW:OUINON);
             If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06' OR #1A1CD = '18' OR #1A1CD = '21' OR #1A1CD = '22' OR #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58' OR #1A1CD = '00';
         TYPCON = 'Y';
           ENDIF;
            // BZ KODES MET ONBEPERKT KREDIET : IS JAAR BZ REEDS AANGEPAST??
           If #1A4CD <> *BLANK; //KODE BZ INGE
             If HVBZ = 0 AND HHBZ = 0 AND HVBZ1B = 0 AND HHBZ1B = 0 AND HVBZ2B = 0 AND HHBZ2B = 0; //GN BZ
     C                   GOTO      ENDCBZ
             Endif;
             TOTBZ = HHBZ / 2; //HBZ-->VOL BZ
             TOTBZ = TOTBZ + HVBZ; //DGBZ&HDGBZ
             If #1A4CD = 'B ' OR #1A4CD = 'BB' OR OUINON = 'Y'; //KODE BZ = B
                // CORONA OVERMACHT NIET AFTREKKEN VAN KREDIET
               BWOVVO = 0; //VOLLE DAGEN
               BWOVHA = 0; //HALVE DAGEN
               BWTOTO = 0;
               If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06' OR #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58';
                 BWOVVO = 0; //VOLLE DAGEN
                 BWOVHA = 0; //HALVE DAGEN
                 BWTOTO = 0;
                 RMFORM = #1GWNB;
                 //AFD
                 //LIDNR
                 //VOLLE DAGEN OVERMACH
                 //HALVE DAGEN
                 //TOTAAL BZ OVERMACHT
               MDBOUW9(#1AACD:#1AFNB:RMFORM:#1A4CD:BWOVVO:BWOVHA:BWTOTO);
                 ENDIF;
                // WKLH.MND >= BEGINDATUM HUIDIG BOUWJAAR
               If #1GWNB >= BYAVDM;
                 TOTBOU = #1BDNB + #1BENB; //KR.BZ+KR.BZ2
                  //18091997            Z-ADD#1BDNB    TOTBOU  41       KR.BZ
                 If TYPCON = 'Y';
                   TOTBOU = #1BDNB; //KR.BZ
                 ENDIF;
                 TOTBOU = TOTBOU + BWTOTO; //+ OVERMACHT
                 If #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58';
                   If WUHHCM = 'N';
                     If #1A4CD = 'C2'; //KODE BZ = B
                       TOTBOU = 0; //KR.BZ
                     ENDIF;
                   ENDIF;
                 ENDIF;
                 HKRBZ = TOTBOU - TOTBZ;
                 If HKRBZ < 0;
         WUTQCF = 'H';
         HVBZD1 = TOTBOU;            3 0          VOLLE BZ
                   HVBZ = HVBZD1;
     EvalR   HHBZHU = TOTBOU;            1 0          LAATSTE POS.
                   If HHBZHU = 0; //1 OF GN
                     HHBZ = 0; //HALVE DAG BZ
                   ELSE;
                     HHBZ = 1;
                   Endif;
                 Endif;
                 If #1A1CD = '01' OR #1A1CD = '03';
                   EXSR SPBZH;
                   If #1AACD = '29' AND #1AACD = '183475';
                     DSPLY ('LVPLUFR ') 'ROSANNE';
                     DSPLY ('SPBZH   ') 'ROSANNE';
                     DSPLY ('HVBZ HHB') 'ROSANNE';
                     DSPLY (HVBZ) 'ROSANNE';
                     DSPLY (HHBZ) 'ROSANNE';
                   ENDIF;
                 ENDIF; //ENDIF 01/03
               ELSE;
                  // WKLH.MND > OF = BEGINDATUM VORIG BOUWJAAR
                 If #1GWNB >= BYAUDM;
                   TOTBOU = #1BFNB + #1BGNB; //KR.BZ+KR.BZ2
                    //18091997            Z-ADD#1BFNB    TOTBOU  41       KR.BZ
                   If TYPCON = 'Y';
                     TOTBOU = #1BFNB; //KR.BZ
                   ENDIF;
                   TOTBOU = TOTBOU + BWTOTO; //+ OVERMACHT
                   HKRBZ = TOTBOU - TOTBZ; //VORIG JAAR
                   If HKRBZ < 0;
         WUTQCF = 'V';
         HVBZD1 = TOTBOU;            3 0          VOLLE BZ
                     HVBZ = HVBZD1;
     EvalR   HHBZHU = TOTBOU;            1 0
                     If HHBZHU = 0;
                       HHBZ = 0;
                     ELSE;
                       HHBZ = 1;
                     Endif;
                   Endif;
                   If #1A1CD = '01' OR #1A1CD = '03';
                     EXSR SPBZV;
                     If #1AACD = '29' AND #1AACD = '183475';
                       DSPLY ('LVPLUFR ') 'ROSANNE';
                       DSPLY ('SPBZV   ') 'ROSANNE';
                       DSPLY ('HVBZ HHB') 'ROSANNE';
                       DSPLY (HVBZ) 'ROSANNE';
                       DSPLY (HHBZ) 'ROSANNE';
                     ENDIF;
                   ENDIF; //01/03
                 Endif;
               Endif;
             ELSE; //BZ NIET = B
         WUJRJR = #1GWNB;            4 0          JAAR ACHTERS
         WUJRRR = BYEENB;            4 0          JAAR WKLMND
         WUJRR1 = #1F4NB;            4 0          VORIG JAAR
               WUJRR1 = WUJRR1 - 1; //VORIG JAAR
               If #1A4CD = 'SV';
                 If WUJRJR = #1F4NB; //JAAR BZ
         WUTQCF = 'H';
                   HKRRES = #1BDNB - TOTBZ; //KR.BZ
                   If HKRRES < 0;
         HVBZD1 = #1BDNB;            3 0
                     HVBZ = HVBZD1;
     EvalR   HHBZHU = #1BDNB;            1 0
                     If HHBZHU = 0;
                       HHBZ = 0;
                     ELSE;
                       HHBZ = 1;
                     Endif; //HHBZHU
                   Endif; //HKRRES
                 ENDIF;
                 If WUJRJR = WUJRR1; //JAAR BZ-1
         WUTQCF = 'V';
                   HKRRES = #1BFNB - TOTBZ; //KR.BZ
                   If HKRRES < 0;
         HVBZD1 = #1BFNB;            3 0
                     HVBZ = HVBZD1;
     EvalR   HHBZHU = #1BFNB;            1 0
                     If HHBZHU = 0;
                       HHBZ = 0;
                     ELSE;
                       HHBZ = 1;
                     Endif; //HHBZHU
                   Endif; //HKRRES
                 ENDIF; //VORIG JAAR
               ENDIF; //SV

               If SWBZVJ = '1'; //ACHTERSTAL JANUARI
     C                   GOTO      TOCHBZ
               ENDIF;
               If WUJRJR = WUJRRR; //JR ACHT=HUID.JR
                  //ENKEL ALS JR ACHT=HUIDIG JR (=JR IND.MND) MAG JE KREDIETEN AFTREKKEN
     C     TOCHBZ        TAG
                 If #1A4CD = 'I ' OR #1A4CD = 'BA' OR #1A4CD = 'SC' OR #1A4CD = 'VJ'; //VOL WKL 0792
                   HKRRES = #1BDNB - TOTBZ; //KR.BZ
                   If HKRRES < 0;
         HVBZD1 = #1BDNB;            3 0
                     HVBZ = HVBZD1;
     EvalR   HHBZHU = #1BDNB;            1 0
                     If HHBZHU = 0;
                       HHBZ = 0;
                     ELSE;
                       HHBZ = 1;
                     Endif; //HHBZHU
                   Endif; //HKRRES
                 Endif; //C/....

                 If #1A4CD = 'H ' OR #1A4CD = 'KH' OR #1A4CD = 'CK';
                   HKRRES = #1BDNB - TOTBZ; //KR.BZ
                   If HKRRES < 0;
         HVBZD1 = #1BDNB;            3 0
                     HVBZ = HVBZD1;
                     VOLHS = HVBZD1;
     EvalR   HHBZHU = #1BDNB;            1 0
                     If HHBZHU = 0;
                       HHBZ = 0;
                       HALFHS = 0;
                     ELSE;
                       HHBZ = 1;
                       HALFHS = 1;
                     Endif; //END HHBZHU
                   Endif; //END HKRES
                 Endif; //END H,...
               Endif; //END JRJE
             Endif; //END BZ=B
              //ONGEACHT JAARTAL
             If #1A4CD = 'C ' OR #1A4CD = 'E ' OR #1A4CD = 'CS' OR #1A4CD = 'ES';
               HKRRES = #1BDNB - TOTBZ; //KR.BZ
               If HKRRES < 0;
         HVBZD1 = #1BDNB;            3 0
                 HVBZ = HVBZD1;
     EvalR   HHBZHU = #1BDNB;            1 0
                 If HHBZHU = 0;
                   HHBZ = 0;
                 ELSE;
                   HHBZ = 1;
                 Endif; //HHBZHU
               Endif; //HKRRES
             Endif; //C/....
     C     ENDCBZ        TAG
              //BZ=G=>MEN MOET JAARLIJKS EEN NIEUW BEWIJS INDIENEN,DUS JR BZ F4 AANPASSEN
              //IS DIT NIET GEBEURD BIJ DE VOLGENDE BETALING VR DAT JR, DAN ERROR MESSAGE
             If #1A4CD = 'G ';
         JRBZAC = #1GWNB;            4 0
               If #1F4NB < JRBZAC;
     EvalR   WUPTCD = '1';
               Endif;
             Endif;
              //OPV SCHERMZONES BZ ALS ZE INGEVULD WAREN. KUNNEN OOK < ZIJN RESTEREND
              //KREDIET.(OOK REKENING HOUDEN MET TYPES WKL DIE ENKEL HALVE DAGEN HEBBEN)
             If #1A1CD <> '03' AND #1A1CD <> '10' AND #1A1CD <> '04';
               If #1GPNB <> 0;
     EvalR   #1GPNB = HVBZ;
     EvalR   #1JNNB = HHBZ;
               Endif;
               If #1JNNB <> 0;
     EvalR   #1GPNB = HVBZ;
     EvalR   #1JNNB = HHBZ;
               Endif;
                //          #1A4CD    IFEQ 'B '
                //                    EXSR BWOPV
                //                    ENDIF
             Endif; //03,04,10
             If #1A1CD = '03' OR #1A1CD = '10' OR #1A1CD = '04';
               If #1JNNB <> 0;
                 PRBZHH = HVBZ * 2;
                 HHBZ = HHBZ + PRBZHH;
                 HVBZ = 0;
     EvalR   #1JNNB = HHBZ;
               Endif;
                //          #1A4CD    IFEQ 'B '
                //                    EXSR BWOPV2
                //                    ENDIF
             Endif;
           Endif; //KODE BZ BLAN

           If #1A4CD = 'B ' OR #1A4CD = 'BB' OR OUINON = 'Y';
             TOTBZR = 0; //TOTAAL DGN BZ
             DGNBZR = 0; //DAGEN REEDS BETAALD
             MXBZR6 = 27;
             MXBZR5 = 23;
             //71,... OOK MEETELLEN
             //TOTAAL BZDGN
             MDTOTBZ(#1AACD:#1AFNB:RMPAR:#1A4CD:DGNBZR:MXBZR6:MXBZR5);
               If #1A1CD = '02';
               MXBZR6 = 31;
             ENDIF;
             TOTBZR = DELBZ + DGNBZR;
             If TOTBZR > MXBZR6;
         WUOWCD = '1';
             ENDIF;
           ENDIF;

           If #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58';
             If WUHHCM = 'N';
               If #1A4CD = 'C2'; //KODE BZ = B
                 HVBZ = 0;
                 HHBZ = 0;
               ENDIF;
             ENDIF;
           ENDIF;
            //------------------------------------------------------------------------
            // Sw87 : BZ-kode/jaar stemt niet overeen met datum achterstal.
            // CASE: WRK.Switch87 is 1
           If WUPTCD = '1'; //*IF
              // Send message 'Ofwel BZkode uitbl./BZjaa'
         ZAMSID = 'USR0470';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Bz=15 veelvoud van 7,7
            // CASE: DTL.BZ kode is 15
           If #1A4CD = '15'; //*IF
              // is bedrag bz veelvoud van 7,7euro?
              // controle bz 15 veelvd 7,7 - Wkl betaling  *
         WUH4CL = 'N';            1
             BDRCHK = #1GYNB;
             BDRCH2 = BDRCHK * 100;
             DELCHK = BDRCH2 / 770;
     EvalR   DELCH2 = DELCHK;            4 0
             If DELCH2 <> 0;
                //                    MOVEL'F'       WUH4CL  1
             ENDIF;
             If BDRCHK > 15400;
                //                    MOVEL'X'       WUH4CL  1
             ENDIF;

             RMPARM = #1GWNB;
         ' = ';           WUH4CL            1
             BDROOO = #1GYNB;
              // CASE: WRK.switchbz15 is N
             MDMET02(#1AACD:#1AFNB:#1A4CD:RMPARM:BDROOO:WUH4CL);
               If WUH4CL = 'N';
                // Setup message data for message
               ZA0139 = #1GYNB; //Bedrag BZ
                // Send message 'Bedrag foutief'
         ZAMSID = 'USR6933';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // Contr neg.dgn/bdrg+BV-dl2 - Wkl betaling  *
         WUF3CD = '0';                         SWITCH112   ES0
         WUW211 = '0';                         SW211       ES0
           If #1GLNB < *ZERO OR #1GMNB < *ZERO OR #1GYNB < *ZERO OR #1GPNB < *ZERO OR #1JNNB < *ZERO OR #1GNNB < *ZERO OR #1JLNB < *ZERO OR #1GONB < *ZERO OR #1JMNB < *ZERO OR #1GVNB < *ZERO OR #1GINB < *ZERO OR #1GJNB < *ZERO OR #1GKNB < *ZERO OR #1GRNB < *ZERO OR #1GSNB < *ZERO OR #1GTNB < *ZERO OR #1GUNB < *ZERO OR #1JJNB < *ZERO OR #1JKNB < *ZERO OR #1GGNB < *ZERO OR #1GHNB < *ZERO OR #1HPNB < *ZERO OR #1GXNB < *ZERO OR #1LPNB < *ZERO; //VD6
         WUF3CD = '1';                         SW112 AAN
           Endif;
           //AFD
           //LIDNR
           //REF.MND
           //HBV
           //VBV
           //SWITCH211
            // Switch112=1 --> error message : negatieve dagen of bedragen (Fiel
            // CASE: WRK.Switch112 is 1
           MDBVNEG(#1AACD:#1AFNB:RMPARM:#1JONB:#1G7NB:WUW211);
             If WUF3CD = '1';
              // Send message 'Negatieve dagen/bedragen'
         ZAMSID = 'USR0902';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Switch211=1 --> error message : BVmin groter dan dagen BV voor di
            // CASE: WRK.Switch211 is 1
           If WUW211 = '1'; //*IF
              // Send message 'BV min > dagen ingebracht'
         ZAMSID = 'USR2103';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Type kode = 01/03/05/...../49 : berekenen wklh (gn dok/rivierarb.
            // CASE: WRK.Sw type01/03/08/11/12 is Y
           If WULOCD = 'Y'; //*IF
              // CASE: DTL.Beroep kode is Nt 09 : geen dok A'pen
             If #1BACD <> '09'; //*IF
                // Berekenen VW:01,03,+exter - Wkl betaling  *
         WUWU48 = '0';
               EXTBDR = #1HPNB;
               EXTDAG = #1DDNB;
               WKLTER = 0;
               SOMTER = 0;
               RMPAR = #1GWNB;
               If #1BCCD <> 'P';
                 //REF.MND
                 //B/E
                 //TYPE WKL
                 //WKLH=Y/N
                 //BEDRAG WKLH
                 //DAGBEDRAG
                 //VOL BAREMABD
                 //HALF BAREMAB
                 //VOLLE DAGEN
                 //HALVE DAGEN
                 //SWITCH148
               MDCALC01(RMPAR:BYEURO:#1A1CD:#1BDST:EXTBDR:EXTDAG:HVBAR:HHBAR:HVTOT6:HHTOT6:WUWU48:WKLTER:SOMTER);
                 ELSE;
                 //REF.MND
                 //VOLLE DAGEN
                 //HALVE DAGEN
                 //SWITCH148
                 MDPWATOT(#1AACD:#1AFNB:RMPAR:HVTOT6:HHTOT6:WUWU48);
                   If WUWU48 <> '5';
                   //REF.MND
                   //TYPE WKL
                   //WKLH=Y/N
                   //BEDRAG WKLH
                   //VOLLE DAGEN
                   //HALVE DAGEN
                   //SWITCH148
                   //DAGBEDRAG
                 MDPWATOE(#1AACD:#1AFNB:RMPAR:#1A1CD:#1BDST:EXTBDR:HVTOT6:HHTOT6:WUWU48:WKLTER:SOMTER:HVBAR);
                   ENDIF;
               ENDIF; //SUBBEROEP NIET P
               HWKL = WKLTER;
               SOM = SOMTER;
                // SOM WKLH IS BEPAALD VOOR TYPE 01,03,07,08,11,12, ...
                // CASE: WRK.Switch148 is 5
               If WUWU48 = '5'; //*IF
                  // Send message 'PWAtoeslag :dgn PWA>dgnR6'
         ZAMSID = 'USR4189';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
                // CASE: WRK.Switch148 is 1
               If WUWU48 = '1'; //*IF
                  // Setup message data for message
         ZA0140 = #1ALST;                         W1ma
         ZA0141 = #1AMST;                         W1di
         ZA0142 = #1ANST;                         W1wo
         ZA0143 = #1AOST;                         W1do
         ZA0144 = #1APST;                         W1vr
         ZA0145 = #1AQST;                         W1za
         ZA0146 = #1AKST;                         W1zo
                  // Send message 'Weekreg. week1/ type fout'
         ZAMSID = 'USR0223';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Type kode = 09 of 10 (18):Berekenen wklh + veld atoma foutief
            // CASE: WRK.Sw type 09/10 is Y
           If WULQCD = 'Y'; //*IF
              // Berekenen brugp:type09,10 - Wkl betaling  *
             If #1BDST = 'Y'; //WEL WKLH
               If #1HPNB <> *ZERO; //BEDRWKL NT 0
                 SOM = #1HPNB; //SOM
                 HWKL = #1HPNB; //SOM
               ELSE; //BEDRWKLH=0
                 If #1DDNB <> *ZERO; //DAGBEDR NT 0
                   VOLDBD = #1DDNB;
                   If #1A1CD <> '10';
                     EVAL(H) HALDBD = #1DDNB / 2;
                   ELSE;
                     HALDBD = #1DDNB;
                   ENDIF;

                   If #1GWNB < 201004;
                     If #1AKDT >= 19940501;
                       If #DVPBP > 0; //INH.%
                         EXSR T09HVB;
                       ELSE; //INH%=0
                         EXSR T09DAG;
                       ENDIF; //INH%>0
                     ELSE; //BEGIN WKL<
                       EXSR T09DAG;
                     ENDIF; //#1AKDT
                   ELSE;
                     EXSR T09DAG;
                   ENDIF;

                 ELSE; //DAGBEDR = 0
                   EXSR T09HVB;
                 Endif; //END DAGBEDR
                 If #1GWNB <= 200111 AND BYEURO = 'E';
                   EUROOU = 0;
                   EUROIN = SOM;
                   MDBFNREU(EUROIN:EUROOU);
                     SOM = EUROOU;
                 ENDIF;
                  // BEDRAG WKLH IS BEREKEND VOLGENS DE GOEDE TABEL BAREMA'S
               Endif; //END WKL NT 0
             ELSE; //GN = N
               SOM = *ZERO;
             Endif; //END GN = Y
             HWKL = SOM; //VUL BEDR WKL
              // SOM WKLH IS BEPAALD VOOR TYPE 09 EN 10
              // BEREKENEN VOLGENS DAGBEDRAG ZONDER INHOUDINGSPERCENTAGE
           Endif; //*FI
            // Type kode = 15 brugp grensarb. : berekenen wklh + maandbedrag
            // CASE: DTL.Type kode is 15 : grensarbeiders
           If #1A1CD = '15'; //*IF
              // Berekening wkl : type15 - Wkl bet  *
             If #1BDST = 'Y'; //WEL WKLH
               If #1HPNB <> *ZERO; //BEDRWKL NT 0
                 SOM = #1HPNB; //SOM
                 HWKL = #1HPNB; //SOM
               ELSE; //BEDRWKLH=0
                 SOM = HVTOT6 * HVBAR;
                 If HHTOT6 <> *ZERO;
                   SOM2 = HHTOT6 * HHBAR;
                   SOM = SOM + SOM2; //+1 HALVE DAG
                 Endif; //END DECIM
                 If #1GWNB <= 200111 AND BYEURO = 'E';
                   EUROOU = 0;
                   EUROIN = SOM;
                   MDBFNREU(EUROIN:EUROOU);
                     SOM = EUROOU;
                 ENDIF; //200111

               Endif; //END WKL NT 0
             ELSE; //GN = N
               SOM = 0;
             Endif; //END GN = Y
             HWKL = SOM; //VUL BEDR WKL
              //SOM WKLH BEPAALD,NU HBEDBZ:DAGBEDRAG=MAANDBEDR INVULLEN IN HBEDBZ
             If #1BCST = 'N'; //BZ=NEEN
               HBEDBZ = 0;
             ELSE; //WEL TOESLAG
               If #1GYNB = 0; //BEDRAG BZ NT
                 HBEDBZ = #1DDNB; //DAGBEDR=MAAN
               ELSE; //BZ ZELF ING.
                 HBEDBZ = #1GYNB;
               Endif;
             Endif;
           Endif; //*FI
            // Type kode = 24+25:wisselkoerstoeslag+ndl grensarbeiders: berekene
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.Type wklh. kode is 24 : wisselkoerstoeslag
            //   !- c2    : DTL.Type wklh. kode is 25
            //   '-
           If #1A1CD = '24' OR #1A1CD = '25'; //*IF
              // Berekenen wklh:24+25:exte - Wkl betaling  *
              //24=WISSELKOERSTOESL/25=NDL GRENSARB:ENKEL BEDRAG WKL MOET INGEVULD ZIJN
             HY = #1GJNB;
         WUW233 = '0';
         WUW235 = '0';
             If HY <> WUFDND;
               EXTBDR = 0;
             ELSE;
               EXTBDR = #1HPNB;
             ENDIF;
             EXTMND = #1GWNB;
             EXTY = #1GJNB;
             EXTQ = #1DBNB;
             EXTS = #1DCNB;
             WKLTER = 0;
             BZTER = 0;
             //TYPE WKL
             //WKLH=Y/N
             //BEDRAG WKLH
             //SUBBEROEP
             //BEDRAG WKLH
             //Y
             //Q
             //S
             //SWITCH233
             //SWITCH235
             MDCALC24(#1A1CD:#1BDST:EXTBDR:#1BCCD:EXTMND:EXTY:EXTQ:EXTS:WUW233:WUW235:WKLTER:BZTER);
               HWKL = WKLTER;
             HBEDBZ = BZTER;
              // CASE: WRK.switch233 is 1
             If WUW233 = '1'; //*IF
                // Send message 'Bedrag groter dan maximum'
         ZAMSID = 'USR2302';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // CASE: WRK.Switch235 is 1
             If WUW235 = '1'; //*IF
                // Send message 'Zelf bedrag invullen'
         ZAMSID = 'USR2316';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Type kode=26/50/51/52/53 : berekenen wklh
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5
            //   !- c1    : DTL.Type wklh. kode is 26 (voltooiingspremie)
            //   !- c2    : DTL.Type wklh. kode is 50
            //   !- c3    : DTL.Type wklh. kode is 51
            //   !- c4    : DTL.Type wklh. kode is 52
            //   !- c5    : DTL.Type wklh. kode is 53
            //   '-
           If #1A1CD = '26' OR #1A1CD = '50' OR #1A1CD = '51' OR #1A1CD = '52' OR #1A1CD = '53'; //*IF
              // Berekenen wklh : type 91 - Wkl betaling  *
             HWKL = #1HPNB; //BEDR WKLH
             HBEDBZ = 0; //BEDR BZ=0
             If #1A1CD = 'GI' OR #1A1CD = 'GK';
               HUREN = #1GINB;
             ENDIF;
             If #1GWNB < 209912;
               HWKL = #1HPNB; //BEDR WKLH
               HBEDBZ = 0; //BEDR BZ=0
               If #1A1CD = 'GI' OR #1A1CD = 'GK';
                 HUREN = #1GINB;
               ENDIF;
             ELSE;
               HUREN = #1GINB;
             ENDIF;
             If #1A1CD = '53' AND #1DOCD = '..ICLD.';
               HVD6 = #1GLNB;
               HVTOT6 = #1GLNB;
               HVAL6 = #1GLNB;
               If #1HPNB = 0;
                 HWKL53 = HVD6 * #1DDNB;
               ENDIF;
               If #1HPNB = 0;
                 HWKL = HVD6 * #1DDNB;
                 #1HPNB = HVD6 * #1DDNB;
               ELSE;
                 If #1HPNB <> HWKL53;
                   HWKL = #1HPNB;
                 ELSE;
                   HWKL = HVD6 * #1DDNB;
                   #1HPNB = HVD6 * #1DDNB;
                   HWKL53 = HVD6 * #1DDNB;
                 ENDIF;
               ENDIF;
             ENDIF;
           Endif; //*FI
            // Beroep=09: Dok nt A'pen+rivierarb.: berekenen wklh
            // CASE: DTL.Beroep kode is 09 : Dok A'pen
           If #1BACD = '09'; //*IF
              // Berek. Dok nt A'pen BZ=K - Wkl bet  *
             If #1BDST = 'Y'; //WEL WKLH
               If #1HPNB <> *ZERO; //BEDRWKL NT 0
                 SOM = #1HPNB; //SOM
                 HWKL = #1HPNB; //SOM
               ELSE; //BEDRWKLH=0
                 If #1DDNB <> 0; //DAGBEDR NT 0
                   SOM = HVTOT5 * #1DDNB;
                   If HHTOT5 <> *ZERO;
                     SOM3 = HHTOT5 * #1DDNB;
                     SOM2 = SOM3 / 2;
                     SOM = SOM + SOM2; //+1 HALVE DAG
                   Endif; //END DECIM
                 ELSE; //DAGBEDR=0
                   SOM = HVTOT5 * HVBAR;
                   If HHTOT5 <> *ZERO;
                     SOM2 = HHTOT5 * HHBAR;
                     SOM = SOM + SOM2; //+1 HALVE DAG
                   Endif; //END DECIM
                 Endif; //END DAGBEDR
                 If #1GWNB <= 200111 AND BYEURO = 'E';
                   EUROOU = 0;
                   EUROIN = SOM;
                   MDBFNREU(EUROIN:EUROOU);
                     SOM = EUROOU;
                 ENDIF; //200111

               Endif; //END WKL NT 0
               HWKL = SOM;
             ELSE; //GN = N
               HWKL = 0;
             Endif; //END GN = Y
              // SOM WKLH IS BEPAALD VOOR TYPE=01 DOK NT A'PEN EN RIVIERARB.
           Endif; //*FI
            // CASE:
            //  - c1ORc2
            //   !- c1    : WRK.switch type 09-10 is 1
            //   !- c2    : WRK.switch type 09-10 is 2
            //   '-
           If WUPZCF = '1' OR WUPZCF = '2'; //*IF
              // Veld BD is ingevuld Karina
              // CASE: DTL.Wkl bet CDE vrij2 is ingevuld
             If #1MPCE <> *BLANK; //*IF
                // CASE:
                //  - c1ORc2
                //   !- c1    : DTL.Wkl bet CDE vrij2 is vraagteken1
                //   !- c2    : DTL.Wkl bet CDE vrij2 is vraagteken2
                //   '-
               If #1MPCE = '?' OR #1MPCE = ' ?'; //*IF
                  // Overzicht documenten BD - Documenten Betaaldossier  *
                 CLEAR   ADRC;
     C                   MOVEL(P)  @CN(034)      ADYVCJ                         Documenten BD T
     C                   MOVEL(P)  WUYXCJ        ADYXCJ                         Documenten BD t
                 CLEAR   AERC;
     C                   MOVEL(P)  #1AACD        AEAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AEAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AEY0CJ                         Doc BD meer bet
                 AEQLDM = #1GWNB; //Doc BD meer RM
                 AEQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AEY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  *BLANK        AEY2CJ                         Doc BD meer doc
     C                   MOVEL(P)  *BLANK        AEW3TN                         Doc BD meer doc
     C                   MOVEL(P)  #1EGCD        AEY3CJ                         Doc BD meer C12
                 AEQ4DE = WUQ4DE; //Doc BD meer dtm
                 AEQNDM = #1HJNB; //Doc BD meer dok
     C                   MOVEL(P)  'D'           AEY4CJ                         Doc BD meer dag

                 //Overzicht docum
                 //KEY: Documenten
                 //RCD: Documenten
                 //wrk return key
                 //WRK document BD

                 LZGWEFR(W0RTN:ADRC:AERC:WQ0316:WQ0317);
                   If *IN90 = '1';
                    // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LZGWEFR';
                    // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                   EXSR ZASNMS;
                 Endif;
                  // Error detected?
                 If W0RTN <> *BLANK;
                   *In99 = *On;
                 Endif;
                  // Check Documenten - Documenten BD meerdere  *
                 EXSR SHRVGN;
                  // CASE: LCL.WRK record found is Yes
                 If YL0018 = 'Y'; //*IF
         #1MPCE = *BLANK;                         Wkl bet CDE vri
         #1MPCE = 'Y';                         Wkl bet CDE vri
                 ELSE;
                    // CASE: *OTHERWISE
         #1MPCE = *BLANK;                         Wkl bet CDE vri
                 Endif; //*FI
               ELSE;
                  // CASE: *OTHERWISE
                  // Test veld BD Karina
                  // CASE:
                  //  - NOTc1 AND NOT c2
                  //   !- c1    : DTL.Wkl bet CDE vrij2 is Y
                  //   !- c2    : DTL.Wkl bet CDE vrij2 is Blanco
                  //   '-
         Y0CX01 = '0';            1
                 If #1MPCE = 'Y'; //*IF
                 ELSE;
                   If #1MPCE = *BLANK; //*IF
                   ELSE;
         Y0CX01 = '1';
                   Endif; //*FI
                 Endif; //*FI
                 If Y0CX01 = '1'; //*IF
                    // Setup message data for message
         ZA0147 = #1MPCE;                         Wkl bet CDE vri
         ZA0148 = @CN(035);                         Wrk veld 15 lan
                    // Send message 'Waarde moet &2 zijn'
         ZAMSID = 'USR6029';
                   EXSR ZASNMS;
                   *In99 = *On;

                    // *Set Cursor: DTL.Wkl bet CDE vrij2  (*Override=*YES)
                   W0ROW1 = 015;
                   W0COL1 = 068;
         W0OVR1 = '1';                         *YES
         WUPSCD = '1';                         Switch berekeni
                 ELSE;
                    // CASE: *OTHERWISE
                    // Check Documenten - Documenten BD meerdere  *
                   EXSR SIRVGN;
                    // CASE:
                    //  - c1 AND c2
                    //   !- c1    : DTL.Wkl bet CDE vrij2 is Y
                    //   !- c2    : LCL.WRK record found is No
                    //   '-
         Y0CX01 = '0';            1
                   If #1MPCE = 'Y'; //*IF
                     If YL0018 = 'N'; //*IF
         Y0CX01 = '1';
                     Endif; //*FI
                   Endif; //*FI
                   If Y0CX01 = '1'; //*IF
                      // Setup message data for message
         ZA0149 = #1MPCE;                         Wkl bet CDE vri
                      // Send message 'Geen documenten BD'
         ZAMSID = 'USR6400';
                     EXSR ZASNMS;
                     *In99 = *On;

                      // *Set Cursor: DTL.Wkl bet CDE vrij2  (*Override=*YES)
                     W0ROW1 = 015;
                     W0COL1 = 068;
         W0OVR1 = '1';                         *YES
         WUPSCD = '1';                         Switch berekeni
                   ELSE;
                      // CASE: *OTHERWISE
                      // CASE:
                      //  - c1 AND c2
                      //   !- c1    : DTL.Wkl bet CDE vrij2 is Blanco
                      //   !- c2    : LCL.WRK record found is Yes
                      //   '-
         Y0CX01 = '0';            1
                     If #1MPCE = *BLANK; //*IF
                       If YL0018 = 'Y'; //*IF
         Y0CX01 = '1';
                       Endif; //*FI
                     Endif; //*FI
                     If Y0CX01 = '1'; //*IF
                        // Setup message data for message
         ZA0150 = #1MPCE;                         Wkl bet CDE vri
                        // Send message 'Er zijn documenten BD'
         ZAMSID = 'USR6401';
                       EXSR ZASNMS;
                       *In99 = *On;

                        // *Set Cursor: DTL.Wkl bet CDE vrij2  (*Override=*YES)
                       W0ROW1 = 015;
                       W0COL1 = 068;
         W0OVR1 = '1';                         *YES
         WUPSCD = '1';                         Switch berekeni
                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // BC/X2
            // CASE: DTL.Lid nr is LT 900000
           If #1AFNB < @CN(006); //*IF
              // Berekenen bedrag BC/X2 - Wkl bet  *
              // BIJDRAGEN WIJZIGEN OP 07/2024
              // ANTHEA GEFET 07/2024 DOOR NAAR AS/400
              // DUS INDIEN 202407 ZELF OMZETTEN NAAR 202401
             If #1E9NB = 202407;
               #1E9NB = 202401;
             ENDIF;

     EvalR   WUQSCD = '0';                         SW88
     EvalR   WUQ3CD = '0';                         SW90
     C                   MOVEA     *IN(50)       UWIN              1
         JWKLJ = BYEENB;             4 0
     EvalR   MWKLM = BYEENB;             2 0
              // JWKLJ EN MWKLM ZIJN JAAR EN MAAND WERKLOOSHEIDSMAAND (LOP.MND)
         JBIJDR = #1AEDD;            4 0          L.BET.BIJDR
     EvalR   MBIJDR = #1AEDD;            2 0          L.BET.BIJDR
              // BIJ X2 DLBB AL OP VOORHAND +1 DOEN VOOR BC
         SWBCP1 = 'N';            1
             If #1CMCD = '4'; //BET WIJZE=4
         USRP6 = BIBLCD;
               If BIBLCD <> 'RVDS    ' AND WUDTCC <> 'BYPAS';
                 If #1KVCE = ' ';
                   If #1GWNB = BYEENB; //ACHT=WKLMND
                     If #DCA70 = '1'; //V.M.
                       If #1GWNB >= #DFZDM; //GELDIG VANAF
                         If MBIJDR = 12;
         SWBCP1 = 'Y';            1
                           MBIJDR = 01;
                           JBIJDR = JBIJDR + 1;
                         ELSE;
                           MBIJDR = MBIJDR + 1;
                         ENDIF;
                       ENDIF;
                     ENDIF;
                   ENDIF;
                 ENDIF;
               ENDIF;
             ENDIF;

              //** BETAALWIJZE = 4--> BC EN X2      AANTAL BC > 0
              //          #1CMCD    IFEQ '4'                        BET WIJZE=4
             If #1LPNB > 0; //BCAANTAL NT0
         JBCJBC = #1E9NB;            4 0          JR KAT BC
               If SWBCP1 = 'Y';
                 JBCJBC = JBCJBC + 1;
               ENDIF;

               If JBIJDR <> JWKLJ;
                 If MBIJDR <> 12;
                   MAXAAN = 12 - MBIJDR;
                   If MAXAAN < #1LPNB;
                     BCAAN1 = MAXAAN;
                     BCAAN2 = #1LPNB - BCAAN1;
                      //BC
         JRCATB = JBIJDR;
     EvalR   JRCATB = '01';
                   ELSE; //DUS ZELFDE J
                     BCAAN1 = #1LPNB;
                     BCAAN2 = 0;
                      //BC
         JRCATB = JBIJDR;
     EvalR   JRCATB = '01';
                   Endif;
                   If JBIJDR <> JBCJBC;
     EvalR   WUQSCD = '1';
                   Endif;
                 ELSE; //12E MAAND
                   JBIJDR = JBIJDR + 1; //VOLGEND JR
                   If JBIJDR <> JBCJBC;
     EvalR   WUQSCD = '1';
                   Endif;
                   BCAAN1 = #1LPNB;
                   BCAAN2 = 0;
                    //BC
         JRCATB = JBIJDR;
     EvalR   JRCATB = '01';
                 Endif; //END =12E MND
               ELSE; //HUIDIG JAAR
                 If MBIJDR <> 12;
                   JRKATT = 0;
                   JRKATT = JBIJDR + 1;
         TES94 = JRKATT;             6 0
     EvalR   TES94 = '01';
                   MAXAAN = 12 - MBIJDR;
                    //BC
         JRCATB = JBIJDR;
     EvalR   JRCATB = '01';
                   CHAIN (#1AACD:#1CLCD:TES94) @B1REEU ;
       *in50 = (%found() = *Off); //*
                   If *In50;
                     BCAAN1 = #1LPNB;
                   Endif;
                   If *In50;
                     BCAAN2 = 0;
                   Endif;
                   If NOT *In50;
                     If MAXAAN < #1LPNB;
                   Endif;
                     BCAAN1 = MAXAAN;
                     BCAAN2 = #1LPNB - BCAAN1;
                   ELSE; //DUS ZELFDE J
                     BCAAN1 = #1LPNB;
                     BCAAN2 = 0;
                   Endif;
                   If JBIJDR <> JBCJBC;
     EvalR   WUQSCD = '1';
                   Endif;
                 ELSE; //12E MAAND
                   JRKATT = 0;
                   JRKATT = JBIJDR + 1;
         TEST94 = JRKATT;            6 0
     EvalR   TEST94 = '01';
                    //BC
         JRCATB = JRKATT;
     EvalR   JRCATB = '01';
                   CHAIN (#1AACD:#1CLCD:TEST94) @B1REEU ;
       *in50 = (%found() = *Off); //*
                   If *In50;
                     BCAAN1 = #1LPNB;
                   Endif;
                   If *In50;
                     BCAAN2 = 0;
                   Endif;
                   If NOT *In50;
                     If JRKATT <> JBCJBC;
                   Endif;
     EvalR   WUQSCD = '1';
                   Endif;
                   If NOT *In50;
                     MAXAAN = 12 - MBIJDR;
                   Endif;
                   If NOT *In50;
                     If MAXAAN < #1LPNB;
                   Endif;
                     BCAAN1 = MAXAAN;
                     BCAAN2 = #1LPNB - BCAAN1;
                   ELSE; //DUS ZELFDE J
                     BCAAN1 = #1LPNB;
                     BCAAN2 = 0;
                   Endif;
                 Endif; //END 12E MND
                  //                    Z-ADD#1LPNB    BCAAN1
                  //                    Z-ADD0         BCAAN2
               Endif; //END HUIDIG J

               If SWBCP1 = 'Y';
     EvalR   XX1M = #1AEDD;              2 0          MM BC
         XX1J = #1AEDD;              4 0          L.BET.BIJDR
         XX2J = #1E9NB;              4 0          JJMM BC
                 If XX1M = 12;
                   XX1J = XX1J + 1;
                 ENDIF;
                 If XX1J = XX2J;
         WUQSCD = '0';
                 ENDIF;
               ENDIF;

               If WUQSCD = '0';
                 //AFD.NR
                 //KATEG KODE
                 //KATEG MMJJJJ

                  //                    Z-ADD#1E9NB    JRCATB
         CATBC = #1CLCD;

                 CHAIN (#1AACD:#1CLCD:#1E9NB) @B1REEU ;
       *in50 = (%found() = *Off); //*
                 If *In50;
                   AFDBD1 = 0;
                 Endif;
                 If NOT *In50;
                   AFDBD1 = B1FBNB;
                 Endif;
                 If NOT *In50;
                   JRCATB = B1E9NB;
                 Endif;
     C  N50              MOVEL     B1CLCD        CATBC
                 HBEDB1 = BCAAN1 * AFDBD1; //X BEDR SUPPL
                 If BCAAN2 > 0;
                   E9NBVJ = #1E9NB + 100; //VOLGEND JAAR
                    //=== OPHALEN JUISTE JAARTAL BC --> WKL BET
                   //AFD.NR
                   //KATEG KODE
                   //VOLG JR KAT
                   SETLL (#1AACD:#1CLCD:E9NBVJ) @B1REEU;
                   READ @B1REEU ;
       *in50 = %eof();
                   If *In50;
                     MDKAT = 0;
                   Endif;
                   If *In50;
                     WYZKAT = 0;
                   Endif;
                   If *In50;
                     AFDBD2 = 0;
                   Endif;
     C   50              GOTO      GNKAT
     C  N50              MOVEL     B1CLCD        KODKAT            2
                   If KODKAT = #1CLCD;
     EvalR   MDKAT = B1E9NB;             2 0
                     WYZKAT = B1E9NB;
                     AFDBD2 = B1FBNB;
                   ELSE;
                     MDKAT = 0;
                     WYZKAT = 0;
                     AFDBD2 = 0;
     C                   GOTO      GNKAT
                   Endif;
     C     GNKAT         TAG
                   If MDKAT = 0; //GN WIJZIG.JR
                     BCAAN1 = BCAAN1 + BCAAN2; //AANT1+AANT2
                     RESBC1 = BCAAN2 * AFDBD1; //DEEL2XBEDR1
                     HBEDB1 = HBEDB1 + RESBC1; //DEEL2+DEEL1
                     BCAAN2 = 0;
                     HBEDB2 = 0;
                   Endif;
                   If MDKAT = 1; //JANUARI
                     HBEDB2 = BCAAN2 * AFDBD2; //X BEDR SUPPL
                   ELSE; //FEB->DEC
                     If MDKAT > 1;
                       AANMND = MDKAT - 1;
                       If BCAAN2 > AANMND;
                         RESBC1 = AANMND * AFDBD1;
                         BCAAN1 = BCAAN1 + AANMND;
                         HBEDB1 = HBEDB1 + RESBC1;
                         BCAAN2 = BCAAN2 - AANMND;
                         HBEDB2 = BCAAN2 * AFDBD2;
                       ELSE;
                         RESBC1 = AANMND * AFDBD1;
                         BCAAN1 = BCAAN1 + AANMND;
                         HBEDB1 = HBEDB1 + RESBC1;
                         BCAAN2 = 0;
                         HBEDB2 = 0;
                       Endif;
                     Endif;
                   Endif;
                 ELSE; //BCAAN2=0
                   BCAAN2 = 0;
                   HBEDB2 = 0;
                   AFDBD2 = 0;
                 Endif; //BCAAN2>0
                 HBEDBC = HBEDB1 + HBEDB2; //TOTAAL BC BEDR.
                  //                    MOVE HBEDBC    #1LQNB           SCHERM OPVUL
                 #1LQNB = HBEDBC; //SCHERM OPVUL
               Endif;
             ELSE; //AANTAL=0
               #1LQNB = 0;
               HBEDBC = 0;
             Endif;

              // NU EVENTUEEL X2 OPVULLEN
             If #1CMCD = '4'; //BET WIJZE=4
         USRP6 = BIBLCD;
               If BIBLCD <> 'RVDS    ' AND WUDTCC <> 'BYPAS';
                 If #1KVCE = ' ';
                   If #1GWNB = BYEENB; //ACHT=WKLMND
                     If #DCA70 = '1'; //V.M.
                       If #1GWNB >= #DFZDM; //GELDIG VANAF
                         If #1ANDM = 202407;
                           If #1FBNB = 0;
                             J20247 = 202401;
                              //OPHALEN BEDRAG BIJDRAGE
                             //AFD.NR
                             //KATEG KODE
                             //KATEG MMJJJJ
                             CHAIN (#1AACD:#1M5CD:J20247) @B1REEU ;
       *in50 = (%found() = *Off); //*
                             If *In50;
                               #1FBNB = 0;
                             Endif;
                             If NOT *In50;
                               #1FBNB = B1FBNB;
                             Endif;
                           ENDIF;
                         ENDIF;
                         #1JQNB = #1FBNB; //X2 OPVULLEN
                         HX2 = #1FBNB;
                       ELSE;
                         #1JQNB = 0; //X2
                         HX2 = 0;
                       ENDIF;
                     ELSE; //GN CODE=1
                       #1JQNB = 0; //X2
                       HX2 = 0;
                     ENDIF;
                   ELSE; //GN LOP MND
                     #1JQNB = 0; //X2
                     HX2 = 0;
                   Endif;
                 Endif; //#1KVCE=BLANK
               Endif; //RVDS/BYPAS
             ELSE; //GN BET W=4
               #1JQNB = 0; //X2
               HX2 = 0;
             Endif; //END BET.W=4
              //JR CONTR.RC. X 12 & JR LAATST BET. BIJDR. X 12. DAN DE BIJHORENDE
              //MAANDEN OPTELLEN. ZO HEEFT MEN GEMAKKELIJK HET VERSCHIL IN MAANDEN
              // JWKLJ EN MWKLM ZIJN JAAR EN MAAND WERKLOOSHEIDSMAAND (LOP.MND)
         JBIJDR = #1AEDD;            4 0          L.BET.BIJDR
     EvalR   MBIJDR = #1AEDD;            2 0          L.BET.BIJDR
             If HWKL > 0;
               JRNU = JWKLJ * 12; //CONTROLEREC
               JRBET = JBIJDR * 12; //LAATSTE BIJD
               JRNU = JRNU + MWKLM; //+ MAAND
               JRBET = JRBET + MBIJDR; //+ MAAND
               BCJANE = JRNU - JRBET; //VERSC V.D. 2
                // VANAF IM 01/2005 NOG SLECHTS 6 MAAND ACHTERSTALLIGE BIJDRAGEN TOEGELATEN
               If BCJANE >= 7 AND #1LQNB = 0 AND #1JQNB = 0 AND #1GWNB > #1AEDD;
                 If #1AHNB = 0;
     EvalR   WUQ3CD = '1';                         SW90
                    // VERPLICHT TEN MINSTE 1 BC IN TE GEVEN
                 ENDIF;
               Endif;
             Endif; //HWKL>0
     C                   MOVEA     UWIN          *IN(50)
              // Sw88:BC jaar foutief of maximaal af te houden voor 1 jaar
              // CASE: WRK.Switch88 is 1
             If WUQSCD = '1'; //*IF
                // Send message 'Jaar BC foutief/aanpassen'
         ZAMSID = 'USR0491';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // BC aantal <= 12 anders error message
              // CASE: DTL.BC aantal is GT 12
             If #1LPNB > 12; //*IF
                // Setup message data for message
               ZA0151 = #1LPNB; //BC aantal
                // Send message 'BC aantal te groot'
         ZAMSID = 'USR0413';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // Combinatie BC aantal met kategorie kode/mmjjjj
              // CASE: DTL.BC aantal is niet 0
             If #1LPNB <> *ZERO; //*IF
                // CASE: DTL.Kateg kode is EQ *BLANK
               If #1CLCD = *BLANK; //*IF
                 #1LQNB = *ZERO; //BC bedrag
                  // Send message 'Bc aantal/kategorie'
         ZAMSID = 'USR0412';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Combinatie BC aantal met kategorie kode/mmjjjj
              // CASE: DTL.Kateg kode is NE *BLANK
             If #1CLCD <> *BLANK; //*IF
                // CASE: DTL.BC aantal is = 0
               If #1LPNB = *ZERO; //*IF
                 #1LQNB = *ZERO; //BC bedrag
                  // Send message 'Bc aantal/kategorie'
         ZAMSID = 'USR0412';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Check bouwcode vnf10/2017 - Wkl betaling  *
         OUINON = 'N';            1
         BZBW = #1A4CD;              2
         WUS5CL = OUINON;
            //          'L0DPUFR' DSPLY'ROSANNE'
            //          WUGUCG    DSPLY'ROSANNE'                  MEERDERE UREN P
            //          WUHHCM    DSPLY'ROSANNE'                  F1
            //          WUDJNU    DSPLY'ROSANNE'                  TELLER
            // BZ=B --> bepalen welke toeslag : A, B, C of D  of 29 en kleiner
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.BZ kode is B
            //   !- c2    : WRK.Switch bouw 102017 is Y
            //   '-
           If #1A4CD = 'B' OR WUS5CL = 'Y'; //*IF
              // Bepalen BZ-kode bouw - Wkl bet  *
     EvalR   KODE2 = #1DOCD;             1            A,B,C,D
         KODE = KODE2;              2            A ,B ,C ,D
             If #1A1CD = '21' AND #1A4CD = 'B ';
         KODE = WUDXCC;                           A ,B ,C ,D
             ENDIF;
             If #1A1CD = '22' AND #1A4CD = 'B ';
         KODE = WUDXCC;                           A ,B ,C ,D
             ENDIF;
              // 102017
             If WUS5CL = 'Y';
     EvalR   KODE2 = #1A4CD;             1            CA CB C2 ...
         KODE = *BLANK;              2            A ,B ,C ,D
         KODE = KODE2;              2            A ,B ,C ,D
             ENDIF;
             If #1AACD = '29' AND #1AFNB = '183475';
               DSPLY ('LVN0UFR') 'ROSANNE';
               DSPLY ('WUS5CL') 'ROSANNE';
               DSPLY (WUS5CL) 'ROSANNE';
               DSPLY (KODE) 'ROSANNE';
             ENDIF;
           Endif; //*FI
            // Ophalen barema BZ+bedragN - Wkl betaling  *
     EvalR   WUN3CD = '0';                         SWITCH64
     EvalR   WUN4CD = '0';                         SWITCH65
     EvalR   FOUTBZ = '0';            1
         WUAYCL = '0';            1
           BZINH = 0;
     C                   MOVEA     *IN(50)       UWIN              1
           If HBEDBZ = *ZERO;
             If #1A4CD = 'G '; //BZKODE NT BL
               If #1BCST = 'Y'; //GN BZ = Y
                 If #1GYNB <> *ZERO; //BZBEDR NT 0
                   If WUMCCN = '1';
                     HBEDBZ = #1GYNB;
                   ENDIF;
                 ENDIF;
               ENDIF;
             ENDIF;
           ENDIF;

           If HBEDBZ = *ZERO;
             If #1A4CD <> *BLANK; //BZKODE NT BL
               If #1BCST = 'Y'; //GN BZ = Y
                 If #1GYNB <> *ZERO; //BZBEDR NT 0
                   HBEDBZ = #1GYNB;
                    //          #1BENR    IFNE *ZERO                      BZBEDR NT 0
                    //                    Z-ADD#1BENR    BZINH
                    //                    ENDIF
                 ELSE; //BEDRAG BZ=0

         OUINON = 'N';            1
         BZBW = #1A4CD;              2
                   MDBW001(BZBW:OUINON);
                     If #1A1CD = '01' OR #1A1CD = '03' OR #1A1CD = '11';
                     If #1A4CD = 'C2';
         OUINON = 'N';
     C                   GOTO      NIKSB
                     ENDIF;
                   ENDIF;

                   If OUINON = 'Y';
     EvalR   P2T2 = BZBW;              1
         KODE = *BLANK;
         KODE = P2T2;
     C                   GOTO      TOCHB
                      //? WAAROM TOCH B ????
                      //                    GOTO NIKSB
                   ENDIF;

                   If #1A4CD <> 'BB';
                     If #1A4CD <> 'B '; //KODE BZ NT B
                       If #1A4CD <> 'Z ' AND #1A4CD <> 'M ' AND #1A4CD <> 'NA' AND #1A4CD <> 'FA' AND #1A4CD <> 'FS' AND #1A4CD <> 'A ' AND #1A4CD <> 'Z1' AND #1A4CD <> 'M1' AND #1A4CD <> 'DA' AND #1A4CD <> 'VA' AND #1A4CD <> 'PA' AND #1A4CD <> 'PS' AND #1A4CD <> '35' AND #1A4CD <> '85' AND #1A4CD <> '29' AND #1A4CD <> '79' AND #1A4CD <> 'H ';
                         EXSR BZROU1;
                       Endif; //END BZ=Z --> 35
                     ELSE; //KODE BZ = B
     C     TOCHB         TAG
                       //KODE BZ
                       //WKLH KODE
                        //VNF 10/99 NIEUWE BEREKENING 2,5 DGN BZ & 2,5 DGN VORST MOET BEREKEND WORD
                        //EN ALS 5 DGN BOUW & NT AFZOND. ALS 2 VOLLE BZ + 2 VOLLE VORST &1HALVE BZ+
                        //1HALVE VORST,EERST ALLES OPTELLEN & DAN PAS BEREKENEN VOLGENS BZ-BEDRAG
                       BZTER = 0;
                       VORTER = 0;
                       ALBBTE = 0;
                       BZBBTE = 0;
                       VOBBTE = 0;
                       RMPAR = #1GWNB;
                       //REF.MND
                       //A,B,C,D
                       //B/E
                       //VOL BAREMABD
                       //HALF BAREMAB
                       //VOLLE DAGEN
                       //HALVE DAGEN
                       //SWITCH
                       MDBOUW6(#1AACD:#1AFNB:RMPAR:KODE:BYEURO:HVBZ:HHBZ:HVVOR:HHVOR:WUN4CD:BZTER:VORTER:ALBBTE:BZBBTE:VOBBTE);
                         HBEDBZ = BZTER;
                       HBEDVO = VORTER;
                       WUFZNE = ALBBTE;
                       WUF0NE = BZBBTE;
                       WUF1NE = VOBBTE;
                       If #1AACD = '29' AND #1AFNB = '183475';
                          //          'LVNYUFR' DSPLY'ROSANNE'
                          //          'MDBOUW6' DSPLY'ROSANNE'
                          //          BZTER     DSPLY'ROSANNE'
                       ENDIF;
                     Endif; //END BZ=B
                   ELSE; //BZ=BB
                     BZTER = 0;
                     VORTER = 0;
                     RMPAR = #1GWNB;
                     //REF.MND
                     //VOL BAREMABD
                     //HALF BAREMAB
                     //VOLLE DAGEN
                     //HALVE DAGEN
                     //SWITCH
                     MDBOUW4(RMPAR:HVBZ:HHBZ:HVVOR:HHVOR:WUN4CD:BZTER:VORTER);
                       HBEDBZ = BZTER;
                     HBBVO = VORTER;
                   ENDIF; //BZ=BB

     C     NIKSB         TAG
                   If #1A4CD = 'H ';
                      //          WUW002    IFEQ '1'                        CMD 1 GEBRUIKT
                     T02IND = BYEENB;
                     T02REF = #1GWNB;
                     CHAIN (#1AACD:#1AFNB:T02IND:T02REF) LVHKCPL1 ;
       *in50 = (%found() = *Off); //50=EOF
                     HVBZ = HKHK06;
                     HHBZ = HKHK07;
                     VOLHS = HKHK06;
                     HALFHS = HKHK07;
                     HBEDBZ = HKHK08;
                     WUKENG = HKHK08;
                      //                    ENDIF
                     If WUKENG > 0;
                       HBEDBZ = WUKENG;
                     ENDIF;
                   ENDIF;
                    //          'LVNYUFR' DSPLY'ROSANNE'
                    //          WUKENG    DSPLY'ROSANNE'

                   If #1A4CD = 'Z ' OR #1A4CD = 'NA' OR #1A4CD = 'A ' OR #1A4CD = 'FA' OR #1A4CD = 'FS' OR #1A4CD = 'M ' OR #1A4CD = '35' OR #1A4CD = '29';
                     DELWKL = HHTOT6 / 2;
                     DELWKL = DELWKL + HVTOT6;
                     If #1A4CD = 'Z ' OR #1A4CD = 'M ' OR #1A4CD = '35';
                       DELWKL = HHBZ / 2;
                       DELWKL = DELWKL + HVBZ;
                       DELBZ = HHBZ / 2;
                       DELBZ = DELBZ + HVBZ;
                     ENDIF;
                     If #1A4CD = '29' OR #1A4CD = 'NA' OR #1A4CD = 'FA' OR #1A4CD = 'FS';
                       DELBZ = HHBZ / 2;
                       DELBZ = DELBZ + HVBZ;
                     ENDIF;

                     METACH = #1GWNB;
                     METDGN = 99;
                     METAALD(METACH:METDGN);
                       If DELBZ >= METDGN;
                       EXSR BZROU2;
                     ELSE;
                       If #1A4CD = 'NA' OR #1A4CD = '29' OR #1A4CD = 'FA' OR #1A4CD = 'FS';
                         EXSR BZROU3;
                       ENDIF;
                     Endif; //END METDGN
                   Endif; //END BZ=VA/..
                   If #1A4CD = 'Z1' OR #1A4CD = 'DA' OR #1A4CD = 'VA' OR #1A4CD = 'PA' OR #1A4CD = 'PS' OR #1A4CD = 'M1' OR #1A4CD = '85' OR #1A4CD = '79';
                     HHHHBZ = HHTOT6;
                     If #1A4CD = 'Z1' OR #1A4CD = 'M1' OR #1A4CD = '85';
                       HHHHBZ = HHBZ;
                       If #1A1CD = '18';
                         HHHHBZ = HVBZ;
                       ENDIF;
                     ENDIF;
                     If #1A4CD = '79' OR #1A4CD = 'DA' OR #1A4CD = 'PA' OR #1A4CD = 'PS';
                       If HHBZ > 0;
                         HHHHBZ = HHBZ;
                       ENDIF;
                     ENDIF;

                     METACH = #1GWNB;
                     METDGN = 99;
                     METAALD(METACH:METDGN);
                       If HHHHBZ >= METDGN;
                       EXSR BZROU2;
                     ELSE;
                       If #1A4CD = 'DA' OR #1A4CD = '79' OR #1A4CD = 'PA' OR #1A4CD = 'PS';
                         EXSR BZROU3;
                       ENDIF;
                     Endif; //END METDGN
                   Endif; //END BZ=VA/..
                   HBED02 = HBEDBZ;
                 Endif; //END BED BZ=0
               ELSE; //GN BZ = N
                 HBEDBZ = 0;
               Endif; //END GN BZ=Y
             ELSE; //BZ = BLANK
               HBEDBZ = 0;
             Endif; //END BZ NT BLLAN

             If #1A4CD = '29' OR #1A4CD = '79' OR #1A4CD = 'NA' OR #1A4CD = 'DA';
               If WUPGCD = '0' OR WUPGCD = '3'; //BZ ZELF BEREKENEN
                 RMPAR = #1GWNB;
               MDCALCMT(#1AACD:#1AFNB:RMPAR:#1A1CD:#1A4CD:HVBZ:HHBZ:FOUTBZ:BZINH);
                 ELSE;
                 BZINH = #1BENR;
               ENDIF;
               If WUE5NE = 1;
                 STAINH = BZINH;
                 STARBZ = HBEDBZ;
                 WUE5NE = WUE5NE + 1;
               ENDIF;
               If HBEDBZ = STARBZ;
                 EXSR TCHINH;
               ELSE;
                 NAENTR = HBEDBZ + STAINH;
                 If NAENTR = STARBZ;
                    // NIETS DOEN
                 ELSE;
                   EXSR TCHINH;
                 ENDIF;
               ENDIF; //HBEDBZ=STARBZ
             ENDIF; //NA DA 29 79
           Endif; //END HBEDBZ=0
     C                   MOVEA     UWIN          *IN(50)
            // BEDR BZ IS BEPAALD. OOK REKENING GEHOUDEN MET DATUM ACHTERST
            // Sw64 : Geen BZ tabel meer : zelf berekenen
            // CASE: WRK.Switch64 is EQ 1
           If WUN3CD = '1'; //*IF
              // Setup message data for message
             ZA0152 = #1GYNB; //Bedrag BZ
              // Send message 'BZ zelf berekenen'
         ZAMSID = 'USR0416';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Sw65 : Geen tabel BZ-bouw voor datum achterstal : error message
            // CASE: WRK.Switch65 is EQ 1
           If WUN4CD = '1'; //*IF
              // Setup message data for message
             ZA0153 = #1GYNB; //Bedrag BZ
              // Send message 'BZ bouw zelf berekenen'
         ZAMSID = 'USR0415';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Berek. taks op WKLH&BZ:3 - Wkl betaling  *
     C                   MOVEA     *IN(50)       UWIN              1
           RMPAR = #1GWNB;
           HBRUTO = 0;
           HBRUBZ = 0;
         TYTYTY = #1A1CD;            2
           If #1A1CD = '18' AND #1GINB > 0;
         TYTYTY = '04';
           ENDIF;
         DOCD7L = #1DOCD;            7
           If WUAPCK = 'Y';
         XOCD7L = DOCD7L;            7
         DOCD7L = XOCD7L;
           ENDIF;
           HBEDXX = HBEDBZ;
           If #1A4CD = 'BB';
             HBEDXX = HBEDXX + HBBVO;
           ENDIF;
            //                    PARM           #1DOCD           BAREMA
           //BAREMA
           //POSTNR
           //BELAST.CODE
           //BZ CODE
           //TYPE WKL
           //SUBBEROEP
           //REF.MND
           //TYPE 18
           //BEDRAG WKLH
            //                    PARM           HBEDBZ           BEDRAG BZ
           //BEDRAG BZ(+VORST BB)
           //BEDRAG VORST
            // OUTPUT
           //TOTAAL TAKS
           //TAKS WKL
           //TAKS BZ
           //RWP
           //TOTAAL BRUTO
           //BRUTO BZ
            // WKL-2471
            // C105 TOEGEVOEGD DAN GEEN TAKS INHOUDEN
            // ALS PERIODE NIET 1 IS
         DOCD5L = #1DOCD;            5
     EvalR   DOCDP5 = DOCD5L;            1
           If WUZDCJ = 'Y';
             If DOCDP5 <> '1'; //VNF PERIODE 2 GN TAK
               HTAKS = 0; //TOTAAL TAKS
               HTAKSW = 0; //TAKS WKL
               HTAKSB = 0; //TAKS BZ
               RWP = 0; //RWP
             ENDIF;
           ENDIF;

           If HTAKS <> 0;
             #1HCNB = HTAKS;
             #1T4NB = HTAKSW;
             #1T5NB = HTAKSB;
           ELSE;
             #1HCNB = 0;
             #1T4NB = 0;
             #1T5NB = 0;
           Endif;
           If RWP <> 0;
             #1JRNB = RWP;
           ELSE;
             #1JRNB = 0;
           Endif;
     C                   MOVEA     UWIN          *IN(50)
         Endif; //*FI
          // !!! Controles afhoudingen + netto bepalen + fusies
          // CASE: WRK.Wrk hidden zetten calcul is 0
         If WUCA77 = '0'; //*IF
            // Controle kodes afhouding2 - Wkl betaling  *
     C                   MOVEA     *IN(50)       UWIN              1
         WUN7CD = '0';
     EvalR   TAALK = '1';             1

           If #1DVCD <> *BLANK; //AFH1 KODE
     EvalR   KODAFH = #1DVCD;            3
             EXSR AFHRVA;
     C   50              GOTO      ENDAFH
     EvalR   PRI(1) = BWBZNB;
           ELSE;
     EvalR   PRI(1) = '9';
           Endif;
           If #1DWCD <> *BLANK; //AFH2 KODE
     EvalR   KODAFH = #1DWCD;
             EXSR AFHRVA;
     C   50              GOTO      ENDAFH
     EvalR   PRI(2) = BWBZNB;
           ELSE;
     EvalR   PRI(2) = '9';
           Endif;
           If #1DXCD <> *BLANK; //AFH3 KODE
     EvalR   KODAFH = #1DXCD;
             EXSR AFHRVA;
     C   50              GOTO      ENDAFH
     EvalR   PRI(3) = BWBZNB;
           ELSE;
     EvalR   PRI(3) = '9';
           Endif;
           If #1DYCD <> *BLANK; //AFH4 KODE
     EvalR   KODAFH = #1DYCD;
             EXSR AFHRVA;
     C   50              GOTO      ENDAFH
     EvalR   PRI(4) = BWBZNB;
           ELSE;
     EvalR   PRI(4) = '9';
           Endif;
           If #1EDCD <> *BLANK; //AFH5 KODE
     EvalR   KODAFH = #1EDCD;
             EXSR AFHRVA;
     C   50              GOTO      ENDAFH
     EvalR   PRI(5) = BWBZNB;
           ELSE;
     EvalR   PRI(5) = '9';
           Endif;
           If #1EECD <> *BLANK; //AFH6 KODE
     EvalR   KODAFH = #1EECD;
             EXSR AFHRVA;
     C   50              GOTO      ENDAFH
     EvalR   PRI(6) = BWBZNB;
           ELSE;
     EvalR   PRI(6) = '9';
           Endif;
     C     ENDAFH        TAG
     C                   MOVEA     UWIN          *IN(50)

            // Sw67=1 foutieve kode afhouding
            // CASE: WRK.Switch67 is EQ 1
           If WUN7CD = '1'; //*IF
              // Send message 'Foutieve kode afhouding!'
         ZAMSID = 'USR0517';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Opvullen besl/TV afh1-6:5 - Wkl betaling  *
     EvalR   WUOACD = '0';                         SW70
     EvalR   WUQUCD = '0';            1            BLINK AFH1 NEGATIEF
     EvalR   WUQVCD = '0';            1            BLINK AFH2 NEGATIEF
     EvalR   WUQWCD = '0';            1            BLINK AFH3 NEG
     EvalR   WUQXCD = '0';            1            BLINK AFH4 NEG
     EvalR   WUQYCD = '0';            1            BLINK AFH5 NEG
     EvalR   WUQZCD = '0';            1            BLINK AFH6 NEG
     EvalR   S00 = 'S00';               3
     C                   MOVEA     *IN(50)       UWIN              1
            //* AFHOUDING1 = S00 (GEWIJZIGD 30/01/2001 S00->R..)
           If #1A4CD = *BLANK OR #1A4CD = 'B ' OR #1A4CD = 'S ' OR #1A1CD = '15';
             HNET1 = HWKL + HBEDBZ;
             HNET1 = HNET1 + HBEDVO;
             HNET2 = HNET1 - HTAKS;
             HNET = HNET2 - RWP;
           ELSE;
             HNET1 = HWKL;
             HNET2 = HWKL - HTAKSW;
             HNET = HNET2 - RWP;
           Endif; //BZ=BL,B,T,..
            // HNET =BEDRAG OM TV,ONDERHOUD EN BESLAGEN VANAF O01 TE BEREKENEN
           //AFD
           //LIDNR
           //BESL/ONDERHO
           //AFD
           //LIDNR
           //TV KODE
            // AFHOUDING1 NIET S00 EN INGEVULD
           If #1DVCD <> *BLANK;
             If #1DVCD <> 'S00';
         KOAFH1 = #1DVCD;            1
         KOAFH = #1DVCD;             3
         KOTV = #1OYCD;              3
               If KOAFH1 = 'O' OR KOAFH1 = 'S';
                 CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                 If NOT *In50;
                   If BOBVCD = 'P';
                 Endif;
                   BAFH1 = HNET * BOG8NB;
                   EVAL(H) HAFH1B = BAFH1 / 100;
                   #1GZNB = HAFH1B;
                 ELSE; //GEEN P
                   If BOBVCD = 'R';
                     HBREG = HNET;
                     EXSR REGEL;
                     HAFH1B = DEEL33 + DEEL27;
                     HAFH1B = HAFH1B + DEEL25;
                     #1GZNB = HAFH1B;
                   ELSE; //GN P, GN R
                     If BOBVCD = 'L';
                       EXSR LEEFLN;
                       HAFH1B = DEEL33;
                       #1GZNB = HAFH1B;
                     ELSE; //GEEN P OF R OF L
                       HAFH1B = #1GZNB;
                     Endif; //END LEEFLOON L
                   Endif; //END REGEL R
                 Endif; //END PERCENT
                 #1GZNB = HAFH1B;
                 If HAFH1B > BOHWNB;
                   If KOAFH1 <> 'O';
     EvalR   WUQUCD = '*';
                   Endif;
                   If BOBVCD = 'L';
     EvalR   WUQUCD = '*';
                   ENDIF;
                 Endif;
                 If BOHWNB < 0;
                   If KOAFH1 <> 'O';
     EvalR   WUQUCD = '1';
                   Endif;
                   If BOBVCD = 'L';
     EvalR   WUQUCD = '1';
                   ENDIF;
                 Endif;
               ELSE; //GEEN O/S
                 If KOAFH1 = 'R';
                   CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                   If NOT *In50;
                     If BOBVCD = 'P';
                   Endif;
                      //          HWKL      MULT BOG8NB    BAFH1
                     BAFH1 = HNET1 * BOG8NB;
                     EVAL(H) HAFH1B = BAFH1 / 100;
                     #1GZNB = HAFH1B;
                   ELSE; //GEEN P
                     If BOBVCD = 'R';
                       HBREG = HNET1;
                       EXSR REGEL;
                       HAFH1B = DEEL33 + DEEL27;
                       HAFH1B = HAFH1B + DEEL25;
                       #1GZNB = HAFH1B;
                     ELSE; //GEEN P OF R
                       If BOBVCD = 'L';
                         EXSR LEEFLN;
                         HAFH1B = DEEL33;
                         #1GZNB = HAFH1B;
                       ELSE; //GEEN P OF R OF L
                         HAFH1B = #1GZNB;
                       Endif; //END LEEFLOON L
                     Endif; //END REGEL R
                   Endif; //END PERCENT
                   #1GZNB = HAFH1B;
                   If HAFH1B > BOHWNB;
     EvalR   WUQUCD = '3';
                     #1GZNB = BOHWNB;
                     HAFH1B = BOHWNB;
                   Endif;
                 ELSE; //GEEN R
         KOAFH1 = #1OYCD;
                   If KOAFH1 = 'T'; //OF T?????
                     CHAIN (#1AACD:#1AFNB:KOTV) @HZCPIR ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                     If NOT *In50;
                       HAFH1B = #1GZNB;
                     Endif;
                     If HAFH1B <= HZHZ14;
                       #1GZNB = HAFH1B;
                     ELSE;
                       #1GZNB = HZHZ14;
                       HAFH1B = HZHZ14;
                     Endif;
                   Endif; //END G=TV'S
                 Endif; //END R
               Endif; //END S/O
             Endif; //END NT S00
           Endif; //END AFH1 BL
            //* AFHOUDING2
           If #1DWCD <> *BLANK;
         KOAFH2 = #1DWCD;            1
         KOAFH = #1DWCD;             3
         KOTV = #1OZCD;              3
             If KOAFH2 = 'O' OR KOAFH2 = 'S';
               CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
               If NOT *In50;
                 If BOBVCD = 'P';
               Endif;
                 BAFH2 = HNET * BOG8NB;
                 EVAL(H) HAFH2B = BAFH2 / 100;
                 #1G1NB = HAFH2B;
               ELSE; //GEEN P
                 If BOBVCD = 'R';
                   HBREG = HNET;
                   EXSR REGEL;
                   HAFH2B = DEEL33 + DEEL27;
                   HAFH2B = HAFH2B + DEEL25;
                   #1G1NB = HAFH2B;
                 ELSE; //GEEN P OF R
                   If BOBVCD = 'L';
                     EXSR LEEFLN;
                     HAFH2B = DEEL33;
                     #1G1NB = HAFH2B;
                   ELSE; //GEEN P OF R OF L
                     HAFH2B = #1G1NB;
                   Endif; //END LEEFLOON L
                 Endif; //END REGEL R
               Endif; //END PERCENT
               #1G1NB = HAFH2B;
               If HAFH2B > BOHWNB;
                 If KOAFH2 <> 'O';
     EvalR   WUQVCD = '*';
                 Endif;
                 If BOBVCD = 'L';
     EvalR   WUQVCD = '*';
                 ENDIF;
               Endif;
               If BOHWNB < 0;
                 If KOAFH2 <> 'O';
     EvalR   WUQVCD = '1';
                 Endif;
                 If BOBVCD = 'L';
     EvalR   WUQVCD = '1';
                 ENDIF;
               Endif;
             ELSE; //GEEN O OF S.
               If KOAFH2 = 'R';
                 CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                 If NOT *In50;
                   If BOBVCD = 'P';
                 Endif;
                    //          HWKL      MULT BOG8NB    BAFH2
                   BAFH2 = HNET1 * BOG8NB;
                   EVAL(H) HAFH2B = BAFH2 / 100;
                   #1G1NB = HAFH2B;
                 ELSE; //GEEN P
                   If BOBVCD = 'R';
                     HBREG = HNET1;
                     EXSR REGEL;
                     HAFH2B = DEEL33 + DEEL27;
                     HAFH2B = HAFH2B + DEEL25;
                     #1G1NB = HAFH2B;
                   ELSE; //GEEN P OF R
                     If BOBVCD = 'L';
                       EXSR LEEFLN;
                       HAFH2B = DEEL33;
                       #1G1NB = HAFH2B;
                     ELSE; //GEEN P OF R OF L
                       HAFH2B = #1G1NB;
                     Endif; //END LEEFLOON L
                   Endif; //END REGEL R
                 Endif; //END PERCENT
                 #1G1NB = HAFH2B;
                 If HAFH2B > BOHWNB;
     EvalR   WUQVCD = '3';
                   #1G1NB = BOHWNB;
                   HAFH2B = BOHWNB;
                 Endif;
               ELSE; //GEEN R
         KOAFH2 = #1OZCD;
                 If KOAFH2 = 'T'; //OF T?????
                   CHAIN (#1AACD:#1AFNB:KOTV) @HZCPIR ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                   If NOT *In50;
                     HAFH2B = #1G1NB;
                   Endif;
                   If HAFH2B > HZHZ14;
                     #1G1NB = HZHZ14;
                     HAFH2B = HZHZ14;
                   Endif;
                 Endif; //END G=TV'S
               Endif; //END R
             Endif; //END S/O
           Endif; //END AFH2 BL
            // AFHOUDING 3
           If #1DXCD <> *BLANK;
         KOAFH3 = #1DXCD;            1
         KOAFH = #1DXCD;             3
         KOTV = #1O0CD;              3
             If KOAFH3 = 'O' OR KOAFH3 = 'S';
               CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
               If NOT *In50;
                 If BOBVCD = 'P';
               Endif;
                 BAFH3 = HNET * BOG8NB;
                 EVAL(H) HAFH3B = BAFH3 / 100;
                 #1G3NB = HAFH3B;
               ELSE; //GEEN P
                 If BOBVCD = 'R';
                   HBREG = HNET;
                   EXSR REGEL;
                   HAFH3B = DEEL33 + DEEL27;
                   HAFH3B = HAFH3B + DEEL25;
                   #1G3NB = HAFH3B;
                 ELSE; //GEEN P OF R
                   If BOBVCD = 'L';
                     EXSR LEEFLN;
                     HAFH3B = DEEL33;
                     #1G3NB = HAFH3B;
                   ELSE; //GEEN P OF R OF L
                     HAFH3B = #1G3NB;
                   Endif; //END LEEFLOON L
                 Endif; //END REGEL R
               Endif; //END PERCENT
               #1G3NB = HAFH3B;
               If HAFH3B > BOHWNB;
                 If KOAFH3 <> 'O';
     EvalR   WUQWCD = '*';
                 Endif;
                 If BOBVCD = 'L';
     EvalR   WUQWCD = '*';
                 ENDIF;
               Endif;
               If BOHWNB < 0;
                 If KOAFH3 <> 'O';
     EvalR   WUQWCD = '1';
                 Endif;
                 If BOBVCD = 'L';
     EvalR   WUQWCD = '1';
                 ENDIF;
               Endif;
             ELSE; //GEEN O/S
               If KOAFH3 = 'R';
                 CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                 If NOT *In50;
                   If BOBVCD = 'P';
                 Endif;
                    //          HWKL      MULT BOG8NB    BAFH3
                   BAFH3 = HNET1 * BOG8NB;
                   EVAL(H) HAFH3B = BAFH3 / 100;
                   #1G3NB = HAFH3B;
                 ELSE; //GEEN P
                   If BOBVCD = 'R';
                     HBREG = HNET1;
                     EXSR REGEL;
                     HAFH3B = DEEL33 + DEEL27;
                     HAFH3B = HAFH3B + DEEL25;
                     #1G3NB = HAFH3B;
                   ELSE; //GEEN P OF R
                     If BOBVCD = 'L';
                       EXSR LEEFLN;
                       HAFH3B = DEEL33;
                       #1G3NB = HAFH3B;
                     ELSE; //GEEN P OF R OF L
                       HAFH3B = #1G3NB;
                     Endif; //END LEEFLOON L
                   Endif; //END REGEL R
                 Endif; //END PERCENT
                 #1G3NB = HAFH3B;
                 If HAFH3B > BOHWNB;
     EvalR   WUQWCD = '3';
                   #1G3NB = BOHWNB;
                   HAFH3B = BOHWNB;
                 Endif;
               ELSE; //GEEN O OF S.
         KOAFH3 = #1O0CD;
                 If KOAFH3 = 'T'; //OF T?????
                   CHAIN (#1AACD:#1AFNB:KOTV) @HZCPIR ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                   If NOT *In50;
                     HAFH3B = #1G3NB;
                   Endif;
                   If HAFH3B > HZHZ14;
                     #1G3NB = HZHZ14;
                     HAFH3B = HZHZ14;
                   Endif;
                 Endif; //END G=TV'S
               Endif; //END R
             Endif; //END S/O
           Endif; //END AFH3 BL
            // AFHOUDING 4
           If #1DYCD <> *BLANK;
         KOAFH4 = #1DYCD;            1
         KOAFH = #1DYCD;             3
         KOTV = #1O1CD;              3
             If KOAFH4 = 'O' OR KOAFH4 = 'S';
               CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
               If NOT *In50;
                 If BOBVCD = 'P';
               Endif;
                 BAFH4 = HNET * BOG8NB;
                 EVAL(H) HAFH4B = BAFH4 / 100;
                 #1G5NB = HAFH4B;
               ELSE; //GEEN P
                 If BOBVCD = 'R';
                   HBREG = HNET;
                   EXSR REGEL;
                   HAFH4B = DEEL33 + DEEL27;
                   HAFH4B = HAFH4B + DEEL25;
                    //          HAFH4B    ADD  DEEL20    HAFH4B
                   #1G5NB = HAFH4B;
                 ELSE; //GEEN P OF R
                   If BOBVCD = 'L';
                     EXSR LEEFLN;
                     HAFH4B = DEEL33;
                     #1G5NB = HAFH4B;
                   ELSE; //GEEN P OF R OF L
                     HAFH4B = #1G5NB;
                   Endif; //END LEEFLOON L
                 Endif; //END REGEL R
               Endif; //END PERCENT
               #1G5NB = HAFH4B;
               If HAFH4B > BOHWNB;
                 If KOAFH4 <> 'O';
     EvalR   WUQXCD = '*';
                 Endif;
                 If BOBVCD = 'L';
     EvalR   WUQXCD = '*';
                 ENDIF;
               Endif;
               If BOHWNB < 0;
                 If KOAFH4 <> 'O';
     EvalR   WUQXCD = '1';
                 Endif;
                 If BOBVCD = 'L';
     EvalR   WUQXCD = '1';
                 ENDIF;
               Endif;
             ELSE; //GEEN O/S
               If KOAFH4 = 'R';
                 CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                 If NOT *In50;
                   If BOBVCD = 'P';
                 Endif;
                    //          HWKL      MULT BOG8NB    BAFH4
                   BAFH4 = HNET1 * BOG8NB;
                   EVAL(H) HAFH4B = BAFH4 / 100;
                   #1G5NB = HAFH4B;
                 ELSE; //GEEN P
                   If BOBVCD = 'R';
                     HBREG = HNET1;
                     EXSR REGEL;
                     HAFH4B = DEEL33 + DEEL27;
                     HAFH4B = HAFH4B + DEEL25;
                     #1G5NB = HAFH4B;
                   ELSE; //GEEN P OF R
                     If BOBVCD = 'L';
                       EXSR LEEFLN;
                       HAFH4B = DEEL33;
                       #1G5NB = HAFH4B;
                     ELSE; //GEEN P OF R OF L
                       HAFH4B = #1G5NB;
                     Endif; //END LEEFLOON L
                   Endif; //END REGEL R
                 Endif; //END PERCENT
                 #1G5NB = HAFH4B;
                 If HAFH4B > BOHWNB;
     EvalR   WUQXCD = '3';
                   #1G5NB = BOHWNB;
                   HAFH4B = BOHWNB;
                 Endif;
               ELSE; //GEEN R
         KOAFH4 = #1O1CD;
                 If KOAFH4 = 'T'; //OF T?????
                   CHAIN (#1AACD:#1AFNB:KOTV) @HZCPIR ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                   If NOT *In50;
                     HAFH4B = #1G5NB;
                   Endif;
                   If HAFH4B > HZHZ14;
                     #1G5NB = HZHZ14;
                     HAFH4B = HZHZ14;
                   Endif;
                 Endif; //END G=TV'S
               Endif; //END R
             Endif; //END S/O
           Endif; //END AFH4 BL
            // AFHOUDING 5
           If #1EDCD <> *BLANK;
         KOAFH5 = #1EDCD;            1
         KOAFH = #1EDCD;             3
         KOTV = #1O2CD;              3
             If KOAFH5 = 'O' OR KOAFH5 = 'S';
               CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
               If NOT *In50;
                 If BOBVCD = 'P';
               Endif;
                 BAFH5 = HNET * BOG8NB;
                 EVAL(H) HAFH5B = BAFH5 / 100;
                 #1HDNB = HAFH5B;
               ELSE; //GEEN P
                 If BOBVCD = 'R';
                   HBREG = HNET;
                   EXSR REGEL;
                   HAFH5B = DEEL33 + DEEL27;
                   HAFH5B = HAFH5B + DEEL25;
                    //          HAFH5B    ADD  DEEL20    HAFH5B
                   #1HDNB = HAFH5B;
                 ELSE; //GEEN P OF R
                   If BOBVCD = 'L';
                     EXSR LEEFLN;
                     HAFH5B = DEEL33;
                     #1HDNB = HAFH5B;
                   ELSE; //GEEN P OF R OF L
                     HAFH5B = #1HDNB;
                   Endif; //END LEEFLOON L
                 Endif; //END REGEL R
               Endif; //END PERCENT
               #1HDNB = HAFH5B;
               If HAFH5B > BOHWNB;
                 If KOAFH5 <> 'O';
     EvalR   WUQYCD = '*';
                 Endif;
                 If BOBVCD = 'L';
     EvalR   WUQYCD = '*';
                 ENDIF;
               Endif;
               If BOHWNB < 0;
                 If KOAFH5 <> 'O';
     EvalR   WUQYCD = '1';
                 Endif;
                 If BOBVCD = 'L';
     EvalR   WUQYCD = '1';
                 ENDIF;
               Endif;
             ELSE; //GEEN O/S
               If KOAFH5 = 'R';
                 CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                 If NOT *In50;
                   If BOBVCD = 'P';
                 Endif;
                    //          HWKL      MULT BOG8NB    BAFH5
                   BAFH5 = HNET1 * BOG8NB;
                   EVAL(H) HAFH5B = BAFH5 / 100;
                   #1HDNB = HAFH5B;
                 ELSE; //GEEN P
                   If BOBVCD = 'R';
                     HBREG = HNET1;
                     EXSR REGEL;
                     HAFH5B = DEEL33 + DEEL27;
                     HAFH5B = HAFH5B + DEEL25;
                     #1HDNB = HAFH5B;
                   ELSE; //GEEN P OF R
                     If BOBVCD = 'L';
                       EXSR LEEFLN;
                       HAFH5B = DEEL33;
                       #1HDNB = HAFH5B;
                     ELSE; //GEEN P OF R OF L
                       HAFH5B = #1HDNB;
                     Endif; //END LEEFLOON L
                   Endif; //END REGEL R
                 Endif; //END PERCENT
                 #1HDNB = HAFH5B;
                 If HAFH5B > BOHWNB;
     EvalR   WUQYCD = '3';
                   #1HDNB = BOHWNB;
                   HAFH5B = BOHWNB;
                 Endif;
               ELSE; //GEEN R
         KOAFH5 = #1O2CD;
                 If KOAFH5 = 'T'; //OF T?????
                   CHAIN (#1AACD:#1AFNB:KOTV) @HZCPIR ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                   If NOT *In50;
                     HAFH5B = #1HDNB;
                   Endif;
                   If HAFH5B > HZHZ14;
                     #1HDNB = HZHZ14;
                     HAFH5B = HZHZ14;
                   Endif;
                 Endif; //END G=TV'S
               Endif; //END R
             Endif; //END S/O
           Endif; //END AFH5 BL
            // AFHOUDING 6
           If #1EECD <> *BLANK;
         KOAFH6 = #1EECD;            1
         KOAFH = #1EECD;             3
         KOTV = #1O3CD;              3
             If KOAFH6 = 'O' OR KOAFH6 = 'S';
               CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
               If NOT *In50;
                 If BOBVCD = 'P';
               Endif;
                 BAFH6 = HNET * BOG8NB;
                 EVAL(H) HAFH6B = BAFH6 / 100;
                 #1HFNB = HAFH6B;
               ELSE; //GEEN P
                 If BOBVCD = 'R';
                   HBREG = HNET;
                   EXSR REGEL;
                   HAFH6B = DEEL33 + DEEL27;
                   HAFH6B = HAFH6B + DEEL25;
                    //          HAFH6B    ADD  DEEL20    HAFH6B
                   #1HFNB = HAFH6B;
                 ELSE; //GEEN P OF R
                   If BOBVCD = 'L';
                     EXSR LEEFLN;
                     HAFH6B = DEEL33;
                     #1HFNB = HAFH6B;
                   ELSE; //GEEN P OF R OF L
                     HAFH6B = #1HFNB;
                   Endif; //END LEEFLOON L
                 Endif; //END REGEL R
               Endif; //END PERCENT
               #1HFNB = HAFH6B;
               If HAFH6B > BOHWNB;
                 If KOAFH6 <> 'O';
     EvalR   WUQZCD = '*';
                 Endif;
                 If BOBVCD = 'L';
     EvalR   WUQZCD = '*';
                 ENDIF;
               Endif;
               If BOHWNB < 0;
                 If KOAFH6 <> 'O';
     EvalR   WUQZCD = '1';
                 Endif;
                 If BOBVCD = 'L';
     EvalR   WUQZCD = '1';
                 ENDIF;
               Endif;
             ELSE; //GEEN O/S
               If KOAFH6 = 'R';
                 CHAIN (#1AACD:#1AFNB:KOAFH) @BOCPEO ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                 If NOT *In50;
                   If BOBVCD = 'P';
                 Endif;
                    //          HWKL      MULT BOG8NB    BAFH6
                   BAFH6 = HNET1 * BOG8NB;
                   EVAL(H) HAFH6B = BAFH6 / 100;
                   #1HFNB = HAFH6B;
                 ELSE; //GEEN P
                   If BOBVCD = 'R';
                     HBREG = HNET1;
                     EXSR REGEL;
                     HAFH6B = DEEL33 + DEEL27;
                     HAFH6B = HAFH6B + DEEL25;
                      //          HAFH6B    ADD  DEEL20    HAFH6B
                     #1HFNB = HAFH6B;
                   ELSE; //GEEN P OF R
                     If BOBVCD = 'L';
                       EXSR LEEFLN;
                       HAFH6B = DEEL33;
                       #1HFNB = HAFH6B;
                     ELSE; //GEEN P OF R OF L
                       HAFH6B = #1HFNB;
                     Endif; //END LEEFLOON L
                   Endif; //END REGEL R
                 Endif; //END PERCENT
                 #1HFNB = HAFH6B;
                 If HAFH6B > BOHWNB;
     EvalR   WUQZCD = '3';
                   #1HFNB = BOHWNB;
                   HAFH6B = BOHWNB;
                 Endif;
               ELSE; //GEEN R
         KOAFH6 = #1O3CD;
                 If KOAFH6 = 'T';
                   CHAIN (#1AACD:#1AFNB:KOTV) @HZCPIR ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDREG
                   If NOT *In50;
                     HAFH6B = #1HFNB;
                   Endif;
                   If HAFH6B > HZHZ14;
                     #1HFNB = HZHZ14;
                     HAFH6B = HZHZ14;
                   Endif;
                 Endif; //END G=TV'S
               Endif; //END R
             Endif; //END S/O
           Endif; //END AFH6 BL

            //                    ENDIF                           TYPE 12
     C     ENDREG        TAG
     C                   MOVEA     UWIN          *IN(50)
            //---------------------------------------------------------------
            // SUBROUTINE REGEL R BEREKENEN                                 *
            // Sw70 = 1 : kan regel R niet toepassen, netto te klein : info mess
            // CASE: WRK.Switch70 is Eq 1
           If WUOACD = '1'; //*IF
              // Send message 'Netto<27000:regel nt moge'
         ZAMSID = 'USR0424';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Sw70 = 2 : kan Leefln L niet toepassen, netto te klein : info mes
            // CASE: WRK.Switch70 is 2
           If WUOACD = '2'; //*IF
              // Send message 'Leefloon : kan regel L nt'
         ZAMSID = 'USR5138';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Controle wkl-afh=0->gn BC - Wkl betaling  *
           HTOT1 = 0;
           HTOT2 = 0;
           HTOT = 0;
           PLUSAF = 0;
           AFTRAF = 0;
           HTOT1 = HWKL + HBEDBZ;
           HTOT1 = HTOT1 + HBEDVO;
           HTOT1 = HTOT1 + HBBVO;
           HTOT2 = HTOT1 - HTAKS;
           HTOT = HTOT2 - RWP;

           If #1DVCD = 'TB-' OR #1DVCD = 'TG-' OR #1DVCD = 'IR-'; //AFH1
             PLUSAF = PLUSAF + #1GZNB;
           ELSE;
             AFTRAF = AFTRAF + #1GZNB;
           Endif;
           If #1DWCD = 'TB-' OR #1DWCD = 'TG-' OR #1DWCD = 'IR-'; //AFH2
             PLUSAF = PLUSAF + #1G1NB;
           ELSE;
             AFTRAF = AFTRAF + #1G1NB;
           Endif;
           If #1DXCD = 'TB-' OR #1DXCD = 'TG-' OR #1DXCD = 'IR-'; //AFH3
             PLUSAF = PLUSAF + #1G3NB;
           ELSE;
             AFTRAF = AFTRAF + #1G3NB;
           Endif;
           If #1DYCD = 'TB-' OR #1DYCD = 'TG-' OR #1DYCD = 'IR-'; //AFH4
             PLUSAF = PLUSAF + #1G5NB;
           ELSE;
             AFTRAF = AFTRAF + #1G5NB;
           Endif;
           If #1EDCD = 'TB-' OR #1EDCD = 'TG-' OR #1EDCD = 'IR-'; //AFH5
             PLUSAF = PLUSAF + #1HDNB;
           ELSE;
             AFTRAF = AFTRAF + #1HDNB;
           Endif;
           If #1EECD = 'TB-' OR #1EECD = 'TG-' OR #1EECD = 'IR-'; //AFH6
             PLUSAF = PLUSAF + #1HFNB;
           ELSE;
             AFTRAF = AFTRAF + #1HFNB;
           Endif;

           CONTR1 = 0;
           CONTR1 = HTOT - AFTRAF;
           CONTR1 = CONTR1 + PLUSAF;
           If CONTR1 = 0;
     EvalR   WUQ3CD = '0';                         <15 MND:GN BERICHT B
           Endif;
            // Sw90:Achterstal bijdr. >15 maanden & gn BC/X2 ingevuld--> error m
            // CASE:
            //  - c1ANDc2
            //   !- c1    : WRK.Switch90 is 1
            //   !- c2    : DTL.Lid nr is LT 900000
            //   '-
         Y0CX01 = '0';            1
           If WUQ3CD = '1'; //*IF
             If #1AFNB < @CN(006); //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // Setup message data for message
             ZA0154 = #1LPNB; //BC aantal
         ZA0155 = #1CLCD;                         Kateg kode
              // Convert Kateg jjmm to external.

             UIDTM2 = #1E9NB;
             UDTMC2 = UDTM12;
             UDTMY2 = UDTM22;
             UDTMM2 = UDTM32;
             ZA0156 = UEDTM2;
         ZA0157 = #1CMCD;                         Betalingsw kode
              // Send message 'Verplicht 1BC in te geven'
         ZAMSID = 'USR0508';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           Endif; //*FI
            // Afhx niet blank en bedragx=0 --> error (afh1-->afh6)
            // CASE: WRK.Wrk switch hidden zetten is 0
           If WUCA75 = '0'; //*IF
              // Afh1 nt blank en bedrag1=0-->error
              // CASE: DTL.Afh1 kode is nt blank
             If #1DVCD <> *BLANK; //*IF
                // CASE: DTL.Afh1 bedrag is = 0
               If #1GZNB = *ZERO; //*IF
                  // Send message 'Kode afh. zonder bedrag'
         ZAMSID = 'USR0466';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh2 nt blank en bedrag2=0--> error
              // CASE: DTL.Afh2 kode is nt blank
             If #1DWCD <> *BLANK; //*IF
                // CASE: DTL.Afh2 bedrag is = 0
               If #1G1NB = *ZERO; //*IF
                  // Send message 'Kode afh. zonder bedrag'
         ZAMSID = 'USR0466';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh3 nt blank en bedrag3=0--> error
              // CASE: DTL.Afh3 kode is nt blank
             If #1DXCD <> *BLANK; //*IF
                // CASE: DTL.Afh3 bedrag is = 0
               If #1G3NB = *ZERO; //*IF
                  // Send message 'Kode afh. zonder bedrag'
         ZAMSID = 'USR0466';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh4 nt blank en bedrag4=0--> error
              // CASE: DTL.Afh4 kode is nt blank
             If #1DYCD <> *BLANK; //*IF
                // CASE: DTL.Afh4 bedrag is = 0
               If #1G5NB = *ZERO; //*IF
                  // Send message 'Kode afh. zonder bedrag'
         ZAMSID = 'USR0466';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh5 nt blank en bedrag5=0--> error
              // CASE: DTL.Afh5 kode is nt blank
             If #1EDCD <> *BLANK; //*IF
                // CASE: DTL.Afh5 bedrag is = 0
               If #1HDNB = *ZERO; //*IF
                  // Send message 'Kode afh. zonder bedrag'
         ZAMSID = 'USR0466';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh6 nt blank en bedrag6=0--> error
              // CASE: DTL.Afh6 kode is nt blank
             If #1EECD <> *BLANK; //*IF
                // CASE: DTL.Afh6 bedrag is = 0
               If #1HFNB = *ZERO; //*IF
                  // Send message 'Kode afh. zonder bedrag'
         ZAMSID = 'USR0466';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Afhx bedrag niet 0 en kode afhx blank --> error : (afh1-->afh6)
            // CASE: WRK.Wrk switch hidden zetten is 0
           If WUCA75 = '0'; //*IF
              // Afh1 bedrag niet 0 en kode afh1 blank -->error
              // CASE: DTL.Afh1 bedrag is nt 0
             If #1GZNB <> *ZERO; //*IF
                // CASE: DTL.Afh1 kode is blank
               If #1DVCD = *BLANK; //*IF
                  // Send message 'Bedrag afh. zonder kode!'
         ZAMSID = 'USR0468';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // CASE: DTL.Afh1 datum is nt 0
               If #1G0NB <> *ZERO; //*IF
                  // Send message 'Datum afh. zonder bedrag'
         ZAMSID = 'USR0874';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh2 bedrag niet 0 en kode afh2 blank -->error
              // CASE: DTL.Afh2 bedrag is nt 0
             If #1G1NB <> *ZERO; //*IF
                // CASE: DTL.Afh2 kode is blank
               If #1DWCD = *BLANK; //*IF
                  // Send message 'Bedrag afh. zonder kode!'
         ZAMSID = 'USR0468';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // CASE: DTL.Afh2 datum is nt 0
               If #1G2NB <> *ZERO; //*IF
                  // Send message 'Datum afh. zonder bedrag'
         ZAMSID = 'USR0874';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh3 bedrag niet 0 en kode afh3 blank -->error
              // CASE: DTL.Afh3 bedrag is nt 0
             If #1G3NB <> *ZERO; //*IF
                // CASE: DTL.Afh3 kode is blank
               If #1DXCD = *BLANK; //*IF
                  // Send message 'Bedrag afh. zonder kode!'
         ZAMSID = 'USR0468';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // CASE: DTL.Afh3 datum is nt 0
               If #1G4NB <> *ZERO; //*IF
                  // Send message 'Datum afh. zonder bedrag'
         ZAMSID = 'USR0874';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh4 bedrag niet 0 en kode afh4 blank -->error
              // CASE: DTL.Afh4 bedrag is nt 0
             If #1G5NB <> *ZERO; //*IF
                // CASE: DTL.Afh4 kode is blank
               If #1DYCD = *BLANK; //*IF
                  // Send message 'Bedrag afh. zonder kode!'
         ZAMSID = 'USR0468';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // CASE: DTL.Afh4 datum is nt 0
               If #1G6NB <> *ZERO; //*IF
                  // Send message 'Datum afh. zonder bedrag'
         ZAMSID = 'USR0874';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh5 bedrag niet 0 en kode afh5 blank -->error
              // CASE: DTL.Afh5 bedrag is nt 0
             If #1HDNB <> *ZERO; //*IF
                // CASE: DTL.Afh5 kode is blank
               If #1EDCD = *BLANK; //*IF
                  // Send message 'Bedrag afh. zonder kode!'
         ZAMSID = 'USR0468';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // CASE: DTL.Afh5 datum is nt 0
               If #1HENB <> *ZERO; //*IF
                  // Send message 'Datum afh. zonder bedrag'
         ZAMSID = 'USR0874';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh6 bedrag niet 0 en kode afh6 blank -->error
              // CASE: DTL.Afh6 bedrag is nt 0
             If #1HFNB <> *ZERO; //*IF
                // CASE: DTL.Afh6 kode is blank
               If #1EECD = *BLANK; //*IF
                  // Send message 'Bedrag afh. zonder kode!'
         ZAMSID = 'USR0468';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // CASE: DTL.Afh6 datum is nt 0
               If #1HGNB <> *ZERO; //*IF
                  // Send message 'Datum afh. zonder bedrag'
         ZAMSID = 'USR0874';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Afhx=TV en datumx uitgeblankt --> error : (afh1-->afh6)
            // CASE: WRK.Wrk switch hidden zetten is 0
           If WUCA75 = '0'; //*IF
              // Afh1=TV en datum uitgeblankt--> error
              // CASE: DTL.Afh1 kode TV is T01-T99
             If #1OYCD >= 'T01' AND #1OYCD <= 'T99'; //*IF
                // CASE: DTL.Afh1 datum is = 0
               If #1G0NB = *ZERO; //*IF
                  // Send message 'TV kode zonder datum'
         ZAMSID = 'USR0467';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh2=TV en datum uitgeblankt-->error
              // CASE: DTL.Afh2 kode TV is T01-T99
             If #1OZCD >= 'T01' AND #1OZCD <= 'T99'; //*IF
                // CASE: DTL.Afh2 datum is = 0
               If #1G2NB = *ZERO; //*IF
                  // Send message 'TV kode zonder datum'
         ZAMSID = 'USR0467';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh3=TV en datum uitgeblankt-->error
              // CASE: DTL.Afh3 kode TV is T01-T99
             If #1O0CD >= 'T01' AND #1O0CD <= 'T99'; //*IF
                // CASE: DTL.Afh3 datum is = 0
               If #1G4NB = *ZERO; //*IF
                  // Send message 'TV kode zonder datum'
         ZAMSID = 'USR0467';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh4=TV en datum uitgeblankt--> error
              // CASE: DTL.Afh4 kode TV is T01-T99
             If #1O1CD >= 'T01' AND #1O1CD <= 'T99'; //*IF
                // CASE: DTL.Afh4 datum is = 0
               If #1G6NB = *ZERO; //*IF
                  // Send message 'TV kode zonder datum'
         ZAMSID = 'USR0467';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh5=TV en datum uitgeblankt-->error
              // CASE: DTL.Afh5 kode TV is T01-T99
             If #1O2CD >= 'T01' AND #1O2CD <= 'T99'; //*IF
                // CASE: DTL.Afh5 datum is = 0
               If #1HENB = *ZERO; //*IF
                  // Send message 'TV kode zonder datum'
         ZAMSID = 'USR0467';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Afh6=TV en datum uitgeblankt--> error
              // CASE: DTL.Afh6 kode TV is T01-T99
             If #1O3CD >= 'T01' AND #1O3CD <= 'T99'; //*IF
                // CASE: DTL.Afh6 datum is = 0
               If #1HGNB = *ZERO; //*IF
                  // Send message 'TV kode zonder datum'
         ZAMSID = 'USR0467';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Bedrag afhx < 0 --> error : (afh1-->afh6)
            // CASE: WRK.Wrk switch hidden zetten is 0
           If WUCA75 = '0'; //*IF
              // Bedrag afh1 < 0 --> error
              // CASE: DTL.Afh1 bedrag is < 0
             If #1GZNB < *ZERO; //*IF
                // Setup message data for message
               ZA0158 = #1GZNB; //Afh1 bedrag
                // Send message 'Bedrag afh1 negatief!'
         ZAMSID = 'USR0608';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // Bedrag afh2 < 0 --> error
              // CASE: DTL.Afh2 bedrag is < 0
             If #1G1NB < *ZERO; //*IF
                // Setup message data for message
               ZA0159 = #1G1NB; //Afh2 bedrag
                // Send message 'Bedrag afh2 negatief!'
         ZAMSID = 'USR0609';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // Bedrag afh3 < 0 --> error
              // CASE: DTL.Afh3 bedrag is < 0
             If #1G3NB < *ZERO; //*IF
                // Setup message data for message
               ZA0160 = #1G3NB; //Afh3 bedrag
                // Send message 'Bedrag afh3 negatief!'
         ZAMSID = 'USR0610';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                // Prompt voor fouten/info - Foutenlijsten pop-up  *
               CLEAR   PCRC;
     C                   MOVEL(P)  'AFH03'       PCJECL                         Foutenlijsten T
     C                   MOVEL(P)  WUWJCF        PCJFCL                         Foutenlijsten t

               //Prompt voor fou
               //KEY: Foutenlijs

               L0ALPVR(W0RTN:PCRC);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'L0ALPVR';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
               Endif;
             Endif; //*FI
              // Bedrag afh4 < 0 --> error
              // CASE: DTL.Afh4 bedrag is < 0
             If #1G5NB < *ZERO; //*IF
                // Setup message data for message
               ZA0161 = #1G5NB; //Afh4 bedrag
                // Send message 'Bedrag afh4 negatief!'
         ZAMSID = 'USR0611';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // Bedrag afh5 < 0 --> error
              // CASE: DTL.Afh5 bedrag is < 0
             If #1HDNB < *ZERO; //*IF
                // Setup message data for message
               ZA0162 = #1HDNB; //Afh5 bedrag
                // Send message 'Bedrag afh5 negatief!'
         ZAMSID = 'USR0612';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
              // Bedrag afh6 < 0 --> error
              // CASE: DTL.Afh6 bedrag is < 0
             If #1HFNB < *ZERO; //*IF
                // Setup message data for message
               ZA0163 = #1HFNB; //Afh6 bedrag
                // Send message 'Bedrag afh6 negatief!'
         ZAMSID = 'USR0613';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Bedrag afhx = 1fr <= 0,02 euro --> error voor O's en S'en : (afh1
            // CASE: WRK.Wrk switch hidden zetten is 0
           If WUCA75 = '0'; //*IF
              // Bedrag afh1=1--> error voor O's
              // CASE: DTL.Afh1 kode is O01-O99
             If #1DVCD >= 'O01' AND #1DVCD <= 'O99'; //*IF
                // Bedrag afh1 = 1 --> error
                // CASE: DTL.Afh1 bedrag is <= 0,02
               If #1GZNB <= 0.02; //*IF
                  // Send message 'Bedrag afh1 foutief!!'
         ZAMSID = 'USR0837';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Bedrag afh1=1--> error voor S's
              // CASE: DTL.Afh1 kode is S00-S99
             If #1DVCD >= 'S00' AND #1DVCD <= 'S99'; //*IF
                // Bedrag afh1 = 1 --> error
                // CASE: DTL.Afh1 bedrag is <= 0,02
               If #1GZNB <= 0.02; //*IF
                  // Send message 'Bedrag afh1 foutief!!'
         ZAMSID = 'USR0837';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Bedrag afh2=1 --> error voor O's
              // CASE: DTL.Afh2 kode is O01-O99
             If #1DWCD >= 'O01' AND #1DWCD <= 'O99'; //*IF
                // Bedrag afh2 = 1 --> error
                // CASE: DTL.Afh2 bedrag is <= 0,02
               If #1G1NB <= 0.02; //*IF
                  // Send message 'Bedrag afh2 foutief!!'
         ZAMSID = 'USR0838';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Bedrag afh2=1 --> error voor S's
              // CASE: DTL.Afh2 kode is S00-S99
             If #1DWCD >= 'S00' AND #1DWCD <= 'S99'; //*IF
                // Bedrag afh2 = 1 --> error
                // CASE: DTL.Afh2 bedrag is <= 0,02
               If #1G1NB <= 0.02; //*IF
                  // Send message 'Bedrag afh2 foutief!!'
         ZAMSID = 'USR0838';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Bedrag afh3=1 --> error voor O's
              // CASE: DTL.Afh3 kode is O01-O99
             If #1DXCD >= 'O01' AND #1DXCD <= 'O99'; //*IF
                // Bedrag afh3 = 1 --> error
                // CASE: DTL.Afh3 bedrag is <= 0,02
               If #1G3NB <= 0.02; //*IF
                  // Send message 'Bedrag afh3 foutief!!'
         ZAMSID = 'USR0839';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Bedrag afh3=1 --> error voor S's
              // CASE: DTL.Afh3 kode is S00-S99
             If #1DXCD >= 'S00' AND #1DXCD <= 'S99'; //*IF
                // Bedrag afh3 = 1 --> error
                // CASE: DTL.Afh3 bedrag is <= 0,02
               If #1G3NB <= 0.02; //*IF
                  // Send message 'Bedrag afh3 foutief!!'
         ZAMSID = 'USR0839';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Bedrag afh4=1 --> error voor O's
              // CASE: DTL.Afh4 kode is O01-O99
             If #1DYCD >= 'O01' AND #1DYCD <= 'O99'; //*IF
                // Bedrag afh4 = 1 --> error
                // CASE: DTL.Afh4 bedrag is <= 0,02
               If #1G5NB <= 0.02; //*IF
                  // Send message 'Bedrag afh4 foutief!!'
         ZAMSID = 'USR0840';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Bedrag afh4=1 --> error voor S's
              // CASE: DTL.Afh4 kode is S00-S99
             If #1DYCD >= 'S00' AND #1DYCD <= 'S99'; //*IF
                // Bedrag afh4 = 1 --> error
                // CASE: DTL.Afh4 bedrag is <= 0,02
               If #1G5NB <= 0.02; //*IF
                  // Send message 'Bedrag afh4 foutief!!'
         ZAMSID = 'USR0840';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Bedrag afh5=1 --> error voor O's
              // CASE: DTL.Afh5 kode is O01-O99
             If #1EDCD >= 'O01' AND #1EDCD <= 'O99'; //*IF
                // Bedrag afh5 = 1 --> error
                // CASE: DTL.Afh5 bedrag is <= 0,02
               If #1HDNB <= 0.02; //*IF
                  // Send message 'Bedrag afh5 foutief!!'
         ZAMSID = 'USR0841';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Bedrag afh5=1 --> error voor S's
              // CASE: DTL.Afh5 kode is S00-S99
             If #1EDCD >= 'S00' AND #1EDCD <= 'S99'; //*IF
                // Bedrag afh5 = 1 --> error
                // CASE: DTL.Afh5 bedrag is <= 0,02
               If #1HDNB <= 0.02; //*IF
                  // Send message 'Bedrag afh5 foutief!!'
         ZAMSID = 'USR0841';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Bedrag afh6=1 --> error voor O's
              // CASE: DTL.Afh6 kode is O01-O99
             If #1EECD >= 'O01' AND #1EECD <= 'O99'; //*IF
                // Bedrag afh6 = 1 --> error
                // CASE: DTL.Afh6 bedrag is <= 0,02
               If #1HFNB <= 0.02; //*IF
                  // Send message 'Bedrag afh6 foutief!!'
         ZAMSID = 'USR0842';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
              // Bedrag afh6=1 --> error voor S's
              // CASE: DTL.Afh6 kode is S00-S99
             If #1EECD >= 'S00' AND #1EECD <= 'S99'; //*IF
                // Bedrag afh6 = 1 --> error
                // CASE: DTL.Afh6 bedrag is <= 0,02
               If #1HFNB <= 0.02; //*IF
                  // Send message 'Bedrag afh6 foutief!!'
         ZAMSID = 'USR0842';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Afhx=GP kan enkel bij BZ=K, anders error : (afh1-->afh6)
            // CASE: WRK.Wrk switch hidden zetten is 0
           If WUCA75 = '0'; //*IF
              // Afh1-> = GP : kan enkel bij BZ-kode K
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5ORc6
              //   !- c1    : DTL.Afh1 kode is = GP
              //   !- c2    : DTL.Afh2 kode is = GP
              //   !- c3    : DTL.Afh3 kode is = GP
              //   !- c4    : DTL.Afh4 kode is = GP
              //   !- c5    : DTL.Afh5 kode is = GP
              //   !- c6    : DTL.Afh6 kode is = GP
              //   '-
             If #1DVCD = 'GP' OR #1DWCD = 'GP' OR #1DXCD = 'GP' OR #1DYCD = 'GP' OR #1EDCD = 'GP' OR #1EECD = 'GP'; //*IF
                // CASE: DTL.BZ kode is niet K
               If #1A4CD <> 'K'; //*IF
                  // Send message 'GP enkel bij BZ kode = K'
         ZAMSID = 'USR1006';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // BZ=DZ/PZ/VZ/FZ : oproepen progr. metaal fm03-fm33/FM04-FM44
            // CASE:
            //  - c1ORc2ORc3ORc4
            //   !- c1    : DTL.BZ kode is DZ
            //   !- c2    : DTL.BZ kode is PZ
            //   !- c3    : DTL.BZ kode is VZ
            //   !- c4    : DTL.BZ kode is FZ
            //   '-
           If #1A4CD = 'DZ' OR #1A4CD = 'PZ' OR #1A4CD = 'VZ' OR #1A4CD = 'FZ'; //*IF
         WUWUME = #1AACD;                         Wrk metaal afd
         WUWUMM = #1AFNB;                         Wrk metaal lidn
             WUMET2 = #1GWNB; //Wrk metaal refe
         WUMET4 = WUMET2;                         wrk metaal ref.
              // Move van ind.maand - Wkl betaling  *
             WUMET1 = BYEENB;
         WUMET3 = WUMET1;                         Wrk metaal ind.
         WUWUBZ = #1A4CD;                         Wrk metaal kode
              // CASE: WRK.jjmmdd LT WRK.Wrk datum Euro
             If WUHUNB < WUP2DD; //*IF
               WUWUB2 = #1GYNB; //WRk metaal bedr
         WUWUB1 = WUWUB2;                         Wrk metaal bedr
             ELSE;
                // CASE: *OTHERWISE
                // CASE: DTL.Bedrag BZ is > 200,00
               If #1GYNB > 200.00; //*IF
                  // Setup message data for message
                 ZA0164 = #1GYNB; //Bedrag BZ
                  // Send message 'Bedrag BZ te groot]'
         ZAMSID = 'USR3848';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
               WUWUB2 = 100 * #1GYNB; //WRk metaal bedr
         WUWUB1 = WUWUB2;                         Wrk metaal bedr
             Endif; //*FI
              // Edit Metaal FM03/FM33 - Metaal FM03 FM33  *
             //Edit Metaal FM0
             //Wrk metaal afd
             //Wrk metaal lidn
             //Wrk metaal ind.
             //wrk metaal ref.
             //Wrk metaal kode
             //Wrk metaal bedr
             //Wrk metaal para

             LVKCE1R(W0RTN:WQ0318:WQ0319:WQ0320:WQ0321:WQ0322:WQ0323:WQ0324);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVKCE1R';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
     C                   COMMIT
              // CASE: WRK.Wrk metaal parameter is No :gn add/change:Cmd3
             If WUPAPA = 'N'; //*IF
         WUPSCD = '1';                         Switch berekeni
                // Send message 'Cmd3 geduwd i.p.v. enter!'
         ZAMSID = 'USR1320';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // Beslag in afhx wordt of is reeds negatief --> info message : (afh
            // CASE: WRK.Wrk switch hidden zetten is 0
           If WUCA75 = '0'; //*IF
              // Beslag in afh1 wordt of is reeds negatief--> info message
              // CASE: WRK.Afh1 negatief is *
             If WUQUCD = '*'; //*IF
                // Setup message data for message
         ZA0165 = #1DVCD;                         Afh1 kode
                // Send message 'Afh1 wordt negatief. OK?'
         ZAMSID = 'USR0502';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             ELSE;
                // CASE: *OTHERWISE
                // CASE: WRK.Afh1 negatief is 1
               If WUQUCD = '1'; //*IF
                  // Setup message data for message
         ZA0166 = #1DVCD;                         Afh1 kode
                  // Send message 'Afh1 is reeds negatief'
         ZAMSID = 'USR0522';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: WRK.Afh1 negatief is 3
                 If WUQUCD = '3'; //*IF
                    // Send message 'Afh R.. komt op nul. Geli'
         ZAMSID = 'USR3787';
         ' = '*INFO;     ZAMSTP                         Message type
                   EXSR ZASNMS;

                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // Beslag in afh2 wordt of is reeds negatief --> info message
              // CASE: WRK.Afh2 negatief is *
             If WUQVCD = '*'; //*IF
                // Setup message data for message
         ZA0167 = #1DWCD;                         Afh2 kode
                // Send message 'Afh2 wordt negatief. OK?'
         ZAMSID = 'USR0503';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             ELSE;
                // CASE: *OTHERWISE
                // CASE: WRK.Afh2 negatief is 1
               If WUQVCD = '1'; //*IF
                  // Setup message data for message
         ZA0168 = #1DWCD;                         Afh2 kode
                  // Send message 'Afh2 is reeds negatief'
         ZAMSID = 'USR0523';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: WRK.Afh2 negatief is 3
                 If WUQVCD = '3'; //*IF
                    // Send message 'Afh R.. komt op nul. Geli'
         ZAMSID = 'USR3787';
         ' = '*INFO;     ZAMSTP                         Message type
                   EXSR ZASNMS;

                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // Beslag in afh3 wordt of is reeds negatief --> info message
              // CASE: WRK.Afh3 negatief is *
             If WUQWCD = '*'; //*IF
                // Setup message data for message
         ZA0169 = #1DXCD;                         Afh3 kode
                // Send message 'Afh3 wordt negatief. OK?'
         ZAMSID = 'USR0504';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             ELSE;
                // CASE: *OTHERWISE
                // CASE: WRK.Afh3 negatief is 1
               If WUQWCD = '1'; //*IF
                  // Setup message data for message
         ZA0170 = #1DXCD;                         Afh3 kode
                  // Send message 'Afh3 is reeds negatief'
         ZAMSID = 'USR0524';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: WRK.Afh3 negatief is 3
                 If WUQWCD = '3'; //*IF
                    // Send message 'Afh R.. komt op nul. Geli'
         ZAMSID = 'USR3787';
         ' = '*INFO;     ZAMSTP                         Message type
                   EXSR ZASNMS;

                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // Beslag in afh4 wordt of is reeds negatief --> info message
              // CASE: WRK.Afh4 negatief is *
             If WUQXCD = '*'; //*IF
                // Setup message data for message
         ZA0171 = #1DYCD;                         Afh4 kode
                // Send message 'Afh4 wordt negatief. OK?'
         ZAMSID = 'USR0505';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             ELSE;
                // CASE: *OTHERWISE
                // CASE: WRK.Afh4 negatief is 1
               If WUQXCD = '1'; //*IF
                  // Setup message data for message
         ZA0172 = #1DYCD;                         Afh4 kode
                  // Send message 'Afh4 is reeds negatief'
         ZAMSID = 'USR0525';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: WRK.Afh4 negatief is 3
                 If WUQXCD = '3'; //*IF
                    // Send message 'Afh R.. komt op nul. Geli'
         ZAMSID = 'USR3787';
         ' = '*INFO;     ZAMSTP                         Message type
                   EXSR ZASNMS;

                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // Beslag in afh5 wordt of is reeds negatief --> info message
              // CASE: WRK.Afh5 negatief is *
             If WUQYCD = '*'; //*IF
                // Setup message data for message
         ZA0173 = #1EDCD;                         Afh5 kode
                // Send message 'Afh5 wordt negatief. OK?'
         ZAMSID = 'USR0506';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             ELSE;
                // CASE: *OTHERWISE
                // CASE: WRK.Afh5 negatief is 1
               If WUQYCD = '1'; //*IF
                  // Setup message data for message
         ZA0174 = #1EDCD;                         Afh5 kode
                  // Send message 'Afh5 is reeds negatief'
         ZAMSID = 'USR0526';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: WRK.Afh5 negatief is 3
                 If WUQYCD = '3'; //*IF
                    // Send message 'Afh R.. komt op nul. Geli'
         ZAMSID = 'USR3787';
         ' = '*INFO;     ZAMSTP                         Message type
                   EXSR ZASNMS;

                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
              // Beslag in afh6 wordt of is reeds negatief --> info message
              // CASE: WRK.Afh6 negatief is *
             If WUQZCD = '*'; //*IF
                // Setup message data for message
         ZA0175 = #1EECD;                         Afh6 kode
                // Send message 'Afh6 wordt negatief. OK?'
         ZAMSID = 'USR0507';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             ELSE;
                // CASE: *OTHERWISE
                // CASE: WRK.Afh6 negatief is 1
               If WUQZCD = '1'; //*IF
                  // Setup message data for message
         ZA0176 = #1EECD;                         Afh6 kode
                  // Send message 'Afh6 is reeds negatief'
         ZAMSID = 'USR0527';
         ' = '*INFO;     ZAMSTP                         Message type
                 EXSR ZASNMS;

               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: WRK.Afh6 negatief is 3
                 If WUQZCD = '3'; //*IF
                    // Send message 'Afh R.. komt op nul. Geli'
         ZAMSID = 'USR3787';
         ' = '*INFO;     ZAMSTP                         Message type
                   EXSR ZASNMS;

                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
         WUFRCD = '0';                         Switch106
           WUCUNN = 0; //Wrk bedrag para
            // Maximum bedrag/type (afzonderlijke tabel)
            // CASE: DTL.BZ kode is = K : Dok maar niet A'pen
           If #1A4CD = 'K'; //*IF
              // Oph. max.bedrag/type :EEF - Type maximum bedrag  *
             CLEAR   AHRC;
     C                   MOVEL(P)  'DO'          AHS0CO                         Max : Type wklh

             //Oph. max.bedrag
             //KEY: Type maxim
             //Switch106
             //Wrk bedrag para

             LWLYXFR(W0RTN:AHRC:WQ0325:WQ0326);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWLYXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           ELSE;
              // CASE: *OTHERWISE
              // Oph. max.bedrag/type :EEF - Type maximum bedrag  *
             CLEAR   AHRC;
     C                   MOVEL(P)  #1A1CD        AHS0CO                         Max : Type wklh

             //Oph. max.bedrag
             //KEY: Type maxim
             //Switch106
             //Wrk bedrag para

             LWLYXFR(W0RTN:AHRC:WQ0327:WQ0328);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWLYXFR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           Endif; //*FI
            // Wkl+BZ>bedr/mnd controle? - Wkl bet  *
            // RRRRRR = WERKLOOSHEID BEDRAG + BZ BEDRAG + BEDRAG VORST
     EvalR   WUPECD = '0';                         SW84
     EvalR   WUW198 = '0';                         SW198
           RRRRRR = 0;
           RRRRRR = HWKL + HBEDBZ;
           RRRRRR = RRRRRR + HBEDVO; //+ VORSTBEDRAG
           RMPAR = #1GWNB;
           RRRRWK = 0;
           RRRRBZ = 0;
           //71,... OOK MEETELLEN
           //AFD
           //LIDNR
           //REF.MND
           //TYPE WKL
           MDTOTBDR(#1AACD:#1AFNB:RMPAR:#1A1CD:RRRRWK:RRRRBZ);
             If WUFRCD <> 'Y';
             RRRRRR = RRRRRR + RRRRWK;
             RRRRRR = RRRRRR + RRRRBZ;
             If RRRRRR > BYEBNB; //>MAX BEDR/MND
     EvalR   WUPECD = '1';
             Endif;
           ELSE; //SW106=Y
             If RRRRRR > WUCUNN; //BEDRAG TABEL
     EvalR   WUPECD = '1';
             ENDIF;
             RRRRRR = RRRRRR + RRRRWK;
             RRRRRR = RRRRRR + RRRRBZ;
             If #1A1CD = '52' OR #1A1CD = '51' OR #1A1CD = '53' OR #1A1CD = '34' OR #1A1CD = '35' OR #1A1CD = '36' OR #1A1CD = '37' OR #1A1CD = '38' OR #1A1CD = '39' OR #1A1CD = '44' OR #1A1CD = '45' OR #1A1CD = '46' OR #1A1CD = '47' OR #1A1CD = '48' OR #1A1CD = '49' OR #1A4CD = 'K ' OR #1AACD = '04';
               If RRRRRR > WUCUNN; //BEDRAG TABEL
     EvalR   WUPECD = '1';
               ENDIF;
             ELSE;
               If RRRRRR > BYEBNB; //>MAX BEDR/MND
     EvalR   WUPECD = '1';
               Endif;
             ENDIF;
           ENDIF;

           If #1A4CD = 'G ' OR #1A4CD = 'C ' OR #1A4CD = 'E ';
             If HVBZ = 0 AND HHBZ = 0 AND HBEDBZ > 0;
     EvalR   WUW198 = '1';                         INFO MESSAGE
             Endif; //DAGEN BZ=0
           Endif; //END G,C,E
            // Sw84:bedrag Wkl+BZ>bedr/mnd uit controlerecord --> error
            // CASE: WRK.Switch84 is = 1
           If WUPECD = '1'; //*IF
              // Send message 'Bedrag wkl+bz>max control'
         ZAMSID = 'USR0453';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
            // Sw198=1:info:bijpassing betaling G,C,E met of zonder dagen BZ
            // CASE: WRK.Switch198 is 1
           If WUW198 = '1'; //*IF
              // Send message 'Dagen BZ invullen???'
         ZAMSID = 'USR1647';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // Zone gn bedrag wklh=N en bedrag nt 0 -->error:combinatie kan niet
            // CASE: DTL.Geen bedrag wklh is N
           If #1BDST = 'N'; //*IF
              // CASE: DTL.Bedrag wkl is niet 0
             If #1HPNB <> *ZERO; //*IF
                // Setup message data for message
         ZA0177 = #1BDST;                         Geen bedrag wkl
               ZA0178 = #1HPNB; //Bedrag wkl
                // Send message 'Comb. bedr wkl<>0 & gn =N'
         ZAMSID = 'USR0314';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Zone gn dgn/bedr BZ=N & bedrag BZ nt 0-->error:combinatie kan nie
            // CASE: DTL.Geen dagen/bedrag BZ is N
           If #1BCST = 'N'; //*IF
              // CASE: DTL.Bedrag BZ is niet 0
             If #1GYNB <> *ZERO; //*IF
                // Send message 'Comb. bedrBZ<>0 & gn BZ=N'
         ZAMSID = 'USR0315';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             Endif; //*FI
           Endif; //*FI
            // Berekening netto; rekening houdend met alle afhoudingskodes
            // CASE: WRK.Switch berekening is 0
           If WUPSCD = '0'; //*IF
              // Update GWlm/vm!!VWlm/vm - Wkl bet  *
             KLMGW = 0;
             KLMVW = 0;
             KVMGW = 0;
             KVMVW = 0;
             KUMHAL = 0;
             If #1GWNB = BYEENB; //ACHT=WKL MND
               If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06';
                 KLMGW = HVAL6; //KUMUL GED.WK
                 If HHAL6 <> 0;
                   KUMHAL = HHAL6 / 2;
                   KLMGW = KLMGW + KUMHAL;
                 Endif; //END HDGN NT0
               Endif;
               If WUCC18 = '04';
                 KLMGW = HVAL6; //KUMUL GED.WK
                 If HHAL6 <> 0;
                   KUMHAL = HHAL6 / 2;
                   KLMGW = KLMGW + KUMHAL;
                 Endif; //END HDGN NT0
               Endif; //END 04
               If #1A1CD <> '02' AND #1A1CD <> '04' AND #1A1CD <> '06';
                 If WUCC18 <> '04';
                   If #1BACD <> '09'; //BEROEP NT 09
                     KLMVW = HVAL6; //KUMUL VOL.WK
                     If HHAL6 <> 0;
                       KUMHAL = HHAL6 / 2;
                       KLMVW = KLMVW + KUMHAL;
                     Endif; //END HDGN NT0
                   Endif; //BEROEP09
                 Endif; //TYPE18->04
               Endif; //06/04/02
               If #1BACD = '09'; //BEROEP=09
                 KLMVW = HVAL5; //KUMUL VOL.WK
                 If HHAL5 <> 0;
                   KUMHAL = HHAL5 / 2;
                   KLMVW = KLMVW + KUMHAL;
                 Endif; //END HDGN NT0
               Endif;
             ELSE; //ACHT<WKL MND
         JJAACH = BYEENB;            4 0
     EvalR   MMAACH = BYEENB;            2 0
               If MMAACH = 1; //WKLMND=JANUA
                 JJAACH = JJAACH - 1;
         JJMACH = JJAACH;            6 0
     EvalR   JJMACH = 12;
               ELSE; //MND NT JANUARI
                 JJMACH = BYEENB - 1;
               Endif; //END MND=JANUARI
               If JJMACH = #1GWNB; //WKLMND-1=ACHT.
                 If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06';
                   KVMGW = HVAL6; //KUMUL GED.WK
                   If HHAL6 <> 0;
                     KUMHAL = HHAL6 / 2;
                     KVMGW = KVMGW + KUMHAL;
                   Endif; //END HDGN NT0
                 Endif;
                 If WUCC18 = '04';
                   KVMGW = HVAL6; //KUMUL GED.WK
                   If HHAL6 <> 0;
                     KUMHAL = HHAL6 / 2;
                     KVMGW = KVMGW + KUMHAL;
                   Endif; //END HDGN NT0
                 Endif;
                 If #1A1CD <> '02' AND #1A1CD <> '04' AND #1A1CD <> '06';
                   If WUCC18 <> '04';
                     If #1BACD <> '09'; //BEROEP NT 09
                       KVMVW = HVAL6; //KUMUL VOL.WK
                       If HHAL6 <> 0;
                         KUMHAL = HHAL6 / 2;
                         KVMVW = KVMVW + KUMHAL;
                       Endif; //END HDGN NT0
                     Endif; //BEROEP 09
                   Endif; //TYPE 18->04
                 Endif; //06/04/02
                 If #1BACD = '09'; //BEROEP=09
                   KVMVW = HVAL5; //KUMUL VOL.WK
                   If HHAL5 <> 0;
                     KUMHAL = HHAL5 / 2;
                     KVMVW = KVMVW + KUMHAL;
                   Endif; //END HDGN NT0
                 Endif;
               Endif;
             Endif; //END ACHT=WKLMND
              // Opv.nettozone:gn DOK(R..) - Wkl betaling  *
              // RESULT=WKLH BEDRAG+BZ BEDRAG+BEDRAG VORST-TAKS OF RWP (TA/BR)
             RESULT = 0;
             RESULW = 0;
             RESULB = 0;
     EvalR   WKLBZ = *BLANK;             1

             If #1A4CD = *BLANK OR #1A4CD = 'B ' OR #1A4CD = 'T ' OR #1A4CD = 'S ' OR #1A1CD = '13' OR #1A1CD = '14' OR #1A1CD = '15';
               RESULT = HWKL + HBEDBZ;
               RESULT = RESULT + HBEDVO; //+ VORSTBEDRAG
               RESULT = RESULT - HTAKS; //- TAKS
               RESULT = RESULT - RWP; //- RWP
     EvalR   WKLBZ = 'W';             1            RVA GEGEVENS
             ELSE;
               RESULW = HWKL;
               RESULB = HBEDBZ;
               RESULB = RESULB + HBBVO;
               RESULW = RESULW - HTAKSW; //- TAKS WKL
               RESULB = RESULB - HTAKSB; //- TAKS BZ
               RESULW = RESULW - RWP; //- RWP (15)
     EvalR   WKLBZ = 'B';             1            RVA+BZ
             Endif;
              //          RESULT    IFGT 0
             If WKLBZ = 'W';
                //**********************************************************************
                //RESULT=RESULT-AFH1->AFH6 BEHALVE BIJ IR- & TB- MOET MEN OPTELLEN
                //KODES TG,TG-,GM,GS,GP KUNNEN HIER NIET VOORKOMEN EN WORDEN DAN
                //OOK VOOR AFTREK UITGEBLANKT OF OP 0 GEZET
                // AFH1
               If #1DVCD = 'TG-' OR #1DVCD = 'TG ' OR #1DVCD = 'GM ' OR #1DVCD = 'GS ' OR #1DVCD = 'GP ' OR #1DVCD = 'GK '; //TAKS BZ NTRVA
         #1DVCD = *BLANK;
                 #1GZNB = 0;
                 #1G0NB = 0;
         #1OYCD = *BLANK;
         #1O5CD = *BLANK;
               Endif;
                // AFH2
               If #1DWCD = 'TG-' OR #1DWCD = 'TG ' OR #1DWCD = 'GM ' OR #1DWCD = 'GS ' OR #1DWCD = 'GP ' OR #1DWCD = 'GK '; //TAKS BZ NTRVA
         #1DWCD = *BLANK;
                 #1G1NB = 0;
                 #1G2NB = 0;
         #1OZCD = *BLANK;
         #1O6CD = *BLANK;
               Endif;
                // AFH3
               If #1DXCD = 'TG-' OR #1DXCD = 'TG ' OR #1DXCD = 'GM ' OR #1DXCD = 'GS ' OR #1DXCD = 'GP ' OR #1DXCD = 'GK '; //TAKS BZ NTRVA
         #1DXCD = *BLANK;
                 #1G3NB = 0;
                 #1G4NB = 0;
         #1O0CD = *BLANK;
         #1O7CD = *BLANK;
               Endif;
                // AFH4
               If #1DYCD = 'TG-' OR #1DYCD = 'TG ' OR #1DYCD = 'GM ' OR #1DYCD = 'GS ' OR #1DYCD = 'GP ' OR #1DYCD = 'GK '; //TAKS BZ NTRVA
         #1DYCD = *BLANK;
                 #1G5NB = 0;
                 #1G6NB = 0;
         #1O1CD = *BLANK;
         #1O8CD = *BLANK;
               Endif;
                // AFH5
               If #1EDCD = 'TG-' OR #1EDCD = 'TG ' OR #1EDCD = 'GM ' OR #1EDCD = 'GS ' OR #1EDCD = 'GP ' OR #1EDCD = 'GK '; //TAKS BZ NTRVA
         #1EDCD = *BLANK;
                 #1HDNB = 0;
                 #1HENB = 0;
         #1O2CD = *BLANK;
         #1O9CD = *BLANK;
               Endif;
                // AFH6
               If #1EECD = 'TG-' OR #1EECD = 'TG ' OR #1EECD = 'GM ' OR #1EECD = 'GS ' OR #1EECD = 'GP ' OR #1EECD = 'GK '; //TAKS BZ NTRVA
         #1EECD = *BLANK;
                 #1HFNB = 0;
                 #1HGNB = 0;
         #1O3CD = *BLANK;
         #1PACD = *BLANK;
               Endif;
                // SOMMIGE AFHOUDINGEN KUNNEN REEDS UITGEBLANKT ZIJN, DUS KAN MEN
                // VANAF HIER GEEN NT RVA AFHOUDINGEN MEER AFHOUDEN.
     EvalR   MIN1 = #1DVCD;              1
     EvalR   MIN2 = #1DWCD;              1
     EvalR   MIN3 = #1DXCD;              1
     EvalR   MIN4 = #1DYCD;              1
     EvalR   MIN5 = #1EDCD;              1
     EvalR   MIN6 = #1EECD;              1
               If #1DVCD <> *BLANK; //AFH1 KODE
                 If MIN1 = '-';
                   RESULT = RESULT + #1GZNB;
                 ELSE;
                   RESULT = RESULT - #1GZNB;
                 Endif;
               Endif;

               If #1DWCD <> *BLANK; //AFH2 KODE
                 If MIN2 = '-';
                   RESULT = RESULT + #1G1NB;
                 ELSE;
                   RESULT = RESULT - #1G1NB;
                 Endif;
               Endif;

               If #1DXCD <> *BLANK; //AFH3 KODE
                 If MIN3 = '-';
                   RESULT = RESULT + #1G3NB;
                 ELSE;
                   RESULT = RESULT - #1G3NB;
                 Endif;
               Endif;

               If #1DYCD <> *BLANK; //AFH4 KODE
                 If MIN4 = '-';
                   RESULT = RESULT + #1G5NB;
                 ELSE;
                   RESULT = RESULT - #1G5NB;
                 Endif;
               Endif;

               If #1EDCD <> *BLANK; //AFH5 KODE
                 If MIN5 = '-';
                   RESULT = RESULT + #1HDNB;
                 ELSE;
                   RESULT = RESULT - #1HDNB;
                 Endif;
               Endif;

               If #1EECD <> *BLANK; //AFH6 KODE
                 If MIN6 = '-';
                   RESULT = RESULT + #1HFNB;
                 ELSE;
                   RESULT = RESULT - #1HFNB;
                 Endif;
               Endif;
                //----------------------------------------------------------------
                //** RESULT = RESULT - X2 EN BC
               RESULT = RESULT - HX2;
               RESULT = RESULT - HBEDBC;

     EvalR   WUOCCD = '0';                         SWITCH72
     EvalR   WUODCD = '0';                         SWITCH73
     EvalR   WUOECD = '0';                         SWITCH74
     EvalR   WUOFCD = '0';                         SWITCH75
               If RESULT < 0; //NETTO<0
                 RESULT = HWKL + HBEDBZ;
                 RESULT = RESULT + HBEDVO; //+ VORSTBEDRAG
                  //-------------------------------------------------------------
                  //  OPVULLEN TABEL AFHOUDINGEN ADHV. AFH. 1 --> 6
     C                   MOVEA     *IN(50)       UWIN              1
     C                   MOVEA     #1DVCD        KOD(1)                         AFH1 KODE
     C                   MOVEA     #1GZNB        AFH(1)                              BEDR
     C                   MOVEA     #1G0NB        DAT(1)                              MMJJJJ
     C                   MOVEA     #1OYCD        TXX(1)                              T01,..
     C                   MOVEA     #1O5CD        TAS(1)                              *OFBLAN

     C                   MOVEA     #1DWCD        KOD(2)                         AFH2 KODE
     C                   MOVEA     #1G1NB        AFH(2)
     C                   MOVEA     #1G2NB        DAT(2)
     C                   MOVEA     #1OZCD        TXX(2)
     C                   MOVEA     #1O6CD        TAS(2)

     C                   MOVEA     #1DXCD        KOD(3)                         AFH3 KODE
     C                   MOVEA     #1G3NB        AFH(3)
     C                   MOVEA     #1G4NB        DAT(3)
     C                   MOVEA     #1O0CD        TXX(3)
     C                   MOVEA     #1O7CD        TAS(3)

     C                   MOVEA     #1DYCD        KOD(4)                         AFH4 KODE
     C                   MOVEA     #1G5NB        AFH(4)
     C                   MOVEA     #1G6NB        DAT(4)
     C                   MOVEA     #1O1CD        TXX(4)
     C                   MOVEA     #1O8CD        TAS(4)

     C                   MOVEA     #1EDCD        KOD(5)                         AFH5 KODE
     C                   MOVEA     #1HDNB        AFH(5)
     C                   MOVEA     #1HENB        DAT(5)
     C                   MOVEA     #1O2CD        TXX(5)
     C                   MOVEA     #1O9CD        TAS(5)

     C                   MOVEA     #1EECD        KOD(6)                         AFH6 KODE
     C                   MOVEA     #1HFNB        AFH(6)
     C                   MOVEA     #1HGNB        DAT(6)
     C                   MOVEA     #1O3CD        TXX(6)
     C                   MOVEA     #1PACD        TAS(6)
                  //-------------------------------------------------------------
                  //  SORTEREN TABEL AFHOUDINGEN VOLGENS PRIORITEIT
                 U = 0;
                 V = 6;
                 W = 1;
                 X = 2;
     C     TERUG         TAG
     C     PRI(W)        COMP      PRI(X)                             50
     C  N50              GOTO      TER1
     EvalR   PRIX = PRI(X);              1
     EvalR   KODX = KOD(X);              3
                 DATX = DAT(X);
                 AFHX = AFH(X);
     EvalR   TXXX = TXX(X);              3
     EvalR   TASX = TAS(X);              1
     EvalR   PRI(X) = PRI(W);            1
     EvalR   KOD(X) = KOD(W);            3
                 DAT(X) = DAT(W);
                 AFH(X) = AFH(W);
     EvalR   TXX(X) = TXX(W);            3
     EvalR   TAS(X) = TAS(W);            1
     EvalR   PRI(W) = PRIX;
     EvalR   KOD(W) = KODX;
                 DAT(W) = DATX;
                 AFH(W) = AFHX;
     EvalR   TXX(W) = TXXX;
     EvalR   TAS(W) = TASX;
                 Y = X;
                 U = U + 1;
     C     TER1          TAG
                 W = W + 1;
                 X = X + 1;
     C     X             COMP      V                                  50
     C  N50              GOTO      TERUG
     C     U             COMP      0                                      50
     C   50              GOTO      ENDSRT
                 U = 0;
                 V = Y;
                 W = 1;
                 X = 2;
     C                   GOTO      TERUG
     C     ENDSRT        TAG
     C                   MOVEA     KOD(1)        #1DVCD
     C                   MOVEA     AFH(1)        #1GZNB
     C                   MOVEA     DAT(1)        #1G0NB
     C                   MOVEA     TXX(1)        #1OYCD
     C                   MOVEA     TAS(1)        #1O5CD

     C                   MOVEA     KOD(2)        #1DWCD
     C                   MOVEA     AFH(2)        #1G1NB
     C                   MOVEA     DAT(2)        #1G2NB
     C                   MOVEA     TXX(2)        #1OZCD
     C                   MOVEA     TAS(2)        #1O6CD

     C                   MOVEA     KOD(3)        #1DXCD
     C                   MOVEA     AFH(3)        #1G3NB
     C                   MOVEA     DAT(3)        #1G4NB
     C                   MOVEA     TXX(3)        #1O0CD
     C                   MOVEA     TAS(3)        #1O7CD

     C                   MOVEA     KOD(4)        #1DYCD
     C                   MOVEA     AFH(4)        #1G5NB
     C                   MOVEA     DAT(4)        #1G6NB
     C                   MOVEA     TXX(4)        #1O1CD
     C                   MOVEA     TAS(4)        #1O8CD

     C                   MOVEA     KOD(5)        #1EDCD
     C                   MOVEA     AFH(5)        #1HDNB
     C                   MOVEA     DAT(5)        #1HENB
     C                   MOVEA     TXX(5)        #1O2CD
     C                   MOVEA     TAS(5)        #1O9CD

     C                   MOVEA     KOD(6)        #1EECD
     C                   MOVEA     AFH(6)        #1HFNB
     C                   MOVEA     DAT(6)        #1HGNB
     C                   MOVEA     TXX(6)        #1O3CD
     C                   MOVEA     TAS(6)        #1PACD

     EvalR   MIN1 = #1DVCD;              1
     EvalR   MIN2 = #1DWCD;              1
     EvalR   MIN3 = #1DXCD;              1
     EvalR   MIN4 = #1DYCD;              1
     EvalR   MIN5 = #1EDCD;              1
     EvalR   MIN6 = #1EECD;              1
                  //----------------------------------------------------------------
                  // SCHRAPPEN VAN KODES ALS  NETTO < 0 WORDT !!!
                  // TEST1->6 = * BIJ NOG TE BEHANDELEN KODES AFHOUDINGEN,
                  // TEST1->6 = 0 BIJ BLANKO ZONES;  = 1 BIJ REEDS AFGETROKKEN KODES
                 If #1DVCD = *BLANK;
     EvalR   TEST1 = '0';             1
                 ELSE;
     EvalR   TEST1 = '*';
                 Endif;
                 If #1DWCD = *BLANK;
     EvalR   TEST2 = '0';             1
                 ELSE;
     EvalR   TEST2 = '*';
                 Endif;
                 If #1DXCD = *BLANK;
     EvalR   TEST3 = '0';             1
                 ELSE;
     EvalR   TEST3 = '*';
                 Endif;
                 If #1DYCD = *BLANK;
     EvalR   TEST4 = '0';             1
                 ELSE;
     EvalR   TEST4 = '*';
                 Endif;
                 If #1EDCD = *BLANK;
     EvalR   TEST5 = '0';             1
                 ELSE;
     EvalR   TEST5 = '*';
                 Endif;
                 If #1EECD = *BLANK;
     EvalR   TEST6 = '0';             1
                 ELSE;
     EvalR   TEST6 = '*';
                 Endif;
                 If #1JQNB = 0;
     EvalR   TESTX2 = '0';            1
                 ELSE;
     EvalR   TESTX2 = '*';
                 Endif;
                 If #1LQNB = 0;
     EvalR   TESTBC = '0';            1
                 ELSE;
     EvalR   TESTBC = '*';
                 Endif;

                 TOTRXX = 0;
                 TOTRT = 0;
                 If HTAKS > 0;
         R01P1 = #1DVCD;             1
         R02P1 = #1DWCD;             1
         R03P1 = #1DXCD;             1
         R04P1 = #1DYCD;             1
         R05P1 = #1EDCD;             1
         R06P1 = #1EECD;             1
                   If R01P1 = 'R';
                     TOTRXX = TOTRXX + #1GZNB;
                   ENDIF;
                   If R02P1 = 'R';
                     TOTRXX = TOTRXX + #1G1NB;
                   ENDIF;
                   If R03P1 = 'R';
                     TOTRXX = TOTRXX + #1G3NB;
                   ENDIF;
                   If R04P1 = 'R';
                     TOTRXX = TOTRXX + #1G5NB;
                   ENDIF;
                   If R05P1 = 'R';
                     TOTRXX = TOTRXX + #1HDNB;
                   ENDIF;
                   If R06P1 = 'R';
                     TOTRXX = TOTRXX + #1HFNB;
                   ENDIF;
                   If TOTRXX >= HWKL;
                     HTAKS = 0;
                     HTAKSW = 0;
                   ELSE;
                     TOTRT = TOTRXX + HTAKS;
                     If TOTRT >= HWKL;
                       HTAKS = HWKL - TOTRXX;
                       HTAKSW = HTAKS;
                     ENDIF;
                   ENDIF;
                 ENDIF; //HTAKS>0
                  //----------------------------------------------------------------
                  //** NA S00 --> TAKS EN RWP AFTREKKEN
                 If HTAKS > 0;
                   RESUL2 = RESULT - HTAKS;
                   If RESUL2 >= 0;
                     RESULT = RESUL2;
                   ELSE; //BV -2000 FR
     EvalR   WUODCD = '1';
                     HTAKS = HTAKS + RESUL2; //3000+(-2000)
                     HTAKSW = HTAKS; //1000
                     HTAKSB = 0; //0
                     RWP = 0; //0
                     RESULT = 0; //0
                   Endif;
                 Endif; //HTAKS > 0
                 If RWP > 0;
                   RESUL2 = RESULT - RWP;
                   If RESUL2 >= 0;
                     RESULT = RESUL2;
                   ELSE; //BV -2000 FR
     EvalR   WUODCD = '1';
                     RWP = RWP + RESUL2; //3000+(-2000)
                     RESULT = 0;
                   Endif;
                 Endif; //END RWP>0
                  //----------------------------------------------------------------
                  //** NA S00,TAKS & RWP --> TB- EN IR- OPTELLEN
                 If TEST1 = '*' AND MIN1 = '-';
     EvalR   TEST1 = '1';             1
                   RESULT = RESULT + #1GZNB;
                 Endif; //END TEST1=*
                 If TEST2 = '*' AND MIN2 = '-';
     EvalR   TEST2 = '1';             1
                   RESULT = RESULT + #1G1NB;
                 Endif; //END TEST2=*
                 If TEST3 = '*' AND MIN3 = '-';
     EvalR   TEST3 = '1';             1
                   RESULT = RESULT + #1G3NB;
                 Endif; //END TEST3=*
                 If TEST4 = '*' AND MIN4 = '-';
     EvalR   TEST4 = '1';             1
                   RESULT = RESULT + #1G5NB;
                 Endif; //END TEST4=*
                 If TEST5 = '*' AND MIN5 = '-';
     EvalR   TEST5 = '1';             1
                   RESULT = RESULT + #1HDNB;
                 Endif; //END TEST5=*
                 If TEST6 = '*' AND MIN6 = '-';
     EvalR   TEST6 = '1';             1
                   RESULT = RESULT + #1HFNB;
                 Endif; //END TEST6=*
                  //----------------------------------------------------------------
                  //** NA S00,TAKS,RWP,TB- & IR- --> ALLE ANDERE AFH. AFTREKKEN
                 If #1DVCD <> 'DI ';
                   If TEST1 = '*';
                     RESUL2 = RESULT - #1GZNB;
                     If RESULT <> 0;
     EvalR   TEST1 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1GZNB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST1=*
                 Endif; //END DI

                 If #1DWCD <> 'DI ';
                   If TEST2 = '*';
                     RESUL2 = RESULT - #1G1NB;
                     If RESULT <> 0;
     EvalR   TEST2 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G1NB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST2=*
                 Endif; //END DI

                 If #1DXCD <> 'DI ';
                   If TEST3 = '*';
                     RESUL2 = RESULT - #1G3NB;
                     If RESULT <> 0;
     EvalR   TEST3 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G3NB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST3=*
                 Endif; //END DI

                 If #1DYCD <> 'DI ';
                   If TEST4 = '*';
                     RESUL2 = RESULT - #1G5NB;
                     If RESULT <> 0;
     EvalR   TEST4 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G5NB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST4=*
                 Endif; //END DI

                 If #1EDCD <> 'DI ';
                   If TEST5 = '*';
                     RESUL2 = RESULT - #1HDNB;
                     If RESULT <> 0;
     EvalR   TEST5 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HDNB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST5=*
                 Endif; //END DI

                 If #1EECD <> 'DI ';
                   If TEST6 = '*';
                     RESUL2 = RESULT - #1HFNB;
                     If RESULT <> 0;
     EvalR   TEST6 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HFNB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST6=*
                 Endif; //END DI
                  //----------------------------------------------------------------
                  //NA S00,TAKS,RWP,TB-,IR-,TB,IR,VO,O01->O99,S01->S99,TV'S NOG BC & X2 AFTR
                  //  BC EERST AFTREKKEN EN DAN PAS X2 = INHOUDING OP LOPENDE MAAND !!
                  //  X2 MAG MAAR ALS LAATSTE BIJDRAGE
                 If TESTX2 = '*';
                   If HX2 > 0;
                     RESUL2 = RESULT - HX2;
                     If RESUL2 < 0;
     EvalR   WUOFCD = '1';
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
     EvalR   TESTX2 = '1';            1
                     Endif; //END RESUL2
                   ELSE; //HX2=0
     EvalR   TESTX2 = '*';
                   Endif; //END HX2=0
                 Endif; //END TESTX2=*
                  // NA X2 BC
                 If TESTBC = '*';
                   If HBEDBC > 0;
                     RESUL2 = RESULT - HBEDBC;
                     If RESUL2 < 0;
     EvalR   WUOFCD = '1';
                       If HBEDB1 > RESULT;
                         BCAAN2 = 0;
                         HBEDB2 = 0;
     C                   GOTO      PMAN1
                       Endif;
                       If HBEDB1 < RESULT;
     C                   GOTO      PMAN2
                       Endif;
                       If HBEDB1 = RESULT;
                         BCAAN2 = 0;
                         HBEDB2 = 0;
     C                   GOTO      PMANNT
                       Endif;
     C     PMAN2         TAG
                       If BCAAN2 > 0;
                         BCAAAA = BCAAN2 - 1; //BCAANTAL-1
                         BCAAN2 = BCAAN2 - 1; //BCAANTAL-1
                         Dow BCAAAA <> 0;
                           If RESULT >= 0;
                             HBEDB2 = BCAAAA * AFDBD2;
                             RESUL2 = RESULT - HBEDB2;
                             RESUL2 = RESUL2 - HBEDB1;
                             If RESUL2 >= 0;
                               BCAAN2 = BCAAAA;
                               RESULT = RESUL2;
     EvalR   TESTBC = '1';            1
                               If RESULT = 0;
     C                   GOTO      JUST02
                               ENDIF;
                             Endif; //END >= 0
                           Endif; //END >= 0
                           BCAAAA = BCAAAA - 1; //BCAANTAL-1

                         ENDDO; //ENDDO
     C     JUST02        TAG
                         HBEDB2 = BCAAN2 * AFDBD2; //AANT X BEDR
                         HBEDBC = HBEDB2 + HBEDB1;
                         #1LPNB = BCAAN2 + BCAAN1; //AANTAL
                         #1LQNB = HBEDBC; //BEDR BC
     C                   GOTO      PLAATS
                       Endif; //BCAANT2>0
     C     PMAN1         TAG
                       If BCAAN1 > 0;
                         BCAAAA = BCAAN1 - 1; //BCAANTAL-1
                         BCAAN1 = BCAAN1 - 1; //BCAANTAL-1
                         Dow BCAAAA <> 0;
                           If RESULT >= 0;
                             HBEDB1 = BCAAAA * AFDBD1;
                             RESUL2 = RESULT - HBEDB1;
                             If RESUL2 >= 0;
                               BCAAN1 = BCAAAA;
                               RESULT = RESUL2;
     EvalR   TESTBC = '1';
                               If RESULT = 0;
     C                   GOTO      JUST01
                               ENDIF;
                             Endif; //END >= 0
                           Endif; //END >= 0
                           BCAAAA = BCAAAA - 1; //BCAANTAL-1
                         Enddo; //ENDDO
     C     JUST01        TAG
                         HBEDB1 = BCAAN1 * AFDBD1; //AANT X BEDR
                         HBEDBC = HBEDB1;
                         #1LPNB = BCAAN1; //AANTAL BC'S
                         #1LQNB = HBEDBC; //BEDR BC
     C                   GOTO      PLAATS
                       Endif; //BCAANT1>0
     C     PMANNT        TAG
                       BCAAN2 = 0;
                       HBEDB2 = 0;
                       #1LPNB = BCAAN1; //AANTALBC'S
                       HBEDBC = HBEDB1;
                       #1LQNB = HBEDBC; //BEDR BC
                       RESULT = 0;
     EvalR   TESTBC = '1';
     C                   GOTO      PLAATS
                     ELSE; //RESUL2>0
                       RESULT = RESUL2;
     EvalR   TESTBC = '1';
                     Endif; //END RESUL2
                   ELSE; //BC BEDR=0
     EvalR   TESTBC = '*';
                   Endif; //BCBEDR>0
                 Endif; //END TESTBC=*
                  // X2 IS NAAR BOVEN VERPLAATST BOVEN BC
                  //          TESTX2    IFEQ '*'
                  //          HX2       IFGT 0
                  //          RESULT    SUB  HX2       RESUL2
                  //          RESUL2    IFLT 0
                  //                    MOVE '1'       WUOFCD
                  //                    GOTO PLAATS
                  //                    ELSE
                  //                    Z-ADDRESUL2    RESULT
                  //                    MOVE '1'       TESTX2  1
                  //                    END                             END RESUL2
                  //                    ELSE                            HX2=0
                  //                    MOVE '*'       TESTX2
                  //                    END                             END HX2=0
                  //                    END                             END TESTX2=*
                  //----------------------------------------------------------------
                  //NA S00,TAKS,RWP,TB-,IR-,TB,IR,VO,O01->O99,S01->S99,TV,BC,X2 NOG DI AFTREK
                 If TEST1 = '*';
                   If #1DVCD = 'DI ';
                     RESUL2 = RESULT - #1GZNB;
                     If RESULT <> 0;
     EvalR   TEST1 = '1';             1
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1GZNB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
     EvalR   TEST1 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST1=*
                 If TEST2 = '*';
                   If #1DWCD = 'DI ';
                     RESUL2 = RESULT - #1G1NB;
                     If RESULT <> 0;
     EvalR   TEST2 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G1NB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
     EvalR   TEST2 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST2=*
                 If TEST3 = '*';
                   If #1DXCD = 'DI ';
                     RESUL2 = RESULT - #1G3NB;
                     If RESULT <> 0;
     EvalR   TEST3 = '1';             1
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G3NB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
     EvalR   TEST3 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST3=*
                 If TEST4 = '*';
                   If #1DYCD = 'DI ';
                     RESUL2 = RESULT - #1G5NB;
                     If RESULT <> 0;
     EvalR   TEST4 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G5NB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
     EvalR   TEST4 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST4=*
                 If TEST5 = '*';
                   If #1EDCD = 'DI ';
                     RESUL2 = RESULT - #1HDNB;
                     If RESULT <> 0;
     EvalR   TEST5 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HDNB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
     EvalR   TEST5 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST5=*
                 If TEST6 = '*';
                   If #1EECD = 'DI ';
                     RESUL2 = RESULT - #1HFNB;
                     If RESULT <> 0;
     EvalR   TEST6 = '1';             1
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HFNB = RESULT;
                       RESULT = 0;
     C                   GOTO      PLAATS
                     ELSE;
                       RESULT = RESUL2;
     EvalR   TEST6 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST6=*
                  //---
     C     PLAATS        TAG
                 If TEST1 = '*';
     EvalR   #1DVCD = *BLANK;                         AFH1 KODE
                   #1GZNB = 0; //AFH1 BEDRAG
                   #1G0NB = 0; //AFH1 DATUM
     EvalR   #1OYCD = *BLANK;                         AFH1 KODE TV
     EvalR   #1O5CD = *BLANK;                         AFH1 L.MAAL
                 Endif;
                 If TEST2 = '*';
     EvalR   #1DWCD = *BLANK;                         AFH2 KODE
                   #1G1NB = 0; //AFH2 BEDRAG
                   #1G2NB = 0; //AFH2 DATUM
     EvalR   #1OZCD = *BLANK;                         AFH2 KODE TV
     EvalR   #1O6CD = *BLANK;                         AFH2 L.MAAL
                 Endif;
                 If TEST3 = '*';
     EvalR   #1DXCD = *BLANK;                         AFH3 KODE
                   #1G3NB = 0; //AFH3 BEDRAG
                   #1G4NB = 0; //AFH3 DATUM
     EvalR   #1O0CD = *BLANK;                         AFH3 KODE TV
     EvalR   #1O7CD = *BLANK;                         AFH3 L.MAAL
                 Endif;
                 If TEST4 = '*';
     EvalR   #1DYCD = *BLANK;                         AFH4 KODE
                   #1G5NB = 0; //AFH4 BEDRAG
                   #1G6NB = 0; //AFH4 DATUM
     EvalR   #1O1CD = *BLANK;                         AFH4 KODE TV
     EvalR   #1O8CD = *BLANK;                         AFH4 L.MAAL
                 Endif;
                 If TEST5 = '*';
     EvalR   #1EDCD = *BLANK;                         AFH5 KODE
                   #1HDNB = 0; //AFH5 BEDRAG
                   #1HENB = 0; //AFH5 DATUM
     EvalR   #1O2CD = *BLANK;                         AFH5 KODE TV
     EvalR   #1O9CD = *BLANK;                         AFH5 L.MAAL
                 Endif;
                 If TEST6 = '*';
     EvalR   #1EECD = *BLANK;                         AFH6 KODE
                   #1HFNB = 0; //AFH6 BEDRAG
                   #1HGNB = 0; //AFH6 DATUM
     EvalR   #1O3CD = *BLANK;                         AFH6 KODE TV
     EvalR   #1PACD = *BLANK;                         AFH6 L.MAAL
                 Endif;
                 If TESTX2 = '*';
                   #1JQNB = 0; //X2
                   HX2 = 0;
                 Endif;
                 If TESTBC = '*';
                   #1LPNB = 0; //BC AANTAL
                   #1LQNB = 0; //BC BEDRAG
                   #1E9NB = 0; //KAT JAAR
                   HBEDBC = 0;
     EvalR   #1CLCD = *BLANK;                         KAT KODE
                 Endif;
                  //** OPVULLEN HULPZONES AFH1 --> AFH6
     EvalR   WUPJCD = #1DVCD;
     EvalR   WUPKCD = #1DWCD;
     EvalR   WUPLCD = #1DXCD;
     EvalR   WUPMCD = #1DYCD;
     EvalR   WUPNCD = #1EDCD;
     EvalR   WUPOCD = #1EECD;
               Endif; //END RESULT<0
                //** MOVE RESULT NAAR NETTO ZONE EN TAKS NAAR TAKS-ZONE
               #1HPNB = HWKL; //BEDRAG WKLH
               HBEDBZ = HBEDBZ + HBEDVO; //BEDR BZ+VORST
               HBEDBZ = HBEDBZ + HBBVO; //BEDR BZ+VORST
               #1GYNB = HBEDBZ; //BEDR BZ
               #1BENR = BZINH; //BEDR BZINH BP
               #1GQNB = RESULT; //NETTO ZONE
               #1T6NB = RESULT; //NETTO WKL
             Endif; //WKLBZ=W
              // NU NOG ALS RESULT=0 (WKLBZ=W), MAAR RESULW OF RESULB >0 DUS WKLBZ=B
              // Opv.nettozone2:gn DOK(R.. - Wkl betaling  *
              //RESULW=RESULW-AFH1-->AFH6 BEHALVE BIJ IR-/TB- MOET MEN OPTELLEN
             If WKLBZ = 'B';
                // AFH1
               If #1DVCD = *BLANK;
     EvalR   TEST1 = '0';             1            0:AFH NT INGEVU
               ELSE;
                 If #1DVCD = 'TG-' OR #1DVCD = 'TG ' OR #1DVCD = 'GM ' OR #1DVCD = 'GS ' OR #1DVCD = 'GP ' OR #1DVCD = 'GK ';
     EvalR   TEST1 = 'B';                          NAAR BZBEDR
                 ELSE;
     EvalR   TEST1 = '*';                          NAAR WKLBEDR
                 Endif;
               Endif;
                // AFH2
               If #1DWCD = *BLANK;
     EvalR   TEST2 = '0';             1
               ELSE;
                 If #1DWCD = 'TG-' OR #1DWCD = 'TG ' OR #1DWCD = 'GM ' OR #1DWCD = 'GS ' OR #1DWCD = 'GP ' OR #1DWCD = 'GK ';
     EvalR   TEST2 = 'B';                          NAAR BZBEDR
                 ELSE;
     EvalR   TEST2 = '*';                          NAAR WKLBEDR
                 Endif;
               Endif;
                // AFH3
               If #1DXCD = *BLANK;
     EvalR   TEST3 = '0';             1
               ELSE;
                 If #1DXCD = 'TG-' OR #1DXCD = 'TG ' OR #1DXCD = 'GM ' OR #1DXCD = 'GS ' OR #1DXCD = 'GP ' OR #1DXCD = 'GK ';
     EvalR   TEST3 = 'B';                          NAAR BZBEDR
                 ELSE;
     EvalR   TEST3 = '*';                          NAAR WKLBEDR
                 Endif;
               Endif;
                // AFH4
               If #1DYCD = *BLANK;
     EvalR   TEST4 = '0';             1
               ELSE;
                 If #1DYCD = 'TG-' OR #1DYCD = 'TG ' OR #1DYCD = 'GM ' OR #1DYCD = 'GS ' OR #1DYCD = 'GP ' OR #1DYCD = 'GK ';
     EvalR   TEST4 = 'B';                          NAAR BZBEDR
                 ELSE;
     EvalR   TEST4 = '*';                          NAAR WKLBEDR
                 Endif;
               Endif;
                // AFH5
               If #1EDCD = *BLANK;
     EvalR   TEST5 = '0';             1
               ELSE;
                 If #1EDCD = 'TG-' OR #1EDCD = 'TG ' OR #1EDCD = 'GM ' OR #1EDCD = 'GS ' OR #1EDCD = 'GP ' OR #1EDCD = 'GK ';
     EvalR   TEST5 = 'B';                          NAAR BZBEDR
                 ELSE;
     EvalR   TEST5 = '*';                          NAAR WKLBEDR
                 Endif;
               Endif;
                // AFH6
               If #1EECD = *BLANK;
     EvalR   TEST6 = '0';             1
               ELSE;
                 If #1EECD = 'TG-' OR #1EECD = 'TG ' OR #1EECD = 'GM ' OR #1EECD = 'GS ' OR #1EECD = 'GP ' OR #1EECD = 'GK ';
     EvalR   TEST6 = 'B';                          NAAR BZBEDR
                 ELSE;
     EvalR   TEST6 = '*';                          NAAR WKLBEDR
                 Endif;
               Endif;
                // X2
               If #1JQNB = 0;
     EvalR   TESTX2 = '0';            1
               ELSE;
     EvalR   TESTX2 = '*';
               Endif;
                // BC
               If #1LQNB = 0;
     EvalR   TESTBC = '0';            1
               ELSE;
     EvalR   TESTBC = '*';
               Endif;
                //******
                //** TB-,IR-,TG- --> -TEKEN WORDT GESTOPT IN MIN1->MIN6
     EvalR   MIN1 = #1DVCD;              1
     EvalR   MIN2 = #1DWCD;              1
     EvalR   MIN3 = #1DXCD;              1
     EvalR   MIN4 = #1DYCD;              1
     EvalR   MIN5 = #1EDCD;              1
     EvalR   MIN6 = #1EECD;              1

               If TEST1 = '*'; //DUS OP WKL
                  //          #1DVCD    IFNE *BLANK                     AFH1 KODE
                 If MIN1 = '-'; //TB- EN IR-
                   RESULW = RESULW + #1GZNB;
     EvalR   TEST1 = '1';                          VERWERKT
                 ELSE; //AL BESLAGEN
                   RESULW = RESULW - #1GZNB; //ONDERH, EN
     EvalR   TEST1 = '1';                          VERWERKT
                 Endif; //TV'S,BEHALV
                  //                    END                             GM EN GS/GP
               Endif;

               If TEST2 = '*'; //DUS OP WKL
                  //          #1DWCD    IFNE *BLANK                     AFH2 KODE
                 If MIN2 = '-';
                   RESULW = RESULW + #1G1NB;
     EvalR   TEST2 = '1';                          VERWERKT
                 ELSE;
                   RESULW = RESULW - #1G1NB;
     EvalR   TEST2 = '1';                          VERWERKT
                 Endif;
                  //                    END
               Endif;

               If TEST3 = '*'; //DUS OP WKL
                  //          #1DXCD    IFNE *BLANK                     AFH3 KODE
                 If MIN3 = '-';
                   RESULW = RESULW + #1G3NB;
     EvalR   TEST3 = '1';                          VERWERKT
                 ELSE;
                   RESULW = RESULW - #1G3NB;
     EvalR   TEST3 = '1';                          VERWERKT
                 Endif;
                  //                    END
               Endif;

               If TEST4 = '*'; //DUS OP WKL
                  //          #1DYCD    IFNE *BLANK                     AFH4 KODE
                 If MIN4 = '-';
                   RESULW = RESULW + #1G5NB;
     EvalR   TEST4 = '1';                          VERWERKT
                 ELSE;
                   RESULW = RESULW - #1G5NB;
     EvalR   TEST4 = '1';                          VERWERKT
                 Endif;
                  //                    END
               Endif;

               If TEST5 = '*'; //DUS OP WKL
                  //          #1EDCD    IFNE *BLANK                     AFH5 KODE
                 If MIN5 = '-';
                   RESULW = RESULW + #1HDNB;
     EvalR   TEST5 = '1';                          VERWERKT
                 ELSE;
                   RESULW = RESULW - #1HDNB;
     EvalR   TEST5 = '1';                          VERWERKT
                 Endif;
                  //                    END
               Endif;

               If TEST6 = '*'; //DUS OP WKL
                  //          #1EECD    IFNE *BLANK                     AFH6 KODE
                 If MIN6 = '-';
                   RESULW = RESULW + #1HFNB;
     EvalR   TEST6 = '1';                          VERWERKT
                 ELSE;
                   RESULW = RESULW - #1HFNB;
     EvalR   TEST6 = '1';                          VERWERKT
                 Endif;
                  //                    END
               Endif;
                //----------------------------------------------------------------
                //** RESULW = RESULW - X2 EN BC
               RESULW = RESULW - HX2;
               RESULW = RESULW - HBEDBC;
     EvalR   TESTX2 = '1';
     EvalR   TESTBC = '1';

     EvalR   WUOCCD = '0';            1            SWITCH72
     EvalR   WUODCD = '0';                         SWITCH73
     EvalR   WUOECD = '0';                         SWITCH74
     EvalR   WUOFCD = '0';                         SWITCH75
               If RESULW < 0; //NETTOWKL<0
                 RESULW = HWKL;
                  //-------------------------------------------------------------
                  //  OPVULLEN TABEL AFHOUDINGEN ADHV. AFH. 1 --> 6
     C                   MOVEA     *IN(50)       UWIN              1
     C                   MOVEA     #1DVCD        KOD(1)                         AFH1 KODE
     C                   MOVEA     #1GZNB        AFH(1)
     C                   MOVEA     #1G0NB        DAT(1)
     C                   MOVEA     #1OYCD        TXX(1)
     C                   MOVEA     #1O5CD        TAS(1)

     C                   MOVEA     #1DWCD        KOD(2)                         AFH2 KODE
     C                   MOVEA     #1G1NB        AFH(2)
     C                   MOVEA     #1G2NB        DAT(2)
     C                   MOVEA     #1OZCD        TXX(2)
     C                   MOVEA     #1O6CD        TAS(2)

     C                   MOVEA     #1DXCD        KOD(3)                         AFH3 KODE
     C                   MOVEA     #1G3NB        AFH(3)
     C                   MOVEA     #1G4NB        DAT(3)
     C                   MOVEA     #1O0CD        TXX(3)
     C                   MOVEA     #1O7CD        TAS(3)

     C                   MOVEA     #1DYCD        KOD(4)                         AFH4 KODE
     C                   MOVEA     #1G5NB        AFH(4)
     C                   MOVEA     #1G6NB        DAT(4)
     C                   MOVEA     #1O1CD        TXX(4)
     C                   MOVEA     #1O8CD        TAS(4)

     C                   MOVEA     #1EDCD        KOD(5)                         AFH5 KODE
     C                   MOVEA     #1HDNB        AFH(5)
     C                   MOVEA     #1HENB        DAT(5)
     C                   MOVEA     #1O2CD        TXX(5)
     C                   MOVEA     #1O9CD        TAS(5)

     C                   MOVEA     #1EECD        KOD(6)                         AFH6 KODE
     C                   MOVEA     #1HFNB        AFH(6)
     C                   MOVEA     #1HGNB        DAT(6)
     C                   MOVEA     #1O3CD        TXX(6)
     C                   MOVEA     #1PACD        TAS(6)
                  //-------------------------------------------------------------
                  //  SORTEREN TABEL AFHOUDINGEN VOLGENS PRIORITEIT
                 U = 0;
                 V = 6;
                 W = 1;
                 X = 2;
     C     TERUG1        TAG
     C     PRI(W)        COMP      PRI(X)                             50
     C  N50              GOTO      TER3
     EvalR   PRIX = PRI(X);              1
     EvalR   KODX = KOD(X);              3
                 DATX = DAT(X);
                 AFHX = AFH(X);
     EvalR   TXXX = TXX(X);              3
     EvalR   TASX = TAS(X);              1
     EvalR   PRI(X) = PRI(W);            1
     EvalR   KOD(X) = KOD(W);            3
                 DAT(X) = DAT(W);
                 AFH(X) = AFH(W);
     EvalR   TXX(X) = TXX(W);            3
     EvalR   TAS(X) = TAS(W);            1
     EvalR   PRI(W) = PRIX;
     EvalR   KOD(W) = KODX;
                 DAT(W) = DATX;
                 AFH(W) = AFHX;
     EvalR   TXX(W) = TXXX;
     EvalR   TAS(W) = TASX;
                 Y = X;
                 U = U + 1;
     C     TER3          TAG
                 W = W + 1;
                 X = X + 1;
     C     X             COMP      V                                  50
     C  N50              GOTO      TERUG1
     C     U             COMP      0                                      50
     C   50              GOTO      ENDSR1
                 U = 0;
                 V = Y;
                 W = 1;
                 X = 2;
     C                   GOTO      TERUG1
     C     ENDSR1        TAG
     C                   MOVEA     KOD(1)        #1DVCD
     C                   MOVEA     AFH(1)        #1GZNB
     C                   MOVEA     DAT(1)        #1G0NB
     C                   MOVEA     TXX(1)        #1OYCD
     C                   MOVEA     TAS(1)        #1O5CD

     C                   MOVEA     KOD(2)        #1DWCD
     C                   MOVEA     AFH(2)        #1G1NB
     C                   MOVEA     DAT(2)        #1G2NB
     C                   MOVEA     TXX(2)        #1OZCD
     C                   MOVEA     TAS(2)        #1O6CD

     C                   MOVEA     KOD(3)        #1DXCD
     C                   MOVEA     AFH(3)        #1G3NB
     C                   MOVEA     DAT(3)        #1G4NB
     C                   MOVEA     TXX(3)        #1O0CD
     C                   MOVEA     TAS(3)        #1O7CD

     C                   MOVEA     KOD(4)        #1DYCD
     C                   MOVEA     AFH(4)        #1G5NB
     C                   MOVEA     DAT(4)        #1G6NB
     C                   MOVEA     TXX(4)        #1O1CD
     C                   MOVEA     TAS(4)        #1O8CD

     C                   MOVEA     KOD(5)        #1EDCD
     C                   MOVEA     AFH(5)        #1HDNB
     C                   MOVEA     DAT(5)        #1HENB
     C                   MOVEA     TXX(5)        #1O2CD
     C                   MOVEA     TAS(5)        #1O9CD

     C                   MOVEA     KOD(6)        #1EECD
     C                   MOVEA     AFH(6)        #1HFNB
     C                   MOVEA     DAT(6)        #1HGNB
     C                   MOVEA     TXX(6)        #1O3CD
     C                   MOVEA     TAS(6)        #1PACD

     EvalR   MIN1 = #1DVCD;              1
     EvalR   MIN2 = #1DWCD;              1
     EvalR   MIN3 = #1DXCD;              1
     EvalR   MIN4 = #1DYCD;              1
     EvalR   MIN5 = #1EDCD;              1
     EvalR   MIN6 = #1EECD;              1
                  //----------------------------------------------------------------
                  // SCHRAPPEN VAN KODES ALS  NETTO WKL < 0 WORDT !!!
                  // TEST1->6 = * BIJ NOG TE BEHANDELEN KODES AFHOUDINGEN,
                  // TEST1->6 = 0 BIJ BLANKO ZONES;  = 1 BIJ REEDS AFGETROKKEN KODES
                  // AFH1
                 If #1DVCD = *BLANK;
     EvalR   TEST1 = '0';                          0:AFH NT INGEVU
                 ELSE; //*:AFH WELING
                   If #1DVCD = 'TG-' OR #1DVCD = 'TG ' OR #1DVCD = 'GM ' OR #1DVCD = 'GS ' OR #1DVCD = 'GP ' OR #1DVCD = 'GK ';
     EvalR   TEST1 = 'B';                          NAAR BZBEDR
                   ELSE;
     EvalR   TEST1 = '*';                          NAAR WKLBEDR
                   Endif;
                 Endif;
                  // AFH2
                 If #1DWCD = *BLANK;
     EvalR   TEST2 = '0';
                 ELSE;
                   If #1DWCD = 'TG-' OR #1DWCD = 'TG ' OR #1DWCD = 'GM ' OR #1DWCD = 'GS ' OR #1DWCD = 'GP ' OR #1DWCD = 'GK ';
     EvalR   TEST2 = 'B';                          NAAR BZBEDR
                   ELSE;
     EvalR   TEST2 = '*';                          NAAR WKLBEDR
                   Endif;
                 Endif;
                  // AFH3
                 If #1DXCD = *BLANK;
     EvalR   TEST3 = '0';
                 ELSE;
                   If #1DXCD = 'TG-' OR #1DXCD = 'TG ' OR #1DXCD = 'GM ' OR #1DXCD = 'GS ' OR #1DXCD = 'GP ' OR #1DXCD = 'GK ';
     EvalR   TEST3 = 'B';                          NAAR BZBEDR
                   ELSE;
     EvalR   TEST3 = '*';                          NAAR WKLBEDR
                   Endif;
                 Endif;
                  // AFH4
                 If #1DYCD = *BLANK;
     EvalR   TEST4 = '0';
                 ELSE;
                   If #1DYCD = 'TG-' OR #1DYCD = 'TG ' OR #1DYCD = 'GM ' OR #1DYCD = 'GS ' OR #1DYCD = 'GP ' OR #1DYCD = 'GK ';
     EvalR   TEST4 = 'B';                          NAAR BZBEDR
                   ELSE;
     EvalR   TEST4 = '*';                          NAAR WKLBEDR
                   Endif;
                 Endif;
                  // AFH5
                 If #1EDCD = *BLANK;
     EvalR   TEST5 = '0';
                 ELSE;
                   If #1EDCD = 'TG-' OR #1EDCD = 'TG ' OR #1EDCD = 'GM ' OR #1EDCD = 'GS ' OR #1EDCD = 'GP ' OR #1EDCD = 'GK ';
     EvalR   TEST5 = 'B';                          NAAR BZBEDR
                   ELSE;
     EvalR   TEST5 = '*';                          NAAR WKLBEDR
                   Endif;
                 Endif;
                  // AFH6
                 If #1EECD = *BLANK;
     EvalR   TEST6 = '0';
                 ELSE;
                   If #1EECD = 'TG-' OR #1EECD = 'TG ' OR #1EECD = 'GM ' OR #1EECD = 'GS ' OR #1EECD = 'GP ' OR #1EECD = 'GK ';
     EvalR   TEST6 = 'B';                          NAAR BZBEDR
                   ELSE;
     EvalR   TEST6 = '*';                          NAAR WKLBEDR
                   Endif;
                 Endif;
                  // X2
                 If #1JQNB = 0;
     EvalR   TESTX2 = '0';
                 ELSE;
     EvalR   TESTX2 = '*';
                 Endif;
                  // BC
                 If #1LQNB = 0;
     EvalR   TESTBC = '0';
                 ELSE;
     EvalR   TESTBC = '*';
                 Endif;
                  // TB-,IR-,TG- --> -TEKEN WORDT GESTOPT IN MIN1->MIN6
     EvalR   MIN1 = #1DVCD;              1
     EvalR   MIN2 = #1DWCD;              1
     EvalR   MIN3 = #1DXCD;              1
     EvalR   MIN4 = #1DYCD;              1
     EvalR   MIN5 = #1EDCD;              1
     EvalR   MIN6 = #1EECD;              1

                 TOTRXX = 0;
                 TOTRT = 0;
                 If HTAKSW > 0;
         R01P1 = #1DVCD;             1
         R02P1 = #1DWCD;             1
         R03P1 = #1DXCD;             1
         R04P1 = #1DYCD;             1
         R05P1 = #1EDCD;             1
         R06P1 = #1EECD;             1
                   If R01P1 = 'R';
                     TOTRXX = TOTRXX + #1GZNB;
                   ENDIF;
                   If R02P1 = 'R';
                     TOTRXX = TOTRXX + #1G1NB;
                   ENDIF;
                   If R03P1 = 'R';
                     TOTRXX = TOTRXX + #1G3NB;
                   ENDIF;
                   If R04P1 = 'R';
                     TOTRXX = TOTRXX + #1G5NB;
                   ENDIF;
                   If R05P1 = 'R';
                     TOTRXX = TOTRXX + #1HDNB;
                   ENDIF;
                   If R06P1 = 'R';
                     TOTRXX = TOTRXX + #1HFNB;
                   ENDIF;
                   If TOTRXX >= HWKL;
                     HTAKS = HTAKSB;
                     HTAKSW = 0;
                   ELSE;
                     TOTRT = TOTRXX + HTAKSW;
                     If TOTRT >= HWKL;
                       HTAKSW = HWKL - TOTRXX;
                       HTAKS = HTAKSW + HTAKSB;
                     ENDIF;
                   ENDIF;
                 ENDIF; //HTAKSW>0
                  //----------------------------------------------------------------
                  //** NA S00 --> TAKS EN RWP AFTREKKEN
                 If HTAKSW > 0;
                   RESUL2 = RESULW - HTAKSW;
                    //          RESUL2    SUB  RWP       RESUL2           KAN BIJ TYPE
                   If RESUL2 >= 0; //15
                     RESULW = RESUL2;
                   ELSE;
     EvalR   WUODCD = '1';
                     HTAKSW = HTAKSW + RESUL2; //300+(-200)=100
                      //                    Z-ADDHTAKSB    HTAKS
                     HTAKS = HTAKSW + HTAKSB;
                     RWP = 0;
                     RESULW = 0;
                   Endif;
                 Endif; //HTAKSW > 0
                 If RWP > 0;
                   RESUL2 = RESULW - RWP; //KAN BIJ TYPE
                   If RESUL2 >= 0; //15
                     RESULW = RESUL2;
                   ELSE;
     EvalR   WUODCD = '1';
                      //          HTAKSW    ADD  RESUL2    HTAKSW
                      //                    Z-ADDHTAKSB    HTAKS
                      //          HTAKSW    ADD  HTAKSB    HTAKS
                     RWP = RWP + RESUL2; //100+(-50)=50
                     RESULW = 0;
                   Endif;
                 Endif; //RWP    > 0
                  //----------------------------------------------------------------
                  //** NA S00,TAKS & RWP --> TB- EN IR- OPTELLEN
                 If TEST1 = '*' AND MIN1 = '-'; //OP WKL
     EvalR   TEST1 = '1';                          VERWERKT
                   RESULW = RESULW + #1GZNB;
                 Endif; //END TEST1=*
                 If TEST2 = '*' AND MIN2 = '-';
     EvalR   TEST2 = '1';
                   RESULW = RESULW + #1G1NB;
                 Endif; //END TEST2=*
                 If TEST3 = '*' AND MIN3 = '-';
     EvalR   TEST3 = '1';
                   RESULW = RESULW + #1G3NB;
                 Endif; //END TEST3=*
                 If TEST4 = '*' AND MIN4 = '-';
     EvalR   TEST4 = '1';
                   RESULW = RESULW + #1G5NB;
                 Endif; //END TEST4=*
                 If TEST5 = '*' AND MIN5 = '-';
     EvalR   TEST5 = '1';
                   RESULW = RESULW + #1HDNB;
                 Endif; //END TEST5=*
                 If TEST6 = '*' AND MIN6 = '-';
     EvalR   TEST6 = '1';
                   RESULW = RESULW + #1HFNB;
                 Endif; //END TEST6=*
                  //----------------------------------------------------------------
                  //NA S00,TAKSW,RWP,TB-,IR-:ALLE ANDERE AFH.AFTREKKEN ALS TEST1->6 NOG * IS
                 If #1DVCD <> 'DI ';
                   If TEST1 = '*';
                     RESUL2 = RESULW - #1GZNB;
                     If RESULW <> 0;
     EvalR   TEST1 = '1';             1
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1GZNB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST1=*
                 Endif; //END DI

                 If #1DWCD <> 'DI ';
                   If TEST2 = '*';
                     RESUL2 = RESULW - #1G1NB;
                     If RESULW <> 0;
     EvalR   TEST2 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G1NB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST2=*
                 Endif; //END DI

                 If #1DXCD <> 'DI ';
                   If TEST3 = '*';
                     RESUL2 = RESULW - #1G3NB;
                     If RESULW <> 0;
     EvalR   TEST3 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G3NB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST3=*
                 Endif; //END DI

                 If #1DYCD <> 'DI ';
                   If TEST4 = '*';
                     RESUL2 = RESULW - #1G5NB;
                     If RESULW <> 0;
     EvalR   TEST4 = '1';             1
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G5NB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST4=*
                 Endif; //END DI

                 If #1EDCD <> 'DI ';
                   If TEST5 = '*';
                     RESUL2 = RESULW - #1HDNB;
                     If RESULW <> 0;
     EvalR   TEST5 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HDNB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST5=*
                 Endif; //END DI

                 If #1EECD <> 'DI ';
                   If TEST6 = '*';
                     RESUL2 = RESULW - #1HFNB;
                     If RESULW <> 0;
     EvalR   TEST6 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HFNB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST6=*
                 Endif; //END DI
                  //----------------------------------------------------------------
                  //NA S00,TAKSW,RWP,TB-,IR-,TB,IR,VO,O01->O99,S01->S99,TV'S NOG BC & X2 AFTR
                  // EERST BC AFTREKKEN EN ALS LAATSTE PAS X2 ? DUS X2 EERST KIJKEN OF
                  // ER NOG CENTJE SGENOEG ZIJN VOOR X2

                 If TESTX2 = '*';
                   If HX2 > 0;
                     RESUL2 = RESULW - HX2;
                     If RESUL2 < 0;
     EvalR   WUOFCD = '1';
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
     EvalR   TESTX2 = '1';
                     Endif; //END RESUL2
                   ELSE; //HX2=0
     EvalR   TESTX2 = '*';
                   Endif; //END HX2=0
                 Endif; //END TESTX2=*
                 If TESTBC = '*';
                   If HBEDBC > 0;
                     RESUL2 = RESULW - HBEDBC;
                     If RESUL2 < 0;
     EvalR   WUOFCD = '1';
                       If HBEDB1 > RESULW;
                         BCAAN2 = 0;
                         HBEDB2 = 0;
     C                   GOTO      PMAN3
                       Endif;
                       If HBEDB1 < RESULW;
     C                   GOTO      PMAN4
                       Endif;
                       If HBEDB1 = RESULW;
                         BCAAN2 = 0;
                         HBEDB2 = 0;
     C                   GOTO      PMANNI
                       Endif;
     C     PMAN4         TAG
                       If BCAAN2 > 0;
                         BCAAAA = BCAAN2 - 1; //BCAANTAL-1
                         BCAAN2 = BCAAN2 - 1; //BCAANTAL-1
                         Dow BCAAAA <> 0;
                           If RESULW >= 0;
                             HBEDB2 = BCAAAA * AFDBD2;
                             RESUL2 = RESULW - HBEDB2;
                             RESUL2 = RESUL2 - HBEDB1;
                             If RESUL2 >= 0;
                               BCAAN2 = BCAAAA;
                               RESULW = RESUL2;
     EvalR   TESTBC = '1';
                               If RESULW = 0;
     C                   GOTO      JUST04
                               ENDIF;
                             Endif; //END >= 0
                           Endif; //END >= 0
                           BCAAAA = BCAAAA - 1; //BCAANTAL-1
                         Enddo; //ENDDO
     C     JUST04        TAG
                         HBEDB2 = BCAAN2 * AFDBD2; //AANT X BEDR
                         HBEDBC = HBEDB2 + HBEDB1;
                         #1LPNB = BCAAN2 + BCAAN1; //AANTAL
                         #1LQNB = HBEDBC; //BEDR BC
     C                   GOTO      PLEK
                       Endif; //BCAANT2>0
     C     PMAN3         TAG
                       If BCAAN1 > 0;
                         BCAAAA = BCAAN1 - 1; //BCAANTAL-1
                         BCAAN1 = BCAAN1 - 1; //BCAANTAL-1
                         Dow BCAAAA <> 0;
                           If RESULW >= 0;
                             HBEDB1 = BCAAAA * AFDBD1;
                             RESUL2 = RESULW - HBEDB1;
                             If RESUL2 >= 0;
                               BCAAN1 = BCAAAA;
                               RESULW = RESUL2;
     EvalR   TESTBC = '1';
                               If RESULW = 0;
     C                   GOTO      JUST03
                               ENDIF;
                             Endif; //END >= 0
                           Endif; //END >= 0
                           BCAAAA = BCAAAA - 1; //BCAANTAL-1
                         Enddo; //ENDDO
     C     JUST03        TAG
                         HBEDB1 = BCAAN1 * AFDBD1; //AANT X BEDR
                         HBEDBC = HBEDB1;
                         #1LPNB = BCAAN1; //AANTALBC'S
                         #1LQNB = HBEDBC; //BEDR BC
     C                   GOTO      PLEK
                       Endif; //BCAANT1>0
     C     PMANNI        TAG
                       BCAAN2 = 0;
                       HBEDB2 = 0;
                       #1LPNB = BCAAN1; //AANTALBC'S
                       HBEDBC = HBEDB1;
                       #1LQNB = HBEDBC; //BEDR BC
                       RESULW = 0;
     EvalR   TESTBC = '1';
     C                   GOTO      PLEK
                     ELSE; //RESUL2>0
                       RESULW = RESUL2;
     EvalR   TESTBC = '1';
                     Endif; //END RESUL2
                   ELSE; //BC BEDR=0
     EvalR   TESTBC = '*';
                   Endif; //BCBEDR>0
                 Endif; //END TESTBC=*
                  // X2 IS NAAR BOVEN VERPLAATST VOOR BC
                  //          TESTX2    IFEQ '*'
                  //          HX2       IFGT 0
                  //          RESULW    SUB  HX2       RESUL2
                  //          RESUL2    IFLT 0
                  //                    MOVE '1'       WUOFCD
                  //                    GOTO PLEK
                  //                    ELSE
                  //                    Z-ADDRESUL2    RESULW
                  //                    MOVE '1'       TESTX2
                  //                    END                             END RESUL2
                  //                    ELSE                            HX2=0
                  //                    MOVE '*'       TESTX2
                  //                    END                             END HX2=0
                  //                    END                             END TESTX2=*
                  //----------------------------------------------------------------
                  //NA S00,TAKSW,RWP,TB-,IR-,TB,IR,VO,O01->O99,S01->S99,TV,BC,X2 NOG DI AFTR
                 If TEST1 = '*';
                   If #1DVCD = 'DI ';
                     RESUL2 = RESULW - #1GZNB;
                     If RESULW <> 0;
     EvalR   TEST1 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1GZNB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
     EvalR   TEST1 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST1=*
                 If TEST2 = '*';
                   If #1DWCD = 'DI ';
                     RESUL2 = RESULW - #1G1NB;
                     If RESULW <> 0;
     EvalR   TEST2 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G1NB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
     EvalR   TEST2 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST2=*
                 If TEST3 = '*';
                   If #1DXCD = 'DI ';
                     RESUL2 = RESULW - #1G3NB;
                     If RESULW <> 0;
     EvalR   TEST3 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G3NB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
     EvalR   TEST3 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST3=*
                 If TEST4 = '*';
                   If #1DYCD = 'DI ';
                     RESUL2 = RESULW - #1G5NB;
                     If RESULW <> 0;
     EvalR   TEST4 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G5NB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
     EvalR   TEST4 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST4=*
                 If TEST5 = '*';
                   If #1EDCD = 'DI ';
                     RESUL2 = RESULW - #1HDNB;
                     If RESULW <> 0;
     EvalR   TEST5 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HDNB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
     EvalR   TEST5 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST5=*
                 If TEST6 = '*';
                   If #1EECD = 'DI ';
                     RESUL2 = RESULW - #1HFNB;
                     If RESULW <> 0;
     EvalR   TEST6 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HFNB = RESULW;
                       RESULW = 0;
     C                   GOTO      PLEK
                     ELSE;
                       RESULW = RESUL2;
     EvalR   TEST6 = '1';
                     Endif; //END RESUL2
                   Endif; //END DI
                 Endif; //END TEST6=*

               Endif; //END RESULW<0
     C     PLEK          TAG
                //**************************************************************
                //VNF HIER BEGINNEN WE AF TE HOUDEN VAN RESULB : RESULB=BEDRAG BZ=HBEDBZ
                // RESULB = RESULB-GM-GS-GP-GK-TG  + TG-
               If TEST1 = 'B';
                  //          #1DVCD    IFNE *BLANK                     AFH1 KODE
                 If MIN1 = '-';
     EvalR   TEST1 = '2';
                   RESULB = RESULB + #1GZNB;
                 ELSE;
                   RESULB = RESULB - #1GZNB;
     EvalR   TEST1 = '2';
                 Endif;
                  //                    END
               Endif;

               If TEST2 = 'B';
                  //          #1DWCD    IFNE *BLANK                     AFH2 KODE
                 If MIN2 = '-';
                   RESULB = RESULB + #1G1NB;
     EvalR   TEST2 = '2';
                 ELSE;
                   RESULB = RESULB - #1G1NB;
     EvalR   TEST2 = '2';
                 Endif;
                  //                    END
               Endif;

               If TEST3 = 'B';
                  //          #1DXCD    IFNE *BLANK                     AFH3 KODE
                 If MIN3 = '-';
                   RESULB = RESULB + #1G3NB;
     EvalR   TEST3 = '2';
                 ELSE;
                   RESULB = RESULB - #1G3NB;
     EvalR   TEST3 = '2';
                 Endif;
                  //                    END
               Endif;

               If TEST4 = 'B';
                  //          #1DYCD    IFNE *BLANK                     AFH4 KODE
                 If MIN4 = '-';
                   RESULB = RESULB + #1G5NB;
     EvalR   TEST4 = '2';
                 ELSE;
                   RESULB = RESULB - #1G5NB;
     EvalR   TEST4 = '2';
                 Endif;
                  //                    END
               Endif;

               If TEST5 = 'B';
                  //          #1EDCD    IFNE *BLANK                     AFH5 KODE
                 If MIN5 = '-';
                   RESULB = RESULB + #1HDNB;
     EvalR   TEST5 = '2';
                 ELSE;
                   RESULB = RESULB - #1HDNB;
     EvalR   TEST5 = '2';
                 Endif;
                  //                    END
               Endif;

               If TEST6 = 'B';
                  //          #1EECD    IFNE *BLANK                     AFH6 KODE
                 If MIN6 = '-';
                   RESULB = RESULB + #1HFNB;
     EvalR   TEST6 = '2';
                 ELSE;
                   RESULB = RESULB - #1HFNB;
     EvalR   TEST6 = '2';
                 Endif;
                  //                    END
               Endif;
                //----------------------------------------------------------------
               If RESULB < 0; //NETTO<0
                 RESULB = HBEDBZ;
                 RESULB = RESULB + HBBVO;
                  //-------------------------------------------------------------
                  //  OPVULLEN TABEL AFHOUDINGEN ADHV. AFH. 1 --> 6
                  //-------------------------------------------------------------
                  // SORTERING KAN REEDS VROEGER GEBEURD ZIJN BIJ RESULW<0
                  // DOCH WAS DEZE TOEN > 0, DAN IS DIE SORTERING NIET GEBEURD
                  // DAN MOET MEN NOG WETEN OF TEST1=0,1,B OF *; ....
     C                   MOVEA     *IN(50)       UWIN              1
     C                   MOVEA     #1DVCD        KOD(1)                         AFH1 KODE
     C                   MOVEA     #1GZNB        AFH(1)
     C                   MOVEA     #1G0NB        DAT(1)
     C                   MOVEA     #1OYCD        TXX(1)
     C                   MOVEA     #1O5CD        TAS(1)
     C                   MOVEA     TEST1         TTT(1)                         TEST1

     C                   MOVEA     #1DWCD        KOD(2)                         AFH2 KODE
     C                   MOVEA     #1G1NB        AFH(2)
     C                   MOVEA     #1G2NB        DAT(2)
     C                   MOVEA     #1OZCD        TXX(2)
     C                   MOVEA     #1O6CD        TAS(2)
     C                   MOVEA     TEST2         TTT(2)                         TEST2

     C                   MOVEA     #1DXCD        KOD(3)                         AFH3 KODE
     C                   MOVEA     #1G3NB        AFH(3)
     C                   MOVEA     #1G4NB        DAT(3)
     C                   MOVEA     #1O0CD        TXX(3)
     C                   MOVEA     #1O7CD        TAS(3)
     C                   MOVEA     TEST3         TTT(3)                         TEST3

     C                   MOVEA     #1DYCD        KOD(4)                         AFH4 KODE
     C                   MOVEA     #1G5NB        AFH(4)
     C                   MOVEA     #1G6NB        DAT(4)
     C                   MOVEA     #1O1CD        TXX(4)
     C                   MOVEA     #1O8CD        TAS(4)
     C                   MOVEA     TEST4         TTT(4)                         TEST4

     C                   MOVEA     #1EDCD        KOD(5)                         AFH5 KODE
     C                   MOVEA     #1HDNB        AFH(5)
     C                   MOVEA     #1HENB        DAT(5)
     C                   MOVEA     #1O2CD        TXX(5)
     C                   MOVEA     #1O9CD        TAS(5)
     C                   MOVEA     TEST5         TTT(5)                         TEST5

     C                   MOVEA     #1EECD        KOD(6)                         AFH6 KODE
     C                   MOVEA     #1HFNB        AFH(6)
     C                   MOVEA     #1HGNB        DAT(6)
     C                   MOVEA     #1O3CD        TXX(6)
     C                   MOVEA     #1PACD        TAS(6)
     C                   MOVEA     TEST6         TTT(6)                         TEST6
                  //-------------------------------------------------------------
                  //  SORTEREN TABEL AFHOUDINGEN VOLGENS PRIORITEIT
                 U = 0;
                 V = 6;
                 W = 1;
                 X = 2;
     C     TERUG2        TAG
     C     PRI(W)        COMP      PRI(X)                             50
     C  N50              GOTO      TER4
     EvalR   PRIX = PRI(X);              1
     EvalR   KODX = KOD(X);              3
                 DATX = DAT(X);
                 AFHX = AFH(X);
     EvalR   TXXX = TXX(X);              3
     EvalR   TASX = TAS(X);              1
     EvalR   TTTX = TTT(X);              1
     EvalR   PRI(X) = PRI(W);            1
     EvalR   KOD(X) = KOD(W);            3
                 DAT(X) = DAT(W);
                 AFH(X) = AFH(W);
     EvalR   TXX(X) = TXX(W);            3
     EvalR   TAS(X) = TAS(W);            1
     EvalR   TTT(X) = TTT(W);            1
     EvalR   PRI(W) = PRIX;
     EvalR   KOD(W) = KODX;
                 DAT(W) = DATX;
                 AFH(W) = AFHX;
     EvalR   TXX(W) = TXXX;
     EvalR   TAS(W) = TASX;
     EvalR   TTT(W) = TTTX;
                 Y = X;
                 U = U + 1;
     C     TER4          TAG
                 W = W + 1;
                 X = X + 1;
     C     X             COMP      V                                  50
     C  N50              GOTO      TERUG2
     C     U             COMP      0                                      50
     C   50              GOTO      ENDSR2
                 U = 0;
                 V = Y;
                 W = 1;
                 X = 2;
     C                   GOTO      TERUG2
     C     ENDSR2        TAG
     C                   MOVEA     KOD(1)        #1DVCD
     C                   MOVEA     AFH(1)        #1GZNB
     C                   MOVEA     DAT(1)        #1G0NB
     C                   MOVEA     TXX(1)        #1OYCD
     C                   MOVEA     TAS(1)        #1O5CD
     C                   MOVEA     TTT(1)        TEST1

     C                   MOVEA     KOD(2)        #1DWCD
     C                   MOVEA     AFH(2)        #1G1NB
     C                   MOVEA     DAT(2)        #1G2NB
     C                   MOVEA     TXX(2)        #1OZCD
     C                   MOVEA     TAS(2)        #1O6CD
     C                   MOVEA     TTT(2)        TEST2

     C                   MOVEA     KOD(3)        #1DXCD
     C                   MOVEA     AFH(3)        #1G3NB
     C                   MOVEA     DAT(3)        #1G4NB
     C                   MOVEA     TXX(3)        #1O0CD
     C                   MOVEA     TAS(3)        #1O7CD
     C                   MOVEA     TTT(3)        TEST3

     C                   MOVEA     KOD(4)        #1DYCD
     C                   MOVEA     AFH(4)        #1G5NB
     C                   MOVEA     DAT(4)        #1G6NB
     C                   MOVEA     TXX(4)        #1O1CD
     C                   MOVEA     TAS(4)        #1O8CD
     C                   MOVEA     TTT(4)        TEST4

     C                   MOVEA     KOD(5)        #1EDCD
     C                   MOVEA     AFH(5)        #1HDNB
     C                   MOVEA     DAT(5)        #1HENB
     C                   MOVEA     TXX(5)        #1O2CD
     C                   MOVEA     TAS(5)        #1O9CD
     C                   MOVEA     TTT(5)        TEST5

     C                   MOVEA     KOD(6)        #1EECD
     C                   MOVEA     AFH(6)        #1HFNB
     C                   MOVEA     DAT(6)        #1HGNB
     C                   MOVEA     TXX(6)        #1O3CD
     C                   MOVEA     TAS(6)        #1PACD
     C                   MOVEA     TTT(6)        TEST6

     EvalR   MIN1 = #1DVCD;              1
     EvalR   MIN2 = #1DWCD;              1
     EvalR   MIN3 = #1DXCD;              1
     EvalR   MIN4 = #1DYCD;              1
     EvalR   MIN5 = #1EDCD;              1
     EvalR   MIN6 = #1EECD;              1
                  //----------------------------------------------------------------
                  // TEST1->6 = * BIJ NOG TE BEHANDELEN KODES AFHOUDINGEN WKLH
                  // TEST1->6 = 0 BIJ BLANKO ZONES;  = 1 BIJ REEDS AFGETROKKEN KODES
                  // TEST1->6 = 2 BIJ BZ PROBEREN AF TE TREKKEN DOCH RESULB WERD<0
                  // TEST1->6 = B BIJ NOG TE BEHANDELEN KODES AFHOUDINGEN BZ
                  //               (TG,TG-,GM, GS EN GP EN GK)
                 If TEST1 = '2';
     EvalR   TEST1 = 'B';
                 Endif;
                 If TEST2 = '2';
     EvalR   TEST2 = 'B';
                 Endif;
                 If TEST3 = '2';
     EvalR   TEST3 = 'B';
                 Endif;
                 If TEST4 = '2';
     EvalR   TEST4 = 'B';
                 Endif;
                 If TEST5 = '2';
     EvalR   TEST5 = 'B';
                 Endif;
                 If TEST6 = '2';
     EvalR   TEST6 = 'B';
                 Endif;
                  //----------------------------------------------------------------
                  //** EERST --> TAKSB  AFTREKKEN
                 RESUL2 = RESULB - HTAKSB;
                  //          RESUL2    SUB  RWP       RESUL2     (RWP OP BZ BEST NT
                 If RESUL2 >= 0;
                   RESULB = RESUL2;
                 ELSE;
     EvalR   WUODCD = '1';
                   HTAKSB = HTAKSB + RESUL2; //100+(-70)=30
                   HTAKS = HTAKSB + HTAKSW;
                   RWP = 0;
                   RESULB = 0;
                 Endif;
                  //----------------------------------------------------------------
                  //** NA TAKSB  --> TG-  OPTELLEN
                 If TEST1 = 'B' AND #1DVCD = 'TG-';
     EvalR   TEST1 = '1';
                   RESULB = RESULB + #1GZNB;
                 Endif; //END TEST1=*
                 If TEST2 = 'B' AND #1DWCD = 'TG-';
     EvalR   TEST2 = '1';
                   RESULB = RESULB + #1G1NB;
                 Endif; //END TEST2=*
                 If TEST3 = 'B' AND #1DXCD = 'TG-';
     EvalR   TEST3 = '1';
                   RESULB = RESULB + #1G3NB;
                 Endif; //END TEST3=*
                 If TEST4 = 'B' AND #1DYCD = 'TG-';
     EvalR   TEST4 = '1';
                   RESULB = RESULB + #1G5NB;
                 Endif; //END TEST4=*
                 If TEST5 = 'B' AND #1EDCD = 'TG-';
     EvalR   TEST5 = '1';
                   RESULB = RESULB + #1HDNB;
                 Endif; //END TEST5=*
                 If TEST6 = 'B' AND #1EECD = 'TG-';
     EvalR   TEST6 = '1';
                   RESULB = RESULB + #1HFNB;
                 Endif; //END TEST6=*
                  //----------------------------------------------------------------
                  //** NA TAKSB,TG- --> TG AFTREKKEN
                 If TEST1 = 'B';
                   If #1DVCD = 'TG ';
                     RESUL2 = RESULB - #1GZNB;
                     If RESULB <> 0;
     EvalR   TEST1 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1GZNB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST1=*
                 Endif; //END DI

                 If TEST2 = 'B';
                   If #1DWCD = 'TG ';
                     RESUL2 = RESULB - #1G1NB;
                     If RESULB <> 0;
     EvalR   TEST2 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G1NB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST2=*
                 Endif; //END DI

                 If TEST3 = 'B';
                   If #1DXCD = 'TG ';
                     RESUL2 = RESULB - #1G3NB;
                     If RESULB <> 0;
     EvalR   TEST3 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G3NB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST3=*
                 Endif; //END DI

                 If TEST4 = 'B';
                   If #1DYCD = 'TG ';
                     RESUL2 = RESULB - #1G5NB;
                     If RESULB <> 0;
     EvalR   TEST4 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G5NB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST4=*
                 Endif; //END DI

                 If TEST5 = 'B';
                   If #1EDCD = 'TG ';
                     RESUL2 = RESULB - #1HDNB;
                     If RESULB <> 0;
     EvalR   TEST5 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HDNB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST5=*
                 Endif; //END DI

                 If TEST6 = 'B';
                   If #1EECD <> 'TG ';
                     RESUL2 = RESULB - #1HFNB;
                     If RESULB <> 0;
     EvalR   TEST6 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HFNB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
                     Endif; //END RESUL2
                   Endif; //END TEST6=*
                 Endif; //END DI
                  //----------------------------------------------------------------
                  //** NA TAKSB,TG-,TG OOK NOG GM, GS EN GP AFTREKKEN
                 If TEST1 = 'B';
                   If #1DVCD = 'GM ' OR #1DVCD = 'GS ' OR #1DVCD = 'GP ' OR #1DVCD = 'GK ';
                     RESUL2 = RESULB - #1GZNB;
                     If RESULB <> 0;
     EvalR   TEST1 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1GZNB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
     EvalR   TEST1 = '1';
                     Endif; //END RESUL2
                   Endif; //END GM,GS,GP
                 Endif; //END TEST1=B
                 If TEST2 = 'B';
                   If #1DWCD = 'GM ' OR #1DWCD = 'GS ' OR #1DWCD = 'GP ' OR #1DWCD = 'GK ';
                     RESUL2 = RESULB - #1G1NB;
                     If RESULB <> 0;
     EvalR   TEST2 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G1NB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
     EvalR   TEST2 = '1';
                     Endif; //END RESUL2
                   Endif; //END GM,GS,GP
                 Endif; //END TEST2=B
                 If TEST3 = 'B';
                   If #1DXCD = 'GM ' OR #1DXCD = 'GS ' OR #1DXCD = 'GP ' OR #1DXCD = 'GK ';
                     RESUL2 = RESULB - #1G3NB;
                     If RESULB <> 0;
     EvalR   TEST3 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G3NB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
     EvalR   TEST3 = '1';
                     Endif; //END RESUL2
                   Endif; //END GM,GS,GP
                 Endif; //END TEST3=B
                 If TEST4 = 'B';
                   If #1DYCD = 'GM ' OR #1DYCD = 'GS ' OR #1DYCD = 'GP ' OR #1DYCD = 'GK ';
                     RESUL2 = RESULB - #1G5NB;
                     If RESULB <> 0;
     EvalR   TEST4 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1G5NB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
     EvalR   TEST4 = '1';
                     Endif; //END RESUL2
                   Endif; //END GM,GS,GP
                 Endif; //END TEST4=B
                 If TEST5 = 'B';
                   If #1EDCD = 'GM ' OR #1EDCD = 'GS ' OR #1EDCD = 'GP ' OR #1EDCD = 'GK ';
                     RESUL2 = RESULB - #1HDNB;
                     If RESULB <> 0;
     EvalR   TEST5 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HDNB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
     EvalR   TEST5 = '1';
                     Endif; //END RESUL2
                   Endif; //END GM,GS,GP
                 Endif; //END TEST5=B
                 If TEST6 = 'B';
                   If #1EECD = 'GM ' OR #1EECD = 'GS ' OR #1EECD = 'GP ' OR #1EECD = 'GK ';
                     RESUL2 = RESULB - #1HFNB;
                     If RESULB <> 0;
     EvalR   TEST6 = '1';
                     Endif;
                     If RESUL2 < 0;
     EvalR   WUOECD = '1';
                       #1HFNB = RESULB;
                       RESULB = 0;
     C                   GOTO      PLEK2
                     ELSE;
                       RESULB = RESUL2;
     EvalR   TEST6 = '1';
                     Endif; //END RESUL2
                   Endif; //END GM,GS,GP
                 Endif; //END TEST6=B

               Endif; //END RESULB<0

     C     PLEK2         TAG
               If TEST1 = '*' OR TEST1 = 'B';
     EvalR   #1DVCD = *BLANK;                         AFH1 KODE
                 #1GZNB = 0; //AFH1 BEDRAG
                 #1G0NB = 0; //AFH1 DATUM
     EvalR   #1OYCD = *BLANK;                         AFH1 KODE TV
     EvalR   #1O5CD = *BLANK;                         AFH1 L.MAAL
               Endif;
               If TEST2 = '*' OR TEST2 = 'B';
     EvalR   #1DWCD = *BLANK;                         AFH2 KODE
                 #1G1NB = 0; //AFH2 BEDRAG
                 #1G2NB = 0; //AFH2 DATUM
     EvalR   #1OZCD = *BLANK;                         AFH2 KODE TV
     EvalR   #1O6CD = *BLANK;                         AFH2 L.MAAL
               Endif;
               If TEST3 = '*' OR TEST3 = 'B';
     EvalR   #1DXCD = *BLANK;                         AFH3 KODE
                 #1G3NB = 0; //AFH3 BEDRAG
                 #1G4NB = 0; //AFH3 DATUM
     EvalR   #1O0CD = *BLANK;                         AFH3 KODE TV
     EvalR   #1O7CD = *BLANK;                         AFH3 L.MAAL
               Endif;
               If TEST4 = '*' OR TEST4 = 'B';
     EvalR   #1DYCD = *BLANK;                         AFH4 KODE
                 #1G5NB = 0; //AFH4 BEDRAG
                 #1G6NB = 0; //AFH4 DATUM
     EvalR   #1O1CD = *BLANK;                         AFH4 KODE TV
     EvalR   #1O8CD = *BLANK;                         AFH4 L.MAAL
               Endif;
               If TEST5 = '*' OR TEST5 = 'B';
     EvalR   #1EDCD = *BLANK;                         AFH5 KODE
                 #1HDNB = 0; //AFH5 BEDRAG
                 #1HENB = 0; //AFH5 DATUM
     EvalR   #1O2CD = *BLANK;                         AFH5 KODE TV
     EvalR   #1O9CD = *BLANK;                         AFH5 L.MAAL
               Endif;
               If TEST6 = '*' OR TEST6 = 'B';
     EvalR   #1EECD = *BLANK;                         AFH6 KODE
                 #1HFNB = 0; //AFH6 BEDRAG
                 #1HGNB = 0; //AFH6 DATUM
     EvalR   #1O3CD = *BLANK;                         AFH6 KODE TV
     EvalR   #1PACD = *BLANK;                         AFH6 L.MAAL
               Endif;
               If TESTX2 = '*';
                 #1JQNB = 0; //X2
                 HX2 = 0;
     EvalR   #1JQNB = 0;
               Endif;
               If TESTBC = '*';
                 #1LPNB = 0; //BC AANTAL
                 #1LQNB = 0; //BC BEDRAG
                 #1E9NB = 0; //KAT JAAR
                 HBEDBC = 0;
     EvalR   #1CLCD = *BLANK;                         KAT KODE
               Endif;
                //----------------------------------------------------------------
                //** OPVULLEN HULPZONES AFH1 --> AFH6
     EvalR   WUPJCD = #1DVCD;
     EvalR   WUPKCD = #1DWCD;
     EvalR   WUPLCD = #1DXCD;
     EvalR   WUPMCD = #1DYCD;
     EvalR   WUPNCD = #1EDCD;
     EvalR   WUPOCD = #1EECD;
                //----------------------------------------------------------------
                //** MOVE RESULW NAAR NETTO ZONE EN TAKSW NAAR TAKS-ZONE
                //** MOVE RESULB NAAR NETTO ZONE BZ EN TAKSB NAAR TAKSB-ZONE
               #1HPNB = HWKL; //BEDRAG WKLH
               HBEDBZ = HBEDBZ + HBEDVO; //BEDR BZ+VORST
               HBEDBZ = HBEDBZ + HBBVO; //BEDR BZ+VORST
               #1GYNB = HBEDBZ; //BEDR BZ
               #1BENR = BZINH; //BEDR BZINH BP
               #1T6NB = RESULW; //NETTO WKL
               #1T7NB = RESULB; //NETTO BZ
               NET = RESULB;
               NET = NET + RESULW;
               #1GQNB = NET; //NETTO TOTAAL
             Endif; //WKLBZ=B
              // Heropvullen taks en rwp - Wkl betaling  *
             If HTAKS <> 0;
               #1HCNB = HTAKS;
               #1T4NB = HTAKSW;
               #1T5NB = HTAKSB;
             ELSE;
               #1HCNB = 0;
               #1T4NB = 0;
               #1T5NB = 0;
             Endif;
             If RWP <> 0;
               #1JRNB = RWP;
             ELSE;
               #1JRNB = 0;
             Endif;
              // CASE: WRK.Switch bedrag Wklh is =0 : 1ste maal in program
             If WUPFCD = '0'; //*IF
         WUPFCD = '3';                         Switch bedrag W
             Endif; //*FI
              // CASE: WRK.Switch bedrag BZ is =0:1ste maal in programma
             If WUPGCD = '0'; //*IF
         WUPGCD = '3';                         Switch bedrag B
             Endif; //*FI
             WUMLNB = #1HPNB; //wrk bedrag Wklh
             WUMMNB = #1GYNB; //wrk bedrag BZ
             WUBMND = #1BENR; //Wrk inh% BP
           ELSE;
              // CASE: *OTHERWISE
              // CASE: WRK.Switch70 is Eq 1
             If WUOACD = '1'; //*IF
                // Opvullen netto bij regelR - Wkl betaling  *
                // RESULT = WKLH BEDRAG+BZ BEDRAG+BEDRAG VORST-TAKS OF RWP (TA/BR)
               RESULT = 0;
               RESULT = HWKL + HBEDBZ;
               RESULT = RESULT + HBEDVO; //+ VORSTBEDRAG
               RESULT = RESULT - HTAKS; //- TAKS
               RESULT = RESULT - RWP; //- RWP
               #1GQNB = RESULT; //NETTOZONE OPVUL
               #1T6NB = *ZERO; //Netto wkl
               #1T7NB = *ZERO; //Netto BZ
               #1HCNB = *ZERO; //Taks
               #1T4NB = *ZERO; //Taks wkl
               #1T5NB = *ZERO; //Taks BZ
               #1JRNB = *ZERO; //RWP
                // Send message 'Er is ergens een fout'
         ZAMSID = 'USR3817';
               EXSR ZASNMS;
               *In99 = *On;

             ELSE;
                // CASE: *OTHERWISE
               #1GQNB = *ZERO; //Netto
               #1T6NB = *ZERO; //Netto wkl
               #1T7NB = *ZERO; //Netto BZ
               #1HCNB = *ZERO; //Taks
               #1T4NB = *ZERO; //Taks wkl
               #1T5NB = *ZERO; //Taks BZ
               #1JRNB = *ZERO; //RWP
                // Send message 'Er is ergens een fout'
         ZAMSID = 'USR3817';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // Sw73:Kan geen taks/rwp afhouden
            // CASE: WRK.Switch73 is eq 1
           If WUODCD = '1'; //*IF
              // Send message 'Geen taks/rwp af te houde'
         ZAMSID = 'USR0429';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // Sw74:Te veel afhoudingen; sommige werden op 0 gezet
            // CASE: WRK.Switch74 is eq 1
           If WUOECD = '1'; //*IF
              // Send message 'Te veel afh.en:sommige we'
         ZAMSID = 'USR0426';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // Sw75:X2/BC werden op nul gezet of aantal werd aangepast
            // CASE: WRK.Switch75 is eq 1
           If WUOFCD = '1'; //*IF
              // Send message 'X2/BC onmogelijk af te ho'
         ZAMSID = 'USR0425';
         ' = '*INFO;     ZAMSTP                         Message type
             EXSR ZASNMS;

           Endif; //*FI
            // CASE: WRK.Switch blanko opdracht is N
           If WUKTCJ = 'N'; //*IF
              // Controle alle zones=0 (niet testen voor 91/B./C./D./E./F.)
              // CASE:
              //  - c1ANDc9
              //   !- c1    : DTL.Type wklh. kode is <> 91
              //   !- c9    : DTL.Type wklh. kode is <> G.
              //   '-
         Y0CX01 = '0';            1
             If #1A1CD <> '91'; //*IF
               If #1A1CD <> 'G.'; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
                // Contr alle zones 0 - Wkl betaling  *
         WUW204 = '0';                         SWITCH204   ES0
               If #1GLNB = *ZERO AND #1GMNB = *ZERO AND #1GYNB = *ZERO AND #1G7NB = *ZERO AND #1JONB = *ZERO AND #1GPNB = *ZERO AND #1JNNB = *ZERO AND #1GNNB = *ZERO AND #1JLNB = *ZERO AND #1GONB = *ZERO AND #1JMNB = *ZERO AND #1GVNB = *ZERO AND #1GINB = *ZERO AND #1GJNB = *ZERO AND #1GKNB = *ZERO AND #1GRNB = *ZERO AND #1GSNB = *ZERO AND #1GTNB = *ZERO AND #1GUNB = *ZERO AND #1JJNB = *ZERO AND #1JKNB = *ZERO AND #1GGNB = *ZERO AND #1GHNB = *ZERO AND #1HPNB = *ZERO AND #1GXNB = *ZERO AND #1DVCD = *BLANK AND #1DWCD = *BLANK AND #1DXCD = *BLANK AND #1DYCD = *BLANK AND #1EDCD = *BLANK AND #1EECD = *BLANK AND #1LPNB = *ZERO AND #1BDST = 'Y'; //VD6
         WUW204 = '1';
               Endif; //END
                // Switch204=1 : alle zones zijn niet ingevuld --> error : blanko op
                // CASE: WRK.Switch204 is 1
               If WUW204 = '1'; //*IF
                  // Send message 'Geen enkele zone is ing'
         ZAMSID = 'USR1833';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Controle met Ov.betwklh2y - Wkl betaling  *
            //=VGL MET OV.BET V 1 IM + ZELFDE RM (KAN WEL BIJ <> TYPES C10 OF <> WB'S)
            //KAN OOK BIJ INPUT <> AFDELINGEN VOOR <> MND ACHTERSTAL
           CTRBET = 0;
         WUW206 = '0';            1
         WUFRCD = '0';            1            SWITCH106
         ' = ';           CATC10            1            TYPE C10 1POS
         ' = ';          CATC1X            2            TYPE C10 2POS
            // BEPALEN TYPE C10
         BARC10 = #1DOCD;            7
            //                    CALL 'MDC10'
           //BEROEP
           //AFDELING
           //SUBBEROEP
           //TYPE WKLH
           //BAREMA
           //TYPE C10 1 POSITIE
           //TYPE C10BIS 2 POSITI
            //---
     C                   MOVEA     *IN(50)       UWIN              1
     C                   MOVEA     *IN(51)       UWIN1             1
     C                   MOVEA     *IN(52)       UWIN2             1
     C                   MOVEA     *IN(53)       UWIN3             1
     EvalR   WUWBCD = '0';                         SW..:BET BESTAA
         REDC12 = '0000';            4
           DOK = #1GWNB;
         GWBNR8 = #1A2CD;            2 0
         ' = ';          TYPET             2
            //---
           //AFD
           //LIDNR
           //IND.MND
           //DAT.ACHT.
           //DAT.ACHT
           //C12 REDEN
           //TYPE C10
           //GWB-NR
           //TYPE
           //AFD
           //LIDNR
           //IND.MND
           //DAT.ACHT.
           //DAT.ACHT
           //C12 REDEN
           //TYPE C10
           //GWB-NR
           //TYPE WKLH
           //AFD
           //LIDNR
           //IND.MND
           //DAT.ACHT.
           //DAT.ACHT
           //C12 REDEN
           //TYPE C10
           //GWB-NR
           //TYPE 18/04
            //---
           SETLL (#1AACD:#1AFNB:BYEENB:#1GWNB:DOK:REDC12:CATC10:GWBNR8:TYPET) @BZREFY;
           READ @BZREFY ;
       *in50 = %eof();
           If #1AACD = BZAACD AND #1AFNB = BZAFNB AND BYEENB = BZK0NB AND #1GWNB = BZK5NB AND #1GWNB = BZBJDM AND REDC12 = BZCGCD AND CATC10 = BZK2NB AND GWBNR8 = BZK3NB; //AFD
              //-- N50=GEVONDEN ONGEACHT HET TYPE
             If #1A1CD = '01' OR #1A1CD = '02' OR #1A1CD = '03' OR #1A1CD = '04' OR #1A1CD = '06' OR #1A1CD = '11' OR #1A1CD = '31' OR #1A1CD = '18' OR #1A1CD = '24' OR #1A1CD = '16' OR #1A1CD = '17' OR #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58';
               If NOT *In50;
                 CHAIN (#1AACD:#1AFNB:BYEENB:#1GWNB:DOK:REDC12:CATC10:GWBNR8:#1A1CD) @BZREFY ;
       *in51 = (%found() = *Off);
               Endif;
                //-- N51=GEVONDEN EN ZELFDE TYPE WKLH
               If NOT *In51;
                 If CATC10 = '9';
               Endif;
                 If NOT *In51;
                   CHAIN (#1AACD:#1AFNB:BYEENB:#1GWNB:DOK:REDC12:CATC10:GWBNR8:WUCC18) @BZREFY ;
       *in52 = (%found() = *Off);
                 Endif;
                  //-- N52=GEVONDEN EN ZELFDE TYPE WKLH 18 OF 04
     C  N52              MOVE      'J'           WUWBCD                         ZELFDE TYPE
               ELSE; //NT C10=9
     EvalR   WUWBCD = 'J';                         GEVONDEN
               Endif; //END C10=9
               If *In51;
                 
               Endif;
               If NOT *In50;
                 If #1A1CD = '02';
               Endif OR #1A1CD = '04' OR #1A1CD = '06';
                 If *In51;
                   
                 Endif;
                 If NOT *In50;
                   If BZCDCD <> '01';
                 Endif AND BZCDCD <> '21' AND BZCDCD <> '22' AND BZCDCD <> '51' AND BZCDCD <> '03' AND BZCDCD <> '16' AND BZCDCD <> '17' AND BZCDCD <> '31';
     EvalR   WUWBCD = 'J';                         GEVONDEN
                 ELSE; //WEL 01
                   CTRBET = BZEONB; //19941229
                 Endif;
               Endif;
               If *In51;
                 
               Endif;
               If NOT *In50;
                 If #1A1CD = '05';
               Endif OR #1A1CD = '57' OR #1A1CD = '58';
                 If *In51;
                   
                 Endif;
                 If NOT *In50;
                   If BZCDCD <> '01';
                 Endif AND BZCDCD <> '03' AND BZCDCD <> '05' AND BZCDCD <> '57' AND BZCDCD <> '58';
 AND BZCDCD <> '06' AND BZCDCD <> '04' AND BZCDCD <> '02'                    // WKL3537 : IGU BETALEN NA REEDS TW BETAALD IN ZELFDE IM/RM
     EvalR   WUWBCD = 'J';                         GEVONDEN
                 ELSE; //WEL 01
                   CTRBET = BZEONB; //19941229
     EvalR   WUWBCD = '0';
                 Endif;
               Endif;
               If NOT *In51;
                 
               Endif;
               If NOT *In50;
                 If #1A1CD = '05';
               Endif OR #1A1CD = '57' OR #1A1CD = '58';
                 If NOT *In51;
                   
                 Endif;
                 If NOT *In50;
                   If BZCDCD <> '01';
                 Endif AND BZCDCD <> '03' AND BZCDCD <> '05' AND BZCDCD <> '57' AND BZCDCD <> '58' AND BZCDCD <> '02' AND BZCDCD <> '04' AND BZCDCD <> '06';
     EvalR   WUWBCD = 'J';                         GEVONDEN
                 ELSE; //WEL 01
                   CTRBET = BZEONB; //19941229
     EvalR   WUWBCD = '0';
                 Endif;
               Endif;
               If *In51;
                 
               Endif;
               If NOT *In50;
                 If #1A1CD = '01';
               Endif OR #1A1CD = '03' OR #1A1CD = '11' OR #1A1CD = '16' OR #1A1CD = '17';
                 If *In51;
                   
                 Endif;
                 If NOT *In50;
                   If BZCDCD <> '02';
                 Endif AND BZCDCD <> '04' AND BZCDCD <> '06' AND BZCDCD <> '21' AND BZCDCD <> '22' AND BZCDCD <> '51' AND BZCDCD <> '01' AND BZCDCD <> '03' AND BZCDCD <> '11' AND BZCDCD <> '16' AND BZCDCD <> '17';
     EvalR   WUWBCD = 'J';                         GEVONDEN
                 ELSE; //WEL 02
                   CTRBET = BZEONB; //19941229
                 Endif;
               Endif;
               If *In51;
                 
               Endif;
               If NOT *In50;
                 If #1A1CD = '21';
               Endif OR #1A1CD = '22' OR #1A1CD = '51';
                 If *In51;
                   
                 Endif;
                 If NOT *In50;
                   If BZCDCD <> '01';
                 Endif AND BZCDCD <> '03' AND BZCDCD <> '11' AND BZCDCD <> '16' AND BZCDCD <> '17';
     EvalR   WUWBCD = 'J';                         GEVONDEN
                 ELSE; //WEL 02
                   CTRBET = BZEONB; //19941229
                 Endif;
               Endif;
               If *In51;
                 
               Endif;
               If NOT *In50;
                 If #1A1CD = '18';
               Endif;
                 If *In51;
                   
                 Endif;
                 If NOT *In50;
                   If WUCC18 = '18';
                 Endif;
                   If *In51;
                     
                   Endif;
                   If NOT *In50;
                     If BZCDCD <> '04';
                   Endif;
     EvalR   WUWBCD = 'J';                         GEVONDEN
                   ELSE; //WEL 04
                     CTRBET = BZEONB; //19941229
                   Endif; //<> 04
                 ELSE;
                   If *In51;
                     
                   Endif;
                   If NOT *In50;
                     If WUCC18 = '04';
                   Endif;
                     If *In51;
                       
                     Endif;
                     If NOT *In50;
                       If BZCDCD <> '18';
                     Endif;
     EvalR   WUWBCD = 'J';                         GEVONDEN
                     ELSE; //WEL 18
                       CTRBET = BZEONB; //19941229
                     Endif; //<>18
                   Endif; //= 04
                 Endif; //= 18
               Endif; //= 18
               If NOT *In51;
                 
               Endif;
               If NOT *In50;
                 If #1A1CD = '24';
               Endif AND #1BCCD = 'W';
                 If NOT *In51;
                   
                 Endif;
                 If NOT *In50;
                   If BZCDCD = '24';
                 Endif;
                   If NOT *In51;
                     
                   Endif;
                   If NOT *In50;
                     If BZRRCD = 'W';
                   Endif;
     EvalR   WUWBCD = 'J';                         DUBBELE BET
                   ELSE; //SUBBER=F
                     CTRBET = BZEONB; //19941229
     EvalR   WUWBCD = '0';
                   Endif; //END W
                 ELSE; //NT 24
     EvalR   WUWBCD = 'J';                         <> TYPES
                 Endif; //END 24
               Endif; //END 24/W
               If NOT *In51;
                 
               Endif;
               If NOT *In50;
                 If #1A1CD = '24';
               Endif AND #1BCCD = 'F';
                 If NOT *In51;
                   
                 Endif;
                 If NOT *In50;
                   If BZCDCD = '24';
                 Endif;
                   If NOT *In51;
                     
                   Endif;
                   If NOT *In50;
                     If BZRRCD = 'F';
                   Endif;
     EvalR   WUWBCD = 'J';                         DUBBELE BET
                   ELSE; //SUBBER=F
                     CTRBET = BZEONB; //19941229
     EvalR   WUWBCD = '0';
                   Endif; //END W
                 ELSE;
     EvalR   WUWBCD = 'J';                         <> TYPES
                 Endif; //END 24
               Endif; //END 24/F

             ELSE; //NT 01,02,18
     EvalR   WUWBCD = 'J';                         GEVONDEN
             Endif; //END 01,02,18
           Endif; //END ZELFDE G
            //---
         USRP6 = BIBLCD;
           If BIBLCD = 'RVDS    ' OR WUDTCC = 'BYPAS';
     EvalR   WUWBCD = '0';                         BET.BESTAAT
           ENDIF;
            //---- EINDE BIJPASSING TOEGESTAAN ROSANNE OF BYPAS..
         DM = BYEDNB;                4 0          DG,MND UITV.DTM BANK
     EvalR   JREC = BYEDNB;              2 0
         DREC2 = DM;             2 0
     EvalR   MREC2 = DM;             2 0
           JREC2 = 2000 + JREC;
         JMREC2 = JREC2;            6 0
     EvalR   JMREC2 = MREC2;
         JMDREC = JMREC2;            8 0
     EvalR   JMDREC = DREC2;
           //AFD
           //LIDNR
           //IND.MND
           //DAT.BET.
           //DAT.ACHT.
           //DAT.ACHT
           //C12 REDEN
           CHAIN (#1AACD:#1AFNB:BYEENB:JMDREC:#1GWNB:DOK:REDC12) LVBZREL1 ;
       *in53 = (%found() = *Off);
     C  N53              MOVE      '1'           WUW206
            // BEDRAGEN >= 9999,99 KUNNEN NIET OP TAPE.
           SOMC2 = 0;
           If BIBLCD = 'RVDS    ' OR WUDTCC = 'BYPAS';
             SETLL (#1AACD:#1AFNB:BYEENB:#1GWNB:DOK:REDC12:CATC10:GWBNR8:TYPET) @BZREFY;
             READ @BZREFY ;
       *in50 = %eof();
     C   50              GOTO      ENDLOO
             If NOT *In50;
               If #1AACD = BZAACD;
             Endif AND #1AFNB = BZAFNB AND BYEENB = BZK0NB AND #1GWNB = BZK5NB AND #1GWNB = BZBJDM AND REDC12 = BZCGCD AND CATC10 = BZK2NB AND GWBNR8 = BZK3NB;

               Dow #1AACD = BZAACD AND #1AFNB = BZAFNB AND BYEENB = BZK0NB AND #1GWNB = BZK5NB AND #1GWNB = BZBJDM AND REDC12 = BZCGCD AND CATC10 = BZK2NB AND GWBNR8 = BZK3NB; //AFD
                 SOMC2 = SOMC2 + BZEVNB; //BRUTO WKL
                 READ @BZREFY ;
       *in50 = %eof();
     C   50              GOTO      ENDLOO
               ENDDO;
     C     ENDLOO        TAG
               SOMC2 = SOMC2 + HWKL;
               If SOMC2 >= 9999.99;
         WUFRCD = '1';                         SWITCH106
               ENDIF;
             ENDIF;
           ENDIF; //RVDS/BYPAS
     C                   MOVEA     UWIN          *IN(50)
     C                   MOVEA     UWIN1         *IN(51)
     C                   MOVEA     UWIN2         *IN(52)
     C                   MOVEA     UWIN3         *IN(53)
            // Switch206=1:dubbele betaling met ov.bet.wklh
            // CASE: WRK.switch206 is 1
           If WUW206 = '1'; //*IF
              // CASE: DTL.Type wklh. kode is <> 24
             If #1A1CD <> '24'; //*IF
                // Send message 'Dubbele betaling :zelfde'
         ZAMSID = 'USR1963';
               EXSR ZASNMS;
               *In99 = *On;

             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Reeds een betaling voor d'
         ZAMSID = 'USR3301';
         ' = '*INFO;     ZAMSTP                         Message type
               EXSR ZASNMS;

             Endif; //*FI
           Endif; //*FI
            // Switch106=1:bedrag > 100.000 fr
            // CASE: WRK.Switch106 is 1
           If WUFRCD = '1'; //*IF
              // Send message 'Alle bedragen >= 100.000'
         ZAMSID = 'USR3635';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
            // Optellen kbf dagen - Wkl betaling  *
           XXKBF = XXKBF + #1GXNB;
           XXNTV = XXNTV + #1GXNB;
            // Switch95=J-->bijpassing van een betaling : controle enkel dagen i
            // CASE: WRK.Switch95 is J
           If WUWBCD = 'J'; //*IF
              // CASE: DTL.Subberoep kode is niet P
             If #1BCCD <> 'P'; //*IF
                // CASE: DTL.Bedrag wkl is niet 0
               If #1HPNB <> *ZERO; //*IF
                  // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               ELSE;
                  // CASE: *OTHERWISE
                  // CASE: DTL.Geen bedrag wklh is N
                 If #1BDST = 'N'; //*IF
                    // CASE: DTL.BZ kode is B
                   If #1A4CD = 'B'; //*IF
                      // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                     EXSR ZASNMS;
                     *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                   ELSE;
                      // CASE: *OTHERWISE
                      // CASE: DTL.BZ kode is = T
                     If #1A4CD = 'T'; //*IF
                        // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                       EXSR ZASNMS;
                       *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                     ELSE;
                        // CASE: *OTHERWISE
                        // CASE: DTL.BZ kode is S
                       If #1A4CD = 'S'; //*IF
                          // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                         EXSR ZASNMS;
                         *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                       Endif; //*FI
                     Endif; //*FI
                   Endif; //*FI
                 ELSE;
                    // CASE: *OTHERWISE
                    // BZ bedrag
                    // CASE: DTL.Bedrag BZ is niet 0
                   If #1GYNB <> *ZERO; //*IF
                      // BZ=B
                      // CASE: DTL.BZ kode is B
                     If #1A4CD = 'B'; //*IF
                        // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                       EXSR ZASNMS;
                       *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                     Endif; //*FI
                      // BZ=T
                      // CASE: DTL.BZ kode is = T
                     If #1A4CD = 'T'; //*IF
                        // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                       EXSR ZASNMS;
                       *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                     Endif; //*FI
                      // BZ=S
                      // CASE: DTL.BZ kode is S
                     If #1A4CD = 'S'; //*IF
                        // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                       EXSR ZASNMS;
                       *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                     Endif; //*FI
                      // Type wklh=13
                      // CASE: DTL.Type wklh. kode is 13 : brugp textiel
                     If #1A1CD = '13'; //*IF
                        // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                       EXSR ZASNMS;
                       *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                     Endif; //*FI
                      // Type wklh=14
                      // CASE: DTL.Type wklh. kode is 14 : brugp textiel deelti
                     If #1A1CD = '14'; //*IF
                        // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                       EXSR ZASNMS;
                       *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                     Endif; //*FI
                      // Type wklh=15
                      // CASE: DTL.Type wklh. kode is 15 : grensarbeiders
                     If #1A1CD = '15'; //*IF
                        // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                       EXSR ZASNMS;
                       *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                     Endif; //*FI
                   ELSE;
                      // CASE: *OTHERWISE
                      // CASE: DTL.Geen dagen/bedrag BZ is N
                     If #1BCST = 'N'; //*IF
                        // BZ=B
                        // CASE: DTL.BZ kode is B
                       If #1A4CD = 'B'; //*IF
                          // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                         EXSR ZASNMS;
                         *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                       Endif; //*FI
                        // BZ=T
                        // CASE: DTL.BZ kode is = T
                       If #1A4CD = 'T'; //*IF
                          // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                         EXSR ZASNMS;
                         *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                       Endif; //*FI
                        // BZ=S
                        // CASE: DTL.BZ kode is S
                       If #1A4CD = 'S'; //*IF
                          // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                         EXSR ZASNMS;
                         *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                       Endif; //*FI
                        // Type wklh=13
                        // CASE: DTL.Type wklh. kode is 13 : brugp textiel
                       If #1A1CD = '13'; //*IF
                          // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                         EXSR ZASNMS;
                         *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                       Endif; //*FI
                        // Type wklh=14
                        // CASE: DTL.Type wklh. kode is 14 : brugp textiel deelti
                       If #1A1CD = '14'; //*IF
                          // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                         EXSR ZASNMS;
                         *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                       Endif; //*FI
                        // Type wklh=15
                        // CASE: DTL.Type wklh. kode is 15 : grensarbeiders
                       If #1A1CD = '15'; //*IF
                          // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                         EXSR ZASNMS;
                         *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                       Endif; //*FI
                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
                  // Uren GW > 0
                  // CASE: DTL.Uren ged.wkl. is > 0
                 If #1GINB > *ZERO; //*IF
                    // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
                  // Afh1 niet blank
                  // CASE: DTL.Afh1 kode is nt blank
                 If #1DVCD <> *BLANK; //*IF
                    // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
                  // Afh2 niet blank
                  // CASE: DTL.Afh2 kode is nt blank
                 If #1DWCD <> *BLANK; //*IF
                    // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
                  // Afh3 niet blank
                  // CASE: DTL.Afh3 kode is nt blank
                 If #1DXCD <> *BLANK; //*IF
                    // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
                  // Afh4 niet blank
                  // CASE: DTL.Afh4 kode is nt blank
                 If #1DYCD <> *BLANK; //*IF
                    // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
                  // Afh5 niet blank
                  // CASE: DTL.Afh5 kode is nt blank
                 If #1EDCD <> *BLANK; //*IF
                    // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
                  // Afh6 niet blank
                  // CASE: DTL.Afh6 kode is nt blank
                 If #1EECD <> *BLANK; //*IF
                    // Send message 'Bijpassing betaling->fout'
         ZAMSID = 'USR0629';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Contr.neg.taks<totaal bed - Wkl betaling  *
     EvalR   WUWU33 = '0';
           TOTPLU = HWKL; //WKL
           TOTPLU = TOTPLU + HBEDBZ; //BZ
           TOTPLU = TOTPLU + HTAKS; //TAKSWKLBZ

           POSTAK = 0;
           NEGTAK = 0;
           If #1DVCD = 'TB-' OR #1DVCD = 'TG-';
             NEGTAK = NEGTAK + #1GZNB;
           Endif;
           If #1DVCD = 'TB ' OR #1DVCD = 'TG ';
             POSTAK = POSTAK + #1GZNB;
           Endif;
           If #1DWCD = 'TB-' OR #1DWCD = 'TG-'; //AFH2
             NEGTAK = NEGTAK + #1G1NB;
           Endif;
           If #1DWCD = 'TB ' OR #1DWCD = 'TG ';
             POSTAK = POSTAK + #1G1NB;
           Endif;
           If #1DXCD = 'TB-' OR #1DXCD = 'TG-'; //AFH3
             NEGTAK = NEGTAK + #1G3NB;
           Endif;
           If #1DXCD = 'TB ' OR #1DXCD = 'TG ';
             POSTAK = POSTAK + #1G3NB;
           Endif;
           If #1DYCD = 'TB-' OR #1DYCD = 'TG-'; //AFH4
             NEGTAK = NEGTAK + #1G5NB;
           Endif;
           If #1DYCD = 'TB ' OR #1DYCD = 'TG ';
             POSTAK = POSTAK + #1G5NB;
           Endif;
           If #1EDCD = 'TB-' OR #1EDCD = 'TG-'; //AFH5
             NEGTAK = NEGTAK + #1HDNB;
           Endif;
           If #1EDCD = 'TB ' OR #1EDCD = 'TG ';
             POSTAK = POSTAK + #1HDNB;
           Endif;
           If #1EECD = 'TB-' OR #1EECD = 'TG-'; //AFH6
             NEGTAK = NEGTAK + #1HFNB;
           Endif;
           If #1EECD = 'TB ' OR #1EECD = 'TG ';
             POSTAK = POSTAK + #1HFNB;
           Endif;

           NEGPOS = TOTPLU - NEGTAK;
           If NEGPOS < 0; //NEG>POS
     EvalR   WUWU33 = '1';
           Endif;

           LPJRTA = 0;
           NEGJAR = 0;
           LPJRTA = HTAKS + #DCA24; //TAKS LOP.JR
           LPJRTA = LPJRTA + POSTAK; //+TB+TG
           NEGJAR = LPJRTA - NEGTAK; //-(TB-)-(TG-)
           If NEGJAR < 0;
     EvalR   WUWU33 = '2';
           Endif;
           LPJRTA = 0;
           NEGJAR = 0;
           LPJRTA = HTAKS + #1AENR; //TAKS LOP.JR
           LPJRTA = LPJRTA + POSTAK; //+TB+TG
           NEGJAR = LPJRTA - NEGTAK; //-(TB-)-(TG-)
           If NEGJAR < 0;
     EvalR   WUWU33 = '2';
           Endif;
           If BYEENB >= 202001;
             MDBEL02(#1AACD:#1AFNB:#1A1CD:#1A4CD:BDRGTR);
               LPJRTA = 0;
             NEGJAR = 0;
             LPJRTA = HTAKS + BDRGTR; //TAKS LOP.JR
             LPJRTA = LPJRTA + POSTAK; //+TB+TG
             NEGJAR = LPJRTA - NEGTAK; //-(TB-)-(TG-)
             If NEGJAR < 0;
     EvalR   WUWU33 = '2';
             Endif;
           ENDIF; //201901
            // CONTROLEREN OF TB-/TG- GEBRUIKT WORDEN BIJ HET JUISTE TYPE WKLH/CODE BZ
         TBTGOK = 'Y';
           MDTBTG(#1A1CD:#1A4CD:#1DVCD:#1DWCD:#1DXCD:#1DYCD:#1EDCD:#1EECD:TBTGOK);
             If TBTGOK = 'N';
         WUWU33 = '3';
           ENDIF;
            // Taks lopend jaar -(TB-) -(TG-) wordt negatief --> negatieve belas
            // CASE: WRK.Switch133 is 2
           If WUWU33 = '2'; //*IF
              // Send message 'Negatieve belastingen'
         ZAMSID = 'USR1614';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
            // Taks lopend jaar -(TB-) -(TG-) wordt negatief --> negatieve belas
            // CASE: WRK.Switch133 is 3
           If WUWU33 = '3'; //*IF
              // Send message 'Negatieve belastingen'
         ZAMSID = 'USR1614';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
            // Type 25: ndl grensarb. : bedrag wklh is verplicht en <= 2000fr
            // CASE: DTL.Type wklh. kode is 25
           If #1A1CD = '25'; //*IF
              // CASE: DTL.Bedrag wkl is = 0
             If #1HPNB = *ZERO; //*IF
                // Send message 'Type 25:bedrag wklh=verpl'
         ZAMSID = 'USR2300';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             ELSE;
                // CASE: *OTHERWISE
                // CASE: DTL.Bedrag wkl is > 2000
               If #1HPNB > 2000; //*IF
                  // Send message 'Type 25:Bedrag <=2000fr'
         ZAMSID = 'USR2301';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Type 24F: fr grensarb. : bedrag wklh is verplicht en <= 2000fr
            // CASE:
            //  - c1ANDc2
            //   !- c1    : DTL.Type wklh. kode is 24 : wisselkoerstoeslag
            //   !- c2    : DTL.Subberoep kode is F
            //   '-
         Y0CX01 = '0';            1
           If #1A1CD = '24'; //*IF
             If #1BCCD = 'F'; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // CASE: DTL.Bedrag wkl is = 0
             If #1HPNB = *ZERO; //*IF
                // Send message 'Type24F:bedrag wklh=verpl'
         ZAMSID = 'USR3303';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             ELSE;
                // CASE: *OTHERWISE
                // CASE: DTL.Bedrag wkl is > 2000
               If #1HPNB > 2000; //*IF
                  // Send message 'Type24F:bedrag<=2000fr'
         ZAMSID = 'USR3302';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Type 24W: Fr grensarb. : bedrag wklh is verplicht en <= 7625fr vn
            // CASE:
            //  - c1ANDc2
            //   !- c1    : DTL.Type wklh. kode is 24 : wisselkoerstoeslag
            //   !- c2    : DTL.Subberoep kode is W
            //   '-
         Y0CX01 = '0';            1
           If #1A1CD = '24'; //*IF
             If #1BCCD = 'W'; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // CASE: DTL.Bedrag wkl is = 0
             If #1HPNB = *ZERO; //*IF
                // Setup message data for message
               ZA0179 = #1HPNB; //Bedrag wkl
                // Send message 'Type24W:bedrag wklh=verpl'
         ZAMSID = 'USR3351';
               EXSR ZASNMS;
               *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
             ELSE;
                // CASE: *OTHERWISE
                // CASE: DTL.Bedrag wkl is > 7625
               If #1HPNB > 7625; //*IF
                  // CASE: DTL.Datum achterstal is < 199901
                 If #1GWNB < 199901; //*IF
                    // Setup message data for message
                   ZA0180 = #1HPNB; //Bedrag wkl
                    // Send message 'Bij type24:bedr wkl<=9999'
         ZAMSID = 'USR0875';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                 ELSE;
                    // CASE: *OTHERWISE
                    // Setup message data for message
                   ZA0181 = #1HPNB; //Bedrag wkl
                    // Send message 'Type24W:bedrag<=7625'
         ZAMSID = 'USR3352';
                   EXSR ZASNMS;
                   *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Type 00 : bedrag wklh/BZ >0 : error
            // CASE: DTL.Type wklh. kode is 00 : niet toelaatbaar
           If #1A1CD = '00'; //*IF
              // CASE:
              //  - c1ORc2
              //   !- c1    : DTL.Bedrag wkl is niet 0
              //   !- c2    : DTL.Bedrag BZ is niet 0
              //   '-
             If #1HPNB <> *ZERO OR #1GYNB <> *ZERO; //*IF
                // Send message 'Type 00 en bedragen > 0'
         ZAMSID = 'USR2533';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // Code BZ FA, PA kan pas vanaf 01/1997
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.BZ kode is FA
            //   !- c2    : DTL.BZ kode is PA
            //   '-
           If #1A4CD = 'FA' OR #1A4CD = 'PA'; //*IF
              // CASE:
              //  - c1ANDc2
              //   !- c1    : DTL.Bedrag BZ is > 0
              //   !- c2    : DTL.Datum achterstal is < 199701
              //   '-
         Y0CX01 = '0';            1
             If #1GYNB > *ZERO; //*IF
               If #1GWNB < 199701; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
                // Send message 'Code BZ FA, PA kan pas'
         ZAMSID = 'USR2553';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // Code BZ FS,PS,CS,ES kan pas vanaf 01/2014 tem 06/2015
            // CASE:
            //  - c1ORc2ORc3ORc4
            //   !- c1    : DTL.BZ kode is FS
            //   !- c2    : DTL.BZ kode is PS
            //   !- c3    : DTL.BZ kode is ES
            //   !- c4    : DTL.BZ kode is CS
            //   '-
           If #1A4CD = 'FS' OR #1A4CD = 'PS' OR #1A4CD = 'ES' OR #1A4CD = 'CS'; //*IF
              // CASE:
              //  - c1ANDc2
              //   !- c1    : DTL.Bedrag BZ is > 0
              //   !- c2    : DTL.Datum achterstal is < 201401
              //   '-
         Y0CX01 = '0';            1
             If #1GYNB > *ZERO; //*IF
               If #1GWNB < 201401; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
                // Send message 'Code BZ FS, PS kan pas'
         ZAMSID = 'USR6640';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
              // CASE:
              //  - c1ANDc2
              //   !- c1    : DTL.Bedrag BZ is > 0
              //   !- c2    : DTL.Datum achterstal is > 201506
              //   '-
         Y0CX01 = '0';            1
             If #1GYNB > *ZERO; //*IF
               If #1GWNB > 201506; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
                // Send message 'Metaal : Bz code niet ver'
         ZAMSID = 'USR6641';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // BZ metaal en geen geldige kaart voor refertemaand--> error
            // CASE: DTL.Bedrag BZ is > 0
           If #1GYNB > *ZERO; //*IF
              // CASE:
              //  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10ORc11ORc12ORc13ORc14OR
              //  - c15ORc16ORc17ORc18ORc19ORc20ORc21ORc22ORc23ORc24ORc25ORc26ORc
              //  - 27ORc28ORc29ORc30ORc31ORc32
              //   !- c1    : DTL.BZ kode is G
              //   !- c2    : DTL.BZ kode is VZ
              //   !- c3    : DTL.BZ kode is DZ
              //   !- c4    : DTL.BZ kode is C
              //   !- c5    : DTL.BZ kode is A
              //   !- c6    : DTL.BZ kode is NA
              //   !- c7    : DTL.BZ kode is V1
              //   !- c8    : DTL.BZ kode is V2
              //   !- c9    : DTL.BZ kode is V3
              //   !- c10   : DTL.BZ kode is V4
              //   !- c11   : DTL.BZ kode is Z
              //   !- c12   : DTL.BZ kode is E
              //   !- c13   : DTL.BZ kode is VA
              //   !- c14   : DTL.BZ kode is DA
              //   !- c15   : DTL.BZ kode is Z1
              //   !- c16   : DTL.BZ kode is FA
              //   !- c17   : DTL.BZ kode is PA
              //   !- c18   : DTL.BZ kode is M
              //   !- c19   : DTL.BZ kode is M1
              //   !- c20   : DTL.BZ kode is FZ
              //   !- c21   : DTL.BZ kode is PZ
              //   !- c22   : DTL.BZ kode is VJ
              //   !- c23   : DTL.BZ kode is 35
              //   !- c24   : DTL.BZ kode is 85
              //   !- c25   : DTL.BZ kode is 62
              //   !- c26   : DTL.BZ kode is 75
              //   !- c27   : DTL.BZ kode is 29
              //   !- c28   : DTL.BZ kode is 79
              //   !- c29   : DTL.BZ kode is CS
              //   !- c30   : DTL.BZ kode is ES
              //   !- c31   : DTL.BZ kode is FS
              //   !- c32   : DTL.BZ kode is PS
              //   '-
             If #1A4CD = 'G' OR #1A4CD = 'VZ' OR #1A4CD = 'DZ' OR #1A4CD = 'C' OR #1A4CD = 'A' OR #1A4CD = 'NA' OR #1A4CD = 'V1' OR #1A4CD = 'V2' OR #1A4CD = 'V3' OR #1A4CD = 'V4' OR #1A4CD = 'Z' OR #1A4CD = 'E' OR #1A4CD = 'VA' OR #1A4CD = 'DA' OR #1A4CD = 'Z1' OR #1A4CD = 'FA' OR #1A4CD = 'PA' OR #1A4CD = 'M' OR #1A4CD = 'M1' OR #1A4CD = 'FZ' OR #1A4CD = 'PZ' OR #1A4CD = 'VJ' OR #1A4CD = '35' OR #1A4CD = '85' OR #1A4CD = '62' OR #1A4CD = '75' OR #1A4CD = '29' OR #1A4CD = '79' OR #1A4CD = 'CS' OR #1A4CD = 'ES' OR #1A4CD = 'FS' OR #1A4CD = 'PS'; //*IF
                // BZ=15 --> type kaart=15
                // CASE: DTL.BZ kode is 15
               If #1A4CD = '15'; //*IF
         WUIWCO = '15';                         wrk metaal type
               Endif; //*FI
                // BZ=G  --> type kaart=01
                // CASE: DTL.BZ kode is G
               If #1A4CD = 'G'; //*IF
         WUIWCO = '01';                         wrk metaal type
               Endif; //*FI
                // BZ=VJ --> type kaart=VJ
                // CASE: DTL.BZ kode is VJ
               If #1A4CD = 'VJ'; //*IF
         WUIWCO = 'VJ';                         wrk metaal type
               Endif; //*FI
                // BZ=35 --> type kaart=35
                // CASE: DTL.BZ kode is 35
               If #1A4CD = '35'; //*IF
         WUIWCO = '35';                         wrk metaal type
               Endif; //*FI
                // BZ=85 --> type kaart=85
                // CASE: DTL.BZ kode is 85
               If #1A4CD = '85'; //*IF
         WUIWCO = '85';                         wrk metaal type
               Endif; //*FI
                // BZ=VZ --> type kaart=03
                // CASE: DTL.BZ kode is VZ
               If #1A4CD = 'VZ'; //*IF
         WUIWCO = '03';                         wrk metaal type
               Endif; //*FI
                // BZ=DZ --> type kaart=33
                // CASE: DTL.BZ kode is DZ
               If #1A4CD = 'DZ'; //*IF
         WUIWCO = '33';                         wrk metaal type
               Endif; //*FI
                // BZ=C  --> type kaart=11
                // CASE: DTL.BZ kode is C
               If #1A4CD = 'C'; //*IF
         WUIWCO = '11';                         wrk metaal type
               Endif; //*FI
                // BZ=A  --> type kaart=21
                // CASE: DTL.BZ kode is A
               If #1A4CD = 'A'; //*IF
         WUIWCO = '21';                         wrk metaal type
               Endif; //*FI
                // BZ=NA --> type kaart=22
                // CASE: DTL.BZ kode is NA
               If #1A4CD = 'NA'; //*IF
         WUIWCO = '22';                         wrk metaal type
               Endif; //*FI
                // BZ=V1 --> type kaart=23
                // CASE: DTL.BZ kode is V1
               If #1A4CD = 'V1'; //*IF
         WUIWCO = '23';                         wrk metaal type
               Endif; //*FI
                // BZ=V2 --> type kaart=23
                // CASE: DTL.BZ kode is V2
               If #1A4CD = 'V2'; //*IF
         WUIWCO = '23';                         wrk metaal type
               Endif; //*FI
                // BZ=V3 --> type kaart=73
                // CASE: DTL.BZ kode is V3
               If #1A4CD = 'V3'; //*IF
         WUIWCO = '73';                         wrk metaal type
               Endif; //*FI
                // BZ=V4 --> type kaart=73
                // CASE: DTL.BZ kode is V4
               If #1A4CD = 'V4'; //*IF
         WUIWCO = '73';                         wrk metaal type
               Endif; //*FI
                // BZ=Z  --> type kaart=32
                // CASE: DTL.BZ kode is Z
               If #1A4CD = 'Z'; //*IF
         WUIWCO = '32';                         wrk metaal type
               Endif; //*FI
                // BZ=E  --> type kaart=61
                // CASE: DTL.BZ kode is E
               If #1A4CD = 'E'; //*IF
         WUIWCO = '61';                         wrk metaal type
               Endif; //*FI
                // BZ=VA --> type kaart=71
                // CASE: DTL.BZ kode is VA
               If #1A4CD = 'VA'; //*IF
         WUIWCO = '71';                         wrk metaal type
               Endif; //*FI
                // BZ=DA --> type kaart=72
                // CASE: DTL.BZ kode is DA
               If #1A4CD = 'DA'; //*IF
         WUIWCO = '72';                         wrk metaal type
               Endif; //*FI
                // BZ=Z1 --> type kaart=82
                // CASE: DTL.BZ kode is Z1
               If #1A4CD = 'Z1'; //*IF
         WUIWCO = '82';                         wrk metaal type
               Endif; //*FI
                // BZ=FA --> type kaart=20
                // CASE: DTL.BZ kode is FA
               If #1A4CD = 'FA'; //*IF
         WUIWCO = '20';                         wrk metaal type
               Endif; //*FI
                // BZ=PA --> type kaart=70
                // CASE: DTL.BZ kode is PA
               If #1A4CD = 'PA'; //*IF
         WUIWCO = '70';                         wrk metaal type
               Endif; //*FI
                // BZ=M  --> type kaart=34
                // CASE: DTL.BZ kode is M
               If #1A4CD = 'M'; //*IF
         WUIWCO = '34';                         wrk metaal type
               Endif; //*FI
                // BZ=M1 --> type kaart=84
                // CASE: DTL.BZ kode is M1
               If #1A4CD = 'M1'; //*IF
         WUIWCO = '84';                         wrk metaal type
               Endif; //*FI
                // BZ=35 --> type kaart=35
                // CASE: DTL.BZ kode is 35
               If #1A4CD = '35'; //*IF
         WUIWCO = '35';                         wrk metaal type
               Endif; //*FI
                // BZ=85 --> type kaart=85
                // CASE: DTL.BZ kode is 85
               If #1A4CD = '85'; //*IF
         WUIWCO = '85';                         wrk metaal type
               Endif; //*FI
                // BZ=FZ --> type kaart=04
                // CASE: DTL.BZ kode is FZ
               If #1A4CD = 'FZ'; //*IF
         WUIWCO = '04';                         wrk metaal type
               Endif; //*FI
                // BZ=PZ --> type kaart=44
                // CASE: DTL.BZ kode is PZ
               If #1A4CD = 'PZ'; //*IF
         WUIWCO = '44';                         wrk metaal type
               Endif; //*FI
                // BZ=62 --> type kaart=62
                // CASE: DTL.BZ kode is 62
               If #1A4CD = '62'; //*IF
         WUIWCO = '62';                         wrk metaal type
               Endif; //*FI
                // BZ=75 --> type kaart=75
                // CASE: DTL.BZ kode is 75
               If #1A4CD = '75'; //*IF
         WUIWCO = '75';                         wrk metaal type
               Endif; //*FI
                // BZ=29 --> type kaart=29
                // CASE: DTL.BZ kode is 29
               If #1A4CD = '29'; //*IF
         WUIWCO = '29';                         wrk metaal type
               Endif; //*FI
                // BZ=79 --> type kaart=79
                // CASE: DTL.BZ kode is 79
               If #1A4CD = '79'; //*IF
         WUIWCO = '79';                         wrk metaal type
               Endif; //*FI
                // BZ=FS --> type kaart=FS
                // CASE: DTL.BZ kode is FS
               If #1A4CD = 'FS'; //*IF
         WUIWCO = 'FS';                         wrk metaal type
               Endif; //*FI
                // BZ=PS --> type kaart=PS
                // CASE: DTL.BZ kode is PS
               If #1A4CD = 'PS'; //*IF
         WUIWCO = 'PS';                         wrk metaal type
               Endif; //*FI
                // BZ=CS --> type kaart=CS
                // CASE: DTL.BZ kode is CS
               If #1A4CD = 'CS'; //*IF
         WUIWCO = 'CS';                         wrk metaal type
               Endif; //*FI
                // BZ=ES --> type kaart=ES
                // CASE: DTL.BZ kode is ES
               If #1A4CD = 'ES'; //*IF
         WUIWCO = 'ES';                         wrk metaal type
               Endif; //*FI
         WUIVCO = '0';                         Switch298
               WUA195 = 2099; //Wrk veld 4 posi
               WUYFNR = 2099; //wrk veld 4 posi
               WUYHNR = #1GWNB; //wrk veld 6 posi
               WUK750 = #1GWNB * 100; //Wrk veld 8 posi
               WUK750 = WUK750 + 31; //Wrk veld 8 posi
               WUY7NR = 209912; //Wrk veld 8 posi
               WUY6NR = *ZERO; //Wrk veld 8 posi
                // Attest reeds ingebracht? - Metaal attesten  *
               CLEAR   AIRC;
     C                   MOVEL(P)  #1AACD        AIAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AIAFNB                         Lid nr
     C                   MOVEL(P)  WUIWCO        AIEICO                         Metaal type kaa

               //Attest reeds in
               //KEY: Metaal att
               //Wrk veld 8 posi
               //Switch298
               //Wrk veld 4 posi
               //wrk veld 4 posi
               //wrk veld 6 posi
               //Wrk veld 8 posi
               //Wrk veld 8 posi

               LWDWXFR(W0RTN:AIRC:WQ0329:WQ0330:WQ0331:WQ0332:WQ0333:WQ0334:WQ0335);
                 If *IN90 = '1';
                  // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWDWXFR';
                  // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                 EXSR ZASNMS;
               Endif;
                // Error detected?
               If W0RTN <> *BLANK;
                 *In99 = *On;
               Endif;
                // CASE: WRK.Switch298 is 1
               If WUIVCO = '1'; //*IF
                  // Send message 'Geen geldige kaart voor r'
         ZAMSID = 'USR3337';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
                // CASE: WRK.Switch298 is 2
               If WUIVCO = '2'; //*IF
                  // Setup message data for message
                 ZA0182 = WUY6NR; //Wrk veld 8 posi
                 ZA0183 = WUYHNR; //wrk veld 6 posi
                  // Send message 'Kaart metaal afgelopen'
         ZAMSID = 'USR3395';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
                // CASE: WRK.Switch298 is 3
               If WUIVCO = '3'; //*IF
                  // Setup message data for message
                 ZA0184 = WUA195; //Wrk veld 4 posi
                 ZA0185 = WUYFNR; //wrk veld 4 posi
                  // Send message 'Geen geldige kaart metaal'
         ZAMSID = 'USR3338';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
                // BZ=C/E/CS/ES eerst 1ste maanden betalen voora je volgende maand b
                // CASE:
                //  - c1ORc2ORc3ORc4
                //   !- c1    : DTL.BZ kode is C
                //   !- c2    : DTL.BZ kode is E
                //   !- c3    : DTL.BZ kode is ES
                //   !- c4    : DTL.BZ kode is CS
                //   '-
               If #1A4CD = 'C' OR #1A4CD = 'E' OR #1A4CD = 'ES' OR #1A4CD = 'CS'; //*IF
                 WUZCNR = WUY7NR / 100; //Wrk refertemaan
                  // CASE: WRK.Wrk refertemaand LT DTL.Datum achterstal
                 If WUZCNR < #1GWNB; //*IF
                   WUZFNR = 209912; //Wrk jr/mnd acht
                    // Bepalen jr/mnd acht.-1 - Wkl betaling  *
                   //Bepalen jr/mnd
                   //Wrk refertemaan
                   //Datum achtersta
                   //Wrk jr/mnd acht

                   LWFAXFR(W0RTN:WQ0336:WQ0337:WQ0338);
                     If *IN90 = '1';
                      // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWFAXFR';
                      // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                     EXSR ZASNMS;
                   Endif;
                    // Error detected?
                   If W0RTN <> *BLANK;
                     *In99 = *On;
                   Endif;
         WUJ1CO = '0';                         Switch301
         WUJ2CO = '0';                         Switch302
                    // Controle BZ=C/E met ref.m - OV betaling wklh.  *
                   CLEAR   AJRC;
     C                   MOVEL(P)  #1AACD        AJAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AJAFNB                         Lid nr
                   AJK5NB = WUZFNR; //OVW refertemaan

                   //Controle BZ=C/E
                   //KEY: OV betalin
                   //Switch301

                   LWE6XFR(W0RTN:AJRC:WQ0339);
                     If *IN90 = '1';
                      // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWE6XFR';
                      // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                     EXSR ZASNMS;
                   Endif;
                    // Error detected?
                   If W0RTN <> *BLANK;
                     *In99 = *On;
                   Endif;
                    // CASE: WRK.Switch301 is nt 0
                   If WUJ1CO <> '0'; //*IF
                      // Controle BZ=C/E met RM - Wkl betaling  *
                     CLEAR   AKRC;
     C                   MOVEL(P)  #1AACD        AKAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AKAFNB                         Lid nr
                     AKGWNB = WUZFNR; //Datum achtersta

                     //Controle BZ=C/E
                     //KEY: Wkl betali
                     //Switch302
                     //Switch301

                     LWE7XFR(W0RTN:AKRC:WQ0340:WQ0341);
                       If *IN90 = '1';
                        // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LWE7XFR';
                        // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
                       EXSR ZASNMS;
                     Endif;
                      // Error detected?
                     If W0RTN <> *BLANK;
                       *In99 = *On;
                     Endif;
                      // CASE: WRK.Switch302 is 1
                     If WUJ2CO = '1'; //*IF
                        // Send message 'Er is nog geen betaling g'
         ZAMSID = 'USR3396';
                       EXSR ZASNMS;
                       *In99 = *On;

                     Endif; //*FI
                      // CASE: WRK.Switch302 is 2
                     If WUJ2CO = '2'; //*IF
                        // Send message 'Reeds betaling gebeurd zo'
         ZAMSID = 'USR3397';
                       EXSR ZASNMS;
                       *In99 = *On;

                     Endif; //*FI
                   Endif; //*FI
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // BC/X2 werkvelden
          // CASE: DTL.BC aantal is > 0
         If #1LPNB > *ZERO; //*IF
         WUEFCO = #1CLCD;                         Wrk categorie B
           WUKADM = #1E9NB; //Wrk categorie J
         ELSE;
            // CASE: *OTHERWISE
         WUEFCO = *BLANK;                         Wrk categorie B
           WUKADM = *ZERO; //Wrk categorie J
         Endif; //*FI
          // BZ Metaal ziekte:Z,Z1,M,M1,35,85,FZ,PZ:GEEN bedr wklh] +BZ<=76,85
          // CASE:
          //  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9
          //   !- c1    : DTL.BZ kode is Z
          //   !- c2    : DTL.BZ kode is Z1
          //   !- c3    : DTL.BZ kode is M
          //   !- c4    : DTL.BZ kode is M1
          //   !- c5    : DTL.BZ kode is 35
          //   !- c6    : DTL.BZ kode is 85
          //   !- c7    : DTL.BZ kode is FZ
          //   !- c8    : DTL.BZ kode is PZ
          //   !- c9    : DTL.BZ kode is 15
          //   '-
         If #1A4CD = 'Z' OR #1A4CD = 'Z1' OR #1A4CD = 'M' OR #1A4CD = 'M1' OR #1A4CD = '35' OR #1A4CD = '85' OR #1A4CD = 'FZ' OR #1A4CD = 'PZ' OR #1A4CD = '15'; //*IF
            // CASE: DTL.Bedrag wkl is > 0
           If #1HPNB > *ZERO; //*IF
              // Send message 'Geen wklh bij codes BZ=M,'
         ZAMSID = 'USR3404';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
            // ophalen maandbedrag BZ - Wkl betaling  *
           BZTER = 0;
           HBZTER = 0;
           WULVND = 0;
           RMPAR = #1GWNB;
           //REF.MND
           //BZ KODE
           //SWITCH
            // BZ=Z,M,35,Z1,M1,85 < maximum voor deze periode
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5ORc6
            //   !- c1    : DTL.BZ kode is Z
            //   !- c2    : DTL.BZ kode is M
            //   !- c3    : DTL.BZ kode is 35
            //   !- c4    : DTL.BZ kode is Z1
            //   !- c5    : DTL.BZ kode is M1
            //   !- c6    : DTL.BZ kode is 85
            //   '-
           MDBZ2(RMPAR:#1A4CD:WUN3CD:BZTER:HBZTER:WULVND);
             If #1A4CD = 'Z' OR #1A4CD = 'M' OR #1A4CD = '35' OR #1A4CD = 'Z1' OR #1A4CD = 'M1' OR #1A4CD = '85';
              // CASE: DTL.Bedrag BZ GT WRK.Wrk bedrag BZ M M1
             If #1GYNB > WULVND; //*IF
                // Send message 'Bedrag BZ > maximum'
         ZAMSID = 'USR2293';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // CASE:
            //  - c1ORc2ORc3ORc4ORc5ORc6
            //   !- c1    : DTL.BZ kode is M
            //   !- c2    : DTL.BZ kode is M1
            //   !- c3    : DTL.BZ kode is FZ
            //   !- c4    : DTL.BZ kode is PZ
            //   !- c5    : DTL.BZ kode is 35
            //   !- c6    : DTL.BZ kode is 85
            //   '-
           If #1A4CD = 'M' OR #1A4CD = 'M1' OR #1A4CD = 'FZ' OR #1A4CD = 'PZ' OR #1A4CD = '35' OR #1A4CD = '85'; //*IF
              // controle vorige mnd betaa - Wkl betaling  *
             RMPARM = #1GWNB;
         WUJ2CO = 'Y';                         VORIGE MAAND BETAALD
         BZPARM = #1A4CD;            2            VORIGE MAAND BETAALD
              // CASE: WRK.Switch302 is N
             MDMETKRT(#1AACD:#1AFNB:RMPARM:BZPARM:WUJ2CO);
               If WUJ2CO = 'N';
                // Send message 'Er is nog geen betaling g'
         ZAMSID = 'USR3396';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Netto/taks of RWP is negatief
          // CASE:
          //  - c1ORc2ORc3ORc4ORc5ORc6ORc7
          //   !- c1    : DTL.Netto is < 0
          //   !- c2    : DTL.Netto wkl is < 0
          //   !- c3    : DTL.Netto BZ is < 0
          //   !- c4    : DTL.Taks is < 0
          //   !- c5    : DTL.Taks wkl is < 0
          //   !- c6    : DTL.Taks BZ is < 0
          //   !- c7    : DTL.RWP is < 0
          //   '-
         If #1GQNB < 0 OR #1T6NB < 0 OR #1T7NB < 0 OR #1HCNB < 0 OR #1T4NB < 0 OR #1T5NB < 0 OR #1JRNB < 0; //*IF
            // Send message 'Netto/taks/RWP < 0 ]]'
         ZAMSID = 'USR3776';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
          // !!! Euro<-->Bfr;Wie heeft wklh/BZ berekend? Geen nullen na de kom
          // CASE: WRK.Wrk hidden zetten calcul is 0
         If WUCA77 = '0'; //*IF
         WUM8CE = '0';                         Wrk switch na k
         #1GDCE = 'E';                         Wkl betaling BE
            // CASE: DTL.Datum achterstal is <= 11/2001
           If #1GWNB <= 200111; //*IF
             WUGJNR = 100 * #1GJNB; //Wrk na komma 01
              // Na komma 01 moet 00 zijn
              // CASE: WRK.Wrk na komma 01 is nt 0
             If WUGJNR <> *ZERO; //*IF
                // Send message 'Er is een bedragveld waar'
         ZAMSID = 'USR2859';
               EXSR ZASNMS;
               *In99 = *On;

         WUM8CE = '1';                         Wrk switch na k
             Endif; //*FI
           Endif; //*FI
            // Wie heeft wklh berekend?
            // CASE:
            //  - c1ORc2
            //   !- c1    : WRK.Switch bedrag Wklh is =0 : 1ste maal in program
            //   !- c2    : WRK.Switch bedrag Wklh is =3 :bedr wkl comput.berek
            //   '-
           If WUPFCD = '0' OR WUPFCD = '3'; //*IF
         #1BKCE = 'C';                         Wie heeft wklh
           ELSE;
              // CASE: *OTHERWISE
         #1BKCE = '*';                         Wie heeft wklh
           Endif; //*FI
            // PWA-toeslag : zelf bedrag wklh invullen:geen volledige maand
            // CASE:
            //  - c2ANDc1ANDc3
            //   !- c2    : DTL.Subberoep kode is P
            //   !- c1    : WRK.switch PWA toeslag is 2
            //   !- c3    : DTL.Wie heeft wklh berekend ? is *
            //   '-
         Y0CX01 = '0';            1
           If #1BCCD = 'P'; //*IF
             If WUA3CF = '2'; //*IF
               If #1BKCE = '*'; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // Send message 'PWA-toeslag : zelf bedrag'
         ZAMSID = 'USR4193';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
            // Type 29=werkhervatting : zelf betaling inbrengen ipv computer te
            // CASE: DTL.Type wklh. kode is 29 = werkhervatting
           If #1A1CD = '29'; //*IF
              // CASE:
              //  - c1ORc2
              //   !- c1    : WRK.SwitchC10A is 01
              //   !- c2    : WRK.SwitchC10B is 10
              //   '-
             If WUUSCC = '01' OR WUUTCC = '10'; //*IF
                // CASE: DTL.Wie heeft wklh berekend ? is C
               If #1BKCE = 'C'; //*IF
                  // CASE:
                  //  - c1ANDc2
                  //   !- c1    : DTL.Bedrag wkl is > 0
                  //   !- c2    : DTL.Bedrag wkl LE WRK.Bedrag type29
                  //   '-
         Y0CX01 = '0';            1
                 If #1HPNB > *ZERO; //*IF
                   If #1HPNB <= WUC5NU; //*IF
         Y0CX01 = '1';
                   Endif; //*FI
                 Endif; //*FI
                 If Y0CX01 = '1'; //*IF
                 ELSE;
                    // CASE: *OTHERWISE
                    // Send message 'Type 29 : u moet bedrag w'
         ZAMSID = 'USR4097';
                   EXSR ZASNMS;
                   *In99 = *On;

                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
         WUBGCG = '0';                         switch type 29
            // Reeds een betaling type 29 gebeurd ==> bedrag wklh zelf invullen
            // CASE:
            //  - c1ANDc2ANDc3
            //   !- c1    : DTL.Type wklh. kode is <> 02
            //   !- c2    : DTL.Type wklh. kode is <> 04
            //   !- c3    : DTL.Type wklh. kode is <> 06
            //   '-
         Y0CX01 = '0';            1
           If #1A1CD <> '02'; //*IF
             If #1A1CD <> '04'; //*IF
               If #1A1CD <> '06'; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // CASE:
              //  - c1ANDc2
              //   !- c1    : WRK.SwitchC10B is 10
              //   !- c2    : DTL.Wie heeft wklh berekend ? is C
              //   '-
         Y0CX01 = '0';            1
             If WUUTCC = '10'; //*IF
               If #1BKCE = 'C'; //*IF
         Y0CX01 = '1';
               Endif; //*FI
             Endif; //*FI
             If Y0CX01 = '1'; //*IF
         #1BKCE = '*';                         Wie heeft wklh
                // CASE:
                //  - c1ANDc2
                //   !- c1    : DTL.Bedrag wkl is > 0
                //   !- c2    : DTL.Bedrag wkl LE WRK.Bedrag type29
                //   '-
         Y0CX01 = '0';            1
               If #1HPNB > *ZERO; //*IF
                 If #1HPNB <= WUC5NU; //*IF
         Y0CX01 = '1';
                 Endif; //*FI
               Endif; //*FI
               If Y0CX01 = '1'; //*IF
               ELSE;
                  // CASE: *OTHERWISE
                  // Send message 'Type 29 : reeds een betal'
         ZAMSID = 'USR4098';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
         WUBGCG = '1';                         switch type 29
             Endif; //*FI
           Endif; //*FI
            // Type 29=werkhervatting : RSZ gewijzigd; zelf bedrag invullen
            // CASE: DTL.Type wklh. kode is 29 = werkhervatting
           If #1A1CD = '29'; //*IF
              // CASE: DTL.Wie heeft wklh berekend ? is C
             If #1BKCE = 'C'; //*IF
                // CASE: WRK.SwitchRSZ is W
               If WUUQCC = 'W'; //*IF
                  // Send message 'Type 29 : nieuwe aanvraag'
         ZAMSID = 'USR4099';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
                // CASE: WRK.SwitchRSZ is B
               If WUUQCC = 'B'; //*IF
                  // Send message 'Type 29 : Geen recht meer'
         ZAMSID = 'USR4100';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Achterstal<=11/2001 + Euro:ZELF bedrag invullen](nt vr type15)
            // CASE:
            //  - c1ANDc2ANDc3ANDc4
            //   !- c1    : DTL.Wkl betaling BEF/EURO is E
            //   !- c2    : DTL.Datum achterstal is <= 11/2001
            //   !- c3    : DTL.Dagbedrag is nt 0
            //   !- c4    : DTL.Bedrag wkl is niet 0
            //   '-
         Y0CX01 = '0';            1
           If #1GDCE = 'E'; //*IF
             If #1GWNB <= 200111; //*IF
               If #1DDNB <> *ZERO; //*IF
                 If #1HPNB <> *ZERO; //*IF
         Y0CX01 = '1';
                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // CASE: DTL.Wie heeft wklh berekend ? is C
             If #1BKCE = 'C'; //*IF
                // CASE: DTL.Type wklh. kode is <> 15
               If #1A1CD <> '15'; //*IF
                  // Send message 'Dagbedrag>0:bedrag wklh z'
         ZAMSID = 'USR3781';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
            // Bij lopende sanctie bedrag wklh zelf invullen!
            // CASE:
            //  - c1ANDc2
            //   !- c1    : WRK.switch21 is 1
            //   !- c2    : DTL.Geen bedrag wklh is Y
            //   '-
         Y0CX01 = '0';            1
           If WUG2CD = '1'; //*IF
             If #1BDST = 'Y'; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // CASE: WRK.Switch bedrag Wklh is nt 1 : nt zelf bedrag ing
             If WUPFCD <> '1'; //*IF
                // Send message 'Datum einde sankt >= wkl'
         ZAMSID = 'USR0291';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
            // Wie heeft BZ berekend?
            // CASE:
            //  - c1ORc2
            //   !- c1    : WRK.Switch bedrag BZ is =0:1ste maal in programma
            //   !- c2    : WRK.Switch bedrag BZ is =3:bedr bz computer berek
            //   '-
           If WUPGCD = '0' OR WUPGCD = '3'; //*IF
         #1BLCE = 'C';                         Wie heeft BZ be
           ELSE;
              // CASE: *OTHERWISE
         #1BLCE = '*';                         Wie heeft BZ be
           Endif; //*FI
         Endif; //*FI
          // Maanden VOOR EURO (<=11/2001) bedrag=0,01 eurocent : RVA weigert
          // CASE: DTL.Datum achterstal is <= 11/2001
         If #1GWNB <= 200111; //*IF
            // CASE: DTL.Bedrag wkl is = 0,01
           If #1HPNB = 0.01; //*IF
              // Send message '1 eurocent voor mndn <11/'
         ZAMSID = 'USR4152';
             EXSR ZASNMS;
             *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
           ELSE;
              // CASE: *OTHERWISE
              // CASE:
              //  - c1ORc2
              //   !- c1    : DTL.BZ kode is B
              //   !- c2    : DTL.Type wklh. kode is 15 : grensarbeiders
              //   '-
             If #1A4CD = 'B' OR #1A1CD = '15'; //*IF
                // CASE: DTL.Bedrag BZ is = 0,01
               If #1GYNB = 0.01; //*IF
                  // Send message '1 eurocent voor mndn <11/'
         ZAMSID = 'USR4152';
                 EXSR ZASNMS;
                 *In99 = *On;

         WUPSCD = '1';                         Switch berekeni
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
         WUFMCG = 'N';                         Wrk KB213 betaa
         WUVXNM = *ZERO; //Wrk datum KB213
         WUFLCG = *BLANK;                         Wrk datum KB213
          // Controle dec./jan KB213 - Wkl betaling  *
         If MNDACH = 12 OR MNDACH = 01; //12/2005
           If #1GWNB = 201701 OR #1GWNB = 201801 OR #1GWNB = 201901 OR #1GWNB = 202001;
     C                   GOTO      NKB213
           ENDIF;
            //WKL2496 NIET MEER TESTEN VOOR JANUARI 2017
            //WKL2828 NIET MEER TESTEN VOOR JANUARI 2018 2019 2020
           If HVTOT6 > 0 OR HHTOT6 > 0 OR HVTOT5 > 0 OR HHTOT5 > 0;
             If #1A1CD = '01' OR #1A1CD = '03';
               //AFD
               //LIDNR
               //REF.MND
               //WRK KB213 BETAALD
               //WRK DATUM KB213 8 LA
               //WRK DATUM KB213 10 L
               MDBOUWKB(#1AACD:#1AFNB:RMPARM:WUFMCG:WUVXNM:WUFLCG);
                 If WUFMCG = 'N';
                 If #DFYTK = '124   ' OR #DFYTK = '401124' OR #1A4CD = 'B ' OR WUS5CL = 'Y';
                   If MNDACH = 12; //12
                     JR1124 = JRACHT;
                     JR2124 = JRACHT + 1;
                   ELSE; //01
                     JR1124 = JRACHT - 1;
                     JR2124 = JRACHT;
                   ENDIF;
                   BG1124 = JR1124 * 10000;
                   EI2124 = JR2124 * 10000;
                    //          BG1124    ADD  1024      BG1124
                    //WKL2496
                   BG1124 = BG1124 + 1023;
                   EI2124 = EI2124 + 0109;
                   If #1AKDT >= BG1124 AND #1AKDT < EI2124; //20071024
         WUFMCG = 'X';
                   ENDIF;
                 ENDIF; //124/401124
               ENDIF; //GEVONDEN=N
             ENDIF; //TYPE 01,03
           ENDIF; //DAGEN R6,... INGEVUL
            // VOOR TIJDELIJKE WKLH ALLE GEVALLEN DIE GEEN BZ CODE B HEBBEN
           If HVTOT6 > 0 OR HHTOT6 > 0 OR HVTOT5 > 0 OR HHTOT5 > 0;
             If #1A1CD = '02' OR #1A1CD = '04' OR #1A1CD = '06';
               //AFD
               //LIDNR
               //REF.MND
               //WRK KB213 BETAALD
               //WRK DATUM KB213 8 LA
               //WRK DATUM KB213 10 L
             MDBOUWKB(#1AACD:#1AFNB:RMPARM:WUFMCG:WUVXNM:WUFLCG);
               ENDIF;
           ENDIF; //DAGEN R6,... INGEVUL
         ENDIF; //MAAND DEC./JANUARI
     C     NKB213        TAG
          // CASE: WRK.Wrk KB213 betaald is Y
         If WUFMCG = 'Y'; //*IF
            // Setup message data for message
         ZA0186 = WUFLCG;                         Wrk datum KB213
            // Send message 'Er is een betaling KB213'
         ZAMSID = 'USR4674';
         ' = '*INFO;     ZAMSTP                         Message type
           EXSR ZASNMS;

         Endif; //*FI
          // CASE: WRK.Wrk KB213 betaald is X
         If WUFMCG = 'X'; //*IF
            // Send message 'KB213 : geen cumul wklh m'
         ZAMSID = 'USR5114';
         ' = '*INFO;     ZAMSTP                         Message type
           EXSR ZASNMS;

         Endif; //*FI
          // Type 12 : verlofscherm2 tonen
          // CASE: WRK.Switch berekening is 0
         If WUPSCD = '0'; //*IF
            // CASE: DTL.Type wklh. kode is 12 :171bis beschutte werk
           If #1A1CD = '12'; //*IF
             WUBWNB = #1GWNB / 100; //Verlof jaar
              // Update verlof via betaals - Verlof  *
             //Update verlof v
             //Afdeling nr
             //Lid nr
             //Verlof jaar
             //Add/change lid
             //Type wklh. kode

             LXGME1R(W0RTN:WQ0342:WQ0343:WQ0344:WQ0345:WQ0346);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXGME1R';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           Endif; //*FI
         Endif; //*FI
          // type12 met dagen V of anc : lid heeft recht op nettobedrag
          // CASE: DTL.Type wklh. kode is 12 :171bis beschutte werk
         If #1A1CD = '12'; //*IF
           YRSW00 = 1;
           ZQ = 5;
           If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00007 OR ZQ > 00007;
         W0RTN = 'Y2U0510';
           ELSE;
             WUDMCH = %Subst(#1DOCD:ZQ:YRSW00); //wrk veld 1 lang
     C   90              MOVEL     'Y2U0510'     W0RTN
           Endif;
         WUDNCH = 'N';                         Wrk leeftijd 50
            // CASE: WRK.wrk veld 1 lang type12 is 3
           If WUDMCH = '3'; //*IF
              // Bepalen leeftijd type12 - Wkl betaling  *
             RMPAR = #1GWNB / 100;
             RMPAR = RMPAR * 100;
             TSTLFT = 50;
             //AFD
             //LIDNR
             //REF.MND
             //TEST LEEFTIJD
              // OUTPUT
             //'N' OF 'Y'
           MDLEEFT(#1AACD:#1AFNB:RMPAR:TSTLFT:WUDNCH);
             Endif;
            // CASE:
            //  - c1ORc2ORc3
            //   !- c1    : DTL.Volle dagen verlof is > 0
            //   !- c2    : DTL.Halve dagen verlof is niet 0
            //   !- c3    : WRK.Wrk leeftijd 50 of ouder is Y
            //   '-
           If #1GNNB > *ZERO OR #1JLNB <> *ZERO OR WUDNCH = 'Y'; //*IF
             YRSW00 = 1;
             ZQ = 1;
             If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00003 OR ZQ > 00003;
         W0RTN = 'Y2U0510';
             ELSE;
               WUDOCH = %Subst(#1DVCD:ZQ:YRSW00); //Wrk 1 positie S
     C   90              MOVEL     'Y2U0510'     W0RTN
             Endif;
             YRSW00 = 1;
             ZQ = 1;
             If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00003 OR ZQ > 00003;
         W0RTN = 'Y2U0510';
             ELSE;
               WUDPCH = %Subst(#1DWCD:ZQ:YRSW00); //Wrk 1 positie S
     C   90              MOVEL     'Y2U0510'     W0RTN
             Endif;
              // CASE: DTL.Netto wkl is niet 0
             If #1T6NB <> *ZERO; //*IF
                // CASE:
                //  - c1ORc2ORc3ORc4ORc5ORc6
                //   !- c1    : DTL.Afh1 kode is = TB
                //   !- c2    : DTL.Afh2 kode is = TB
                //   !- c3    : DTL.Afh3 kode is = TB
                //   !- c4    : DTL.Afh4 kode is = TB
                //   !- c5    : DTL.Afh5 kode is = TB
                //   !- c6    : DTL.Afh6 kode is = TB
                //   '-
               If #1DVCD = 'TB' OR #1DWCD = 'TB' OR #1DXCD = 'TB' OR #1DYCD = 'TB' OR #1EDCD = 'TB' OR #1EECD = 'TB'; //*IF
               ELSE;
                  // CASE: *OTHERWISE
                  // Send message 'Type12 : er moet een TB'
         ZAMSID = 'USR5209';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
             ELSE;
                // CASE: *OTHERWISE
                // Send message 'Type12 : dagen V of anc'
         ZAMSID = 'USR5208';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // CASE:
          //  - c1ORc2
          //   !- c1    : DTL.Type wklh. kode is 50
          //   !- c2    : DTL.Type wklh. kode is 53
          //   '-
         If #1A1CD = '50' OR #1A1CD = '53'; //*IF
            // CASE: DTL.Bedrag wkl EQ WRK.Bedrag type50
           If #1HPNB = WUTSNC; //*IF
         #1BKCE = 'C';                         Wie heeft wklh
           ELSE;
              // CASE: *OTHERWISE
         #1BKCE = '*';                         Wie heeft wklh
           Endif; //*FI
         Endif; //*FI
          // CASE: WRK.switch 114Â§7 is *
         If WULQCH = '*'; //*IF
            // CASE: DTL.Wie heeft wklh berekend ? is C
           If #1BKCE = 'C'; //*IF
              // Send message 'Verg.art 114Â§7:zelf bedra'
         ZAMSID = 'USR5417';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
         Endif; //*FI
          // CASE: DTL.Wkl gemiddeld maandbedr. is ingevuld
         If #1BENR <> 0; //*IF
            // CASE: DTL.Wkl gemiddeld maandbedr. is < 0
           If #1BENR < 0; //*IF
              // Send message 'Inh% BP : bedrag < 0'
         ZAMSID = 'USR5747';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
            // CASE:
            //  - c1ORc2ORc3ORc4
            //   !- c1    : DTL.BZ kode is 29
            //   !- c2    : DTL.BZ kode is 79
            //   !- c3    : DTL.BZ kode is NA
            //   !- c4    : DTL.BZ kode is DA
            //   '-
           If #1A4CD = '29' OR #1A4CD = '79' OR #1A4CD = 'NA' OR #1A4CD = 'DA'; //*IF
           ELSE;
              // CASE: *OTHERWISE
              // Send message 'Inh% BP kan niet met deze'
         ZAMSID = 'USR5748';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
         Endif; //*FI
          // Controle na F24 mag men niets meer wijzigen
          // CASE: WRK.Wrk f24 gebruikt is Y
         If WUYBCJ = 'Y'; //*IF
         WUTQCK = 'N';                         C105 bestaat al
            // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
           CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
           AAQLDM = #1GWNB; //Doc BD meer RM
           AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  'C105'        AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
           //Test Doc BD bes
           //KEY: Documenten
           //Wrk taal
           //WRK Barema
           //WRK Type wkl. k
           //WRK document BD

           XPG(AARC:WQ0347:WQ0348:WQ0349:WQ0350);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
             *In99 = *On;
           Endif;
         WUTSCK = 'N';                         C110A bestaat a
            // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
           CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
           AAQLDM = #1GWNB; //Doc BD meer RM
           AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  'C110A'       AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
           //Test Doc BD bes
           //KEY: Documenten
           //Wrk taal
           //WRK Barema
           //WRK Type wkl. k
           //WRK document BD

           XPG(AARC:WQ0351:WQ0352:WQ0353:WQ0354);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
             *In99 = *On;
           Endif;
            // controle na F24 - Wkl betaling  *
         WUYCCJ = 'N';
           If #1GLNB <> F24R6;
         WUYCCJ = 'Y';
           ENDIF;
           If #1GMNB <> F24HR6;
         WUYCCJ = 'Y';
           ENDIF;
           If #1G7NB <> F24BV;
         WUYCCJ = 'Y';
           ENDIF;
           If #1JONB <> F24HBV;
         WUYCCJ = 'Y';
           ENDIF;
           If #1GNNB <> F24V;
         WUYCCJ = 'Y';
           ENDIF;
           If #1JLNB <> F24HV;
         WUYCCJ = 'Y';
           ENDIF;
            //          #1MPCE    IFNE WUZGCJ
            //                    MOVEL'Y'       WUYCCJ
            //                    ENDIF
           If WUTPCK <> WUTQCK;
         WUYCCJ = 'Y';
           ENDIF;
           If WUTRCK <> WUTSCK;
         WUYCCJ = 'Y';
           ENDIF;
            // CASE: WRK.Wijziging na f24 is Y
           If WUYCCJ = 'Y'; //*IF
              // Send message 'F24 gebruikt!'
         ZAMSID = 'USR6380';
             EXSR ZASNMS;
             *In99 = *On;

           Endif; //*FI
         Endif; //*FI
         WUFDND = #1GJNB; //Wrk bedrag Y na
          // Karina : warning wanneer BF(S) zonder/met C105
          // Test Doc BD bestaat RPGLE - Documenten BD meerdere  *
         CLEAR   AARC;
     C                   MOVEL(P)  #1AACD        AAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        AAAFNB                         Lid nr
     C                   MOVEL(P)  WUWUBE        AAY0CJ                         Doc BD meer bet
         AAQLDM = #1GWNB; //Doc BD meer RM
         AAQMDM = WUZKNR; //Doc BD meer IM
     C                   MOVEL(P)  @CN(034)      AAY1CJ                         Doc BD meer toe
     C                   MOVEL(P)  'C105'        AAY2CJ                         Doc BD meer doc

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '08';
         //Test Doc BD bes
         //KEY: Documenten
         //Wrk taal
         //WRK Barema
         //WRK Type wkl. k
         //WRK document BD

         XPG(AARC:WQ0355:WQ0356:WQ0357:WQ0358);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '08';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
           *In99 = *On;
         Endif;
          // Karina WKL-1524
          // Window overschrijven - Wkl betaling  *
         WRITE #RCDDTL1;
          // Test barema 96/..... - Werkloze baremas  *
         CLEAR   ALRC;
     C                   MOVEL(P)  #1AACD        ALAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        ALAFNB                         Lid nr
         ALNFND = WUXUND; //Werkloze barema
     C                   MOVEL(P)  WUVMCJ        ALPPCJ                         Werkloze barema
         ALNEDE = #1GWNB; //Werkloze barema
     C                   MOVEL(P)  *BLANK        ALDVCJ                         Werkloze barema
         ALQIDE = *ZERO; //Werkloze barema
         ALX0ND = *ZERO; //Werkloze barema
     C                   MOVEL(P)  *BLANK        ALVKCJ                         Werkloze barema
         ALKJDE = *ZERO; //1ste periode Da
     C                   MOVEL(P)  *BLANK        ALARNB                         Taal kode
     C                   MOVEL(P)  *BLANK        ALA1CD                         Type wklh. kode
     C                   MOVEL(P)  *BLANK        ALDOCD                         Barema RVAkode
         ALKKDE = *ZERO; //1ste periode Da
     C                   MOVEL(P)  *BLANK        ALY0CI                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALY1CI                         1ste periode ba
         ALKLDE = *ZERO; //1ste periode Da
     C                   MOVEL(P)  *BLANK        ALY2CI                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALY3CI                         1ste periode ba
         ALLCDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALGTCJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALGUCJ                         1ste periode ba
         ALLDDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALGVCJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALGWCJ                         1ste periode ba
         ALLEDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALGXCJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALGYCJ                         1ste periode ba
         ALLFDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALGZCJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALG0CJ                         1ste periode ba
         ALLGDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALG1CJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALG2CJ                         1ste periode ba
         ALLHDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALG3CJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALG4CJ                         1ste periode ba
         ALLIDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALG5CJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALG6CJ                         1ste periode ba
         ALLJDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALG7CJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALG8CJ                         1ste periode ba
         ALLKDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALG9CJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALHACJ                         1ste periode ba
         ALLLDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALHBCJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALHCCJ                         1ste periode ba
         ALLMDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALHDCJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALHECJ                         1ste periode ba
         ALLNDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALHFCJ                         1ste periode ty
     C                   MOVEL(P)  *BLANK        ALHGCJ                         1ste periode ba
         ALKODE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALY8CI                         3de periode typ
     C                   MOVEL(P)  *BLANK        ALY9CI                         3de periode bar
         ALLODE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALH7CJ                         3de periode typ
     C                   MOVEL(P)  *BLANK        ALH8CJ                         3de periode bar
         ALLPDE = *ZERO; //1ste periode da
     C                   MOVEL(P)  *BLANK        ALH9CJ                         3de periode typ
     C                   MOVEL(P)  *BLANK        ALIACJ                         3de periode bar
         ALUEND = *ZERO; //Werkloze S04 da
         ALUFND = *ZERO; //Werkloze S04 da
         ALUGND = *ZERO; //Werkloze S04 da
         ALUHND = *ZERO; //Werkloze S04 da
         ALUIND = *ZERO; //Werkloze S04 da
         ALUJND = *ZERO; //Werkloze S04 da
         ALUKND = *ZERO; //Werkloze S04 da
         ALULND = *ZERO; //Werkloze S04 da
         ALUMND = *ZERO; //Werkloze S04 da
         ALUNND = *ZERO; //Werkloze S04 da
         ALUOND = *ZERO; //Werkloze S04 da
         ALUPND = *ZERO; //Werkloze S04 da
         ALUQND = *ZERO; //Werkloze S04 da
         ALURND = *ZERO; //Werkloze S04 da
         ALUSND = *ZERO; //Werkloze S04 da
         ALUTND = *ZERO; //Werkloze S04 da
         ALUUND = *ZERO; //Werkloze S04 da
         ALUVND = *ZERO; //Werkloze S04 da
         ALKMDE = *ZERO; //TW datum1
     C                   MOVEL(P)  *BLANK        ALY4CI                         2de periode typ
     C                   MOVEL(P)  *BLANK        ALY5CI                         2de periode bar
         ALKNDE = *ZERO; //TW datum2
     C                   MOVEL(P)  *BLANK        ALY6CI                         2de periode typ
     C                   MOVEL(P)  *BLANK        ALY7CI                         2de periode bar
         ALKZDE = *ZERO; //TW datum3
     C                   MOVEL(P)  *BLANK        ALHHCJ                         2de peridoe typ
     C                   MOVEL(P)  *BLANK        ALHICJ                         2de periode bar
         ALU0ND = *ZERO; //Werkloze S04 TW
         ALU1ND = *ZERO; //Werkloze S04 TW
         ALU2ND = *ZERO; //Werkloze S04 TW
         ALUWND = *ZERO; //Werkloze S04 TW
         ALUXND = *ZERO; //Werkloze S04 TW
         ALUYND = *ZERO; //Werkloze S04 TW
         ALUZND = *ZERO; //Werkloze S04 TW
         ALPADE = *ZERO; //Werkloze S04 ve
     C                   MOVEL(P)  *BLANK        ALPXCJ                         Werkloze S04 co
         ALT6ND = *ZERO; //Werkloze S04 aa
         ALPBDE = *ZERO; //Werkloze S04 da
         ALT7ND = *ZERO; //Werkloze S04 Be
         ALT8ND = *ZERO; //Werkloze S04 Be
         ALT9ND = *ZERO; //Werkloze S04 Be
         ALPCDE = *ZERO; //Werkloze S04 be
     C                   MOVEL(P)  *BLANK        ALPYCJ                         Werkloze S04 sp
         ALUAND = *ZERO; //Werkloze S04 al
         ALUBND = *ZERO; //Werkloze S04 al
         ALUCND = *ZERO; //Werkloze S04 al
         ALUDND = *ZERO; //Werkloze S04 al
     C                   MOVEL(P)  *BLANK        ALP0CJ                         Werkloze S04 co
         ALPDDE = *ZERO; //Werkloze S04 dt
         ALU3ND = *ZERO; //Werkloze S04 be
     C                   MOVEL(P)  *BLANK        ALP1CJ                         Werkloze S04 ve
     C                   MOVEL(P)  *BLANK        ALP2CJ                         Werkloze S04 ve
     C                   MOVEL(P)  *BLANK        ALP3CJ                         Werkloze S04 ve
     C                   MOVEL(P)  *BLANK        ALZ1CJ                         Werkloze S04 ve
     C                   MOVEL(P)  *BLANK        ALZ2CJ                         Werkloze S04 ve
     C                   MOVEL(P)  *BLANK        ALZ3CJ                         Werkloze S04 ve
     C                   MOVEL(P)  *BLANK        ALP4CJ                         Werkloze S04 to
     C                   MOVEL(P)  *BLANK        ALP5CJ                         Werkloze S04 to
     C                   MOVEL(P)  *BLANK        ALP6CJ                         Werkloze S04 to
     C                   MOVEL(P)  *BLANK        ALZ4CJ                         Werkloze S04 to
     C                   MOVEL(P)  *BLANK        ALZ5CJ                         Werkloze S04 to
     C                   MOVEL(P)  *BLANK        ALZ6CJ                         Werkloze S04 to
     C                   MOVEL(P)  *BLANK        ALV9TN                         Werkloze S04 co
     C                   MOVEL(P)  *BLANK        ALWATN                         Werkloze S04 co
         ALQNDE = *ZERO; //werkloze barema
     C                   MOVEL(P)  *BLANK        ALPQCJ                         Werkl baremas I
     C                   MOVEL(P)  *BLANK        ALPRCJ                         Werkl baremas I
     C                   MOVEL(P)  *BLANK        ALPSCJ                         Werkl baremas I
     C                   MOVEL(P)  *BLANK        ALPTCJ                         Werkl baremas a
     C                   MOVEL(P)  *BLANK        ALPUCJ                         Werkl baremas l
     C                   MOVEL(P)  *BLANK        ALPVCJ                         Werkl baremas z
     C                   MOVEL(P)  *BLANK        ALPWCJ                         Werkl baremas r
     C                   MOVEL(P)  *BLANK        ALPZCJ                         Werkloze S04 Ke
     C                   MOVEL(P)  *BLANK        ALTTTN                         Werkloze barema
         ALL2DE = *ZERO; //Werkloze barema
         ALG8TM = *ZERO; //Werkloze barema
     C                   MOVEL(P)  *BLANK        ALTUTN                         Werkloze barema
         ALL3DE = *ZERO; //Werkloze barema
         ALG9TM = *ZERO; //Werkloze barema

         WXPGM = 'MDCLCBAR';            10
     EvalR   WXPGM = '09';
         //Test barema 96/
         //RCD: Werkloze b
         //WRK Taalkode
         //wrk type bereke

         XPG(ALRC:WQ0359:WQ0360);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDCLCBAR';           10
     EvalR   W0CLPG = '09';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
           *In99 = *On;
         Endif;
          // CASE: WRK.switch LBB is Y
         If WUBDCN = 'Y'; //*IF
            // CASE:
            //  - c1ANDc2
            //   !- c1    : DTL.BC aantal is = 0
            //   !- c2    : DTL.Netto wkl is > 11,60
            //   '-
         Y0CX01 = '0';            1
           If #1LPNB = *ZERO; //*IF
             If #1T6NB >= 11.60; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
           Endif; //*FI
         Endif; //*FI
          // CASE: DTL.Type wklh. kode is 12 :171bis beschutte werk
         If #1A1CD = '12'; //*IF
            // CASE:
            //  - c1ORc2
            //   !- c1    : DTL.Netto wkl is niet 0
            //   !- c2    : DTL.Netto BZ is niet 0
            //   '-
           If #1T6NB <> *ZERO OR #1T7NB <> 0; //*IF
              // Prompt voor fouten/info - Foutenlijsten pop-up  *
             CLEAR   PCRC;
     C                   MOVEL(P)  'T12'         PCJECL                         Foutenlijsten T
     C                   MOVEL(P)  WUYXCJ        PCJFCL                         Foutenlijsten t

             //Prompt voor fou
             //KEY: Foutenlijs

             L0ALPVR(W0RTN:PCRC);
               If *IN90 = '1';
                // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'L0ALPVR';
                // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
               EXSR ZASNMS;
             Endif;
              // Error detected?
             If W0RTN <> *BLANK;
               *In99 = *On;
             Endif;
           Endif; //*FI
         Endif; //*FI
          // CASE: WRK.Wrk totaalR6 zonderBV/KBF is > 0
         If WUJYNG > 0; //*IF
            // CASE: DTL.Bedrag wkl is = 0
           If #1HPNB = *ZERO; //*IF
              // CASE: WRK.Switch 1ste maal RMbetaal is 1
             If WULECN = '1'; //*IF
                // CASE: DTL.Type wklh. kode is <> 00
               If #1A1CD <> '00'; //*IF
                  // Send message 'Dagen zonder bedrag wkl'
         ZAMSID = 'USR1083';
                 EXSR ZASNMS;
                 *In99 = *On;

               Endif; //*FI
                // als wkl3932 in productie moet,moet bovenste if met * en onderste
                // wachten tot RVDS en Kim terug zijn na operatie lies en operatie ?
                // dus ergens dec 2024 of januari 2025 voorzien
             Endif; //*FI
           Endif; //*FI
         ELSE;
            // CASE: *OTHERWISE
            // CASE: DTL.Bedrag wkl is = 0
           If #1HPNB = *ZERO; //*IF
              // CASE: WRK.Switch 1ste maal RMbetaal is 1
             If WULECN = '1'; //*IF
                // CASE:
                //  - c1ORc2ORc3ORc4ORc5ORc6
                //   !- c1    : DTL.Type wklh. kode is 00 : niet toelaatbaar
                //   !- c2    : DTL.Type wklh. kode is 70 :nt ingaan op uitnodig
                //   !- c3    : DTL.Type wklh. kode is 71 :vrijwillig wklh
                //   !- c4    : DTL.Type wklh. kode is 72 :blijv.onmogelijkheid
                //   !- c5    : DTL.Type wklh. kode is 73 :in afwachting E301
                //   !- c6    : DTL.Type wklh. kode is 97
                //   '-
               If #1A1CD = '00' OR #1A1CD = '70' OR #1A1CD = '71' OR #1A1CD = '72' OR #1A1CD = '73' OR #1A1CD = '97'; //*IF
                  // CASE: DTL.Dagen kbf sanktie is = 0
                 If #1GXNB = *ZERO; //*IF
                    // Send message 'Geen dagen doorgegeven?'
         ZAMSID = 'USR4026';
                   EXSR ZASNMS;
                   *In99 = *On;

                 Endif; //*FI
               Endif; //*FI
             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // CASE:
          //  - c1ORc2
          //   !- c1    : DTL.Type wklh. kode is 09 : conv brugp voltijds
          //   !- c2    : DTL.Type wklh. kode is 10 : conv brugp deeltijds
          //   '-
         If #1A1CD = '09' OR #1A1CD = '10'; //*IF
            // CASE:
            //  - c1ANDc2
            //   !- c1    : DTL.BZ kode is nt blank
            //   !- c2    : DTL.Geen dagen/bedrag BZ is Y
            //   '-
         Y0CX01 = '0';            1
           If #1A4CD <> *BLANK; //*IF
             If #1BCST = 'Y'; //*IF
         Y0CX01 = '1';
             Endif; //*FI
           Endif; //*FI
           If Y0CX01 = '1'; //*IF
              // Mag er nog29/79/NA/DA bij - Wkl betaling  *
             BZVVVV = #1GPNB;
             BZHHHH = #1JNNB;
             //AFD
             //LIDNR
             //REF.MND
             //TYPE
             //BZ KODE
             //VOLLE BZ
             //HALVE BZ
              // CASE: WRK.switch bz 29 79 is N
             MDTOTD29(#1AACD:#1AFNB:RMPAR:#1A1CD:#1A4CD:BZVVVV:BZHHHH:WUMNCN);
               If WUMNCN = 'N';
                // Send message 'Bijpassing onmogelijk'
         ZAMSID = 'USR7540';
               EXSR ZASNMS;
               *In99 = *On;

             Endif; //*FI
           Endif; //*FI
         Endif; //*FI
          // Lstempel mag nt gr d RM - Wkl betaling  *
         WUNZCN = '0';
         If #1AKDD > 0;
           JJMMLS = #1AKDD / 100;
           If JJMMLS > #1GWNB;
         WUNZCN = '1';
           ENDIF;
         ENDIF;
          // CASE: WRK.sw Laatste stempel > RM is 1
         If WUNZCN = '1'; //*IF
            // Setup message data for message
            // Convert Wkl datum laatste stempel to external.

           UIDTD2 = #1AKDD;
           UDTDC2 = UDTD12;
           UDTDY2 = UDTD22;
           UDTDM2 = UDTD32;
           UDTDD2 = UDTD42;
           ZA0187 = UEDTD2;
            // Send message 'Laatste stempel refertem'
         ZAMSID = 'USR7455';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
          // WB fusies WB nt mr geldig - Wkl betaling  *
         If #1GWNB >= 202501;
     EvalR   WBWBIN = #1A2CD;            2
           RMPARM = #1GWNB;
         WUNSCN = 'N';
            // ERROR MESSAGE : WB BESTAAT NIET (MEER) SINDS 01/2025
         MDWB025C(WBWBIN:RMPARM:WUNSCN);
           ENDIF;
          // CASE: WRK.Switch WB ongeldig is Y
         If WUNSCN = 'Y'; //*IF
            // Send message 'WB, ond.afd foutief'
         ZAMSID = 'USR3031';
           EXSR ZASNMS;
           *In99 = *On;

         Endif; //*FI
          // Check relations
          // Check reference to Kateg suppl
         EXSR VBCKRL;
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
           *In31 = *On;
           *In99 = *On;
           *In31 = *On;
           *In99 = *On;
           *In31 = *On;
         Endif;
          // Check reference to C12 reden
         EXSR VCCKRL;
         If W0RTN <> *BLANK;
         W0RTN = *BLANK;
           *In99 = *On;
           *In99 = *On;
         Endif;
          // USER: Validate detail screen relations
         WUAACD = #1AACD;                         Afdeling nr
         WUAFNB = #1AFNB;                         Lid nr
         WUGWNB = 0; //Datum achtersta
         ZQ = 0;
         WUCACO = #1AKNB + '' + #1FGNB; //Wrk veld 9 posi
         ZQ = 0;
         WUAPCF = WUCACO + '' + #1FHNB; //Wrk veld 11 pos
         WUL6ND = #1GWNB; //Wrk RM key scre
          // Geen uren ged. wkl. required
         If #1ISCD = *BLANK AND *IN64 = '0'; //IF
         @I1(34) = '1';
           *In99 = *On;
            // Send message '*Value required'
         ZAMSID = 'Y2U0001';
         ZAMSGF = 'Y2USRMSG';
           EXSR ZASNMS;
         Endif; //FI
          // Geen bedrag wklh required
         If #1BDST = *BLANK AND *IN44 = '0'; //IF
           *In99 = *On;
            // Send message '*Value required'
         ZAMSID = 'Y2U0001';
         ZAMSGF = 'Y2USRMSG';
           EXSR ZASNMS;
         Endif; //FI
          // Geen dagen/bedrag BZ required
         If #1BCST = *BLANK AND *IN42 = '0'; //IF
           *In99 = *On;
            // Send message '*Value required'
         ZAMSID = 'Y2U0001';
         ZAMSGF = 'Y2USRMSG';
           EXSR ZASNMS;
         Endif; //FI
          //================================================================
       ENDSR;
       /EJECT
       BEGSR EAPMCF;
          //================================================================
          // Prompt for confirmation
          //================================================================
          // Convert internal to external form
         EXSR MOCV#D;
          // Set screen conditioning indicators
         EXSR GBDSAD;
          // Force PUTOVR
         *In86 = *On;
          // Update screen time
         ##TME = %Time();
          // Refresh screen
         ##CFCD = *BLANK;
         ##CFCD = 'N';
          // Save CMD keys
     C                   MOVEA     *IN           WN30             30
         *In29 = *Off;
          // Generate internal/external key list
          // Convert *CONFIRM to external value
         Y2LSNO = 1001713;
         Y2INVL = *BLANK;
         Y2INVL = ##CFCD;                         *CONFIRM
         CHAIN (Y2LSNO:Y2INVL) @Y2INEX ;
       *in90 = (%found() = *Off); //*
     C  N90              MOVEL     Y2EXVL        V#CFCD                         *CONFIRM

         Dou W0HLP = 'N' AND *IN29 = '0';
           WRITE #MSGCTL;
           If W0SCR = 1;
             WRITE #CMDTXT2;
             WRITE #RCDDTL1;
           ELSE;
             If W0SCR = 2;
               WRITE #CMDTXT3;
               WRITE #RCDDTL2;
             Endif;
           Endif;
           EXFMT #CONFIRM;
           If *IN29 = '1';
             *In99 = *On;
     C                   GOTO      EAEXIT
           Endif;
            // Clear set cursor DDS indicator
           If WCSRLC = 'OFF';
             *In94 = *Off;
           Endif;
     EvalR   WCSRLC = *BLANK;
            // If help requested, display help text
           If *In25;
             EXSR ZHHPKY;
           Endif;
            // Validate *CONFIRM
         W0RTN = *BLANK;
         W0NSRQ = V#CFCD;            1            *CONFIRM
            // Name search required?
           If W0NSRQ = '?';
             //*
             //*CONFIRM
              // Defer confirm
         W0DCF = 'Y';             1
           Endif;
            // Check external value of *CONFIRM
            // Generate internal/external key list
            // Convert *CONFIRM to internal value
           Y2LSNO = 1001713;
         Y2EXVL = *BLANK;
         Y2EXVL = V#CFCD;                         *CONFIRM
           CHAIN (Y2LSNO:Y2EXVL) @Y2EXIN ;
       *in90 = (%found() = *Off); //*
           If *IN90 = '1';
         ##CFCD = *BLANK;
             *In96 = *On;
             WRITE #CONFIRM;
             *In96 = *Off;
           ELSE;
         ##CFCD = Y2INVL;                         *CONFIRM
           Endif;

           If *In90;
             *In29 = *On;
           Endif;
           If NOT *In90;
             *In29 = *Off;
           Endif;
         Enddo;
          // Restore CMD keys
     C                   MOVEA     WN30          *IN
          // Update job time
         ##JTM = %Time();
         If ##CFCD = 'Y';
            // Clear messages from program message queue
            // Reset first message only flag
         ZAFSMS = 'Y';            1      99    *
         Endif;
     C     ##CFCD        COMP      'Y'                                9999      *
          // Not confirmed
          //================================================================
       ENDSR;
       /EJECT
       BEGSR EBPR##;
          //================================================================
          // Process record:
          //================================================================
          // Process add request
     C     W0PMD         CASEQ     'ADD'         ECADRQ
          // Process update request
     C     W0PMD         CASNE     'ADD'         EECHRQ
         
         If W0RTN <> *BLANK;
            // ROLLBACK required
         P0RTN = 'Y2U0018';
           EXSR ZYEXPG;
         Endif;
         If W0RTN = *BLANK;
            // USER: Process command keys
           If W0PMD = 'ADD';
              // Exit after successful add
         W0RPT = 'N';
           Endif;
            // Restart program for next record
         W0TRN = 'N';
         Endif;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR ECADRQ;
          //================================================================
          // Process add request
          //================================================================
          // USER: Create DBF record
          // Create Wkl betaling - Wkl betaling  *
         EXSR SJCRRC;
         If W0RTN = *BLANK;
            // Send message '*Record added'
         ZAMSID = 'Y2U0011';
         ZAMSGF = 'Y2USRMSG';
           EXSR ZASNMS;
         Endif;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR EECHRQ;
          //================================================================
          // Process update request
          //================================================================
          // USER: Change DBF record
          // Y2W0053 - One or more arguments defaulted to available contexts
          // Field '(DTL) #1AACD' defaulted for 'Afdeling nr'.
          // Field '(DTL) #1AFNB' defaulted for 'Lid nr'.
          // Field '(DTL) #1GWNB' defaulted for 'Datum achterstal'.
          // Field '(DTL) #1CLCD' defaulted for 'Kateg kode'.
          // Field '(DTL) #1E9NB' defaulted for 'Kateg jjmm'.
          // Field '(DTL) #1ARNB' defaulted for 'Taal kode'.
          // Field '(DTL) #1EGCD' defaulted for 'C12 reden kode'.
          // Field '(DTL) #1N8CE' defaulted for 'Wkl bet. zone'.
          // Field '(DTL) #1N9CE' defaulted for 'Wkl bet. gewest'.
          // Field '(DTL) #1GGNB' defaulted for 'VD5'.
          // Field '(DTL) #1GHNB' defaulted for 'HD5'.
          // Field '(DTL) #1GINB' defaulted for 'Uren ged.wkl.'.
          // Field '(DTL) #1ISCD' defaulted for 'Geen uren ged. wkl.'.
          // Field '(DTL) #1GJNB' defaulted for 'Y'.
          // Field '(DTL) #1GKNB' defaulted for 'Yft'.
          // Field '(DTL) #1GRNB' defaulted for 'VW'.
          // Field '(DTL) #1GSNB' defaulted for 'Min'.
          // Field '(DTL) #1GTNB' defaulted for 'Z+A'.
          // Field '(DTL) #1GUNB' defaulted for 'C3.2'.
          // Field '(DTL) #1JJNB' defaulted for 'Volle BZ C3.2'.
          // Field '(DTL) #1JKNB' defaulted for 'Halve BZ C3.2'.
          // Field '(DTL) #1GVNB' defaulted for 'Uren BV'.
          // Field '(DTL) #1GLNB' defaulted for 'VD6'.
          // Field '(DTL) #1GMNB' defaulted for 'HD6'.
          // Field '(DTL) #1GNNB' defaulted for 'Volle dagen verlof'.
          // Field '(DTL) #1JLNB' defaulted for 'Halve dagen verlof'.
          // Field '(DTL) #1GONB' defaulted for 'Volle dagen vorst'.
          // Field '(DTL) #1JMNB' defaulted for 'Halve dagen vorst'.
          // Field '(DTL) #1GPNB' defaulted for 'Volle dagen BZ'.
          // Field '(DTL) #1JNNB' defaulted for 'Halve dagen BZ'.
          // Field '(DTL) #1MINB' defaulted for 'Volle dagen BZ2'.
          // Field '(DTL) #1MJNB' defaulted for 'Halve dagen BZ2'.
          // Field '(DTL) #1G7NB' defaulted for 'Volle dagen BV'.
          // Field '(DTL) #1JONB' defaulted for 'Halve dagen BV'.
          // Field '(DTL) #1GXNB' defaulted for 'Dagen kbf sanktie'.
          // Field '(DTL) #1HPNB' defaulted for 'Bedrag wkl'.
          // Field '(DTL) #1BDST' defaulted for 'Geen bedrag wklh'.
          // Field '(DTL) #1GYNB' defaulted for 'Bedrag BZ'.
          // Field '(DTL) #1BCST' defaulted for 'Geen dagen/bedrag BZ'.
          // Field '(DTL) #1HCNB' defaulted for 'Taks'.
          // Field '(DTL) #1JQNB' defaulted for 'X2'.
          // Field '(DTL) #1JRNB' defaulted for 'RWP'.
          // Field '(DTL) #1LPNB' defaulted for 'BC aantal'.
          // Field '(DTL) #1LQNB' defaulted for 'BC bedrag'.
          // Field '(DTL) #1T4NB' defaulted for 'Taks wkl'.
          // Field '(DTL) #1T5NB' defaulted for 'Taks BZ'.
          // Field '(DTL) #1GQNB' defaulted for 'Netto'.
          // Field '(DTL) #1T6NB' defaulted for 'Netto wkl'.
          // Field '(DTL) #1T7NB' defaulted for 'Netto BZ'.
          // Field '(DTL) #1DVCD' defaulted for 'Afh1 kode'.
          // Field '(DTL) #1GZNB' defaulted for 'Afh1 bedrag'.
          // Field '(DTL) #1G0NB' defaulted for 'Afh1 datum'.
          // Field '(DTL) #1OYCD' defaulted for 'Afh1 kode TV'.
          // Field '(DTL) #1O5CD' defaulted for 'Afh1 laatste maal'.
          // Field '(DTL) #1DWCD' defaulted for 'Afh2 kode'.
          // Field '(DTL) #1G1NB' defaulted for 'Afh2 bedrag'.
          // Field '(DTL) #1G2NB' defaulted for 'Afh2 datum'.
          // Field '(DTL) #1OZCD' defaulted for 'Afh2 kode TV'.
          // Field '(DTL) #1O6CD' defaulted for 'Afh2 laatste maal'.
          // Field '(DTL) #1DXCD' defaulted for 'Afh3 kode'.
          // Field '(DTL) #1G3NB' defaulted for 'Afh3 bedrag'.
          // Field '(DTL) #1G4NB' defaulted for 'Afh3 datum'.
          // Field '(DTL) #1O0CD' defaulted for 'Afh3 kode TV'.
          // Field '(DTL) #1O7CD' defaulted for 'Afh3 laatste maal'.
          // Field '(DTL) #1DYCD' defaulted for 'Afh4 kode'.
          // Field '(DTL) #1G5NB' defaulted for 'Afh4 bedrag'.
          // Field '(DTL) #1G6NB' defaulted for 'Afh4 datum'.
          // Field '(DTL) #1O1CD' defaulted for 'Afh4 kode TV'.
          // Field '(DTL) #1O8CD' defaulted for 'Afh4 laatste maal'.
          // Field '(DTL) #1EDCD' defaulted for 'Afh5 kode'.
          // Field '(DTL) #1HDNB' defaulted for 'Afh5 bedrag'.
          // Field '(DTL) #1HENB' defaulted for 'Afh5 datum'.
          // Field '(DTL) #1O2CD' defaulted for 'Afh5 kode TV'.
          // Field '(DTL) #1O9CD' defaulted for 'Afh5 laatste maal'.
          // Field '(DTL) #1EECD' defaulted for 'Afh6 kode'.
          // Field '(DTL) #1HFNB' defaulted for 'Afh6 bedrag'.
          // Field '(DTL) #1HGNB' defaulted for 'Afh6 datum'.
          // Field '(DTL) #1O3CD' defaulted for 'Afh6 kode TV'.
          // Field '(DTL) #1PACD' defaulted for 'Afh6 laatste maal'.
          // Field '(DTL) #1HJNB' defaulted for 'DOK periode'.
          // Field '(DTL) #1WUCD' defaulted for 'DOK kategorie'.
          // Field '(DTL) #1IYNB' defaulted for 'BZ1 dagen'.
          // Field '(DTL) #1JHNB' defaulted for 'BZ1 bedrag'.
          // Field '(DTL) #1L0CD' defaulted for 'BZ1 kode'.
          // Field '(DTL) #1IZNB' defaulted for 'BZ2 dagen'.
          // Field '(DTL) #1JGNB' defaulted for 'BZ2 bedrag'.
          // Field '(DTL) #1L8CD' defaulted for 'BZ2 kode'.
          // Field '(DTL) #1I0NB' defaulted for 'BZ3 dagen'.
          // Field '(DTL) #1JFNB' defaulted for 'BZ3 bedrag'.
          // Field '(DTL) #1L9CD' defaulted for 'BZ3 kode'.
          // Field '(DTL) #1I1NB' defaulted for 'BZ4 dagen'.
          // Field '(DTL) #1JENB' defaulted for 'BZ4 bedrag'.
          // Field '(DTL) #1L1CD' defaulted for 'BZ4 kode'.
          // Field '(DTL) #1I2NB' defaulted for 'BZ5 dagen'.
          // Field '(DTL) #1I8NB' defaulted for 'BZ5 bedrag'.
          // Field '(DTL) #1L2CD' defaulted for 'BZ5 kode'.
          // Field '(DTL) #1A7ST' defaulted for 'Zone vorig barema1'.
          // Field '(DTL) #1KBCD' defaulted for 'Zone vorig barema2'.
          // Field '(DTL) #1KCCD' defaulted for 'Zone vorig barema3'.
          // Field '(DTL) #1KDCD' defaulted for 'Zone vorig barema4'.
          // Field '(DTL) #1KECD' defaulted for 'Zone vorig barema5'.
          // Field '(DTL) #1A5DM' defaulted for 'RVA indieningsmaand'.
          // Field '(DTL) #1LONB' defaulted for 'RVA UI-afdeling'.
          // Field '(DTL) #1BIST' defaulted for 'RVA type C10'.
          // Field '(DTL) #1MCCD' defaulted for 'RVA Gewestelijk bureau'.
          // Field '(DTL) #1MNCD' defaulted for 'RVA identificatienr'.
          // Field '(DTL) #1MDCD' defaulted for 'Nr betaler'.
          // Field '(DTL) #1MBCD' defaulted for 'Type werkloosheid'.
          // Field '(DTL) #1MECD' defaulted for 'Kode beroep'.
          // Field '(DTL) #1RQCD' defaulted for 'Kode subberoep'.
          // Field '(DTL) #1MFCD' defaulted for 'Barema'.
          // Field '(DTL) #1MGCD' defaulted for 'Complement'.
          // Field '(DTL) #1MOCD' defaulted for 'Kode BZ'.
          // Field '(DTL) #1T5CD' defaulted for 'Wkl adres opdrachtg.'.
          // Field '(DTL) #1T6CD' defaulted for 'Wkl postnr opdrachtg.'.
          // Field '(DTL) #1T7CD' defaulted for 'Wkl lokaliteit opdrachtg.'.
          // Field '(DTL) #1T8CD' defaulted for 'Wkl taal opdrachtg.'.
          // Field '(DTL) #1MICD' defaulted for 'Wkl naam begunst.'.
          // Field '(DTL) #1MJCD' defaulted for 'Wkl adres begunst.'.
          // Field '(DTL) #1MKCD' defaulted for 'Wkl postnr begunst.'.
          // Field '(DTL) #1VCCD' defaulted for 'Wkl post subkode begunst.'.
          // Field '(DTL) #1MLCD' defaulted for 'Wkl lokaliteit begunst.'.
          // Field '(DTL) #1MMCD' defaulted for 'Wkl banknr begunst.'.
          // Field '(DTL) #1MUCD' defaulted for 'Wkl taalkode begunst.'.
          // Field '(DTL) #1V6CD' defaulted for 'Wkl bankkode'.
          // Field '(DTL) #1LJNB' defaulted for 'Wkl INDIR-indieningsmnd'.
          // Field '(DTL) #1LKNB' defaulted for 'Wkl INDIR-UI-afdeling'.
          // Field '(DTL) #1M4CD' defaulted for 'Wkl INDIR-type'.
          // Field '(DTL) #1LLNB' defaulted for 'Wkl INDIR-GWB-nr'.
          // Field '(DTL) #1LMNB' defaulted for 'Wkl INDIR-identificatienr'.
          // Field '(DTL) #1LNNB' defaulted for 'Wkl INDIR-maand F.O.'.
          // Field '(DTL) #1AKDD' defaulted for 'Wkl datum laatste stempel'.
          // Field '(DTL) #1BANR' defaulted for 'Wkl Yuur'.
          // Field '(DTL) #1BBNR' defaulted for 'Wkl n-verg. n-gecont. dgn'.
          // Field '(DTL) #1BKCE' defaulted for 'Wie heeft wklh berekend ?'.
          // Field '(DTL) #1BLCE' defaulted for 'Wie heeft BZ berekend ?'.
          // Field '(DTL) #1BMCE' defaulted for 'Verlof 6 dagen BV'.
          // Field '(DTL) #1BNCE' defaulted for 'Verlof 6 dagen V'.
          // Field '(DTL) #1BOCE' defaulted for 'Wkl vorstzone'.
          // Field '(DTL) #1BCNR' defaulted for 'Wkl inhoudingspct.'.
          // Field '(DTL) #1BDNR' defaulted for 'Wkl dagbedrag'.
          // Field '(DTL) #1BENR' defaulted for 'Wkl gemiddeld maandbedr.'.
          // Field '(DTL) #1BFNR' defaulted for 'Wkl Q'.
          // Field '(DTL) #1BGNR' defaulted for 'Wkl S'.
          // Field '(DTL) #1BPCE' defaulted for 'Wkl verif.05/98(ind.RVA)'.
          // Field '(DTL) #1BQCE' defaulted for 'Wkl C10bis'.
          // Field '(DTL) #1BRCE' defaulted for 'Wkl vergoedbaarh. artikel'.
          // Field '(DTL) #1BSCE' defaulted for 'Wkl toelaatbaarh. artikel'.
          // Field '(DTL) #1M7DD' defaulted for 'Wkl datum begin wklh.'.
          // Field '(DTL) #1M8DD' defaulted for 'Wkl laatst vergoede dag'.
          // Field '(DTL) #1M9DD' defaulted for 'Wkl laatst gecontr. dag'.
          // Field '(DTL) #1BTCE' defaulted for 'Wkl sanctiecode1'.
          // Field '(DTL) #1NADD' defaulted for 'Wkl begindatum sanctie1'.
          // Field '(DTL) #1NBDD' defaulted for 'Wkl einddatum sanctie1'.
          // Field '(DTL) #1BUCE' defaulted for 'Wkl sanctiecode2'.
          // Field '(DTL) #1NCDD' defaulted for 'Wkl begindatum sanctie2'.
          // Field '(DTL) #1NDDD' defaulted for 'Wkl einddatum sanctie2'.
          // Field '(DTL) #1PICD' defaulted for 'Wkl add-user'.
          // Field '(DTL) #1ASDD' defaulted for 'Wkl add-datum'.
          // Field '(DTL) #1ALTM' defaulted for 'Wkl add-time'.
          // Field '(DTL) #1CA01' defaulted for 'Wkl bet betaaldag'.
          // Field '(DTL) #1Y4NB' defaulted for 'Wkl bet Uitv.datum bank'.
          // Field '(DTL) #1FXNR' defaulted for 'Wkl bet NBR vrij1'.
          // Field '(DTL) #1FYNR' defaulted for 'Wkl bet NBR vrij2'.
          // Field '(DTL) #1FZNR' defaulted for 'Wkl bet NBR vrij3'.
          // Field '(DTL) #1F0NR' defaulted for 'Wkl bet NBR vrij4'.
          // Field '(DTL) #1F1NR' defaulted for 'Wkl bet NBR vrij5'.
          // Field '(DTL) #1MOCE' defaulted for 'Wkl bet CDE vrij1'.
          // Field '(DTL) #1MPCE' defaulted for 'Wkl bet CDE vrij2'.
          // Field '(DTL) #1MQCE' defaulted for 'Wkl bet CDE vrij3'.
          // Field '(DTL) #1MRCE' defaulted for 'Wkl bet CDE vrij10'.
          // Field '(DTL) #1IVDM' defaulted for 'Wkl bet DTM vrij1'.
          // Field '(DTL) #1IWDM' defaulted for 'Wkl bet DTM vrij2'.
          // Field '(DTL) #1PWDD' defaulted for 'Wkl bet DTD vrij1'.
          // Field '(DTL) #1PXDD' defaulted for 'Wkl bet DTD vrij2'.
          // Field '(DTL) #1GDCE' defaulted for 'Wkl betaling BEF/EURO'.
          // Change object - Wkl betaling  *
         EXSR SKCHRC;
         If W0RTN <> *BLANK;
            // Data update error
            // Reset screen fields if changed record
     C     W0RTN         CASEQ     'Y2U0007'     MBFL#1
         Endif;
       ELSE;
          // Send message '*Record changed'
         ZAMSID = 'Y2U0012';
         ZAMSGF = 'Y2USRMSG';
         EXSR ZASNMS;
         
          //================================================================
       ENDSR;
       BEGSR EINDDA;
         If BOMRDD > 0 AND BOMRDD < DT2BNK; //EINDDATUM IN
         WUJICO = '1';                         ER IS EEN BE
         ENDIF; //EINDDTM<BETAALD
       ENDSR;
        //-------------------------------------------------------------------------
       /EJECT
       BEGSR GADSAK;
          //================================================================
          // Set key screen conditioning indicators
          //================================================================
     C     W0PMD         COMP      'ADD'                                  89    *
         *IN79 = '0';
         If #1ARCD = 'Y'; //*IF
         *IN79 = '1';
         Endif; //*FI
         *IN78 = '0';
         If #1CMCD = '4'; //*IF
         *IN78 = '1';
         Endif; //*FI
          //================================================================
       ENDSR;
       /EJECT
       BEGSR GBDSAD;
          //================================================================
          // Set detail screen conditioning indicators
          //================================================================
     C     W0PMD         COMP      'ADD'                                  89    *
          // Protect key fields on detail screen
         *In88 = *On;
         If W0SCR <> 1;
         *IN79 = '0';
         *IN78 = '0';
         *IN77 = '0';
         *IN76 = '0';
         *IN75 = '0';
         *IN74 = '0';
         *IN73 = '0';
         *IN72 = '0';
         *IN71 = '0';
         *IN70 = '0';
         *IN69 = '0';
         *IN68 = '0';
         *IN67 = '0';
         *IN66 = '0';
         *IN65 = '0';
         *IN64 = '0';
         *IN63 = '0';
         *IN62 = '0';
         *IN61 = '0';
         *IN60 = '0';
         *IN59 = '0';
         *IN58 = '0';
         *IN57 = '0';
         *IN56 = '0';
         *IN55 = '0';
         *IN54 = '0';
         *IN53 = '0';
         *IN52 = '0';
         *IN51 = '0';
         *IN50 = '0';
         *IN49 = '0';
         *IN48 = '0';
         *IN47 = '0';
         *IN46 = '0';
         *IN45 = '0';
         *IN44 = '0';
         *IN43 = '0';
         *IN42 = '0';
         *IN41 = '0';
         *IN40 = '0';
         Endif;
         If W0SCR <> 2;
         *IN79 = '0';
         Endif;
         If W0SCR = 1;
         *IN79 = '0';
           If #1ARCD = 'Y'; //*IF
         *IN79 = '1';
           Endif; //*FI
         *IN78 = '0';
           If #DWVCJ = 'R'; //*IF
         *IN78 = '1';
           Endif; //*FI
         *IN77 = '0';
           If #1DDNB <> *ZERO; //*IF
         *IN77 = '1';
           Endif; //*FI
         *IN76 = '0';
           If WURIBD = '2'; //*IF
         *IN76 = '1';
           Endif; //*FI
         *IN75 = '0';
           If #DB9DF > 0; //*IF
         *IN75 = '1';
           Endif; //*FI
         *IN74 = '0';
           If #DCADF > 0; //*IF
         *IN74 = '1';
           Endif; //*FI
         *IN73 = '0';
           If WUXOCD = '1'; //*IF
         *IN73 = '1';
           Endif; //*FI
         *IN72 = '0';
           If WUR9CG = '1'; //*IF
         *IN72 = '1';
           Endif; //*FI
         *IN71 = '0';
           If #DETDE = 0; //*IF
         *IN71 = '1';
           Endif; //*FI
         *IN70 = '0';
           If #1A4CD <> *BLANK; //*IF
         *IN70 = '1';
           Endif; //*FI
         *IN69 = '0';
           If WUWUGV = 'G'; //*IF
         *IN69 = '1';
           Endif; //*FI
         *IN68 = '0';
           If #1MOCE = 'R'; //*IF
         *IN68 = '1';
           Endif; //*FI
         *IN67 = '0';
           If WUITCD = 'N'; //*IF
         *IN67 = '1';
           Endif; //*FI
         *IN66 = '0';
           If WUIUCD = 'N'; //*IF
         *IN66 = '1';
           Endif; //*FI
         *IN65 = '0';
           If WUIXCD = 'N'; //*IF
         *IN65 = '1';
           Endif; //*FI
         *IN64 = '0';
           If WUIYCD = 'N'; //*IF
         *IN64 = '1';
           Endif; //*FI
         *IN63 = '0';
           If WUIVCD = 'N'; //*IF
         *IN63 = '1';
           Endif; //*FI
         *IN62 = '0';
           If WUIWCD = 'N'; //*IF
         *IN62 = '1';
           Endif; //*FI
         *IN61 = '0';
           If WUIZCD = 'N'; //*IF
         *IN61 = '1';
           Endif; //*FI
         *IN60 = '0';
           If WUKPCD = 'N'; //*IF
         *IN60 = '1';
           Endif; //*FI
         *IN59 = '0';
           If WUKMCD = 'N'; //*IF
         *IN59 = '1';
           Endif; //*FI
         *IN58 = '0';
           If WUKNCD = 'N'; //*IF
         *IN58 = '1';
           Endif; //*FI
         *IN57 = '0';
           If WUKSCD = 'N'; //*IF
         *IN57 = '1';
           Endif; //*FI
         *IN56 = '0';
           If WUKTCD = 'N'; //*IF
         *IN56 = '1';
           Endif; //*FI
         *IN55 = '0';
           If WUKQCD = 'N'; //*IF
         *IN55 = '1';
           Endif; //*FI
         *IN54 = '0';
           If WUKRCD = 'N'; //*IF
         *IN54 = '1';
           Endif; //*FI
         *IN53 = '0';
           If WULECJ = '0'; //*IF
         *IN53 = '1';
           Endif; //*FI
         *IN52 = '0';
           If WUTBCG = '0'; //*IF
         *IN52 = '1';
           Endif; //*FI
         *IN51 = '0';
           If WUCA65 <> @CN(022); //*IF
         *IN51 = '1';
           Endif; //*FI
         *IN50 = '0';
           If WUIQCD <> '7'; //*IF
         *IN50 = '1';
           Endif; //*FI
         *IN49 = '0';
           If WUIQCD <> '5'; //*IF
         *IN49 = '1';
           Endif; //*FI
         *IN48 = '0';
           If WUCA10 <> '5/7'; //*IF
         *IN48 = '1';
           Endif; //*FI
         *IN47 = '0';
           If #DB6TK <> *BLANK; //*IF
         *IN47 = '1';
           Endif; //*FI
         *IN46 = '0';
           If #1A1CD >= '24' AND #1A1CD <= '25'; //*IF
         *IN46 = '1';
           Endif; //*FI
         *IN45 = '0';
           If WUHSCG = '1'; //*IF
         *IN45 = '1';
           Endif; //*FI
         *IN44 = '0';
           If WURACD = 'N'; //*IF
         *IN44 = '1';
           Endif; //*FI
         *IN43 = '0';
           If WUI1CD = 'N'; //*IF
         *IN43 = '1';
           Endif; //*FI
         *IN42 = '0';
           If WUI2CD = 'N'; //*IF
         *IN42 = '1';
           Endif; //*FI
         *IN41 = '0';
           If WUXBCH = '1'; //*IF
         *IN41 = '1';
           Endif; //*FI
         *IN40 = '0';
           If #1GQNB <> *ZERO; //*IF
         *IN40 = '1';
           Endif; //*FI
         ELSE;
           If W0SCR = 2;
         *IN79 = '0';
             If #1ARCD = 'Y'; //*IF
         *IN79 = '1';
             Endif; //*FI
           Endif;
         Endif;
          // Enable key screen
         *In87 = *On;
          //================================================================
       ENDSR;
       BEGSR GNVBZ;
         PRBZHH = HVBZ1B * 2;
         HHBZ1B = HHBZ1B + PRBZHH;
         HVBZ1B = 0;
         PRBZHH = HVBZ2B * 2;
         HHBZ2B = HHBZ2B + PRBZHH;
         HVBZ2B = 0;
       ENDSR;
       BEGSR LEEFLN;
         If BOEGST = '3';
         TABLFL = 'A';            1
         ENDIF;
         If BOEGST = '2';
         TABLFL = 'N';
         ENDIF;
         If BOEGST = '1' OR BOEGST = '4';
         TABLFL = 'B';
         ENDIF;
         CHAIN TABLFL LXGOREL1 ;
       *in50 = (%found() = *Off);
         If *In50;
           GRNS1 = 9999.99;
         Endif;
         If NOT *In50;
           GRNS1 = GOOFNC;
         Endif;

         DEEL33 = 0;
         If HNET > GRNS1;
           DEEL33 = HNET - GRNS1;
           If DEEL33 > BOHWNB;
              //                    Z-ADDBOHWNB    DEEL33
           ENDIF;
         ELSE;
     EvalR   WUOACD = '2';                         LEEFLN NT TOEPASSEN
           DEEL33 = 0;
         ENDIF;
       ENDSR;
       /EJECT
       BEGSR MAIZ#1;
          //================================================================
          // Initialise record - except for key fields and "neither" paramete
          //================================================================
         #PX0CC = P3X0CC;                         String paramete
         #PBKCF = P5BKCF;                         param Href
         #PIINU = P6IINU;                         param aantal
         #PIJNU = P7IJNU;                         param bedrag bi
         #1AJNB = *BLANK;                         Pensioennr d2
         #1V8CD = *BLANK;                         Pensioennr digi
         #1BRNB = *BLANK;                         Rekening d1
         #1FMNB = *BLANK;                         Rekening d2
         #1FNNB = *BLANK;                         Rekening d3
         #1C8NB = *BLANK;                         Wkl rekening d1
         #1F6NB = *BLANK;                         Wkl rekening d2
         #1F7NB = *BLANK;                         Wkl rekening d3
         #DPBCH = *BLANK;                         wrk bic 11 sche
         #DO9CH = *BLANK;                         Wrk bic 11 sche
         #1BBNB = *BLANK;                         Zone vorst
         #1BVCE = *BLANK;                         Sanktie kode
         #1ACNR = *ZERO; //Sanctie1 aantal
         #1MBDD = *ZERO; //Datum begin san
         #1MCDD = *ZERO; //Datum einde san
         #1ADNR = *ZERO; //Sanctie2 aantal
         #1MJ01 = *BLANK;                         Toelaatbaarheid
         #1MM01 = *BLANK;                         Vergoedbaarheid
         #1AWCE = *BLANK;                         0-code Vergoedb
         #1NA01 = *BLANK;                         Code beslissing
         #1MDDD = *ZERO; //Laatst gecontro
         #1MEDD = *ZERO; //Laatst vergoede
         #1MHDD = *ZERO; //Datum barema
         #1MIDD = *ZERO; //Datum begin vri
         #1MJDD = *ZERO; //Datum einde vri
         #1MLDD = *ZERO; //Datum 0-code
         #1MMDD = *ZERO; //Datum begin bij
         #1MNDD = *ZERO; //Datum einde bij
         #1AENR = *ZERO; //Bedrag belast.
         #1NB01 = *BLANK;                         Code bijz. verg
         #1MJ02 = *BLANK;                         Toelaatbaar cod
         #1ASCE = *BLANK;                         Vergoedbaarheid
         #1BWCE = *BLANK;                         0-code Vergoedb
         #1LJCE = *BLANK;                         Lid SIS-kaartnr
         #1MGDD = *ZERO; //Datum inschrijv
         #1NENB = *ZERO; //VSOA nr(nieuw)
         #1ECST = *BLANK;                         Meerdere part-t
         #1EVNR = *ZERO; //Werkloze NBR vr
         #1EWNR = *ZERO; //Werkloze NBR vr
         #1EXNR = *ZERO; //Werkloze NBR vr
         #1EYNR = *ZERO; //Werkloze NBR vr
         #1EZNR = *ZERO; //Werkloze NBR vr
         #1E0NR = *ZERO; //Werkloze NBR vr
         #1E1NR = *ZERO; //Werkloze NBR vr
         #1IEDM = *ZERO; //Werkloze DTM vr
         #1IFDM = *ZERO; //Werkloze DTM vr
         #1O6DD = *ZERO; //Werkloze DTD vr
         #1O7DD = *ZERO; //Werkloze DTD vr
         #1KVCE = *BLANK;                         Werkloze CDE vr
         #1KWCE = *BLANK;                         Werkloze CDE vr
         #1KXCE = *BLANK;                         Werkloze CDE vr
         #1KYCE = *BLANK;                         Werkloze CDE vr
         #1KZCE = *BLANK;                         Werkloze CDE vr
         #1K0CE = *BLANK;                         Werkloze CDE vr
         #1NCCE = *BLANK;                         Zone code
         #1NDCE = *BLANK;                         Gewest code
         #1FICE = *BLANK;                         Werkloze BEF/EU
         #1AUNB = *BLANK;                         Arb-bed kode
         #1AXNB = *BLANK;                         Burgerlijke sta
         #1AJST = *BLANK;                         Vrijstelling ei
         #1AXCE = *BLANK;                         vrijstelling2 T
         #1AZCE = *BLANK;                         sanctie1 Taal k
         #1AFNR = *ZERO; //Maximum # weken
         #1PICE = *BLANK;                         sanctie2 Taal k
         #1PJCE = *BLANK;                         sanctie2 Sankti
         #1IQNR = *ZERO; //sanctie2 Maximu
         #1A9CD = *BLANK;                         Arbeidsovk kode
         #1AVCE = *BLANK;                         0-code Taal kod
         #1MKDD = *ZERO; //Datum berek. be
         #1A6DM = *ZERO; //Datum vakbondsm
         #1ASST = *BLANK;                         AnciÃ«nniteit
         #1A4NB = *BLANK;                         Haven reg nr
         #1BYNB = *BLANK;                         Haven reg digit
         #1BKCD = *BLANK;                         VSOA groep kode
         #1ACDT = *ZERO; //Datum aanvr ber
         #1TRCD = *BLANK;                         Post subkode
         #1AGNB = *ZERO; //Aansl jjmm
         #1VACD = *BLANK;                         Wkl-foutkode
         #1F5NB = *ZERO; //Barema compl
         #1A3CD = *BLANK;                         Betaler kode
         #DXVND = *ZERO; //Wrk dtm geldigh
         #1AEDT = *ZERO; //Datum OP-code
         #1ADDT = *ZERO; //Datum 40%
         #DIICG = *BLANK;                         Dtm 2de periode
         #1AHDT = *ZERO; //Datum forfait
         #DIJCG = *BLANK;                         Dtm forfait cod
         #1AGDT = *ZERO; //Datum C1verval
         #1AFDT = *ZERO; //Datum verblijfs
         #1AJDT = *ZERO; //Datum laatste s
         #DEUDE = *ZERO; //Wrk dtm C104 li
         #DVPBP = *ZERO; //Vermind.pct. br
         #1AIDT = *ZERO; //Datum arbeidsve
         #DHXNB = *ZERO; //Verlof BV kredi
         #DHYNB = *ZERO; //Verlof V kredie
         #DRCCD = *BLANK;                         Verlof zone6 BV
         #DRDCD = *BLANK;                         Verlof zone6 V2
         #1BFNB = *ZERO; //Krediet BZvj
         #1BGNB = *ZERO; //Krediet BZ2vj
         #1AHNB = *ZERO; //Ontsl jjmm
         #1A3NB = *BLANK;                         Haven kategorie
         #1ATNB = *BLANK;                         Geslacht kode
         #1BACD = *BLANK;                         Beroep kode
         #1BCCD = *BLANK;                         Subberoep kode
         #1AMDT = *ZERO; //Datum einde san
         #1ALDT = *ZERO; //Datum begin san
         #1C9NB = *ZERO; //Datum begin vri
         #1DANB = *ZERO; //Datum einde vri
         #1FVNB = *BLANK;                         VSOA nr
         #1ABST = *BLANK;                         Invaliditeit 33
         #1A9NB = *ZERO; //Beroepsverl jr
         #1BANB = *ZERO; //Beroepsverl dg
         #1MVCD = *BLANK;                         Taal kode
         #1KZNB = *ZERO; //Afd U.I.-kode
         #1AZCD = *BLANK;                         Lid taal kode
         #1AWCD = *BLANK;                         KBF dossiernr
         #1AKST = *BLANK;                         W1zo
         #1ALST = *BLANK;                         W1ma
         #1AMST = *BLANK;                         W1di
         #1ANST = *BLANK;                         W1wo
         #1AOST = *BLANK;                         W1do
         #1APST = *BLANK;                         W1vr
         #1AQST = *BLANK;                         W1za
         #1ARST = *BLANK;                         Vakbondsmandaat
         #1ARNB = *BLANK;                         Taal kode
         #1EGCD = *BLANK;                         C12 reden kode
         #1BRTX = *BLANK;                         C12 reden tekst
         #1N8CE = *BLANK;                         Wkl bet. zone
         #1N9CE = *BLANK;                         Wkl bet. gewest
         #1AATX = *BLANK;                         Afd naam
         #1HJNB = *ZERO; //DOK periode
         #1WUCD = *BLANK;                         DOK kategorie
         #1MINB = *ZERO; //Volle dagen BZ2
         #1MJNB = *ZERO; //Halve dagen BZ2
         #1BBNR = *ZERO; //Wkl n-verg. n-g
         #1GSNB = *ZERO; //Min
         #1JJNB = *ZERO; //Volle BZ C3.2
         #1JKNB = *ZERO; //Halve BZ C3.2
         #1OYCD = *BLANK;                         Afh1 kode TV
         #1O5CD = *BLANK;                         Afh1 laatste ma
         #1OZCD = *BLANK;                         Afh2 kode TV
         #1O6CD = *BLANK;                         Afh2 laatste ma
         #1O0CD = *BLANK;                         Afh3 kode TV
         #1O7CD = *BLANK;                         Afh3 laatste ma
         #1O1CD = *BLANK;                         Afh4 kode TV
         #1O8CD = *BLANK;                         Afh4 laatste ma
         #1O2CD = *BLANK;                         Afh5 kode TV
         #1O9CD = *BLANK;                         Afh5 laatste ma
         #1T4NB = *ZERO; //Taks wkl
         #1T5NB = *ZERO; //Taks BZ
         #1BANR = *ZERO; //Wkl Yuur
         #1BKCE = *BLANK;                         Wie heeft wklh
         #1BLCE = *BLANK;                         Wie heeft BZ be
         #1BMCE = *BLANK;                         Verlof 6 dagen
         #1BNCE = *BLANK;                         Verlof 6 dagen
         #1BOCE = *BLANK;                         Wkl vorstzone
         #1BCNR = *ZERO; //Wkl inhoudingsp
         #1BDNR = *ZERO; //Wkl dagbedrag
         #1BFNR = *ZERO; //Wkl Q
         #1BGNR = *ZERO; //Wkl S
         #1BPCE = *BLANK;                         Wkl verif.05/98
         #1BQCE = *BLANK;                         Wkl C10bis
         #1BRCE = *BLANK;                         Wkl vergoedbaar
         #1BSCE = *BLANK;                         Wkl toelaatbaar
         #1M7DD = *ZERO; //Wkl datum begin
         #1M8DD = *ZERO; //Wkl laatst verg
         #1M9DD = *ZERO; //Wkl laatst geco
         #1BTCE = *BLANK;                         Wkl sanctiecode
         #1NADD = *ZERO; //Wkl begindatum
         #1NBDD = *ZERO; //Wkl einddatum s
         #1BUCE = *BLANK;                         Wkl sanctiecode
         #1NCDD = *ZERO; //Wkl begindatum
         #1NDDD = *ZERO; //Wkl einddatum s
         #1ASDD = *ZERO; //Wkl add-datum
         #1ALTM = *ZERO; //Wkl add-time
         #1CA01 = *BLANK;                         Wkl bet betaald
         #1Y4NB = *ZERO; //Wkl bet Uitv.da
         #1FXNR = *ZERO; //Wkl bet NBR vri
         #1FYNR = *ZERO; //Wkl bet NBR vri
         #1FZNR = *ZERO; //Wkl bet NBR vri
         #1F0NR = *ZERO; //Wkl bet NBR vri
         #1F1NR = *ZERO; //Wkl bet NBR vri
         #1MRCE = *BLANK;                         Wkl bet CDE vri
         #1IVDM = *ZERO; //Wkl bet DTM vri
         #1IWDM = *ZERO; //Wkl bet DTM vri
         #1PWDD = *ZERO; //Wkl bet DTD vri
         #1PXDD = *ZERO; //Wkl bet DTD vri
         #1GDCE = *BLANK;                         Wkl betaling BE
         #1O3CD = *BLANK;                         Afh6 kode TV
         #1PACD = *BLANK;                         Afh6 laatste ma
         #1T6NB = *ZERO; //Netto wkl
         #1T7NB = *ZERO; //Netto BZ
         #DBPST = *BLANK;                         Confirm
         #1BITX = *BLANK;                         Wkl tekst
         #1A7ST = *BLANK;                         Zone vorig bare
         #1IYNB = *ZERO; //BZ1 dagen
         #1JHNB = *ZERO; //BZ1 bedrag
         #1KBCD = *BLANK;                         Zone vorig bare
         #1IZNB = *ZERO; //BZ2 dagen
         #1JGNB = *ZERO; //BZ2 bedrag
         #1KCCD = *BLANK;                         Zone vorig bare
         #1I0NB = *ZERO; //BZ3 dagen
         #1JFNB = *ZERO; //BZ3 bedrag
         #1KDCD = *BLANK;                         Zone vorig bare
         #1I1NB = *ZERO; //BZ4 dagen
         #1JENB = *ZERO; //BZ4 bedrag
         #1KECD = *BLANK;                         Zone vorig bare
         #1A5DM = *ZERO; //RVA indieningsm
         #1BIST = *BLANK;                         RVA type C10
         #1MBCD = *BLANK;                         Type werklooshe
         #1MCCD = *BLANK;                         RVA Gewestelijk
         #1LONB = *ZERO; //RVA UI-afdeling
         #1MDCD = *BLANK;                         Nr betaler
         #1MECD = *BLANK;                         Kode beroep
         #1RQCD = *BLANK;                         Kode subberoep
         #1MFCD = *BLANK;                         Barema
         #1MGCD = *ZERO; //Complement
         #1MOCD = *BLANK;                         Kode BZ
         #1T5CD = *BLANK;                         Wkl adres opdra
         #1T6CD = *BLANK;                         Wkl postnr opdr
         #1T7CD = *BLANK;                         Wkl lokaliteit
         #1T8CD = *BLANK;                         Wkl taal opdrac
         #1MICD = *BLANK;                         Wkl naam beguns
         #1MJCD = *BLANK;                         Wkl adres begun
         #1MKCD = *BLANK;                         Wkl postnr begu
         #1VCCD = *BLANK;                         Wkl post subkod
         #1MLCD = *BLANK;                         Wkl lokaliteit
         #1MMCD = *ZERO; //Wkl banknr begu
         #1MNCD = *ZERO; //RVA identificat
         #1MUCD = *BLANK;                         Wkl taalkode be
         #1V6CD = *BLANK;                         Wkl bankkode
         #1LJNB = *ZERO; //Wkl INDIR-indie
         #1LKNB = *ZERO; //Wkl INDIR-UI-af
         #1M4CD = *BLANK;                         Wkl INDIR-type
         #1LLNB = *ZERO; //Wkl INDIR-GWB-n
         #1LMNB = *ZERO; //Wkl INDIR-ident
         #1LNNB = *ZERO; //Wkl INDIR-maand
         #1I2NB = *ZERO; //BZ5 dagen
         #1I8NB = *ZERO; //BZ5 bedrag
         #1L0CD = *BLANK;                         BZ1 kode
         #1L1CD = *BLANK;                         BZ4 kode
         #1L2CD = *BLANK;                         BZ5 kode
         #1L8CD = *BLANK;                         BZ2 kode
         #1L9CD = *BLANK;                         BZ3 kode
         #1AMTX = *BLANK;                         Lid naam
         #1ADNA = *BLANK;                         Lid adres
         #1AINB = *BLANK;                         Pensioennr jjmm
         #1AKNB = *BLANK;                         Rijksreg d1
         #1FGNB = *BLANK;                         Rijksreg d2
         #1FHNB = *BLANK;                         Rijksreg d3
         #DFYTK = *BLANK;                         Wrk par.kom wkl
         #1ADCD = *BLANK;                         Post nr
         #1ABTX = *BLANK;                         Lokaliteit
         #DO8CH = *BLANK;                         Wrk iban 34 sch
         #DPACH = *BLANK;                         wrk iban 34 sch
         #1ARCD = *BLANK;                         Wkl rekening ko
         #DS3ND = *ZERO; //Wrk verlof in m
         #1CMCD = *BLANK;                         Betalingsw kode
         #1M5CD = *BLANK;                         Kateg kode-lid
         #1ANDM = *ZERO; //Kateg jjmm-lid
          // Clear external version also
         V1ANDM = *ZERO;
         #1FBNB = *ZERO; //Kateg bedragA-l
         #DCA70 = *BLANK;                         Wrk vakbondsman
         #DFZDM = *ZERO; //Wrk datum vakbo
          // Clear external version also
         VDFZDM = *ZERO;
         #1AEDD = *ZERO; //Datum laatste b
          // Clear external version also
         V1AEDD = *ZERO;
         #1PICD = *BLANK;                         Wkl add-user
         #1A1CD = *BLANK;                         Type wklh. kode
         #1DOCD = *BLANK;                         Barema RVAkode
         #DWVCJ = *BLANK;                         S04 schermveld
         #1A5CD = *BLANK;                         KBF nr
         #1ATST = *BLANK;                         C104 drukken
         #1DDNB = *ZERO; //Dagbedrag
         #1A2CD = *BLANK;                         GWB nr
         #1BTNB = *BLANK;                         Gemeente nr
         #1A7CD = *BLANK;                         Belasting kode
         #1BCNB = *ZERO; //Datum C7
          // Clear external version also
         V1BCNB = *ZERO;
         #1MFDD = *ZERO; //Datum laatste s
          // Clear external version also
         V1MFDD = *ZERO;
         #DW1CJ = *BLANK;                         S04 schermveld
         #1AKDT = *ZERO; //Datum begin wkl
          // Clear external version also
         V1AKDT = *ZERO;
         #DQRDE = *ZERO; //S04 schermveld
          // Clear external version also
         VDQRDE = *ZERO;
         #DB9DF = *ZERO; //Wrk datum van t
          // Clear external version also
         VDB9DF = *ZERO;
         #DCADF = *ZERO; //Wrk datum tot t
          // Clear external version also
         VDCADF = *ZERO;
         #1A6CD = *BLANK;                         Vrijstelling ko
         #1AYCE = *BLANK;                         vrijstelling2 V
         #1DBNB = *ZERO; //Q
         #1DCNB = *ZERO; //S
         #1F3NB = *ZERO; //Qx4
         #1DFNB = *ZERO; //VW lm
         #1DGNB = *ZERO; //GW lm
         #1DHNB = *ZERO; //VW vm
         #1DINB = *ZERO; //GW vm
         #DETDE = *ZERO; //Wrk dtm C104 in
          // Clear external version also
         VDETDE = *ZERO;
         #1A4CD = *BLANK;                         BZ kode
         #1F4NB = *ZERO; //BZ jaar
         #1BDNB = *ZERO; //Krediet BZ
         #1BENB = *ZERO; //Krediet BZ2
         #DRXNC = *ZERO; //Wrk J RVA
         #DS9NC = *ZERO; //wrk BV voor upd
         #DMTNB = *ZERO; //Wkl Kr.BV
         #DWUBV = *BLANK;                         Betaal verlof *
         #DMUNB = *ZERO; //Wkl Kr.V
         #DWUVL = *BLANK;                         Verlof * of C
         #1MOCE = *BLANK;                         Wkl bet CDE vri
         #1GLNB = *ZERO; //VD6
         #1GMNB = *ZERO; //HD6
         #1GINB = *ZERO; //Uren ged.wkl.
         #1ISCD = *BLANK;                         Geen uren ged.
         #1GGNB = *ZERO; //VD5
         #1GHNB = *ZERO; //HD5
         #1GONB = *ZERO; //Volle dagen vor
         #1JMNB = *ZERO; //Halve dagen vor
         #1GPNB = *ZERO; //Volle dagen BZ
         #1JNNB = *ZERO; //Halve dagen BZ
         #1G7NB = *ZERO; //Volle dagen BV
         #1JONB = *ZERO; //Halve dagen BV
         #1GNNB = *ZERO; //Volle dagen ver
         #1JLNB = *ZERO; //Halve dagen ver
         #1MPCE = *BLANK;                         Wkl bet CDE vri
         #1ATCE = *BLANK;                         GeÃ¯ntegreerd
         #1MQCE = *BLANK;                         Wkl bet CDE vri
         #1GJNB = *ZERO; //Y
         #1GKNB = *ZERO; //Yft
         #DZ5NB = *ZERO; //Wkl betaling Yu
         #1GTNB = *ZERO; //Z+A
         #1GVNB = *ZERO; //Uren BV
         #DDTCC = *BLANK;                         wrk veld 5 posi
         #PBLCF = P4BLCF;                         param code bijp
         #DB6TK = *BLANK;                         Wrk Y in BEF/EU
         #1GUNB = *ZERO; //C3.2
         #1GRNB = *ZERO; //VW
         #1GXNB = *ZERO; //Dagen kbf sankt
         #1DVCD = *BLANK;                         Afh1 kode
         #1GZNB = *ZERO; //Afh1 bedrag
         #1G0NB = *ZERO; //Afh1 datum
          // Clear external version also
         V1G0NB = *ZERO;
         #1DWCD = *BLANK;                         Afh2 kode
         #1G1NB = *ZERO; //Afh2 bedrag
         #1G2NB = *ZERO; //Afh2 datum
          // Clear external version also
         V1G2NB = *ZERO;
         #1DXCD = *BLANK;                         Afh3 kode
         #1G3NB = *ZERO; //Afh3 bedrag
         #1G4NB = *ZERO; //Afh3 datum
          // Clear external version also
         V1G4NB = *ZERO;
         #1DYCD = *BLANK;                         Afh4 kode
         #1G5NB = *ZERO; //Afh4 bedrag
         #1G6NB = *ZERO; //Afh4 datum
          // Clear external version also
         V1G6NB = *ZERO;
         #1EDCD = *BLANK;                         Afh5 kode
         #1HDNB = *ZERO; //Afh5 bedrag
         #1HENB = *ZERO; //Afh5 datum
          // Clear external version also
         V1HENB = *ZERO;
         #1EECD = *BLANK;                         Afh6 kode
         #1HFNB = *ZERO; //Afh6 bedrag
         #1HGNB = *ZERO; //Afh6 datum
          // Clear external version also
         V1HGNB = *ZERO;
         #1LPNB = *ZERO; //BC aantal
         #1CLCD = *BLANK;                         Kateg kode
         #1E9NB = *ZERO; //Kateg jjmm
          // Clear external version also
         V1E9NB = *ZERO;
         #1LQNB = *ZERO; //BC bedrag
         #1JQNB = *ZERO; //X2
         #1JRNB = *ZERO; //RWP
         #1AKDD = *ZERO; //Wkl datum laats
          // Clear external version also
         V1AKDD = *ZERO;
         #1HPNB = *ZERO; //Bedrag wkl
         #1BDST = *BLANK;                         Geen bedrag wkl
         #1GYNB = *ZERO; //Bedrag BZ
         #1BCST = *BLANK;                         Geen dagen/bedr
         #1BENR = *ZERO; //Wkl gemiddeld m
         #1HCNB = *ZERO; //Taks
         #1GQNB = *ZERO; //Netto
         #DCA02 = *BLANK;                         Wrk Wkl bet opm
         #PX0CC = P3X0CC;                         String paramete
         #PBLCF = P4BLCF;                         param code bijp
         #PBKCF = P5BKCF;                         param Href
         #PIINU = P6IINU;                         param aantal
         #PIJNU = P7IJNU;                         param bedrag bi
         #DCA20 = *ZERO; //Wkl bet dgn R6+
         #DCA21 = *ZERO; //Wkl bet dgn R5
         #DCA22 = *ZERO; //Wkl bet dgn BV
         #DCA23 = *ZERO; //Wkl bet dgn KBF
         #DCA25 = *ZERO; //Wrk dgn nt verg
         #DCA24 = *ZERO; //Wkl bet TOTAAL
         #DGVNR = *ZERO; //wrk bedrag resu
          //================================================================
       ENDSR;
       /EJECT
       BEGSR MBFL#1;
          //================================================================
          // Move @CACPGL fields to screen
          //================================================================
         #1AJNB = CAAJNB;                         Pensioennr d2
         #1V8CD = CAV8CD;                         Pensioennr digi
         #1BRNB = CABRNB;                         Rekening d1
         #1FMNB = CAFMNB;                         Rekening d2
         #1FNNB = CAFNNB;                         Rekening d3
         #1C8NB = CAC8NB;                         Wkl rekening d1
         #1F6NB = CAF6NB;                         Wkl rekening d2
         #1F7NB = CAF7NB;                         Wkl rekening d3
         #1BBNB = CABBNB;                         Zone vorst
         #1BVCE = CABVCE;                         Sanktie kode
         #1ACNR = CAACNR; //Sanctie1 aantal
         #1MBDD = CAMBDD; //Datum begin san
         #1MCDD = CAMCDD; //Datum einde san
         #1ADNR = CAADNR; //Sanctie2 aantal
         #1MJ01 = CAMJ01;                         Toelaatbaarheid
         #1MM01 = CAMM01;                         Vergoedbaarheid
         #1AWCE = CAAWCE;                         0-code Vergoedb
         #1NA01 = CANA01;                         Code beslissing
         #1MDDD = CAMDDD; //Laatst gecontro
         #1MEDD = CAMEDD; //Laatst vergoede
         #1MHDD = CAMHDD; //Datum barema
         #1MIDD = CAMIDD; //Datum begin vri
         #1MJDD = CAMJDD; //Datum einde vri
         #1MLDD = CAMLDD; //Datum 0-code
         #1MMDD = CAMMDD; //Datum begin bij
         #1MNDD = CAMNDD; //Datum einde bij
         #1AENR = CAAENR; //Bedrag belast.
         #1NB01 = CANB01;                         Code bijz. verg
         #1MJ02 = CAMJ02;                         Toelaatbaar cod
         #1ASCE = CAASCE;                         Vergoedbaarheid
         #1BWCE = CABWCE;                         0-code Vergoedb
         #1LJCE = CALJCE;                         Lid SIS-kaartnr
         #1MGDD = CAMGDD; //Datum inschrijv
         #1NENB = CANENB; //VSOA nr(nieuw)
         #1ECST = CAECST;                         Meerdere part-t
         #1EVNR = CAEVNR; //Werkloze NBR vr
         #1EWNR = CAEWNR; //Werkloze NBR vr
         #1EXNR = CAEXNR; //Werkloze NBR vr
         #1EYNR = CAEYNR; //Werkloze NBR vr
         #1EZNR = CAEZNR; //Werkloze NBR vr
         #1E0NR = CAE0NR; //Werkloze NBR vr
         #1E1NR = CAE1NR; //Werkloze NBR vr
         #1IEDM = CAIEDM; //Werkloze DTM vr
         #1IFDM = CAIFDM; //Werkloze DTM vr
         #1O6DD = CAO6DD; //Werkloze DTD vr
         #1O7DD = CAO7DD; //Werkloze DTD vr
         #1KVCE = CAKVCE;                         Werkloze CDE vr
         #1KWCE = CAKWCE;                         Werkloze CDE vr
         #1KXCE = CAKXCE;                         Werkloze CDE vr
         #1KYCE = CAKYCE;                         Werkloze CDE vr
         #1KZCE = CAKZCE;                         Werkloze CDE vr
         #1K0CE = CAK0CE;                         Werkloze CDE vr
         #1NCCE = CANCCE;                         Zone code
         #1NDCE = CANDCE;                         Gewest code
         #1FICE = CAFICE;                         Werkloze BEF/EU
         #1AUNB = CAAUNB;                         Arb-bed kode
         #1AXNB = CAAXNB;                         Burgerlijke sta
         #1AJST = CAAJST;                         Vrijstelling ei
         #1AXCE = CAAXCE;                         vrijstelling2 T
         #1AZCE = CAAZCE;                         sanctie1 Taal k
         #1AFNR = CAAFNR; //Maximum # weken
         #1PICE = CAPICE;                         sanctie2 Taal k
         #1PJCE = CAPJCE;                         sanctie2 Sankti
         #1IQNR = CAIQNR; //sanctie2 Maximu
         #1A9CD = CAA9CD;                         Arbeidsovk kode
         #1AVCE = CAAVCE;                         0-code Taal kod
         #1MKDD = CAMKDD; //Datum berek. be
         #1A6DM = CAA6DM; //Datum vakbondsm
         #1ASST = CAASST;                         AnciÃ«nniteit
         #1A4NB = CAA4NB;                         Haven reg nr
         #1BYNB = CABYNB;                         Haven reg digit
         #1BKCD = CABKCD;                         VSOA groep kode
         #1ACDT = CAACDT; //Datum aanvr ber
         #1TRCD = CATRCD;                         Post subkode
         #1AGNB = CAAGNB; //Aansl jjmm
         #1VACD = CAVACD;                         Wkl-foutkode
         #1F5NB = CAF5NB; //Barema compl
         #1A3CD = CAA3CD;                         Betaler kode
         #1AEDT = CAAEDT; //Datum OP-code
         #1ADDT = CAADDT; //Datum 40%
         #1AHDT = CAAHDT; //Datum forfait
         #1AGDT = CAAGDT; //Datum C1verval
         #1AFDT = CAAFDT; //Datum verblijfs
         #1AJDT = CAAJDT; //Datum laatste s
         #1AIDT = CAAIDT; //Datum arbeidsve
         #1BFNB = CABFNB; //Krediet BZvj
         #1BGNB = CABGNB; //Krediet BZ2vj
         #1AHNB = CAAHNB; //Ontsl jjmm
         #1A3NB = CAA3NB;                         Haven kategorie
         #1ATNB = CAATNB;                         Geslacht kode
         #1BACD = CABACD;                         Beroep kode
         #1BCCD = CABCCD;                         Subberoep kode
         #1AMDT = CAAMDT; //Datum einde san
         #1ALDT = CAALDT; //Datum begin san
         #1C9NB = CAC9NB; //Datum begin vri
         #1DANB = CADANB; //Datum einde vri
         #1FVNB = CAFVNB;                         VSOA nr
         #1ABST = CAABST;                         Invaliditeit 33
         #1A9NB = CAA9NB; //Beroepsverl jr
         #1BANB = CABANB; //Beroepsverl dg
         #1MVCD = CAMVCD;                         Taal kode
         #1KZNB = CAKZNB; //Afd U.I.-kode
         #1AZCD = CAAZCD;                         Lid taal kode
         #1AWCD = CAAWCD;                         KBF dossiernr
         #1AKST = CAAKST;                         W1zo
         #1ALST = CAALST;                         W1ma
         #1AMST = CAAMST;                         W1di
         #1ANST = CAANST;                         W1wo
         #1AOST = CAAOST;                         W1do
         #1APST = CAAPST;                         W1vr
         #1AQST = CAAQST;                         W1za
         #1ARST = CAARST;                         Vakbondsmandaat
         #1ARNB = CAARNB;                         Taal kode
         #1EGCD = CAEGCD;                         C12 reden kode
         #1BRTX = CABRTX;                         C12 reden tekst
         #1N8CE = CAN8CE;                         Wkl bet. zone
         #1N9CE = CAN9CE;                         Wkl bet. gewest
         #1AATX = CAAATX;                         Afd naam
         #1HJNB = CAHJNB; //DOK periode
         #1WUCD = CAWUCD;                         DOK kategorie
         #1MINB = CAMINB; //Volle dagen BZ2
         #1MJNB = CAMJNB; //Halve dagen BZ2
         #1BBNR = CABBNR; //Wkl n-verg. n-g
         #1GSNB = CAGSNB; //Min
         #1JJNB = CAJJNB; //Volle BZ C3.2
         #1JKNB = CAJKNB; //Halve BZ C3.2
         #1OYCD = CAOYCD;                         Afh1 kode TV
         #1O5CD = CAO5CD;                         Afh1 laatste ma
         #1OZCD = CAOZCD;                         Afh2 kode TV
         #1O6CD = CAO6CD;                         Afh2 laatste ma
         #1O0CD = CAO0CD;                         Afh3 kode TV
         #1O7CD = CAO7CD;                         Afh3 laatste ma
         #1O1CD = CAO1CD;                         Afh4 kode TV
         #1O8CD = CAO8CD;                         Afh4 laatste ma
         #1O2CD = CAO2CD;                         Afh5 kode TV
         #1O9CD = CAO9CD;                         Afh5 laatste ma
         #1T4NB = CAT4NB; //Taks wkl
         #1T5NB = CAT5NB; //Taks BZ
         #1BANR = CABANR; //Wkl Yuur
         #1BKCE = CABKCE;                         Wie heeft wklh
         #1BLCE = CABLCE;                         Wie heeft BZ be
         #1BMCE = CABMCE;                         Verlof 6 dagen
         #1BNCE = CABNCE;                         Verlof 6 dagen
         #1BOCE = CABOCE;                         Wkl vorstzone
         #1BCNR = CABCNR; //Wkl inhoudingsp
         #1BDNR = CABDNR; //Wkl dagbedrag
         #1BFNR = CABFNR; //Wkl Q
         #1BGNR = CABGNR; //Wkl S
         #1BPCE = CABPCE;                         Wkl verif.05/98
         #1BQCE = CABQCE;                         Wkl C10bis
         #1BRCE = CABRCE;                         Wkl vergoedbaar
         #1BSCE = CABSCE;                         Wkl toelaatbaar
         #1M7DD = CAM7DD; //Wkl datum begin
         #1M8DD = CAM8DD; //Wkl laatst verg
         #1M9DD = CAM9DD; //Wkl laatst geco
         #1BTCE = CABTCE;                         Wkl sanctiecode
         #1NADD = CANADD; //Wkl begindatum
         #1NBDD = CANBDD; //Wkl einddatum s
         #1BUCE = CABUCE;                         Wkl sanctiecode
         #1NCDD = CANCDD; //Wkl begindatum
         #1NDDD = CANDDD; //Wkl einddatum s
         #1ASDD = CAASDD; //Wkl add-datum
         #1ALTM = CAALTM; //Wkl add-time
         #1CA01 = CACA01;                         Wkl bet betaald
         #1Y4NB = CAY4NB; //Wkl bet Uitv.da
         #1FXNR = CAFXNR; //Wkl bet NBR vri
         #1FYNR = CAFYNR; //Wkl bet NBR vri
         #1FZNR = CAFZNR; //Wkl bet NBR vri
         #1F0NR = CAF0NR; //Wkl bet NBR vri
         #1F1NR = CAF1NR; //Wkl bet NBR vri
         #1MRCE = CAMRCE;                         Wkl bet CDE vri
         #1IVDM = CAIVDM; //Wkl bet DTM vri
         #1IWDM = CAIWDM; //Wkl bet DTM vri
         #1PWDD = CAPWDD; //Wkl bet DTD vri
         #1PXDD = CAPXDD; //Wkl bet DTD vri
         #1GDCE = CAGDCE;                         Wkl betaling BE
         #1O3CD = CAO3CD;                         Afh6 kode TV
         #1PACD = CAPACD;                         Afh6 laatste ma
         #1T6NB = CAT6NB; //Netto wkl
         #1T7NB = CAT7NB; //Netto BZ
         #1BITX = CABITX;                         Wkl tekst
         #1A7ST = CAA7ST;                         Zone vorig bare
         #1IYNB = CAIYNB; //BZ1 dagen
         #1JHNB = CAJHNB; //BZ1 bedrag
         #1KBCD = CAKBCD;                         Zone vorig bare
         #1IZNB = CAIZNB; //BZ2 dagen
         #1JGNB = CAJGNB; //BZ2 bedrag
         #1KCCD = CAKCCD;                         Zone vorig bare
         #1I0NB = CAI0NB; //BZ3 dagen
         #1JFNB = CAJFNB; //BZ3 bedrag
         #1KDCD = CAKDCD;                         Zone vorig bare
         #1I1NB = CAI1NB; //BZ4 dagen
         #1JENB = CAJENB; //BZ4 bedrag
         #1KECD = CAKECD;                         Zone vorig bare
         #1A5DM = CAA5DM; //RVA indieningsm
         #1BIST = CABIST;                         RVA type C10
         #1MBCD = CAMBCD;                         Type werklooshe
         #1MCCD = CAMCCD;                         RVA Gewestelijk
         #1LONB = CALONB; //RVA UI-afdeling
         #1MDCD = CAMDCD;                         Nr betaler
         #1MECD = CAMECD;                         Kode beroep
         #1RQCD = CARQCD;                         Kode subberoep
         #1MFCD = CAMFCD;                         Barema
         #1MGCD = CAMGCD; //Complement
         #1MOCD = CAMOCD;                         Kode BZ
         #1T5CD = CAT5CD;                         Wkl adres opdra
         #1T6CD = CAT6CD;                         Wkl postnr opdr
         #1T7CD = CAT7CD;                         Wkl lokaliteit
         #1T8CD = CAT8CD;                         Wkl taal opdrac
         #1MICD = CAMICD;                         Wkl naam beguns
         #1MJCD = CAMJCD;                         Wkl adres begun
         #1MKCD = CAMKCD;                         Wkl postnr begu
         #1VCCD = CAVCCD;                         Wkl post subkod
         #1MLCD = CAMLCD;                         Wkl lokaliteit
         #1MMCD = CAMMCD; //Wkl banknr begu
         #1MNCD = CAMNCD; //RVA identificat
         #1MUCD = CAMUCD;                         Wkl taalkode be
         #1V6CD = CAV6CD;                         Wkl bankkode
         #1LJNB = CALJNB; //Wkl INDIR-indie
         #1LKNB = CALKNB; //Wkl INDIR-UI-af
         #1M4CD = CAM4CD;                         Wkl INDIR-type
         #1LLNB = CALLNB; //Wkl INDIR-GWB-n
         #1LMNB = CALMNB; //Wkl INDIR-ident
         #1LNNB = CALNNB; //Wkl INDIR-maand
         #1I2NB = CAI2NB; //BZ5 dagen
         #1I8NB = CAI8NB; //BZ5 bedrag
         #1L0CD = CAL0CD;                         BZ1 kode
         #1L1CD = CAL1CD;                         BZ4 kode
         #1L2CD = CAL2CD;                         BZ5 kode
         #1L8CD = CAL8CD;                         BZ2 kode
         #1L9CD = CAL9CD;                         BZ3 kode
         #1AACD = CAAACD;                         Afdeling nr
         #1AFNB = CAAFNB;                         Lid nr
         #1GWNB = CAGWNB; //Datum achtersta
         #1AMTX = CAAMTX;                         Lid naam
         #1ADNA = CAADNA;                         Lid adres
         #1AINB = CAAINB;                         Pensioennr jjmm
         #1AKNB = CAAKNB;                         Rijksreg d1
         #1FGNB = CAFGNB;                         Rijksreg d2
         #1FHNB = CAFHNB;                         Rijksreg d3
         #1ADCD = CAADCD;                         Post nr
         #1ABTX = CAABTX;                         Lokaliteit
         #1ARCD = CAARCD;                         Wkl rekening ko
         #1CMCD = CACMCD;                         Betalingsw kode
         #1M5CD = CAM5CD;                         Kateg kode-lid
         #1ANDM = CAANDM; //Kateg jjmm-lid
         #1FBNB = CAFBNB; //Kateg bedragA-l
         #1AEDD = CAAEDD; //Datum laatste b
         #1PICD = CAPICD;                         Wkl add-user
         #1A1CD = CAA1CD;                         Type wklh. kode
         #1DOCD = CADOCD;                         Barema RVAkode
         #1A5CD = CAA5CD;                         KBF nr
         #1ATST = CAATST;                         C104 drukken
         #1DDNB = CADDNB; //Dagbedrag
         #1A2CD = CAA2CD;                         GWB nr
         #1BTNB = CABTNB;                         Gemeente nr
         #1A7CD = CAA7CD;                         Belasting kode
         #1BCNB = CABCNB; //Datum C7
         #1MFDD = CAMFDD; //Datum laatste s
         #1AKDT = CAAKDT; //Datum begin wkl
         #1A6CD = CAA6CD;                         Vrijstelling ko
         #1AYCE = CAAYCE;                         vrijstelling2 V
         #1DBNB = CADBNB; //Q
         #1DCNB = CADCNB; //S
         #1F3NB = CAF3NB; //Qx4
         #1DFNB = CADFNB; //VW lm
         #1DGNB = CADGNB; //GW lm
         #1DHNB = CADHNB; //VW vm
         #1DINB = CADINB; //GW vm
         #1A4CD = CAA4CD;                         BZ kode
         #1F4NB = CAF4NB; //BZ jaar
         #1BDNB = CABDNB; //Krediet BZ
         #1BENB = CABENB; //Krediet BZ2
         #1MOCE = CAMOCE;                         Wkl bet CDE vri
         #1GLNB = CAGLNB; //VD6
         #1GMNB = CAGMNB; //HD6
         #1GINB = CAGINB; //Uren ged.wkl.
         #1ISCD = CAISCD;                         Geen uren ged.
         #1GGNB = CAGGNB; //VD5
         #1GHNB = CAGHNB; //HD5
         #1GONB = CAGONB; //Volle dagen vor
         #1JMNB = CAJMNB; //Halve dagen vor
         #1GPNB = CAGPNB; //Volle dagen BZ
         #1JNNB = CAJNNB; //Halve dagen BZ
         #1G7NB = CAG7NB; //Volle dagen BV
         #1JONB = CAJONB; //Halve dagen BV
         #1GNNB = CAGNNB; //Volle dagen ver
         #1JLNB = CAJLNB; //Halve dagen ver
         #1MPCE = CAMPCE;                         Wkl bet CDE vri
         #1ATCE = CAATCE;                         GeÃ¯ntegreerd
         #1MQCE = CAMQCE;                         Wkl bet CDE vri
         #1GJNB = CAGJNB; //Y
         #1GKNB = CAGKNB; //Yft
         #1GTNB = CAGTNB; //Z+A
         #1GVNB = CAGVNB; //Uren BV
         #1GUNB = CAGUNB; //C3.2
         #1GRNB = CAGRNB; //VW
         #1GXNB = CAGXNB; //Dagen kbf sankt
         #1DVCD = CADVCD;                         Afh1 kode
         #1GZNB = CAGZNB; //Afh1 bedrag
         #1G0NB = CAG0NB; //Afh1 datum
         #1DWCD = CADWCD;                         Afh2 kode
         #1G1NB = CAG1NB; //Afh2 bedrag
         #1G2NB = CAG2NB; //Afh2 datum
         #1DXCD = CADXCD;                         Afh3 kode
         #1G3NB = CAG3NB; //Afh3 bedrag
         #1G4NB = CAG4NB; //Afh3 datum
         #1DYCD = CADYCD;                         Afh4 kode
         #1G5NB = CAG5NB; //Afh4 bedrag
         #1G6NB = CAG6NB; //Afh4 datum
         #1EDCD = CAEDCD;                         Afh5 kode
         #1HDNB = CAHDNB; //Afh5 bedrag
         #1HENB = CAHENB; //Afh5 datum
         #1EECD = CAEECD;                         Afh6 kode
         #1HFNB = CAHFNB; //Afh6 bedrag
         #1HGNB = CAHGNB; //Afh6 datum
         #1LPNB = CALPNB; //BC aantal
         #1CLCD = CACLCD;                         Kateg kode
         #1E9NB = CAE9NB; //Kateg jjmm
         #1LQNB = CALQNB; //BC bedrag
         #1JQNB = CAJQNB; //X2
         #1JRNB = CAJRNB; //RWP
         #1AKDD = CAAKDD; //Wkl datum laats
         #1HPNB = CAHPNB; //Bedrag wkl
         #1BDST = CABDST;                         Geen bedrag wkl
         #1GYNB = CAGYNB; //Bedrag BZ
         #1BCST = CABCST;                         Geen dagen/bedr
         #1BENR = CABENR; //Wkl gemiddeld m
         #1HCNB = CAHCNB; //Taks
         #1GQNB = CAGQNB; //Netto
          // Hold existing record image
         #1DBRC = @1DBRC;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR MDIZ#K;
          //================================================================
          // Initialize key screen
          //================================================================
         #PX0CC = P3X0CC;                         String paramete
         #PBLCF = P4BLCF;                         param code bijp
         #PBKCF = P5BKCF;                         param Href
         #PIINU = P6IINU;                         param aantal
         #PIJNU = P7IJNU;                         param bedrag bi
         #1DOCD = *BLANK;                         Barema RVAkode
         #1F5NB = *ZERO; //Barema compl
         #1BBNB = *BLANK;                         Zone vorst
         #1BVCE = *BLANK;                         Sanktie kode
         #1ACNR = *ZERO; //Sanctie1 aantal
         #1MBDD = *ZERO; //Datum begin san
         #1MCDD = *ZERO; //Datum einde san
         #1ADNR = *ZERO; //Sanctie2 aantal
         #1AYCE = *BLANK;                         vrijstelling2 V
         #1MJ01 = *BLANK;                         Toelaatbaarheid
         #1MM01 = *BLANK;                         Vergoedbaarheid
         #1AWCE = *BLANK;                         0-code Vergoedb
         #1NA01 = *BLANK;                         Code beslissing
         #1MDDD = *ZERO; //Laatst gecontro
         #1MEDD = *ZERO; //Laatst vergoede
         #1MFDD = *ZERO; //Datum laatste s
         #1MHDD = *ZERO; //Datum barema
         #1MIDD = *ZERO; //Datum begin vri
         #1MJDD = *ZERO; //Datum einde vri
         #1MLDD = *ZERO; //Datum 0-code
         #1MMDD = *ZERO; //Datum begin bij
         #1MNDD = *ZERO; //Datum einde bij
         #1AENR = *ZERO; //Bedrag belast.
         #1NB01 = *BLANK;                         Code bijz. verg
         #1MJ02 = *BLANK;                         Toelaatbaar cod
         #1ASCE = *BLANK;                         Vergoedbaarheid
         #1BWCE = *BLANK;                         0-code Vergoedb
         #1LJCE = *BLANK;                         Lid SIS-kaartnr
         #1MGDD = *ZERO; //Datum inschrijv
         #1NENB = *ZERO; //VSOA nr(nieuw)
         #1ECST = *BLANK;                         Meerdere part-t
         #1EVNR = *ZERO; //Werkloze NBR vr
         #1EWNR = *ZERO; //Werkloze NBR vr
         #1EXNR = *ZERO; //Werkloze NBR vr
         #1EYNR = *ZERO; //Werkloze NBR vr
         #1EZNR = *ZERO; //Werkloze NBR vr
         #1E0NR = *ZERO; //Werkloze NBR vr
         #1E1NR = *ZERO; //Werkloze NBR vr
         #1IEDM = *ZERO; //Werkloze DTM vr
         #1IFDM = *ZERO; //Werkloze DTM vr
         #1O6DD = *ZERO; //Werkloze DTD vr
         #1O7DD = *ZERO; //Werkloze DTD vr
         #1KVCE = *BLANK;                         Werkloze CDE vr
         #1KWCE = *BLANK;                         Werkloze CDE vr
         #1KXCE = *BLANK;                         Werkloze CDE vr
         #1KYCE = *BLANK;                         Werkloze CDE vr
         #1KZCE = *BLANK;                         Werkloze CDE vr
         #1K0CE = *BLANK;                         Werkloze CDE vr
         #1NCCE = *BLANK;                         Zone code
         #1NDCE = *BLANK;                         Gewest code
         #1FICE = *BLANK;                         Werkloze BEF/EU
         #1AUNB = *BLANK;                         Arb-bed kode
         #1AXNB = *BLANK;                         Burgerlijke sta
         #1AJST = *BLANK;                         Vrijstelling ei
         #1AXCE = *BLANK;                         vrijstelling2 T
         #1AZCE = *BLANK;                         sanctie1 Taal k
         #1AFNR = *ZERO; //Maximum # weken
         #1PICE = *BLANK;                         sanctie2 Taal k
         #1PJCE = *BLANK;                         sanctie2 Sankti
         #1IQNR = *ZERO; //sanctie2 Maximu
         #1A9CD = *BLANK;                         Arbeidsovk kode
         #1AVCE = *BLANK;                         0-code Taal kod
         #1MKDD = *ZERO; //Datum berek. be
         #1ATCE = *BLANK;                         GeÃ¯ntegreerd
         #1DDNB = *ZERO; //Dagbedrag
         #1A2CD = *BLANK;                         GWB nr
         #1BTNB = *BLANK;                         Gemeente nr
         #1A3CD = *BLANK;                         Betaler kode
         #1AATX = *BLANK;                         Afd naam
         #1A7CD = *BLANK;                         Belasting kode
         #1AKDT = *ZERO; //Datum begin wkl
         #1ADDT = *ZERO; //Datum 40%
         #1AEDT = *ZERO; //Datum OP-code
         #1BCNB = *ZERO; //Datum C7
         #1AGDT = *ZERO; //Datum C1verval
         #1AFDT = *ZERO; //Datum verblijfs
         #1AHDT = *ZERO; //Datum forfait
         #1AJDT = *ZERO; //Datum laatste s
         #1A6CD = *BLANK;                         Vrijstelling ko
         #1AIDT = *ZERO; //Datum arbeidsve
         #1A4CD = *BLANK;                         BZ kode
         #1F4NB = *ZERO; //BZ jaar
         #1BDNB = *ZERO; //Krediet BZ
         #1BENB = *ZERO; //Krediet BZ2
         #1BFNB = *ZERO; //Krediet BZvj
         #1BGNB = *ZERO; //Krediet BZ2vj
         #1A1CD = *BLANK;                         Type wklh. kode
         #1AHNB = *ZERO; //Ontsl jjmm
         #1A4NB = *BLANK;                         Haven reg nr
         #1BYNB = *BLANK;                         Haven reg digit
         #1BKCD = *BLANK;                         VSOA groep kode
         #1ACDT = *ZERO; //Datum aanvr ber
         #1TRCD = *BLANK;                         Post subkode
         #1AGNB = *ZERO; //Aansl jjmm
         #1VACD = *BLANK;                         Wkl-foutkode
         #1DFNB = *ZERO; //VW lm
         #1DHNB = *ZERO; //VW vm
         #1DGNB = *ZERO; //GW lm
         #1DINB = *ZERO; //GW vm
         #1AKST = *BLANK;                         W1zo
         #1ALST = *BLANK;                         W1ma
         #1AMST = *BLANK;                         W1di
         #1ANST = *BLANK;                         W1wo
         #1AOST = *BLANK;                         W1do
         #1APST = *BLANK;                         W1vr
         #1AQST = *BLANK;                         W1za
         #1ASST = *BLANK;                         AnciÃ«nniteit
         #1ATST = *BLANK;                         C104 drukken
         #1DBNB = *ZERO; //Q
         #1DCNB = *ZERO; //S
         #1F3NB = *ZERO; //Qx4
         #1A3NB = *BLANK;                         Haven kategorie
         #1ATNB = *BLANK;                         Geslacht kode
         #1BACD = *BLANK;                         Beroep kode
         #1BCCD = *BLANK;                         Subberoep kode
         #1AMDT = *ZERO; //Datum einde san
         #1ALDT = *ZERO; //Datum begin san
         #1C9NB = *ZERO; //Datum begin vri
         #1DANB = *ZERO; //Datum einde vri
         #1BITX = *BLANK;                         Wkl tekst
         #1FVNB = *BLANK;                         VSOA nr
         #1ABST = *BLANK;                         Invaliditeit 33
         #1A9NB = *ZERO; //Beroepsverl jr
         #1BANB = *ZERO; //Beroepsverl dg
         #1MVCD = *BLANK;                         Taal kode
         #1KZNB = *ZERO; //Afd U.I.-kode
         #1AZCD = *BLANK;                         Lid taal kode
         #1A5CD = *BLANK;                         KBF nr
         #1AWCD = *BLANK;                         KBF dossiernr
         #1AACD = P1AACD;                         Afdeling nr
         #1AFNB = P2AFNB;                         Lid nr
         #1GWNB = *ZERO; //Datum achtersta
          // Clear external version also
         V1GWNB = *ZERO;
         #1AMTX = *BLANK;                         Lid naam
         #1ADNA = *BLANK;                         Lid adres
         #1AINB = *BLANK;                         Pensioennr jjmm
         #1AJNB = *BLANK;                         Pensioennr d2
         #1V8CD = *BLANK;                         Pensioennr digi
         #1AKNB = *BLANK;                         Rijksreg d1
         #1FGNB = *BLANK;                         Rijksreg d2
         #1FHNB = *BLANK;                         Rijksreg d3
         #1ADCD = *BLANK;                         Post nr
         #1ABTX = *BLANK;                         Lokaliteit
         #1BRNB = *BLANK;                         Rekening d1
         #1FMNB = *BLANK;                         Rekening d2
         #1FNNB = *BLANK;                         Rekening d3
         #1C8NB = *BLANK;                         Wkl rekening d1
         #1F6NB = *BLANK;                         Wkl rekening d2
         #1F7NB = *BLANK;                         Wkl rekening d3
         #1ARCD = *BLANK;                         Wkl rekening ko
         #1CMCD = *BLANK;                         Betalingsw kode
         #1M5CD = *BLANK;                         Kateg kode-lid
         #1ANDM = *ZERO; //Kateg jjmm-lid
          // Clear external version also
         V1ANDM = *ZERO;
         #1FBNB = *ZERO; //Kateg bedragA-l
         #1ARST = *BLANK;                         Vakbondsmandaat
         #1A6DM = *ZERO; //Datum vakbondsm
          // Clear external version also
         V1A6DM = *ZERO;
         #1AEDD = *ZERO; //Datum laatste b
          // Clear external version also
         V1AEDD = *ZERO;
          // USER: Initialize key screen
         WUBPCF = P5BKCF;                         Href betaalsche
     EvalR   WUIKNU = P6IINU;                         Aantal ASR beta
         WUPZCK = 'N';                         NAtionale gebru
          // Selektie afd. en taalkode - Gebruiker  *
     C                   MOVEA     *IN(50)       UWIN              1
         BIBLCD = ##USR;
         WUPZCK = 'N';            1            NATIONALE GEBR
         CHAIN BIBLCD @BIREER ;
       *in50 = (%found() = *Off); //GEBRUIKER
     C   50              MOVEL     '**'          #1AACD
     C   50              MOVEL     '*'           #1ARNB
     C  N50              MOVEL     BIBJCD        WUONAF            2            WRK ONDERAFD
         If NOT *In50;
           If BIAACD <> '00';
         Endif;
         WUPZCK = 'N';            1
         #1AACD = BIAACD;                         Afdeling nr
         SCTNR = BIAACD;             2
     EvalR   WUHCCD = '*';            1            AFD PROTECT
           CHAIN SCTNR @AAREAO ;
       *in50 = (%found() = *Off); //AFDELING
     C  N50              MOVEL     AAARNB        #1ARNB                         TAALKODE AFD
         ELSE; //CENTRALE
         WUPZCK = 'Y';            1            NATIONALE GEBR
     EvalR   SCTN2 = #1AACD;             2
           CHAIN SCTN2 @AAREAO ;
       *in50 = (%found() = *Off); //AFDELING
     C  N50              MOVEL     AAARNB        #1ARNB
         Endif;
     C                   MOVEA     UWIN          *IN(50)
         WUQHNU = 0; //Veld bijpassing
          // CASE: PAR.Afdeling nr is NE *BLANK
         If P1AACD <> *BLANK; //*IF
         #1AACD = P1AACD;                         Afdeling nr
         Endif; //*FI
          // CASE: WRK.Afdeling nr is NE *BLANK
         If WUAACD <> *BLANK; //*IF
         #1AACD = WUAACD;                         Afdeling nr
         Endif; //*FI
          // CASE:
          //  - c1ORc2ORc3ORc4ORc5
          //   !- c1    : PAR.param code bijpassing is A = ASR
          //   !- c2    : PAR.param code bijpassing is M = vanf menu via promp
          //   !- c3    : PAR.param code bijpassing is Y = vanaf c14 werkbesta
          //   !- c4    : PAR.param code bijpassing is C = Bijpassing via BYPA
          //   !- c5    : PAR.param code bijpassing is T = eindejaarspr TW
          //   '-
         If P4BLCF = 'A' OR P4BLCF = 'M' OR P4BLCF = 'Y' OR P4BLCF = 'C' OR P4BLCF = 'T'; //*IF
           YRSW00 = 6;
           ZQ = 4;
           If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00009 OR ZQ > 00009;
         W0RTN = 'Y2U0510';
           ELSE;
             WUBYCF = %Subst(P3X0CC:ZQ:YRSW00); //Wrk refertemaan
     C   90              MOVEL     'Y2U0510'     W0RTN
           Endif;
     EvalR   #1GWNB = WUBYCF;                         Datum achtersta
           WUYQND = #1GWNB; //Wrk achterstal
         Endif; //*FI
          // CASE: PAR.param code bijpassing is Y = vanaf c14 werkbestand
         If P4BLCF = 'Y'; //*IF
           YRSW00 = 3;
           ZQ = 1;
           If YRSW00 < 1 OR ZQ < 1 OR YRSW00 > 00009 OR ZQ > 00009;
         W0RTN = 'Y2U0510';
           ELSE;
             WULBCF = %Subst(P3X0CC:ZQ:YRSW00); //Wrk bet.scherm
     C   90              MOVEL     'Y2U0510'     W0RTN
           Endif;
     EvalR   WUQGNU = P7IJNU;                         Veld bijpassing
           WUQHNU = WUQGNU / 100; //Veld bijpassing
         ELSE;
            // CASE: *OTHERWISE
         WULBCF = *BLANK;                         Wrk bet.scherm
         Endif; //*FI
          // CASE: WRK.Lid nr is NE *BLANK
         If WUAFNB <> *BLANK; //*IF
         #1AFNB = WUAFNB;                         Lid nr
         Endif; //*FI
          // CASE: PGM.*Program mode is *CHANGE
         If W0PMD = 'CHG'; //*IF
         W0PMD = 'ADD';                          *Program mode
         Endif; //*FI
         WUXBCH = '1';                         switch inh%
          //================================================================
       ENDSR;
       /EJECT
       BEGSR MEIZ#1;
          //================================================================
          // Initialise virtual fields
          //================================================================
         #1BRTX = *BLANK;                         C12 reden tekst
          //================================================================
       ENDSR;
       /EJECT
       BEGSR MNCV#K;
          //================================================================
          // Convert fields into external form
          //================================================================
          // Convert Datum achterstal to external.

         UIDTM2 = #1GWNB;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1GWNB = UEDTM2;
          // Convert Kateg jjmm-lid to external.

         UIDTM2 = #1ANDM;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1ANDM = UEDTM2;
          // Convert Datum vakbondsmandaat to external.

         UIDTM2 = #1A6DM;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1A6DM = UEDTM2;
          // Convert Datum laatste bijdr to external.

         UIDTM2 = #1AEDD;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1AEDD = UEDTM2;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR MOCV#D;
          //================================================================
          // Convert fields into external form
          //================================================================
          // Convert Datum achterstal to external.

         UIDTM2 = #1GWNB;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1GWNB = UEDTM2;
          // Convert Kateg jjmm-lid to external.

         UIDTM2 = #1ANDM;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1ANDM = UEDTM2;
          // Convert Wrk datum vakbondsmandaat to external.

         UIDTM2 = #DFZDM;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         VDFZDM = UEDTM2;
          // Convert Datum laatste bijdr to external.

         UIDTM2 = #1AEDD;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1AEDD = UEDTM2;
          // Convert Datum C7 to external.

         UIDTM2 = #1BCNB;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1BCNB = UEDTM2;
          // Convert Datum laatste steunaanvr. to external.

         UIDTD2 = #1MFDD;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1MFDD = UEDTD2;
          // Convert Datum begin wkl to external.

         UIDTD2 = #1AKDT;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1AKDT = UEDTD2;
          // Convert S04 schermveld geldigh C2 to external.

         UIDTD2 = #DQRDE;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         VDQRDE = UEDTD2;
          // Convert Wrk datum van tonen to external.

         UIDTD2 = #DB9DF;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         VDB9DF = UEDTD2;
          // Convert Wrk datum tot tonen to external.

         UIDTD2 = #DCADF;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         VDCADF = UEDTD2;
          // Convert Wrk dtm C104 ind bet to external.

         UIDTD2 = #DETDE;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         VDETDE = UEDTD2;
          // Convert Afh1 datum to external.

         UIDTM2 = #1G0NB;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1G0NB = UEDTM2;
          // Convert Afh2 datum to external.

         UIDTM2 = #1G2NB;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1G2NB = UEDTM2;
          // Convert Afh3 datum to external.

         UIDTM2 = #1G4NB;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1G4NB = UEDTM2;
          // Convert Afh4 datum to external.

         UIDTM2 = #1G6NB;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1G6NB = UEDTM2;
          // Convert Afh5 datum to external.

         UIDTM2 = #1HENB;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1HENB = UEDTM2;
          // Convert Afh6 datum to external.

         UIDTM2 = #1HGNB;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1HGNB = UEDTM2;
          // Convert Kateg jjmm to external.

         UIDTM2 = #1E9NB;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1E9NB = UEDTM2;
          // Convert Wkl datum laatste stempel to external.

         UIDTD2 = #1AKDD;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1AKDD = UEDTD2;
          // Convert Datum achterstal to external.

         UIDTM2 = #1GWNB;
         UDTMC2 = UDTM12;
         UDTMY2 = UDTM22;
         UDTMM2 = UDTM32;
         V1GWNB = UEDTM2;
          // Convert Datum verblijfsverg to external.

         UIDTD2 = #1AFDT;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1AFDT = UEDTD2;
          // Convert Datum arbeidsverg to external.

         UIDTD2 = #1AIDT;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1AIDT = UEDTD2;
          // Convert Datum begin sanctie1 to external.

         UIDTD2 = #1ALDT;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1ALDT = UEDTD2;
          // Convert Datum einde sanctie1 to external.

         UIDTD2 = #1AMDT;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1AMDT = UEDTD2;
          // Convert Datum begin sanctie2 to external.

         UIDTD2 = #1MBDD;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1MBDD = UEDTD2;
          // Convert Datum einde sanctie2 to external.

         UIDTD2 = #1MCDD;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1MCDD = UEDTD2;
          // Convert Datum begin vrijstelling1 to external.

         UIDTD2 = #1C9NB;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1C9NB = UEDTD2;
          // Convert Datum einde vrijstelling1 to external.

         UIDTD2 = #1DANB;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1DANB = UEDTD2;
          // Convert Datum begin vrijstelling2 to external.

         UIDTD2 = #1MIDD;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1MIDD = UEDTD2;
          // Convert Datum einde vrijstelling2 to external.

         UIDTD2 = #1MJDD;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1MJDD = UEDTD2;
          // Convert Datum aanvr ber.verl to external.

         UIDTD2 = #1ACDT;
         UDTDC2 = UDTD12;
         UDTDY2 = UDTD22;
         UDTDM2 = UDTD32;
         UDTDD2 = UDTD42;
         V1ACDT = UEDTD2;
          //================================================================
       ENDSR;
       BEGSR NULVYF;
         If KBFD2 <> 0 AND KBFD2 <> 5;
     EvalR   WUHYCD = '3';
         Endif;
       ENDSR;
       BEGSR OMWIS;
         If LET1 = 'G' OR LET1 = 'H';
           If LET11 <> 'T';
     EvalR   WUWUTV = '1';
           Endif;
         Endif;
       ENDSR;
       BEGSR OPHIBA;
       MDIBANOP(#1AACD:#1AFNB:TOEP:IBATER:BICTER);
         ENDSR;
       BEGSR REG27;
         HVD6 = #1GLNB;
         HHD6 = #1GMNB;
         HVVERL = #1GNNB;
         HHVERL = #1JLNB;
         HVBV = #1G7NB;
         HHBV = #1JONB;
         DELWKL = #1GMNB / 2;
         DELWKL = DELWKL + #1GLNB;
         DELVER = #1JLNB / 2;
         DELVER = DELVER + #1GNNB;
         DELWKL = DELWKL + DELVER;
         HVTOT6 = #1GLNB + #1GNNB;
         HHTOT6 = #1GMNB + #1JLNB;
         DELBV = #1JONB / 2;
         DELBV = DELBV + #1G7NB;
         DELWK2 = DELWKL + DELBV;
         HVAL6 = HVTOT6 + #1G7NB;
         HHAL6 = HHTOT6 + #1JONB;
       ENDSR;
       BEGSR REGEL;
          // REKENING HOUDEN MET KINDEREN TEN LASTE ||
          //*                   Z-ADD0         BESPLU  62
          //*                   CALL 'MDBESL02'
          //*                   PARM           #1AACD           AFD
          //*                   PARM           #1AFNB           LIDNR
          //*                   PARM           #1AKNB           RRNRD1
          //*                   PARM           #1FGNB           RRNRD2
          //*                   PARM           #1FHNB           RRNRD3
          //*                   PARM           #1DOCD           BAREMA
          //*                   PARM           BESPLU           BEDRAG PLUS
          //*         GRNS1     ADD  BESPLU    GRNS1
          //*         GRNS2     ADD  BESPLU    GRNS2
          //*         GRNS3     ADD  BESPLU    GRNS3
         DEEL33 = 0;
         DEEL27 = 0;
         DEEL25 = 0;
         VERSC3 = 0;
         VERSC2 = 0;
         GRNS1 = BYDONR; //KLEINSTE
         GRNS2 = BYDPNR;
         GRNS3 = BYDQNR; //GROOTSTE
         GRNS12 = GRNS2 - GRNS1;
         GRNS23 = GRNS3 - GRNS2;
         VGRN12 = GRNS12 * 0.2; //1/5
         VGRN23 = GRNS23 * 0.4; //2/5
         If HBREG > GRNS3;
           DEEL33 = HBREG - GRNS3;
           DEEL27 = VGRN23;
           DEEL25 = VGRN12;
         ELSE;
           If HBREG > GRNS2;
             VERSC3 = HBREG - GRNS2;
             EVAL(H) DEEL27 = VERSC3 * 0.4;
             DEEL25 = VGRN12;
             DEEL33 = 0;
           ELSE;
             If HBREG > GRNS1;
               VERSC2 = HBREG - GRNS1;
               EVAL(H) DEEL25 = VERSC2 * 0.2;
               DEEL27 = 0;
               DEEL33 = 0;
             ELSE; //< 27000 FR
               DEEL33 = 0;
               DEEL27 = 0;
               DEEL25 = 0;
     EvalR   WUOACD = '1';                         REGEL NT TOE
             Endif; //END 31900
           Endif; //END 34300
         Endif; //END 41300
       ENDSR;
        //---------------------------------------------------------------
        // SUBROUTINE LEEFLOON BEREKENEN                                 *
       BEGSR ROUTLS;
     EvalR   TSTLST = '0';            1
         If WUBZNN > 0; //L.ST IS ING.
           If ZON6 <> #1GWNB;
     EvalR   WUW202 = '1';
     EvalR   TSTLST = '1';
           Endif; //END < ACHT
         ELSE; //L.ST NT ING.
           If ZON6 <> #1GWNB;
     EvalR   WUW202 = '1';
     EvalR   TSTLST = '1';
           Endif; //< ACHT.
         Endif; //L.ST WAS ING
         If ZON6 = #1GWNB; //L.ST=REF.MND
           If WUR6R6 > DGLST; //DGN R6>DAG
             If #1GXNB = 0; //WKL-3100
         WUW252 = '1';                            L.STEMPEL
             ENDIF;
           ENDIF;
           If WUR5R5 > DGLST;
             If #1GXNB = 0; //WKL-3100
         WUW252 = '1';
             ENDIF;
           ENDIF;
         ENDIF; //END L.ST=REF
       ENDSR;
        //---------------------------------------------------------------
       BEGSR ROUTL2;
     EvalR   TSTLST = '0';            1
         If WUBZNN > 0; //L.ST IS ING.
           If ZON6 <> #1GWNB;
     EvalR   WUW202 = '1';
     EvalR   TSTLST = '1';
           Endif; //END < ACHT
         ELSE; //L.ST NT ING.
           If ZON6 <> #1GWNB;
     EvalR   WUW202 = '1';
     EvalR   TSTLST = '1';
           Endif; //< ACHT.
         Endif; //L.ST WAS ING
         If ZON6 = #1GWNB; //L.ST=REF.MND
           If WUR6R6 > DGLST; //DGN R6>DAG
             If #1GXNB = 0; //WKL-3100
         WUW252 = '1';                            L.STEMPEL
             ENDIF;
           ENDIF;
           If WUR5R5 > DGLST;
             If #1GXNB = 0; //WKL-3100
         WUW252 = '1';
             ENDIF;
           ENDIF;
         ENDIF; //END L.ST=REF
       ENDSR;
        //----------------------------------------------------------------
       /EJECT
       BEGSR SARVGN;
          //================================================================
          // Check Programma al actief - Programma Actief  *
          //================================================================
         W0RTN = *BLANK;             7
          // Define keylist
         //Program Act - J
         //Program Act - P
          // Setup key
         B8A7NN = ##JNO; //Program Act - J
         B8RACO = @CN(019);                         Program Act - P
          // Establish starting position
         CHAIN (B8A7NN:B8RACO) @B8CPAN ;
       *in90 = (%found() = *Off); //*
         If *IN90 = '1';
            // Data record not found
         W0RTN = 'USR3535';             7
            // USER: Processing if Data record not found
         WUBQCF = 'N';                         sw01
     C                   GOTO      SAEXIT
         ENDIF;

         If *IN90 = '0';
            // USER: Process Data record
         WUBQCF = 'Y';                         sw01
         ENDIF;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR SBRVGN;
          //================================================================
          // Fetch Niveau User/Toep - Toepassingen-Machtigingen  *
          //================================================================
         W0RTN = *BLANK;             7
          // Declare restrictor key work fields
     C     *LIKE         DEFINE    BVBLCD        WQSB01                         Gebruiker signo
     C     *LIKE         DEFINE    BVO1CO        WQSB02                         Toepassingen -
          // Define keylist
         //Gebruiker signo
         //Toepassingen -
          // Setup key
         WQSB01 = ##USR;                         Gebruiker signo
         WQSB02 = 'TB-';                         Toepassingen -
          // Establish starting position
         SETLL (WQSB01:WQSB02) @BVCPY2; //*
         READE (WQSB01:WQSB02) @BVCPY2; //*
         If *IN90 = '1';
            // Data record not found
         W0RTN = 'USR3479';             7
            // USER: Processing if Data record not found
           WUC1NG = *ZERO; //Macht.Uitleg -
     C                   GOTO      SBEXIT
         ENDIF;

         Dow *IN90 = '0';
            // USER: Process Data record
           WUC1NG = BVAKNN; //Macht.Uitleg -
           READE (WQSB01:WQSB02) @BVCPY2; //*
         ENDDO;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR SCRVGN;
          //================================================================
          // Check Documenten - Documenten BD meerdere  *
          //================================================================
         W0RTN = *BLANK;             7
          // Declare restrictor key work fields
     C     *LIKE         DEFINE    BEAACD        WQSC01                         Afdeling nr
     C     *LIKE         DEFINE    BEAFNB        WQSC02                         Lid nr
     C     *LIKE         DEFINE    BEY0CJ        WQSC03                         Doc BD meer bet
     C     *LIKE         DEFINE    BEQLDM        WQSC04                         Doc BD meer RM
     C     *LIKE         DEFINE    BEQMDM        WQSC05                         Doc BD meer IM
     C     *LIKE         DEFINE    BEY1CJ        WQSC06                         Doc BD meer toe
          // Define keylist
         //Afdeling nr
         //Lid nr
         //Doc BD meer bet
         //Doc BD meer RM
         //Doc BD meer IM
         //Doc BD meer toe
          // Setup key
         WQSC01 = #1AACD;                         Afdeling nr
         WQSC02 = #1AFNB;                         Lid nr
         WQSC03 = WUWUBE;                         Doc BD meer bet
         WQSC04 = #1GWNB; //Doc BD meer RM
         WQSC05 = WUZKNR; //Doc BD meer IM
         WQSC06 = @CN(034);                         Doc BD meer toe
          // Establish starting position
         SETLL (WQSC01:WQSC02:WQSC03:WQSC04:WQSC05:WQSC06) @BECPX3; //*
         READE (WQSC01:WQSC02:WQSC03:WQSC04:WQSC05:WQSC06) @BECPX3; //*
         If *IN90 = '1';
            // Data record not found
         W0RTN = 'USR6390';             7
            // USER: Processing if Data record not found
         YL0018 = 'N';                         WRK record foun
         YL0019 = *BLANK;                         Doc BD meer doc
     C                   GOTO      SCEXIT
         ENDIF;

         Dow *IN90 = '0';
            // USER: Process Data record
         YL0019 = BEW3TN;                         Doc BD meer doc
         YL0018 = 'Y';                         WRK record foun
           READE (WQSC01:WQSC02:WQSC03:WQSC04:WQSC05:WQSC06) @BECPX3; //*
         ENDDO;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR SDRVGN;
          //================================================================
          // Check Documenten - Documenten BD meerdere  *
          //================================================================
         W0RTN = *BLANK;             7
          // Declare restrictor key work fields
     C     *LIKE         DEFINE    BEAACD        WQSD01                         Afdeling nr
     C     *LIKE         DEFINE    BEAFNB        WQSD02                         Lid nr
     C     *LIKE         DEFINE    BEY0CJ        WQSD03                         Doc BD meer bet
     C     *LIKE         DEFINE    BEQLDM        WQSD04                         Doc BD meer RM
     C     *LIKE         DEFINE    BEQMDM        WQSD05                         Doc BD meer IM
     C     *LIKE         DEFINE    BEY1CJ        WQSD06                         Doc BD meer toe
          // Define keylist
         //Afdeling nr
         //Lid nr
         //Doc BD meer bet
         //Doc BD meer RM
         //Doc BD meer IM
         //Doc BD meer toe
          // Setup key
         WQSD01 = #1AACD;                         Afdeling nr
         WQSD02 = #1AFNB;                         Lid nr
         WQSD03 = WUWUBE;                         Doc BD meer bet
         WQSD04 = #1GWNB; //Doc BD meer RM
         WQSD05 = WUZKNR; //Doc BD meer IM
         WQSD06 = @CN(034);                         Doc BD meer toe
          // Establish starting position
         SETLL (WQSD01:WQSD02:WQSD03:WQSD04:WQSD05:WQSD06) @BECPX3; //*
         READE (WQSD01:WQSD02:WQSD03:WQSD04:WQSD05:WQSD06) @BECPX3; //*
         If *IN90 = '1';
            // Data record not found
         W0RTN = 'USR6390';             7
            // USER: Processing if Data record not found
         YL0018 = 'N';                         WRK record foun
         YL0019 = *BLANK;                         Doc BD meer doc
     C                   GOTO      SDEXIT
         ENDIF;

         Dow *IN90 = '0';
            // USER: Process Data record
         YL0019 = BEW3TN;                         Doc BD meer doc
         YL0018 = 'Y';                         WRK record foun
           READE (WQSD01:WQSD02:WQSD03:WQSD04:WQSD05:WQSD06) @BECPX3; //*
         ENDDO;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR SERVGN;
          //================================================================
          // Check Documenten - Documenten BD meerdere  *
          //================================================================
         W0RTN = *BLANK;             7
          // Declare restrictor key work fields
     C     *LIKE         DEFINE    BEAACD        WQSE01                         Afdeling nr
     C     *LIKE         DEFINE    BEAFNB        WQSE02                         Lid nr
     C     *LIKE         DEFINE    BEY0CJ        WQSE03                         Doc BD meer bet
     C     *LIKE         DEFINE    BEQLDM        WQSE04                         Doc BD meer RM
     C     *LIKE         DEFINE    BEQMDM        WQSE05                         Doc BD meer IM
     C     *LIKE         DEFINE    BEY1CJ        WQSE06                         Doc BD meer toe
          // Define keylist
         //Afdeling nr
         //Lid nr
         //Doc BD meer bet
         //Doc BD meer RM
         //Doc BD meer IM
         //Doc BD meer toe
          // Setup key
         WQSE01 = #1AACD;                         Afdeling nr
         WQSE02 = #1AFNB;                         Lid nr
         WQSE03 = WUWUBE;                         Doc BD meer bet
         WQSE04 = #1GWNB; //Doc BD meer RM
         WQSE05 = WUZKNR; //Doc BD meer IM
         WQSE06 = @CN(034);                         Doc BD meer toe
          // Establish starting position
         SETLL (WQSE01:WQSE02:WQSE03:WQSE04:WQSE05:WQSE06) @BECPX3; //*
         READE (WQSE01:WQSE02:WQSE03:WQSE04:WQSE05:WQSE06) @BECPX3; //*
         If *IN90 = '1';
            // Data record not found
         W0RTN = 'USR6390';             7
            // USER: Processing if Data record not found
         YL0018 = 'N';                         WRK record foun
         YL0019 = *BLANK;                         Doc BD meer doc
     C                   GOTO      SEEXIT
         ENDIF;

         Dow *IN90 = '0';
            // USER: Process Data record
         YL0019 = BEW3TN;                         Doc BD meer doc
         YL0018 = 'Y';                         WRK record foun
           READE (WQSE01:WQSE02:WQSE03:WQSE04:WQSE05:WQSE06) @BECPX3; //*
         ENDDO;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR SFRVGN;
          //================================================================
          // Fetch RM tem - Buitenlanders niet-gepens  *
          //================================================================
         W0RTN = *BLANK;             7
          // Define keylist
         //Afdeling nr
         //Lid nr
          // Setup key
         D0AACD = #1AACD;                         Afdeling nr
         D0AFNB = #1AFNB;                         Lid nr
          // Establish starting position
         CHAIN (D0AACD:D0AFNB) @D0REG5 ;
       *in90 = (%found() = *Off); //*
         If *IN90 = '1';
            // Data record not found
         W0RTN = 'USR7470';             7
            // USER: Processing if Data record not found
           WUI7NG = 190001; //Wrk RM TEM nbr
     C                   GOTO      SFEXIT
         ENDIF;

         If *IN90 = '0';
            // USER: Process Data record
           WUI7NG = D0VVDM; //Wrk RM TEM nbr
         ENDIF;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR SGRVGN;
          //================================================================
          // Check Documenten - Documenten BD meerdere  *
          //================================================================
         W0RTN = *BLANK;             7
          // Declare restrictor key work fields
     C     *LIKE         DEFINE    BEAACD        WQSG01                         Afdeling nr
     C     *LIKE         DEFINE    BEAFNB        WQSG02                         Lid nr
     C     *LIKE         DEFINE    BEY0CJ        WQSG03                         Doc BD meer bet
     C     *LIKE         DEFINE    BEQLDM        WQSG04                         Doc BD meer RM
     C     *LIKE         DEFINE    BEQMDM        WQSG05                         Doc BD meer IM
     C     *LIKE         DEFINE    BEY1CJ        WQSG06                         Doc BD meer toe
          // Define keylist
         //Afdeling nr
         //Lid nr
         //Doc BD meer bet
         //Doc BD meer RM
         //Doc BD meer IM
         //Doc BD meer toe
          // Setup key
         WQSG01 = #1AACD;                         Afdeling nr
         WQSG02 = #1AFNB;                         Lid nr
         WQSG03 = WUWUBE;                         Doc BD meer bet
         WQSG04 = #1GWNB; //Doc BD meer RM
         WQSG05 = WUZKNR; //Doc BD meer IM
         WQSG06 = @CN(034);                         Doc BD meer toe
          // Establish starting position
         SETLL (WQSG01:WQSG02:WQSG03:WQSG04:WQSG05:WQSG06) @BECPX3; //*
         READE (WQSG01:WQSG02:WQSG03:WQSG04:WQSG05:WQSG06) @BECPX3; //*
         If *IN90 = '1';
            // Data record not found
         W0RTN = 'USR6390';             7
            // USER: Processing if Data record not found
         YL0018 = 'N';                         WRK record foun
         YL0019 = *BLANK;                         Doc BD meer doc
     C                   GOTO      SGEXIT
         ENDIF;

         Dow *IN90 = '0';
            // USER: Process Data record
         YL0019 = BEW3TN;                         Doc BD meer doc
         YL0018 = 'Y';                         WRK record foun
           READE (WQSG01:WQSG02:WQSG03:WQSG04:WQSG05:WQSG06) @BECPX3; //*
         ENDDO;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR SHRVGN;
          //================================================================
          // Check Documenten - Documenten BD meerdere  *
          //================================================================
         W0RTN = *BLANK;             7
          // Declare restrictor key work fields
     C     *LIKE         DEFINE    BEAACD        WQSH01                         Afdeling nr
     C     *LIKE         DEFINE    BEAFNB        WQSH02                         Lid nr
     C     *LIKE         DEFINE    BEY0CJ        WQSH03                         Doc BD meer bet
     C     *LIKE         DEFINE    BEQLDM        WQSH04                         Doc BD meer RM
     C     *LIKE         DEFINE    BEQMDM        WQSH05                         Doc BD meer IM
     C     *LIKE         DEFINE    BEY1CJ        WQSH06                         Doc BD meer toe
          // Define keylist
         //Afdeling nr
         //Lid nr
         //Doc BD meer bet
         //Doc BD meer RM
         //Doc BD meer IM
         //Doc BD meer toe
          // Setup key
         WQSH01 = #1AACD;                         Afdeling nr
         WQSH02 = #1AFNB;                         Lid nr
         WQSH03 = WUWUBE;                         Doc BD meer bet
         WQSH04 = #1GWNB; //Doc BD meer RM
         WQSH05 = WUZKNR; //Doc BD meer IM
         WQSH06 = @CN(034);                         Doc BD meer toe
          // Establish starting position
         SETLL (WQSH01:WQSH02:WQSH03:WQSH04:WQSH05:WQSH06) @BECPX3; //*
         READE (WQSH01:WQSH02:WQSH03:WQSH04:WQSH05:WQSH06) @BECPX3; //*
         If *IN90 = '1';
            // Data record not found
         W0RTN = 'USR6390';             7
            // USER: Processing if Data record not found
         YL0018 = 'N';                         WRK record foun
         YL0019 = *BLANK;                         Doc BD meer doc
     C                   GOTO      SHEXIT
         ENDIF;

         Dow *IN90 = '0';
            // USER: Process Data record
         YL0019 = BEW3TN;                         Doc BD meer doc
         YL0018 = 'Y';                         WRK record foun
           READE (WQSH01:WQSH02:WQSH03:WQSH04:WQSH05:WQSH06) @BECPX3; //*
         ENDDO;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR SIRVGN;
          //================================================================
          // Check Documenten - Documenten BD meerdere  *
          //================================================================
         W0RTN = *BLANK;             7
          // Declare restrictor key work fields
     C     *LIKE         DEFINE    BEAACD        WQSI01                         Afdeling nr
     C     *LIKE         DEFINE    BEAFNB        WQSI02                         Lid nr
     C     *LIKE         DEFINE    BEY0CJ        WQSI03                         Doc BD meer bet
     C     *LIKE         DEFINE    BEQLDM        WQSI04                         Doc BD meer RM
     C     *LIKE         DEFINE    BEQMDM        WQSI05                         Doc BD meer IM
     C     *LIKE         DEFINE    BEY1CJ        WQSI06                         Doc BD meer toe
          // Define keylist
         //Afdeling nr
         //Lid nr
         //Doc BD meer bet
         //Doc BD meer RM
         //Doc BD meer IM
         //Doc BD meer toe
          // Setup key
         WQSI01 = #1AACD;                         Afdeling nr
         WQSI02 = #1AFNB;                         Lid nr
         WQSI03 = WUWUBE;                         Doc BD meer bet
         WQSI04 = #1GWNB; //Doc BD meer RM
         WQSI05 = WUZKNR; //Doc BD meer IM
         WQSI06 = @CN(034);                         Doc BD meer toe
          // Establish starting position
         SETLL (WQSI01:WQSI02:WQSI03:WQSI04:WQSI05:WQSI06) @BECPX3; //*
         READE (WQSI01:WQSI02:WQSI03:WQSI04:WQSI05:WQSI06) @BECPX3; //*
         If *IN90 = '1';
            // Data record not found
         W0RTN = 'USR6390';             7
            // USER: Processing if Data record not found
         YL0018 = 'N';                         WRK record foun
         YL0019 = *BLANK;                         Doc BD meer doc
     C                   GOTO      SIEXIT
         ENDIF;

         Dow *IN90 = '0';
            // USER: Process Data record
         YL0019 = BEW3TN;                         Doc BD meer doc
         YL0018 = 'Y';                         WRK record foun
           READE (WQSI01:WQSI02:WQSI03:WQSI04:WQSI05:WQSI06) @BECPX3; //*
         ENDDO;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR SJCRRC;
          //================================================================
          // Create Wkl betaling - Wkl betaling  *
          //================================================================
         W0RTN = *BLANK;             7
          // Move all fields to @CACPGK
         CAAACD = #1AACD;                         Afdeling nr
         CAAFNB = #1AFNB;                         Lid nr
         CAGWNB = #1GWNB; //Datum achtersta
         CACLCD = #1CLCD;                         Kateg kode
         CAE9NB = #1E9NB; //Kateg jjmm
         CAARNB = #1ARNB;                         Taal kode
         CAEGCD = #1EGCD;                         C12 reden kode
         CAN8CE = #1N8CE;                         Wkl bet. zone
         CAN9CE = #1N9CE;                         Wkl bet. gewest
         CAGGNB = #1GGNB; //VD5
         CAGHNB = #1GHNB; //HD5
         CAGINB = #1GINB; //Uren ged.wkl.
         CAISCD = #1ISCD;                         Geen uren ged.
         CAGJNB = #1GJNB; //Y
         CAGKNB = #1GKNB; //Yft
         CAGRNB = #1GRNB; //VW
         CAGSNB = #1GSNB; //Min
         CAGTNB = #1GTNB; //Z+A
         CAGUNB = #1GUNB; //C3.2
         CAJJNB = #1JJNB; //Volle BZ C3.2
         CAJKNB = #1JKNB; //Halve BZ C3.2
         CAGVNB = #1GVNB; //Uren BV
         CAGLNB = #1GLNB; //VD6
         CAGMNB = #1GMNB; //HD6
         CAGNNB = #1GNNB; //Volle dagen ver
         CAJLNB = #1JLNB; //Halve dagen ver
         CAGONB = #1GONB; //Volle dagen vor
         CAJMNB = #1JMNB; //Halve dagen vor
         CAGPNB = #1GPNB; //Volle dagen BZ
         CAJNNB = #1JNNB; //Halve dagen BZ
         CAMINB = #1MINB; //Volle dagen BZ2
         CAMJNB = #1MJNB; //Halve dagen BZ2
         CAG7NB = #1G7NB; //Volle dagen BV
         CAJONB = #1JONB; //Halve dagen BV
         CAGXNB = #1GXNB; //Dagen kbf sankt
         CAHPNB = #1HPNB; //Bedrag wkl
         CABDST = #1BDST;                         Geen bedrag wkl
         CAGYNB = #1GYNB; //Bedrag BZ
         CABCST = #1BCST;                         Geen dagen/bedr
         CAHCNB = #1HCNB; //Taks
         CAJQNB = #1JQNB; //X2
         CAJRNB = #1JRNB; //RWP
         CALPNB = #1LPNB; //BC aantal
         CALQNB = #1LQNB; //BC bedrag
         CAT4NB = #1T4NB; //Taks wkl
         CAT5NB = #1T5NB; //Taks BZ
         CAGQNB = #1GQNB; //Netto
         CAT6NB = #1T6NB; //Netto wkl
         CAT7NB = #1T7NB; //Netto BZ
         CADVCD = #1DVCD;                         Afh1 kode
         CAGZNB = #1GZNB; //Afh1 bedrag
         CAG0NB = #1G0NB; //Afh1 datum
         CAOYCD = #1OYCD;                         Afh1 kode TV
         CAO5CD = #1O5CD;                         Afh1 laatste ma
         CADWCD = #1DWCD;                         Afh2 kode
         CAG1NB = #1G1NB; //Afh2 bedrag
         CAG2NB = #1G2NB; //Afh2 datum
         CAOZCD = #1OZCD;                         Afh2 kode TV
         CAO6CD = #1O6CD;                         Afh2 laatste ma
         CADXCD = #1DXCD;                         Afh3 kode
         CAG3NB = #1G3NB; //Afh3 bedrag
         CAG4NB = #1G4NB; //Afh3 datum
         CAO0CD = #1O0CD;                         Afh3 kode TV
         CAO7CD = #1O7CD;                         Afh3 laatste ma
         CADYCD = #1DYCD;                         Afh4 kode
         CAG5NB = #1G5NB; //Afh4 bedrag
         CAG6NB = #1G6NB; //Afh4 datum
         CAO1CD = #1O1CD;                         Afh4 kode TV
         CAO8CD = #1O8CD;                         Afh4 laatste ma
         CAEDCD = #1EDCD;                         Afh5 kode
         CAHDNB = #1HDNB; //Afh5 bedrag
         CAHENB = #1HENB; //Afh5 datum
         CAO2CD = #1O2CD;                         Afh5 kode TV
         CAO9CD = #1O9CD;                         Afh5 laatste ma
         CAEECD = #1EECD;                         Afh6 kode
         CAHFNB = #1HFNB; //Afh6 bedrag
         CAHGNB = #1HGNB; //Afh6 datum
         CAO3CD = #1O3CD;                         Afh6 kode TV
         CAPACD = #1PACD;                         Afh6 laatste ma
         CAHJNB = #1HJNB; //DOK periode
         CAWUCD = #1WUCD;                         DOK kategorie
         CAIYNB = #1IYNB; //BZ1 dagen
         CAJHNB = #1JHNB; //BZ1 bedrag
         CAL0CD = #1L0CD;                         BZ1 kode
         CAIZNB = #1IZNB; //BZ2 dagen
         CAJGNB = #1JGNB; //BZ2 bedrag
         CAL8CD = #1L8CD;                         BZ2 kode
         CAI0NB = #1I0NB; //BZ3 dagen
         CAJFNB = #1JFNB; //BZ3 bedrag
         CAL9CD = #1L9CD;                         BZ3 kode
         CAI1NB = #1I1NB; //BZ4 dagen
         CAJENB = #1JENB; //BZ4 bedrag
         CAL1CD = #1L1CD;                         BZ4 kode
         CAI2NB = #1I2NB; //BZ5 dagen
         CAI8NB = #1I8NB; //BZ5 bedrag
         CAL2CD = #1L2CD;                         BZ5 kode
         CAA7ST = #1A7ST;                         Zone vorig bare
         CAKBCD = #1KBCD;                         Zone vorig bare
         CAKCCD = #1KCCD;                         Zone vorig bare
         CAKDCD = #1KDCD;                         Zone vorig bare
         CAKECD = #1KECD;                         Zone vorig bare
         CAA5DM = #1A5DM; //RVA indieningsm
         CALONB = #1LONB; //RVA UI-afdeling
         CABIST = #1BIST;                         RVA type C10
         CAMCCD = #1MCCD;                         RVA Gewestelijk
         CAMNCD = #1MNCD; //RVA identificat
         CAMDCD = #1MDCD;                         Nr betaler
         CAMBCD = #1MBCD;                         Type werklooshe
         CAMECD = #1MECD;                         Kode beroep
         CARQCD = #1RQCD;                         Kode subberoep
         CAMFCD = #1MFCD;                         Barema
         CAMGCD = #1MGCD; //Complement
         CAMOCD = #1MOCD;                         Kode BZ
         CAT5CD = #1T5CD;                         Wkl adres opdra
         CAT6CD = #1T6CD;                         Wkl postnr opdr
         CAT7CD = #1T7CD;                         Wkl lokaliteit
         CAT8CD = #1T8CD;                         Wkl taal opdrac
         CAMICD = #1MICD;                         Wkl naam beguns
         CAMJCD = #1MJCD;                         Wkl adres begun
         CAMKCD = #1MKCD;                         Wkl postnr begu
         CAVCCD = #1VCCD;                         Wkl post subkod
         CAMLCD = #1MLCD;                         Wkl lokaliteit
         CAMMCD = #1MMCD; //Wkl banknr begu
         CAMUCD = #1MUCD;                         Wkl taalkode be
         CAV6CD = #1V6CD;                         Wkl bankkode
         CALJNB = #1LJNB; //Wkl INDIR-indie
         CALKNB = #1LKNB; //Wkl INDIR-UI-af
         CAM4CD = #1M4CD;                         Wkl INDIR-type
         CALLNB = #1LLNB; //Wkl INDIR-GWB-n
         CALMNB = #1LMNB; //Wkl INDIR-ident
         CALNNB = #1LNNB; //Wkl INDIR-maand
         CAAKDD = #1AKDD; //Wkl datum laats
         CABANR = #1BANR; //Wkl Yuur
         CABBNR = #1BBNR; //Wkl n-verg. n-g
         CABKCE = #1BKCE;                         Wie heeft wklh
         CABLCE = #1BLCE;                         Wie heeft BZ be
         CABMCE = #1BMCE;                         Verlof 6 dagen
         CABNCE = #1BNCE;                         Verlof 6 dagen
         CABOCE = #1BOCE;                         Wkl vorstzone
         CABCNR = #1BCNR; //Wkl inhoudingsp
         CABDNR = #1BDNR; //Wkl dagbedrag
         CABENR = #1BENR; //Wkl gemiddeld m
         CABFNR = #1BFNR; //Wkl Q
         CABGNR = #1BGNR; //Wkl S
         CABPCE = #1BPCE;                         Wkl verif.05/98
         CABQCE = #1BQCE;                         Wkl C10bis
         CABRCE = #1BRCE;                         Wkl vergoedbaar
         CABSCE = #1BSCE;                         Wkl toelaatbaar
         CAM7DD = #1M7DD; //Wkl datum begin
         CAM8DD = #1M8DD; //Wkl laatst verg
         CAM9DD = #1M9DD; //Wkl laatst geco
         CABTCE = #1BTCE;                         Wkl sanctiecode
         CANADD = #1NADD; //Wkl begindatum
         CANBDD = #1NBDD; //Wkl einddatum s
         CABUCE = #1BUCE;                         Wkl sanctiecode
         CANCDD = #1NCDD; //Wkl begindatum
         CANDDD = #1NDDD; //Wkl einddatum s
         CAPICD = #1PICD;                         Wkl add-user
         CAASDD = #1ASDD; //Wkl add-datum
         CAALTM = #1ALTM; //Wkl add-time
         CACA01 = #1CA01;                         Wkl bet betaald
         CAY4NB = #1Y4NB; //Wkl bet Uitv.da
         CAFXNR = #1FXNR; //Wkl bet NBR vri
         CAFYNR = #1FYNR; //Wkl bet NBR vri
         CAFZNR = #1FZNR; //Wkl bet NBR vri
         CAF0NR = #1F0NR; //Wkl bet NBR vri
         CAF1NR = #1F1NR; //Wkl bet NBR vri
         CAMOCE = #1MOCE;                         Wkl bet CDE vri
         CAMPCE = #1MPCE;                         Wkl bet CDE vri
         CAMQCE = #1MQCE;                         Wkl bet CDE vri
         CAMRCE = #1MRCE;                         Wkl bet CDE vri
         CAIVDM = #1IVDM; //Wkl bet DTM vri
         CAIWDM = #1IWDM; //Wkl bet DTM vri
         CAPWDD = #1PWDD; //Wkl bet DTD vri
         CAPXDD = #1PXDD; //Wkl bet DTD vri
         CAGDCE = #1GDCE;                         Wkl betaling BE

          // USER: Processing before Data update
          // Opvul zones na betaling - Wkl bet  *
     EvalR   CAGXNB = XXKBF;                         KBF SANKTIE
     EvalR   CABBNR = XXNTV;                         DGN NT VERGOEDBR
     EvalR   CAGLNB = HVD6;                         VD6
     EvalR   CAGMNB = HHD6;                         HD6
     EvalR   CAGGNB = HVD5;                         VD5
     EvalR   CAGHNB = HHD5;                         HD5
     EvalR   CAGINB = HUREN;                         UREN P GED W
     EvalR   CAGPNB = HVBZ;                         VBZ
     EvalR   CAJNNB = HHBZ;                         HBZ
         CAMINB = 0; //VBZ2
         CAMJNB = 0; //HBZ2
         If HVBZ1B > 0 OR HHBZ1B > 0 OR HVBZ2B > 0 OR HHBZ2B > 0;
     EvalR   CAGPNB = HVBZ1B;                         VBZ
     EvalR   CAJNNB = HHBZ1B;                         HBZ
     EvalR   CAMINB = HVBZ2B;                         VBZ
     EvalR   CAMJNB = HHBZ2B;                         HBZ
         ENDIF;
     EvalR   CAGONB = HVVOR;                         VVORST
     EvalR   CAJMNB = HHVOR;                         HVORST
     EvalR   CAGNNB = HVVERL;                         VVERLOF
     EvalR   CAJLNB = HHVERL;                         HVERLOF
     EvalR   CAG7NB = HVBV;                         VBVERLOF
     EvalR   CAJONB = HHBV;                         HBVERLOF
     EvalR   CAHPNB = HWKL;                         WKLH
     EvalR   CAGYNB = HBEDBZ;                         BEDR BZ
     EvalR   CAHCNB = HTAKS;                         TAKS
     EvalR   CAT4NB = HTAKSW;                         TAKS WKL
     EvalR   CAT5NB = HTAKSB;                         TAKS BZ
     EvalR   CAJRNB = RWP;                         RWP
     EvalR   CAJQNB = HX2;                         X2 BEDRAG
     EvalR   CALQNB = HBEDBC;                         BC BEDRAG
     EvalR   CAGJNB = HY;                         Y
         If HYFT <> 1;
     EvalR   CAGKNB = HYFT;                         YFT
         ELSE;
     EvalR   CAGKNB = 0;
         Endif;
     EvalR   CAGVNB = HUBV;                         UREN BET VER
     EvalR   CAGRNB = HVW;                         VW
     EvalR   CAGSNB = HMIN;                         MIN
     EvalR   CAGTNB = HZA;                         Z+A
     EvalR   CAGUNB = HC32;                         C3.2
          //----------------------------------------------------------------
         R6MX = 0;
         R5MX = 0;
         LST = 0; //L.STEMPEL
     EvalR   C = #1GWNB;                 2 0
         PERLST = #1AKDD;            6 0          199702
         If PERLST <= #1GWNB; //LST<REF.MND
         USRP6 = ##USR;
           If ##USR <> 'RVDS    ' AND WUDTCC <> 'BYPAS';
             If WUR6R6 > 0;
               *In50 = (%Lookup(#1GWNB:JJH:C) > 0);
     C  N50              GOTO      C1VERA
         R6MX = D6H(C);              2 0
               If WUR6R6 = R6MX; //MAXR6
         CAAKDD = #1GWNB;
         LST = MAH(C);               2 0
     EvalR   CAAKDD = LST;
               Endif; //END R6H,X
     C     C1VERA        TAG
               *In50 = (%Lookup(#1GWNB:JJV:C) > 0);
     C  N50              GOTO      C1VERB
         R6MX = D6V(C);              2 0
               If WUR6R6 = R6MX; //MAXR6
         CAAKDD = #1GWNB;
         LST = MAV(C);               2 0
     EvalR   CAAKDD = LST;
               Endif; //END R6V,X
     C     C1VERB        TAG
               *In50 = (%Lookup(#1GWNB:JJK:C) > 0);
     C  N50              GOTO      GNTST1
         R6MX = D6K(C);              2 0
               If WUR6R6 = R6MX; //MAXR6
         CAAKDD = #1GWNB;
         LST = MAK(C);               2 0
     EvalR   CAAKDD = LST;
               Endif; //END R6K,X
             Endif; //R6>0
             If WUR5R5 > 0;
               *In50 = (%Lookup(#1GWNB:JJH:C) > 0);
     C  N50              GOTO      C1VERC
     EvalR   R5MX = D6H(C);              2 0
               If WUR5R5 = R5MX; //MAXR5
         CAAKDD = #1GWNB;
     EvalR   LST = MAH(C);               2 0
     EvalR   CAAKDD = LST;
               Endif;
     C     C1VERC        TAG
               *In50 = (%Lookup(#1GWNB:JJV:C) > 0);
     C  N50              GOTO      C1VERD
     EvalR   R5MX = D6V(C);              2 0
               If WUR5R5 = R5MX; //MAXR5
         CAAKDD = #1GWNB;
     EvalR   LST = MAV(C);               2 0
     EvalR   CAAKDD = LST;
               Endif;
     C     C1VERD        TAG
               *In50 = (%Lookup(#1GWNB:JJK:C) > 0);
     C  N50              GOTO      GNTST1
     EvalR   R5MX = D6K(C);              2 0
               If WUR5R5 = R5MX; //MAXR5
         CAAKDD = #1GWNB;
     EvalR   LST = MAK(C);               2 0
     EvalR   CAAKDD = LST;
               Endif;
             Endif; //R5>0
             #1AKDD = CAAKDD;
           Endif; //END RVDS/BYPAS
         Endif; //L.ST<REF.MD
     C     GNTST1        TAG
          //OPV. ZONE DAGBDRG:OFWEL VOLLE DAGBDRG HVBAR/OFWEL HALVE DAGBDAG VR DEELTI
         TYPCON = 'N';
         If #1A1CD = '03' OR #1A1CD = '04' OR #1A1CD = '10' OR #1A1CD = '14' OR #1A1CD = '17' OR #1A1CD = '34' OR #1A1CD = '35' OR #1A1CD = '36' OR #1A1CD = '37' OR #1A1CD = '38' OR #1A1CD = '39' OR #1A1CD = '40' OR #1A1CD = '58';
         TYPCON = 'Y';
         ENDIF;
         If #1DDNB = 0; //DAGBDRG=0
           If TYPCON = 'Y';
             CABDNR = HHBAR;
           ELSE; //NT 03,04,...
             CABDNR = HVBAR;
           ENDIF; //03,04,10,...
         ELSE; //DAGBDRG ING.
           If TYPCON = 'Y';
              //          #1DDNB    DIV  2         CABDNR  WKL-1193
             CABDNR = #1DDNB;
           ELSE;
             CABDNR = #1DDNB;
           ENDIF; //03,10,14,17
           If #1A1CD = '15';
             CABDNR = HVBAR;
           ENDIF; //15
         ENDIF;
          //----------------------------------------------------------------
          // DAGTOESLAG TYPE 05 OPVULLEN IN GEMIDDELD MAANDBEDRAG VAN TYPE 09/10/18
         If #1GWNB <= 200506;
           If #1A1CD = '05' OR #1A1CD = '57' OR #1A1CD = '58';
             CABENR = DAGT; //GEM.MNDBDRG
           ELSE; //TYPE 09/10
             CABENR = 0; //WORDT LATER
           ENDIF; //OPGEVULD
         ELSE; // VANAF 200507
           If #1A1CD = '05'; //DAGTOESLAG IN
             CABENR = WUZUNM; //GEM.MNDBDRG
           ENDIF;
           If #1A1CD = '57' OR #1A1CD = '58'; //UURTOESLAG IN
             CABENR = WUZTNM; //GEM.MNDBDRG
           ENDIF;
         ENDIF; // 200506
          // TYPE 27 + REM ==> A WEGSCHRIJVEN IN UREN P IPV Y/N ANDERS Y/N
         If WULECF = 'A';
         CAISCD = 'A';
         ELSE;
         CAISCD = #1ISCD;
         ENDIF;
          // Opvullen zones dagbestand - Wkl bet  *
     C                   MOVEA     *IN(50)       UWIN              1
         CAMICD = #1AMTX;                         LID NAAM
         CAMJCD = #1ADNA;                         LID ADRES
         CAMKCD = #1ADCD;                         LID POST
         CAVCCD = #1TRCD;                         LID POSTSUBK
         CAMLCD = #1ABTX;                         LID LOKALIT
     EvalR   CAMUCD = #1AZCD;                         LID TAALKODE
     EvalR   CAA5DM = BYEENB;                         RVA IND.MND
         If #1GWNB >= 199901; //REF.MND
     EvalR   CALONB = #1KZNB;                         RVA UI-AFD.
         ELSE;
         CALONB = WUUKCE;                         RVA VORIG UI
         ENDIF;
          // FUSIES SINT TRUIDEN GENK EN  WESTVLAANDEREN
         If #1GWNB >= 200701;
           If #1AACD = '44';
         CALONB = '4711';
           ENDIF;
           If #1AACD = '37' OR #1AACD = '07';
         CALONB = '4342';
           ENDIF;
         ENDIF;
         If #1GWNB <= 200612;
           If #1AACD = '44';
         CALONB = '4712';
           ENDIF;
           If #1AACD = '37' OR #1AACD = '07';
         CALONB = '4310';
           ENDIF;
         ENDIF;
          // FUSIE VL ARDENNEN BIJ AALST-NINOVE
          //          #1GWNB    IFGE 201701
          //          #1AACD    IFEQ '52'
          //          #1AACD    OREQ '59'
          //                    MOVEL'4412'    CALONB
          //                    ENDIF
          //                    ENDIF
          //          #1GWNB    IFLE 201612
          //          #1AACD    IFEQ '52'
          //          #1AACD    OREQ '59'
          //                    MOVEL'4452'    CALONB
          //                    ENDIF
          //                    ENDIF

     EvalR   CAMCCD = #1A2CD;                         RVA GWB
         If WUCC18 = '18';
         CAMBCD = '18';                         TYPE WKLH
         ELSE; //NT 18
           If WUCC18 = '04';
         CAMBCD = '04';                         TYPE WKLH
           ELSE;
             If WUMT08 = *BLANK; //ACTIVERING
     EvalR   CAMBCD = #1A1CD;                         TYPE WKLH
             ELSE;
     EvalR   CAMBCD = WUMT08;                         TYPE WKLH
             ENDIF; //WUMT08
           Endif; //END 14
         Endif; //END 18
         If #1A1CD = '00';
            //          WUW1CK    IFNE '00'
            //                    MOVELWUW1CK    CAMBCD
            //                    ENDIF
           If WUVTCK = 'Y' OR WUVTCK = 'V'; //VERG ART GN RECHT
         CAMBCD = OUTYPE;
           ENDIF;
         ENDIF; //END 00
     EvalR   CAMDCD = #1MDCD;                         VOLGNR ACTIV. GI/GK
     EvalR   CAMECD = #1BACD;                         KODE BEROEP
     EvalR   CAMFCD = #1DOCD;                         BAREMA RVA
         If #1A1CD = '00';
           If WUVTCK = 'Y' OR WUVTCK = 'V'; //VERG ART GN RECHT
         CAMFCD = OUBARE;
           ENDIF;
         ENDIF; //END 00
         If #1A1CD = '21' OR #1A1CD = '22';
           If WUDXCC = 'A' OR WUDXCC = 'B' OR WUDXCC = 'C' OR WUDXCC = 'D' OR WUDXCC = 'E' OR WUDXCC = 'F';
     EvalR   CAMFCD = WUDXCC;
           ENDIF;
         ENDIF;
     EvalR   CAMGCD = #1F5NB;                         COMPL BAREMA
         If #1A1CD = '00' OR #1A1CD = '70' OR #1A1CD = '71' OR #1A1CD = '72' OR #1A1CD = '73' OR #1A1CD = '97';
         CAMOCD = *BLANK;                         GN BZ
         ELSE;
     EvalR   CAMOCD = #1A4CD;                         KODE BZ
         ENDIF;
         If #1A1CD = '00';
           If OUINON = 'Y';
              // BOUWVAKKER
     EvalR   CAMOCD = #1A4CD;                         KODE BZ
           ENDIF;
         ENDIF;
         If #1A1CD = 'B.' OR #1A1CD = 'C.' OR #1A1CD = 'D.' OR #1A1CD = 'A.' OR #1A1CD = 'CA' OR #1A1CD = 'E.' OR #1A1CD = 'F.' OR #1A1CD = 'G.' OR #1A1CD = 'GI' OR #1A1CD = 'GK' OR #1A1CD = '29' OR #1A1CD = '26' OR #1A1CD = '50' OR #1A1CD = '51' OR #1A1CD = '52' OR #1A1CD = '53' OR #1A1CD = '54' OR #1A1CD = '55';
         CAMOCD = *BLANK;                         GN BZKODE
         ENDIF;
         CAWUCD = #1A3NB;                         DOK KATEG.
         CACA01 = BYOPNB;                         BETAALDAG
         CAY4NB = BYEDNB; //UITV DAT BNK
         If #1AJNB <> '00000'; //2DE DL PENSN
     EvalR   DL1 = #1AINB;               4
         CAMNCD = DL1;                         IDENTIF. NR
     EvalR   CAMNCD = #1AJNB;
         ELSE; //2DE PENS=0
         JRRRNR = #1AKNB;            2
     EvalR   MMDD = #1AKNB;              4            OPZOEKEN MND
     EvalR   DGRRNR = #1AKNB;            2
         MMRR = MMDD;              2 0          MND GEVONDEN
           If MMRR <= 12;
             MMRR = MMRR + 80;
     EvalR   MMRRNR = MMRR;            2
         R1 = MMRRNR;                4
     EvalR   R1 = DGRRNR;                4
     EvalR   R11 = R1;               6
         R11 = JRRRNR;               6
         CAMNCD = R11;
     EvalR   CAMNCD = #1FGNB;
           ELSE; //DUS KRUISPTN
         CAMNCD = #1AKNB;
     EvalR   CAMNCD = #1FGNB;
           Endif; //END MND<=12
         Endif; //2DE PENS=0
         If #1ARCD = 'N'; //WKL REK=N
         TOEP = '001';              3
         ELSE;
         TOEP = '002';
         ENDIF;
         EXSR OPHIBA;
         If IBATER = *BLANK; //1DE DL REK
         CAMMCD = '99000000';
     EvalR   CAMMCD = '0065';
         ELSE;
         IBAP12 = IBATER;            2
           If IBAP12 <> 'BE'; //1DE DL REK
         CAMMCD = '00000000';
     EvalR   CAMMCD = '0000';
           ELSE;
             If #1ARCD = 'N'; //WKL REK=N
     EvalR   ACHTER = #1FNNB;            9            DL3 REKNR
         ACHTER = #1FMNB;            9            DL2 REKNR
     EvalR   CAMMCD = ACHTER;
         CAMMCD = #1BRNB;                         DL1 REKNR
             ELSE;
     EvalR   ACHTER = #1F7NB;            9            DL3 WKLREKNR
         ACHTER = #1F6NB;            9            DL2 WKLREKNR
     EvalR   CAMMCD = ACHTER;
         CAMMCD = #1C8NB;                         DL1 WKLREKNR
             ENDIF; //ENDIF N
           Endif; //ENDIF <> BE
         Endif; //ENDIF BLANK
          // OPVULLEN WKL BANKKODE
         REKD1 = CAMMCD;             3
         CHAIN REKD1 @C8REKG ;
       *in50 = (%found() = *Off); //CHAIN BBL
     C  N50              MOVEL     'B'           CAV6CD                         BANKKODE-BBL
         If NOT *In50;
           If CAMMCD = 0;
         Endif;
         CAV6CD = 'G';                         BANKKODE-GEN
         ENDIF;
     C   50              MOVEL     'G'           CAV6CD                         BANKKODE-GEN
          // OPHALEN IBANREKENINGNR EN BIC CODE
         RMPAR = #1GWNB;
          // BEPALEN TYPE C10
         MDIBABET(#1AACD:#1AFNB:RMPAR:IBANNR:BICCDE:BYOPNB);
         //BEROEP
         //AFDELING
         //SUBBEROEP
         //TYPE WKLH
         //BAREMA
         //TYPE C10 1 POSITIE
         //TYPE C10BIS 2 POSITI
          //ATOMA
         MDC10N(#1BACD:#1AACD:#1BCCD:#1A1CD:#1DOCD:CABIST:CABQCE);
           If #1A1CD = '09' OR #1A1CD = '10';
         CABPCE = #1ATCE;                         KAART=Y/N/BLANK
         Endif;
          //WKL-3670 OOK VOOR VW WEGSCHRIJVEN
         If #1A1CD = '01' OR #1A1CD = '03' OR #1A1CD = '08' OR #1A1CD = '11' OR #1A1CD = '31';
            //*                   MOVEL#1ATCE    CABPCE           KAART=Y/N/BLANK
         Endif;
          // OPVULLEN ADRES, POSTNR, LOKALITEIT, TAALK. OPDRACHTGEVER
         If #1AACD = '08';
         CAT8CD = CAMUCD;                         MOVE TLK.LID
           If CAT8CD = '2';
         CAT5CD = BYV9CD;
         CAT7CD = BYWACD;
           Endif;
         ELSE;
         CAT8CD = AAARNB;                         MOVE TLK.AFD
         Endif;
          // BEG.WKL. VNF 1/5/94 EN TYPE 09,10 : OPV ZONES DAGBDRG/GEMIDDELD MAANDBDR
         If #1AKDT >= 19940501;
           If #1A1CD = '09' OR #1A1CD = '10' OR #1A1CD = '18';
              //TYPE 09/10/18:VERMINDEREN VAN DAGBDRG(=HVBARB) ADHV VERMINDERINGS% + BERE
              //KENEN GEMIDDELD MAANDBDRG(AAN WERKGVR MEEDELEN):26XDAGBEDRG V D VERMINDER
              //(VOOR TYPE 10):4,33XWEEKREGIMEXDAGBEDRAG V D  VERMINDERING
              //+ TOEVOEGEN IN  HISTORIEK  "OV WERKL BP VERMINDERING"
             If #1GWNB >= 201004;
               WUG5NR = 0;
               CABCNR = 0;
             ENDIF;
             If #1A1CD = '09' OR #1A1CD = '18'; //TYPE WKLH
               XINBP4 = HVBARB * WUG5NR; //DAGB.X VERM%
               XINBP4 = XINBP4 / 100;
               XINBP2 = XINBP4;
               If BYEURO = 'B';
     EvalR   XINBP2 = '00';
               ENDIF;
               XINBP = HVBARB - XINBP2;
     EvalR   DECBPX = XINBP;            4 0
     EvalR   DECBPE = XINBP;            2 0
               If BYEURO = 'B';
     C     INHBEF        TAG
                 If DECBPX >= 5000; //NR BOVEN AFR
                   HVBARX = XINBP + 1;
                 ELSE;
                   HVBARX = XINBP;
                 ENDIF; //DECBP
     EvalR   HVBARX = '00';                         NULLEN NA KO
               ELSE; //EURO
                 If CAGWNB <= 200111;
     C                   GOTO      INHBEF
                 ENDIF;
                 If DECBPE >= 50;
                   HVBARX = XINBP + 0.01;
                 ELSE;
                   HVBARX = XINBP;
                 ENDIF; //DECBPE
               ENDIF; //BFR/EURO

               DAGXIN = HVBARB - HVBARX; //DAGBEDR VERM
               CABENR = DAGXIN * 26; //GEM. MNDBEDR
               CABDNR = HVBAR; //DAGBEDR. VD
               If #1DDNB > 0;
                 CABDNR = #1DDNB; //DAGBEDR. VD
               ENDIF;
                //                    ENDIF
             ELSE;
               If #1A1CD = '10';
                 XINBP4 = HHBARB * WUG5NR;
                 XINBP4 = XINBP4 / 100;
                 XINBP2 = XINBP4;
                 If BYEURO = 'B';
     EvalR   XINBP2 = '00';
                 ENDIF;
                 XINBP = HHBARB - XINBP2;
     EvalR   DECBPX = XINBP;            4 0
     EvalR   DECBPE = XINBP;            2 0
                 If BYEURO = 'B';
     C     I10BEF        TAG
                   If DECBPX >= 5000;
                     HHBARX = XINBP + 1;
                   ELSE;
                     HHBARX = XINBP;
                   ENDIF;
     EvalR   HHBARX = '00';
                 ELSE; //EURO
                   If CAGWNB <= 200111;
     C                   GOTO      I10BEF
                   ENDIF;
                   If DECBPE >= 50;
                     HHBARX = XINBP + 0.01;
                   ELSE;
                     HHBARX = XINBP;
                   ENDIF;
                 ENDIF; //BFR/EURO
                 DAGXIN = HHBARB - HHBARX; //DAGBEDR VERM
                 CABENR = DAGXIN * WKREG;
                 CABENR = CABENR * 4.33;
                 If BYEURO = 'B' OR CAGWNB <= 200111;
     EvalR   CABENR = '00';
                 ENDIF;
                 CABDNR = HHBAR; //DAGBEDR. HD
                 If #1DDNB > 0;
                    //          #1DDNB    DIV  2         CABDNR           DAGBEDR. VD
                   CABDNR = #1DDNB; //DAGBEDR. VD
                 ENDIF;
                  //                    ENDIF
               ENDIF; //TYPE 10
             ENDIF; //TYPE 09,18
           ENDIF; //09,10,18
         ENDIF; //19940501
         If #1A1CD = '09' OR #1A1CD = '10' OR #1A1CD = '18';
           If BZINH > 0;
             CABENR = BZINH;
           ENDIF;
           If #1A4CD = 'NA' OR #1A4CD = 'DA' OR #1A4CD = '29' OR #1A4CD = '79';
             If CAMQCE = *BLANK;
         CAMQCE = '000';
             ENDIF;
           ENDIF;
         ENDIF;
          // TYPE 01/03/08 : CONTROLEKAART=N & VELD BETAALDOSSIER NT INGEVULD & LID
          // VOLDOET AAN DE VOORWAARDEN VAN VRIJST89&1 OF89,2 DAN VELD BETAALDOSSIER
          // OPVULLEN MET 99 = GEEN BETAALDOCUMENT. SR259=TYPE 15 OOK
         If #1A1CD = '01' OR #1A1CD = '03' OR #1A1CD = '08' OR #1A1CD = '15';
           If WUPZCF = '1'; //SWITCH GEEN CONTROLE
             If #1ATCE = 'N' OR #1ATCE = ' '; //CONTROLEKAART=N
               If #1MPCE = *BLANK;
         CAMPCE = '99';
               ENDIF;
             ENDIF; //CONTROLEKAART=N
           ENDIF; //GEEN CONTROLEKAART
           If WUPZCF = '2'; //SWITCH GEEN CONTROLE
             If #1ATCE = 'N'; //CONTROLEKAART=N
                //          #1ATCE    OREQ ' '                        CONTROLEKAART=N
               If #1MPCE = *BLANK;
         CAMPCE = '99';
               ENDIF;
             ENDIF; //CONTROLEKAART=N
           ENDIF; //GEEN CONTROLEKAART
         ENDIF; //TYPE 01,03,08
         CAMGCD = 99;
         If #1A5CD = '126' AND #1ATST = 'Y';
           CAMGCD = 30;
         ENDIF;
         If #1A5CD = '126' AND #1ATST = ' ';
           CAMGCD = 10;
         ENDIF;
         If #1A5CD = '   ' AND #1ATST = 'Y';
           CAMGCD = 20;
         ENDIF;
     C                   MOVEA     UWIN          *IN(50)
          // Update div.vldn na bet. 2 - Wkl betaling  *
     C                   MOVEA     *IN(50)       UWIN              1
         BYAANT = 0;
         //AFD
         //LIDNR
         CHAIN (#1AACD:#1AFNB) @AHCPAM ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDLID
         AHTNCD = BYOPNB;                         LID RVA-LOCK
         If CAJQNB > 0 OR CALQNB > 0; //X2 > 0
         CZAACD = #1AACD;                         BC-X2 AFD.NR
         CZAFNB = #1AFNB;                         BC-X2 LIDNR.
     EvalR   AHQJCD = '*';                         BIJDR-LOCK
         CZCZ01 = BYOPNB;                         BC-X2 BETDAG
         BYJR = AHAEDD;              4 0          DATUM L.BYDR
     EvalR   BYMD = AHAEDD;              2 0
         BYJRX2 = AHAEDD;            4 0          DATUM L.BYDR
     EvalR   BYMDX2 = AHAEDD;            2 0
         BYJRBC = AHAEDD;            4 0          DATUM L.BYDR
     EvalR   BYMDBC = AHAEDD;            2 0
            // TOEVOEGEN VAN BC-RECORDS AAN BC-X2 BESTAND
           If CALQNB > 0; //BC > 0
              // INDIEN X2 DAN BC AL EEN MAAND VOORUIT TELLEN (GAT WORDT LATER GEVULD
              // DOOR X2)
             If CAJQNB > 0;
               BYMD = BYMD + 1;
               If BYMD = 13;
                 BYMD = 1;
                 BYJR = BYJR + 1;
               ENDIF;
             ENDIF;
             TELBYD = 1;
             Dow TELBYD <= CALPNB; //TELB<=BCAANT
               BYMD = BYMD + 1;
               BYREST = BYMD - 12;
               If BYREST > 0;
                 BYJR = BYJR + 1;
                 BYMD = BYREST;
               Endif;
         CZAXDM = BYJR;                         BCX2 DATUM
     EvalR   CZAXDM = BYMD;
         CZJRMD = BYJR;            6 0
     EvalR   CZJRMD = BYMD;
               CHAIN (#1AACD:#1AFNB:CZJRMD) @CZCPJF ;
       *in50 = (%found() = *Off);
     C  N50              GOTO      ENDLID
         CZAACD = #1AACD;                         BC-X2 AFD.NR
         CZAFNB = #1AFNB;                         BC-X2 LIDNR.
         CZCZ01 = BYOPNB;                         BC-X2 BETDAG
         CZAXDM = BYJR;                         BCX2 DATUM
     EvalR   CZAXDM = BYMD;
         CZQICD = CACLCD;                         BCX2 KATKODE
               CZAYDM = CAE9NB; //BCX2 KATJJMM

               If WYZKAT <> 0 AND CZAXDM >= WYZKAT;
                 CZAYDM = WYZKAT;
               Endif;
         CZQGCD = AHCJCD;                         BCX2 BODE
         CZQHCD = AHCXCD;                         BCX2 RONDE
         CZRNCD = 'B';                         BCX2 RECT.KD
         CZROCD = '+';                         BCX2 RECT.TK
         CZRPCD = '4';                         BCX2 BETAALW
               CZAUDD = CAASDD; //BCX2 DAT.INP
         CZLX01 = CAN8CE;                         ZONE
         CZLZ01 = CAN9CE;                         GEWEST
               WRITE @CZCPJF;
               TELBYD = TELBYD + 1;
             Enddo; //ENDTEL<=AANT
             BYMDBC = BYMD;
             BYJRBC = BYJR;
           Endif; //END BC > 0
            // TOEVOEGEN VAN 1 X2-REC. AAN BC-X2 BESTAND
           If CAJQNB > 0; //X2 > 0

             BYMD = BYMDX2;
             BYJR = BYJRX2;

             BYAANT = 1;
             BYMD = BYMD + 1;
             BYREST = BYMD - 12;
             If BYREST > 0;
               BYJR = BYJR + 1;
               BYMD = BYREST;
             Endif;
         CZAXDM = BYJR;                         BCX2 DATUM
     EvalR   CZAXDM = BYMD;
         BYJRMD = BYJR;            6 0
     EvalR   BYJRMD = BYMD;
             CHAIN (#1AACD:#1AFNB:BYJRMD) @CZCPJF ;
       *in50 = (%found() = *Off);
     C  N50              GOTO      ENDLID
         CZAXDM = BYJR;                         BCX2 DATUM
     EvalR   CZAXDM = BYMD;
         CZAACD = #1AACD;                         BC-X2 AFD.NR
         CZAFNB = #1AFNB;                         BC-X2 LIDNR.
         CZCZ01 = BYOPNB;                         BC-X2 BETDAG
     EvalR   CZQICD = #1M5CD;                         BCX2 KATKODE
     EvalR   CZAYDM = #1ANDM;                         BCX2 KATJJMM
     EvalR   CZQGCD = AHCJCD;                         BCX2 BODE
     EvalR   CZQHCD = AHCXCD;                         BCX2 RONDE
     EvalR   CZRNCD = 'B';                         BCX2 RECT.KD
     EvalR   CZROCD = '+';                         BCX2 RECT.TK
     EvalR   CZRPCD = '4';                         BCX2 BETAALW
             CZAUDD = CAASDD; //BCX2 DAT.INP
         CZLX01 = CAN8CE;                         ZONE
         CZLZ01 = CAN9CE;                         GEWEST
             WRITE @CZCPJF;
           Endif; //END X2 > 0
            // AANPASSEN DATUM LAATSTE BIJDR. IN LEDENBESTAND
         AHAEDD = BYJR;                         DATUM L.BYDR
     EvalR   AHAEDD = BYMD;
           If CALQNB > 0;
         AHAEDD = BYJRBC;                         DATUM L.BYDR
     EvalR   AHAEDD = BYMDBC;
           ENDIF;
         Endif; //ENDX2/BC > 0
         AHAACD = #1AACD;                         AFDELING
         AHAFNB = #1AFNB;                         LIDNR
         UPDATE @AHCPAM;
     C     ENDLID        TAG
          // BLOKKEREN WERKLOZE NA BETALING
         SKLID = #1AACD;             8 0
     EvalR   SKLID = #1AFNB;
         CHAIN (#1AACD:#1AFNB) @A1CPCN ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDW2
         A1LRCD = BYOPNB;                         WERKL-LOCK
         A1AACD = #1AACD;
         A1AFNB = #1AFNB;
         A1AENR = A1AENR + #1HCNB; //TAKS
         A1AENR = A1AENR + POSTAK; //TB/TG
         A1AENR = A1AENR - NEGTAK; //TB-/TG-
         TKTKTA = #1HCNB;
         AAAAFD = #1AACD;            2
         LDLDLD = #1AFNB;            6
         IMIMXX = BYEENB;
         MDBEL01(AAAAFD:LDLDLD:CAMBCD:A1A4CD:IMIMXX:BYOPNB:TKTKTA:POSTAK:NEGTAK);
           If CAGPNB = 0 AND CAJNNB = 0 AND CAMINB = 0 AND CAMJNB = 0;
     C                   GOTO      ENDW1
         Endif;
         TOTBZ = CAJNNB / 2; //OPTELLEN
         TOTBZ = TOTBZ + CAGPNB; //DGBZ & HDGBZ

         OUINON = 'N';            1
         BZBW = A1A4CD;              2
         WUS5CL = OUINON;

         BWOVVO = 0; //VOLLE DAGEN
         BWOVHA = 0; //HALVE DAGEN
         BWTOTO = 0;
         If A1A4CD = 'B ' OR A1A4CD = 'BB' OR OUINON = 'Y';
           RMFORM = CAGWNB;
           DGNFOR = 0;
           //AFD
           //LIDNR
           //DGN WINTEROPLEIDING
            // CORONA OVERMACHT NIET AFTREKKEN VAN KREDIET
           MDFORM03(CAAACD:CAAFNB:RMFORM:URNFOR:DGNFOR);
             BWOVVO = 0;
           BWOVHA = 0; //HALVE DAGEN
           BWTOTO = 0;
           If CAMBCD = '02' OR CAMBCD = '04' OR CAMBCD = '06' OR CAMBCD = '05' OR CAMBCD = '57' OR CAMBCD = '58';
             BWOVVO = 0; //VOLLE DAGEN
             BWOVHA = 0; //HALVE DAGEN
             BWTOTO = 0;
             //AFD
             //LIDNR
             //VOLLE DAGEN OVERMACH
             //HALVE DAGEN
             //TOTAAL BZ OVERMACHT
           MDBOUW9(CAAACD:CAAFNB:RMFORM:A1A4CD:BWOVVO:BWOVHA:BWTOTO);
             ENDIF;
           If CAMBCD = '02' OR CAMBCD = '04' OR CAMBCD = '06' OR CAMBCD = '18' OR CAMBCD = '21' OR CAMBCD = '22' OR CAMBCD = '05' OR CAMBCD = '57' OR CAMBCD = '58' OR CAMBCD = '00';
              // WKLH.MND > OF = BEGINDATUM HUIDIG BOUWJAAR
             If CAGWNB >= BYAVDM;
               TOTBZ = TOTBZ - DGNFOR;
               A1BDNB = A1BDNB - TOTBZ; //KR.BZ
               A1BDNB = A1BDNB + BWTOTO; //KR.BZ
               If A1BDNB <= 0;
         A1KVCE = 'Y';                         KREDIET UITGEPUT
               ENDIF;
             ELSE;
                // WKLH.MND > OF = BEGINDATUM VORIG BOUWJAAR
               If CAGWNB >= BYAUDM;
                 TOTBZ = TOTBZ - DGNFOR;
                 A1BFNB = A1BFNB - TOTBZ; //KR.BZVJ
                 A1BFNB = A1BFNB + BWTOTO; //KR.BZVJ
               ENDIF; //>VORIGBOUWJR
             ENDIF; //> HDG BOUWJR
           ELSE; //GEEN TW
             TOTBZX = CAJNNB / 2;
             TOTBZY = CAMJNB / 2;
             TOTBZX = TOTBZX + CAGPNB; //DGBZ & HDGBZ
             TOTBZY = TOTBZY + CAMINB; //DGBZ2& HDGBZ2
              // WINTEROPLEIDING
             TOTBZF = 0;
             TOTBZF = CAJKNB / 2; //WINTEROPL
             TOTBZF = TOTBZF + CAJJNB; //WEER BIJTELLEN!!
              // WKLH.MND > OF = BEGINDATUM HUIDIG BOUWJAAR
             If CAGWNB >= BYAVDM;
               A1BDNB = A1BDNB - TOTBZX; //KR.BZ
               A1BDNB = A1BDNB + TOTBZF;
               A1BENB = A1BENB - TOTBZY; //KR.BZ2
             ELSE;
                // WKLH.MND > OF = BEGINDATUM VORIG BOUWJAAR
               If CAGWNB >= BYAUDM;
                 A1BFNB = A1BFNB - TOTBZX; //KR.BZVJ
                 A1BFNB = A1BFNB + TOTBZF;
                 A1BGNB = A1BGNB - TOTBZY; //KR.BZVJ
               ENDIF; //>VORIGBOUWJR
             ENDIF; //> HDG BOUWJR
           ENDIF; //02/04/06/18
         ELSE; //BZ NIET = B
            //IS JR DATUM ACHTERSTAL=JR LOP. MND V CONTROLEREC.(VB 199110 EN
            //LOP.MND=199112 DAN AFTREKKEN,MAAR NT BIJ BV 199012 EN LOP.MND=
            //199202-->ZIE OOK PROGR CONTROLE RESTERENDE KREDIET BZ)
           If A1A4CD = 'SV';
             If WUTQCF = 'H'; //HUIDIG JAAR
               A1BDNB = A1BDNB - TOTBZ; //KR.BZ
             ELSE; //VORIG JAAR
               A1BFNB = A1BFNB - TOTBZ; //KR.BZVJ
             ENDIF;
           ENDIF; //ENDIF SV

           If SWBZVJ = '1'; //ACHTERSTAL JANUARI
     C                   GOTO      TOCBZ2
           ENDIF;
           If WUJRJR = WUJRRR;
     C     TOCBZ2        TAG
             If A1A4CD = 'H ' OR A1A4CD = 'KH' OR A1A4CD = 'I ' OR A1A4CD = 'BA' OR A1A4CD = 'SC' OR A1A4CD = 'VJ' OR A1A4CD = 'CK';
               A1BDNB = A1BDNB - TOTBZ; //KR.BZ
             Endif; //END JR=JJJRR
           Endif; //END H,KH, ..
           If A1A4CD = 'C ' OR A1A4CD = 'E ' OR A1A4CD = 'CS' OR A1A4CD = 'ES';
             A1BDNB = A1BDNB - TOTBZ; //KR.BZ
           Endif;
         Endif;
     C     ENDW1         TAG
          // LAATSTE STEMPELDAG AANPASSEN + OPMERKINGSZONE + DATUM C7
          // BIJ START MINERVA : NIET VOOR ACTIVA CA/B./G.
         If CAMBCD = 'CA' OR CAMBCD = 'B.' OR CAMBCD = 'G.';
     C                   GOTO      GNLSTU                                       GEEN UPDATE LAATSTE
         ENDIF;
         If #1AKDD > A1AJDT OR CAAKDD > A1AJDT;
           A1AJDT = #1AKDD; //L. STEMPEL
           A1AJDT = CAAKDD; //L. STEMPEL
         ENDIF;
     C     GNLSTU        TAG

         A1BITX = #DCA02;                         OPMERKINGSZO
         A1BCNB = BYEENB; //DATUM C7
          // KUMULZONES AANPASSEN    /  QX4 AANPASSEN
         A1DFNB = A1DFNB + KLMVW; //VW LOP.MND
         A1DGNB = A1DGNB + KLMGW; //GW LOP.MND
         A1DHNB = A1DHNB + KVMVW; //VW LOP.MND
         A1DINB = A1DINB + KVMGW; //GW LOP.MND
         If DAT1 = DAT2; //LOPENDE JR
            //                    Z-ADDHQX4      A1F3NB           Q X 4
            // SX4X0,8 VOOR IGU
           A1F3NB = A1F3NB - WUSX4X;
           If A1F3NB < 0;
             A1F3NB = 0;
           ENDIF;
         Endif;
          // LBREFERTEMAAND AANPASSEN ALS DEZE GROTER IS DAN DEZE VAN F4
         If CAGWNB > A1EZNR;
           A1EZNR = CAGWNB;
         ENDIF;
          // ALS ER EEN ACTIVER.SCHERM BESTAAT,MOET ZONE SUBBEROEP OP X GEZET WORDEN
         If WUSCHE = '1'; //ACTIVERING
           If A1BCCD <> 'Y';
         A1BCCD = 'X';
           ENDIF;
         ENDIF;
          // ALS ER EEN ACT. KIND.OPBV BESTAAT,MOET ZONE SUBBEROEP OP K GEZET WORDEN
         WUKOPV = 'N';            1
         //AFD
         //LIDNR
         //SWITCH148
         MDACT50(CAAACD:CAAFNB:WUKOPV);
           If WUKOPV <> 'N';
           If A1BCCD = ' ';
             If WUKOPV = 'A'; //A=KOT
         A1BCCD = 'K';
             ELSE; //B=OVERSTAPPREMIE
         A1BCCD = 'O';
             ENDIF;
           ENDIF;
           If CAMBCD = '50';
     C                   GOTO      NOTSTA
           ENDIF;
         ENDIF;
          // ALS ER EEN ACT. TYPE29 BESTAAT,MOET ZONE SUBBEROEP OP R GEZET WORDEN
         WUKOPV = 'N';            1
         //AFD
         //LIDNR
         //SWITCH148
         MDACT29(CAAACD:CAAFNB:WUKOPV);
           If WUKOPV = 'Y';
           If A1BCCD = ' ';
         A1BCCD = 'R';
           ENDIF;
         ENDIF;
     C     NOTSTA        TAG
         If A1BCCD = 'T';
           AANT51 = 0;
           MDTYP51G(CAAACD:CAAFNB:AANT51);
             If AANT51 <= 1;
         ' = ';           A1BCCD
           ENDIF;
         ENDIF;
         If A1BCCD = 'D';
           AANT51 = 0;
           MDTYP52G(CAAACD:CAAFNB:AANT51);
             If AANT51 <= 1;
         ' = ';           A1BCCD
           ENDIF;
         ENDIF;
         If A1BCCD = 'N';
           If CAMFCD <> '..ICLD.';
             AANT51 = 0;
             MDTYP53G(CAAACD:CAAFNB:AANT51);
               If AANT51 <= 1;
         ' = ';           A1BCCD
             ENDIF;
           ENDIF;
         ENDIF;
          // BIJPASSINGEN/ACTIVERING+TYPE05:SLECHTS 1 MAAL BC AFHOUDEN
         If CAJQNB > 0;
         A1KVCE = '*';                         VRIJE ZONE1
         ENDIF; //X2-LOCK
         If A1KWCE = *BLANK;
         A1KWCE = '**';                         VRIJE ZONE2
         ENDIF; //O.AFD-LOCK
         If CAMBCD = '21' OR CAMBCD = '22';
           If A1IEDM = 0; //1STE MAAL JVU
              //                    Z-ADDCAGWNB    A1IEDM
           ENDIF;
         ENDIF;
         UPDATE @A1CPCN;
     C     ENDW2         TAG
          //----------------------------------------------------
         If #1DVCD = *BLANK AND #1DWCD = *BLANK AND #1DXCD = *BLANK AND #1DYCD = *BLANK AND #1EDCD = *BLANK AND #1EECD = *BLANK; //AFH1 KODE
     C                   GOTO      ENDT6
         Endif;
          //  OPVULLEN TABEL AFHOUDINGEN ADHV. AFH. 1 --> 6
     C                   MOVEA     #1DVCD        KOD(1)                         AFH1 KODE
     C                   MOVEA     #1GZNB        AFH(1)                         AFH1 BEDRAG
     C                   MOVEA     #1G0NB        DAT(1)                         AFH1 DATUM
     C                   MOVEA     #1OYCD        TXX(1)                         AFH1 KODE TV
     C                   MOVEA     #1O5CD        TAS(1)                         AFH1 KODE TV
     C                   MOVEA     #1DWCD        KOD(2)                         AFH2 KODE
     C                   MOVEA     #1G1NB        AFH(2)                         AFH2 BEDRAG
     C                   MOVEA     #1G2NB        DAT(2)                         AFH2 DATUM
     C                   MOVEA     #1OZCD        TXX(2)                         AFH2 KODE TV
     C                   MOVEA     #1O6CD        TAS(2)                         AFH1 KODE TV
     C                   MOVEA     #1DXCD        KOD(3)                         AFH3 KODE
     C                   MOVEA     #1G3NB        AFH(3)                         AFH3 BEDRAG
     C                   MOVEA     #1G4NB        DAT(3)                         AFH3 DATUM
     C                   MOVEA     #1O0CD        TXX(3)                         AFH3 KODE TV
     C                   MOVEA     #1O7CD        TAS(3)                         AFH1 KODE TV
     C                   MOVEA     #1DYCD        KOD(4)                         AFH4 KODE
     C                   MOVEA     #1G5NB        AFH(4)                         AFH4 BEDRAG
     C                   MOVEA     #1G6NB        DAT(4)                         AFH4 DATUM
     C                   MOVEA     #1O1CD        TXX(4)                         AFH4 KODE TV
     C                   MOVEA     #1O8CD        TAS(4)                         AFH1 KODE TV
     C                   MOVEA     #1EDCD        KOD(5)                         AFH5 KODE
     C                   MOVEA     #1HDNB        AFH(5)                         AFH5 BEDRAG
     C                   MOVEA     #1HENB        DAT(5)                         AFH5 DATUM
     C                   MOVEA     #1O2CD        TXX(5)                         AFH5 KODE TV
     C                   MOVEA     #1O9CD        TAS(5)                         AFH1 KODE TV
     C                   MOVEA     #1EECD        KOD(6)                         AFH6 KODE
     C                   MOVEA     #1HFNB        AFH(6)                         AFH6 BEDRAG
     C                   MOVEA     #1HGNB        DAT(6)                         AFH6 DATUM
     C                   MOVEA     #1O3CD        TXX(6)                         AFH6 KODE TV
     C                   MOVEA     #1PACD        TAS(6)                         AFH1 KODE TV
          //  SORTEREN TABEL AFHOUDINGEN VOLGENS PRIORITEIT
         U = 0;
         V = 6;
         W = 1;
         X = 2;
     C     TERUG3        TAG
     C     PRI(W)        COMP      PRI(X)                             50
     C  N50              GOTO      TER9
     EvalR   PRIX = PRI(X);              1
     EvalR   KODX = KOD(X);              3
         DATX = DAT(X);
         AFHX = AFH(X);
     EvalR   TXXX = TXX(X);              3
     EvalR   TASX = TAS(X);              1
     EvalR   PRI(X) = PRI(W);            1
     EvalR   KOD(X) = KOD(W);            3
         DAT(X) = DAT(W);
         AFH(X) = AFH(W);
     EvalR   TXX(X) = TXX(W);            3
     EvalR   TAS(X) = TAS(W);            1
     EvalR   PRI(W) = PRIX;
     EvalR   KOD(W) = KODX;
         DAT(W) = DATX;
         AFH(W) = AFHX;
     EvalR   TXX(W) = TXXX;
     EvalR   TAS(W) = TASX;
         Y = X;
         U = U + 1;
     C     TER9          TAG
         W = W + 1;
         X = X + 1;
     C     X             COMP      V                                  50
     C  N50              GOTO      TERUG3
     C     U             COMP      0                                      50
     C   50              GOTO      ENDSR3
         U = 0;
         V = Y;
         W = 1;
         X = 2;
     C                   GOTO      TERUG3
     C     ENDSR3        TAG
     C                   MOVEA     KOD(1)        CADVCD
     C                   MOVEA     AFH(1)        CAGZNB
     C                   MOVEA     DAT(1)        CAG0NB
     C                   MOVEA     TXX(1)        CAOYCD
     C                   MOVEA     TAS(1)        CAO5CD
     C                   MOVEA     KOD(2)        CADWCD
     C                   MOVEA     AFH(2)        CAG1NB
     C                   MOVEA     DAT(2)        CAG2NB
     C                   MOVEA     TXX(2)        CAOZCD
     C                   MOVEA     TAS(2)        CAO6CD
     C                   MOVEA     KOD(3)        CADXCD
     C                   MOVEA     AFH(3)        CAG3NB
     C                   MOVEA     DAT(3)        CAG4NB
     C                   MOVEA     TXX(3)        CAO0CD
     C                   MOVEA     TAS(3)        CAO7CD
     C                   MOVEA     KOD(4)        CADYCD
     C                   MOVEA     AFH(4)        CAG5NB
     C                   MOVEA     DAT(4)        CAG6NB
     C                   MOVEA     TXX(4)        CAO1CD
     C                   MOVEA     TAS(4)        CAO8CD
     C                   MOVEA     KOD(5)        CAEDCD
     C                   MOVEA     AFH(5)        CAHDNB
     C                   MOVEA     DAT(5)        CAHENB
     C                   MOVEA     TXX(5)        CAO2CD
     C                   MOVEA     TAS(5)        CAO9CD
     C                   MOVEA     KOD(6)        CAEECD
     C                   MOVEA     AFH(6)        CAHFNB
     C                   MOVEA     DAT(6)        CAHGNB
     C                   MOVEA     TXX(6)        CAO3CD
     C                   MOVEA     TAS(6)        CAPACD
          // BLOKKEREN BESLAGEN NA BETALING : ALLE KODES
         BOAACD = #1AACD;
         BOAFNB = #1AFNB;
         If #1DVCD >= 'O01' AND #1DVCD <= 'S99'; //AFH1 KODE
     EvalR   BOBQCD = #1DVCD;
           CHAIN (BOAACD:BOAFNB:BOBQCD) @BOCPEN ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDB1
         BOLSCD = BYOPNB;                         BESLAG-LOCK
           BOHWNB = BOHWNB - #1GZNB; //BESLAG SALDO
           BOC6NB = BOC6NB + #1GZNB; //BES.AL AFGEH
         SSSSP1 = BOBQCD;            1
           If SSSSP1 = 'S';
             If BOHWNB <= 0;
               If CAMBCD <> 'CA';
                  //                    MOVEL'P'       BOBYCD           PASSIEF ZETTEN
               ENDIF;
             ENDIF;
           ENDIF;
           UPDATE @BOCPEN;
         Endif;
     C     ENDB1         TAG
         If #1DWCD >= 'O01' AND #1DWCD <= 'S99'; //AFH2 KODE
     EvalR   BOBQCD = #1DWCD;
           CHAIN (BOAACD:BOAFNB:BOBQCD) @BOCPEN ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDB2
         BOLSCD = BYOPNB;                         BESLAG LOCK
           BOHWNB = BOHWNB - #1G1NB; //BESLAG SALDO
           BOC6NB = BOC6NB + #1G1NB; //BES.AL AFGEH
         SSSSP1 = BOBQCD;            1
           If SSSSP1 = 'S';
             If BOHWNB <= 0;
               If CAMBCD <> 'CA';
                  //                    MOVEL'P'       BOBYCD           PASSIEF ZETTEN
               ENDIF;
             ENDIF;
           ENDIF;
           UPDATE @BOCPEN;
         Endif;
     C     ENDB2         TAG
         If #1DXCD >= 'O01' AND #1DXCD <= 'S99'; //AFH3 KODE
     EvalR   BOBQCD = #1DXCD;
           CHAIN (BOAACD:BOAFNB:BOBQCD) @BOCPEN ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDB3
         BOLSCD = BYOPNB;                         BESLAG LOCK
           BOHWNB = BOHWNB - #1G3NB; //BESLAG SALDO
           BOC6NB = BOC6NB + #1G3NB; //BES.AL AFGEH
         SSSSP1 = BOBQCD;            1
           If SSSSP1 = 'S';
             If BOHWNB <= 0;
               If CAMBCD <> 'CA';
                  //                    MOVEL'P'       BOBYCD           PASSIEF ZETTEN
               ENDIF;
             ENDIF;
           ENDIF;
           UPDATE @BOCPEN;
         Endif;
     C     ENDB3         TAG
         If #1DYCD >= 'O01' AND #1DYCD <= 'S99'; //AFH4 KODE
     EvalR   BOBQCD = #1DYCD;
           CHAIN (BOAACD:BOAFNB:BOBQCD) @BOCPEN ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDB4
         BOLSCD = BYOPNB;                         BESLAG LOCK
           BOHWNB = BOHWNB - #1G5NB; //BESLAG SALDO
           BOC6NB = BOC6NB + #1G5NB; //BES.AL AFGEH
         SSSSP1 = BOBQCD;            1
           If SSSSP1 = 'S';
             If BOHWNB <= 0;
               If CAMBCD <> 'CA';
                  //                    MOVEL'P'       BOBYCD           PASSIEF ZETTEN
               ENDIF;
             ENDIF;
           ENDIF;
           UPDATE @BOCPEN;
         Endif;
     C     ENDB4         TAG
         If #1EDCD >= 'O01' AND #1EDCD <= 'S99'; //AFH5 KODE
     EvalR   BOBQCD = #1EDCD;
           CHAIN (BOAACD:BOAFNB:BOBQCD) @BOCPEN ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDB5
         BOLSCD = BYOPNB;                         BESLAG LOCK
           BOHWNB = BOHWNB - #1HDNB; //BESLAG SALDO
           BOC6NB = BOC6NB + #1HDNB; //BES.AL AFGEH
         SSSSP1 = BOBQCD;            1
           If SSSSP1 = 'S';
             If BOHWNB <= 0;
               If CAMBCD <> 'CA';
                  //                    MOVEL'P'       BOBYCD           PASSIEF ZETTEN
               ENDIF;
             ENDIF;
           ENDIF;
           UPDATE @BOCPEN;
         Endif;
     C     ENDB5         TAG
         If #1EECD >= 'O01' AND #1EECD <= 'S99'; //AFH6 KODE
     EvalR   BOBQCD = #1EECD;
           CHAIN (BOAACD:BOAFNB:BOBQCD) @BOCPEN ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDB6
         BOLSCD = BYOPNB;                         BESLAG LOCK
           BOHWNB = BOHWNB - #1HFNB; //BESLAG SALDO
           BOC6NB = BOC6NB + #1HFNB; //BES.AL AFGEH
         SSSSP1 = BOBQCD;            1
           If SSSSP1 = 'S';
             If BOHWNB <= 0;
               If CAMBCD <> 'CA';
                  //                    MOVEL'P'       BOBYCD           PASSIEF ZETTEN
               ENDIF;
             ENDIF;
           ENDIF;
           UPDATE @BOCPEN;
         Endif;
     C     ENDB6         TAG
          // BLOKKEREN TERUGVORDERINGEN NA BETALING : ALLE KODES
         TELTVP = 0; //AANT PASSIEF
     EvalR   TVLKOD = *BLANK;            3            LAATSTE TV.
         HZAACD = #1AACD;
         HZAFNB = #1AFNB;
         If #1OYCD >= 'T01' AND #1OYCD <= 'T99'; //AFH1 KODE
     EvalR   HZHZ01 = #1OYCD;
     EvalR   TVLKOD = #1OYCD;
           CHAIN (HZAACD:HZAFNB:HZHZ01) @HZCPIQ ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDT1
         HZHZ28 = BYOPNB;                         TERUGV-LOCK
         HZHZ38 = 'W';                         LOCK GIR/WKL
            //                    Z-ADD#1ASDD    HZGXDD           DTM WIJZ.SAL=SYSTEEMD
           HZGXDD = DT2BNK; //DTM WIJZ.SAL=DTM BAN
           HZHZ14 = HZHZ14 - #1GZNB; //TERUGV SALDO
           HZHZ13 = HZHZ13 + #1GZNB; //TER.AL AFGEH
           If HZHZ14 <= 0;
             If HZHZ04 <> 'C';
     EvalR   HZHZ04 = 'P';                         TER.TOESTAND
             ENDIF;
             TELTVP = TELTVP + 1;
     EvalR   CAO5CD = '*';                         AFH1 LAATSTE
           ELSE;
     EvalR   CAO5CD = *BLANK;
           Endif;
           UPDATE @HZCPIQ;
         Endif;
     C     ENDT1         TAG
         If #1OZCD >= 'T01' AND #1OZCD <= 'T99'; //AFH2 KODE
     EvalR   HZHZ01 = #1OZCD;
     EvalR   TVLKOD = #1OZCD;
           CHAIN (HZAACD:HZAFNB:HZHZ01) @HZCPIQ ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDT2
         HZHZ28 = BYOPNB;                         TERUGV-LOCK
         HZHZ38 = 'W';                         LOCK GIR/WKL
            //                    Z-ADD#1ASDD    HZGXDD           DTM WIJZ.SAL=SYSDAT
           HZGXDD = DT2BNK; //DTM WIJZ.SAL=DTM BAN
           HZHZ14 = HZHZ14 - #1G1NB; //TERUGV SALDO
           HZHZ13 = HZHZ13 + #1G1NB; //TER.AL AFGEH
           If HZHZ14 <= 0;
             If HZHZ04 <> 'C';
     EvalR   HZHZ04 = 'P';                         TER.TOESTAND
             ENDIF;
             TELTVP = TELTVP + 1;
     EvalR   CAO6CD = '*';                         AFH2 LAATSTE
           ELSE;
     EvalR   CAO6CD = *BLANK;                         AFH2 LAATSTE
           Endif;
           UPDATE @HZCPIQ;
         Endif;
     C     ENDT2         TAG
         If #1O0CD >= 'T01' AND #1O0CD <= 'T99'; //AFH3 KODE
     EvalR   HZHZ01 = #1O0CD;
     EvalR   TVLKOD = #1O0CD;
           CHAIN (HZAACD:HZAFNB:HZHZ01) @HZCPIQ ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDT3
         HZHZ28 = BYOPNB;                         TERUGV-LOCK
         HZHZ38 = 'W';                         LOCK GIR/WKL
            //                    Z-ADD#1ASDD    HZGXDD           DTM WIJZ.SAL=SYSDAT
           HZGXDD = DT2BNK; //DTM WIJZ.SAL=DTM BAN
           HZHZ14 = HZHZ14 - #1G3NB; //TERUGV SALDO
           HZHZ13 = HZHZ13 + #1G3NB; //TER.AL AFGEH
           If HZHZ14 <= 0;
             If HZHZ04 <> 'C';
     EvalR   HZHZ04 = 'P';                         TER.TOESTAND
             ENDIF;
             TELTVP = TELTVP + 1;
     EvalR   CAO7CD = '*';                         AFH3 LAATSTE
           ELSE;
     EvalR   CAO7CD = *BLANK;                         AFH3 LAATSTE
           Endif;
           UPDATE @HZCPIQ;
         Endif;
     C     ENDT3         TAG
         If #1O1CD >= 'T01' AND #1O1CD <= 'T99'; //AFH4 KODE
     EvalR   HZHZ01 = #1O1CD;
     EvalR   TVLKOD = #1O1CD;
           CHAIN (HZAACD:HZAFNB:HZHZ01) @HZCPIQ ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDT4
         HZHZ28 = BYOPNB;                         TERUGV-LOCK
         HZHZ38 = 'W';                         LOCK GIR/WKL
            //                    Z-ADD#1ASDD    HZGXDD           DTM WIJZ.SAL=SYSDAT
           HZGXDD = DT2BNK; //DTM WIJZ.SAL=DTM BAN
           HZHZ14 = HZHZ14 - #1G5NB; //TERUGV SALDO
           HZHZ13 = HZHZ13 + #1G5NB; //TER.AL AFGEH
           If HZHZ14 <= 0;
             If HZHZ04 <> 'C';
     EvalR   HZHZ04 = 'P';                         TER.TOESTAND
             ENDIF;
             TELTVP = TELTVP + 1;
     EvalR   CAO8CD = '*';                         AFH4 LAATSTE
           ELSE;
     EvalR   CAO8CD = *BLANK;                         AFH4 LAATSTE
           Endif;
           UPDATE @HZCPIQ;
         Endif;
     C     ENDT4         TAG
         If #1O2CD >= 'T01' AND #1O2CD <= 'T99'; //AFH5 KODE
     EvalR   HZHZ01 = #1O2CD;
     EvalR   TVLKOD = #1O2CD;
           CHAIN (HZAACD:HZAFNB:HZHZ01) @HZCPIQ ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDT5
         HZHZ28 = BYOPNB;                         TERUGV-LOCK
         HZHZ38 = 'W';                         LOCK GIR/WKL
            //                    Z-ADD#1ASDD    HZGXDD           DTM WIJZ.SAL=SYSDAT
           HZGXDD = DT2BNK; //DTM WIJZ.SAL=DTM BAN
           HZHZ14 = HZHZ14 - #1HDNB; //TERUGV SALDO
           HZHZ13 = HZHZ13 + #1HDNB; //TER.AL AFGEH
           If HZHZ14 <= 0;
             If HZHZ04 <> 'C';
     EvalR   HZHZ04 = 'P';                         TER.TOESTAND
             ENDIF;
             TELTVP = TELTVP + 1;
     EvalR   CAO9CD = '*';                         AFH5 LAATSTE
           ELSE;
     EvalR   CAO9CD = *BLANK;                         AFH5 LAATSTE
           Endif;
           UPDATE @HZCPIQ;
         Endif;
     C     ENDT5         TAG
         If #1O3CD >= 'T01' AND #1O3CD <= 'T99'; //AFH6 KODE
     EvalR   HZHZ01 = #1O3CD;
     EvalR   TVLKOD = #1O3CD;
           CHAIN (HZAACD:HZAFNB:HZHZ01) @HZCPIQ ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDT6
         HZHZ28 = BYOPNB;                         TERUGV-LOCK
         HZHZ38 = 'W';                         LOCK GIR/WKL
            //                    Z-ADD#1ASDD    HZGXDD           DTM WIJZ.SAL=SYSDAT
           HZGXDD = DT2BNK; //DTM WIJZ.SAL=DTM BAN
           HZHZ14 = HZHZ14 - #1HFNB; //TERUGV SALDO
           HZHZ13 = HZHZ13 + #1HFNB; //TER.AL AFGEH
           If HZHZ14 <= 0;
             If HZHZ04 <> 'C';
     EvalR   HZHZ04 = 'P';                         TER.TOESTAND
             ENDIF;
             TELTVP = TELTVP + 1;
     EvalR   CAPACD = '*';                         AFH6 LAATSTE
           ELSE;
     EvalR   CAPACD = *BLANK;                         AFH6 LAATSTE
           Endif;
           UPDATE @HZCPIQ;
         Endif;
     C     ENDT6         TAG
          //POSITIONEREN OP "LAATSTE TV-KODE + 1" INDIEN MINSTENS
          // 1 TERUGV. PASSIEF GEZET WERD --> EVENTUEEL AKTIEF MAKEN
         If TELTVP >= 1; //TEL PASSIEVE
     EvalR   TVLNR = TVLKOD;             2 0
           TVLNR = TVLNR + 1;
         HZHZ01 = 'T';                         TERUGV KODE
     EvalR   HZHZ01 = TVLNR;
         SKLIDP = HZAACD;            8
     EvalR   SKLIDP = HZAFNB;
           SETLL (HZAACD:HZAFNB:HZHZ01) @HZCPIQ;
           READ @HZCPIQ ;
       *in50 = %eof();
     C   50              GOTO      ENDTX
         XAFDLD = HZAACD;            8
     EvalR   XAFDLD = HZAFNB;
         TVPOS1 = HZBWCD;            1
           If XAFDLD <> SKLIDP;
             UPDATE @HZCPIQ;
     C                   GOTO      ENDTX
           ELSE;
             Dow XAFDLD = SKLIDP;
               If HZHZ04 = 'P' AND HZHZ14 > 0; //TOESTAND P
     EvalR   HZHZ04 = 'A';
                 UPDATE @HZCPIQ;
     C                   GOTO      ENDTX
               Endif; //END TOEST. P
               READ @HZCPIQ ;
       *in50 = %eof();
     C   50              GOTO      ENDTX
         XAFDLD = HZAACD;
     EvalR   XAFDLD = HZAFNB;
         TVPOS1 = HZBWCD;            1
             ENDDO; //END DOWEQ
           Endif; //END XAFDLD
         Endif; //ENDTELTVP >0
     C     ENDTX         TAG
          //TYPE 51 GAAN PASSIEF ZETTEN/50 OVERSTAPPREMIE GANA PASSIEF ZETTEN
         If CAMBCD = '51';
           //VOLGNR
         MDTYP51E(#1AACD:#1AFNB:WUAQND);
           ENDIF;
         If CAMBCD = '52';
           //VOLGNR
         MDTYP52E(#1AACD:#1AFNB:WUAQND);
           ENDIF;
         If CAMBCD = '53';
           If CAMFCD <> '..ICLD.';
             //VOLGNR
           MDTYP53E(#1AACD:#1AFNB:WUNRNR);
             ELSE;
             RMT53 = WUX8ND / 100;
             If RMT53 = CAGWNB; //LTSTE MND WEL OP P
               //ZETTEN
               //VOLGNR
             MDTYP53E(#1AACD:#1AFNB:WUNRNR);
               ENDIF;
           ENDIF;
         ENDIF;
         If CAMBCD = '50';
           //VOLGNR
         MDTYP50L(#1AACD:#1AFNB:WUAQND);
           ENDIF;
         WUAQND = 0;
          // BLOKKEREN VERLOF NA BETALING : JAAR M.B.T. ACHTERSTAL
         If CAGNNB = 0 AND CAJLNB = 0 AND CAG7NB = 0 AND CAJONB = 0;
     C                   GOTO      ENDVE1
         Endif;
         BSAACD = #1AACD;                         AFDELING
         BSAFNB = #1AFNB;                         LIDNR
         BSBWNB = #1GWNB;                         VERLOF JAAR
         CHAIN (BSAACD:BSAFNB:BSBWNB) @BSCPEK ;
       *in50 = (%found() = *Off);
     C   50              GOTO      ENDVE1
         If CAMBCD = '21' OR CAMBCD = '22';
           CHAIN (BSAACD:BSAFNB:BSBWNB) @DJCPHR ;
       *in50 = (%found() = *Off);
     C   50              MOVEL     'N'           JVUGEV            1
     C  N50              MOVEL     'Y'           JVUGEV
         ELSE;
         JVUGEV = 'N';
         ENDIF;
         BSLUCD = BYOPNB;                         VERLOF-LOCK
          // AANPASSEN KREDIET BV EN V IN BESTAND VERLOF
         XX0557 = *BLANK;
         If CAMBCD = '05' OR CAMBCD = '57' OR CAMBCD = '58';
         XX0557 = '**';            2
           If #1GWNB >= 201301;
         ' = ';          XX0557            2
           ENDIF;
         ENDIF;
          //          CAMBCD    IFNE '05'                       NT TYPE 05
         If XX0557 <> '**'; //NT TYPE 05/57
           TOTBV = CAJONB / 2; //HBV/2
           TOTBV = TOTBV + CAG7NB; //     +BV
           BSHHNB = BSHHNB - TOTBV; //BV REST
           TOTV = CAJLNB / 2;
           TOTV = TOTV + CAGNNB;
           If CAMBCD = '03' OR CAMBCD = '10' OR CAMBCD = '31';
             If WUS3ND > 0;
               TOTV = WUS3ND;
             ENDIF;
           ENDIF;
           BSHINB = BSHINB - TOTV; //V  REST
           If JVUGEV = 'Y';
             DJFWNN = DJFWNN - TOTV; //JVU REST
           Endif; //TYPE21 /22
         ELSE; //WEL TYPE05/57
           TOTBV = CAJONB / 2; //ENKEL BV
           TOTBV = TOTBV + CAG7NB; // MOGELIJK
           If TOTBV > BSHHNB; //6>5
             TOT1BV = BSHHNB;
             TOTV = TOTBV - BSHHNB;
             TOTBV = TOT1BV;
             BSHHNB = 0;
           ELSE; //4<5
             BSHHNB = BSHHNB - TOTBV; //BV REST
             TOTV = 0;
           Endif;
           BSHINB = BSHINB - TOTV; //V  REST
         Endif; //END 05

         If MNDACH = 1;
           BSCENB = BSCENB + TOTBV; //VERLOF BV01
         ENDIF;
         If MNDACH = 2;
           BSCFNB = BSCFNB + TOTBV; //VERLOF BV02
         ENDIF;
         If MNDACH = 3;
           BSCGNB = BSCGNB + TOTBV; //VERLOF BV03
         ENDIF;
         If MNDACH = 4;
           BSCHNB = BSCHNB + TOTBV; //VERLOF BV04
         ENDIF;
         If MNDACH = 5;
           BSCINB = BSCINB + TOTBV; //VERLOF BV05
         ENDIF;
         If MNDACH = 6;
           BSCJNB = BSCJNB + TOTBV; //VERLOF BV06
         ENDIF;
         If MNDACH = 7;
           BSCKNB = BSCKNB + TOTBV; //VERLOF BV07
         ENDIF;
         If MNDACH = 8;
           BSCLNB = BSCLNB + TOTBV; //VERLOF BV08
         ENDIF;
         If MNDACH = 9;
           BSCMNB = BSCMNB + TOTBV; //VERLOF BV09
         ENDIF;
         If MNDACH = 10;
           BSCNNB = BSCNNB + TOTBV; //VERLOF BV10
         ENDIF;
         If MNDACH = 11;
           BSCONB = BSCONB + TOTBV; //VERLOF BV11
         ENDIF;
         If MNDACH = 12;
           BSCPNB = BSCPNB + TOTBV; //VERLOF BV12
         ENDIF; //BV12

         If CAMBCD <> '21';
           If CAMBCD <> '22';
             If MNDACH = 1;
               BSCRNB = BSCRNB + TOTV; //VERLOF  V01
             ENDIF;
             If MNDACH = 2;
               BSCSNB = BSCSNB + TOTV; //VERLOF  V02
             ENDIF;
             If MNDACH = 3;
               BSCTNB = BSCTNB + TOTV; //VERLOF  V03
             ENDIF;
             If MNDACH = 4;
               BSCUNB = BSCUNB + TOTV; //VERLOF  V04
             ENDIF;
             If MNDACH = 5;
               BSCVNB = BSCVNB + TOTV; //VERLOF  V05
             ENDIF;
             If MNDACH = 6;
               BSCWNB = BSCWNB + TOTV; //VERLOF  V06
             ENDIF;
             If MNDACH = 7;
               BSCXNB = BSCXNB + TOTV; //VERLOF  V07
             ENDIF;
             If MNDACH = 8;
               BSCYNB = BSCYNB + TOTV; //VERLOF  V08
             ENDIF;
             If MNDACH = 9;
               BSCZNB = BSCZNB + TOTV; //VERLOF  V09
             ENDIF;
             If MNDACH = 10;
               BSC0NB = BSC0NB + TOTV; //VERLOF  V10
             ENDIF;
             If MNDACH = 11;
               BSC1NB = BSC1NB + TOTV; //VERLOF  V11
             ENDIF;
             If MNDACH = 12;
               BSC2NB = BSC2NB + TOTV; //VERLOF  V12
             ENDIF;
           ELSE; //WEL 22
             EXSR VERL21;
           ENDIF;
         ELSE; //WEL 21
           EXSR VERL21;
         ENDIF;
         If BSHINB < 0; //V  REST
           BSHINB = 0;
         ENDIF;
         UPDATE @BSCPEK; //UPD. VERLOF
         If JVUGEV = 'Y'; //ENKEL TYPE 21/22
           UPDATE @DJCPHR; //UPD. JVU
         ENDIF; //TYPE 21/22
     C     ENDVE1        TAG
          //  EINDE VERLOF (ZOWEL GEWOON VERLOF ALS JVU)
          // BELASTING HUIDIG --> OUD ALS BETAALDAG <> BETAALDAG CONTROLEREC
         If #1AACD <> '04'; //GEEN DOK
           JAARCO = JAARTA; //JAARCO=SLEUT
           CHAIN (#1AACD:#1AFNB:JAARCO) @HJCPGH ;
       *in50 = (%found() = *Off);
           If NOT *In50;
             If HJHJ04 <> BYOPNB;
           Endif;
         HJHJ04 = BYOPNB;                         BETAALDAG
             HJHJ03 = HJHJ02; //HUID->OUD
             HJHJ02 = NEGJAR;
           ELSE; //ZELFDE BETAA
             HJHJ02 = NEGJAR;
           Endif;
     C   50              MOVEL     #1AACD        HJAACD                         AFDELING
     C   50              MOVEL     #1AFNB        HJAFNB                         LIDNR
     C   50              MOVEL     BYOPNB        HJHJ04                         BETAALDAG
           If *In50;
             HJHJ01 = JAARTA;
           Endif;
           If *In50;
             HJHJ03 = 0;
           Endif;
           If *In50;
             HJHJ02 = NEGJAR;
           Endif;
     C   50              MOVEL     CAN8CE        HJLX01                         ZONE
     C   50              MOVEL     CAN9CE        HJLZ01                         GEWEST
           If NOT *In50;
             UPDATE @HJCPGH;
           Endif;
           If *In50;
             WRITE @HJCPGH;
           Endif;
         Endif; //END AFD 04

         TYASRX = CAMBCD;            2
         If #1AACD = '04'; //DOK
           If CAMBCD <> '02';
             If CAMBCD <> '04';
               If CAMBCD <> '06';
         TYASRX = 'DO';            2
               ENDIF;
             ENDIF;
           ENDIF;
         ENDIF;
         If CAMOCD = 'K ';
         TYASRX = 'DO';            2
         ENDIF;
         RMPAR = CAGWNB;
         //AFD
         //LIDNR
          //                    PARM           CAMBCD           TYPE WKLH
         //TYPE WKLH
         //REF.MND
         //HREF
         //AANTAL ASR
          // TYPE 05 MET DAGEN C3.2 ==> OOK ASR SCENARIO5 GAAN OPHALEN
         MDMFABET(CAAACD:CAAFNB:TYASRX:RMPAR:WUBPCF:WUIKNU);
           If CAMBCD = '05' OR CAMBCD = '57' OR CAMBCD = '58';
           If CAGUNB > 0;
              //*         ##USR     OREQ 'WKLH00'
         TYTYTY = '02';            2
             //AFD
             //LIDNR
             //TYPE WKLH
             //REF.MND
             //HREF
             //AANTAL ASR
           MDMFABET(CAAACD:CAAFNB:TYTYTY:RMPAR:WUBPCF:WUIKNU);
             ENDIF;
            // DAGEN VW > 0 BIJ IGU DAN EC3 TOEVOEGEN WKL 1892
           If CAGRNB > 0;
             If WURCCK <> *BLANK;
         TYTYTY = '01';            2
               //AFD
               //LIDNR
               //TYPE WKLH
               //REF.MND
               //HREF
               //AANTAL ASR
             MDEC3BET(CAAACD:CAAFNB:TYTYTY:RMPAR:WURCCK:WUB1NM);
               ENDIF;
           ENDIF;
         ENDIF;
         If WUW5CF <> *BLANK;
           //AFD
           //LIDNR
           //TYPE WKLH
           //REF.MND
           //HREF
           //AANTAL ASR
         MDEC3BET(CAAACD:CAAFNB:CAMBCD:RMPAR:WUW5CF:WUB1NM);
           ENDIF;
         If CAAACD = '99' AND CAAFNB = '119697';
           DSPLY ('LVC2UFR') 'ROSANNE';
           DSPLY (CAMBCD) 'ROSANNE';
           DSPLY (WUO1CL) 'ROSANNE';
           DSPLY (WUMXCN) 'ROSANNE';
         ENDIF;
         If CAMBCD = '02' OR CAMBCD = '04' OR CAMBCD = '06' OR CAMBCD = '05' OR CAMBCD = '57' OR CAMBCD = '58';
           If WUO1CL <> *BLANK;
              //          WUMXCN    IFNE 'Y'                        EC32 NT OP FAR
             //AFD
             //LIDNR
             //TYPE WKLH
             //REF.MND
             //HREF
              //                    ENDIF
           MDEC3204(CAAACD:CAAFNB:CAMBCD:RMPAR:WUO1CL);
             ENDIF;
         ENDIF;
          //                    CALL 'MDBAR307'
          //                    PARM           CAAACD           AFD
          //                    PARM           CAAFNB           LIDNR
          //                    PARM           RMPAR            REF.MND
          // WKL3745 : VOOR S36 TYPES MOET JE EEN ANDER VERG EN TOEL ART WEGSCHRIJVEN
         If WUWJCJ <> 'S36';
           //AFD
           //LIDNR
           //VOLGNR
           //ACL/RVA
           //REF.MND
         MDBAR308(CAAACD:CAAFNB:WUXUND:WUVMCJ:RMPAR);
           ELSE;
           If CAAACD = '99' AND CAAFNB = '153990';
             DSPLY ('LVC2UFR') 'ROSANNE';
             DSPLY ('VR BAR38') 'ROSANNE';
             DSPLY (WUWMCJ) 'ROSANNE';
             DSPLY (WUWNCJ) 'ROSANNE';
           ENDIF;
           //AFD
           //LIDNR
           //VOLGNR
           //ACL/RVA
           //REF.MND
           //TOEL ART S36
           //VERG ART S36
           MDBAR388(CAAACD:CAAFNB:WUXUND:WUVMCJ:RMPAR:WUWMCJ:WUWNCJ);
             If CAAACD = '99' AND CAAFNB = '153990';
             DSPLY ('LVC2UFR') 'ROSANNE';
             DSPLY ('NA BAR38') 'ROSANNE';
             DSPLY (WUWMCJ) 'ROSANNE';
             DSPLY (WUWNCJ) 'ROSANNE';
           ENDIF;
         CABSCE = WUWMCJ;                         TOEL ART
         CABRCE = WUWNCJ;                         VERG ART
         ENDIF;
         //AFD
         //LIDNR
         //VOLGNR
         //ACL/RVA
         MDBAR217(CAAACD:CAAFNB:WUXUND:WUVMCJ);
           If CAMBCD = '53';
           HWKL82 = HWKL;
           //AFD
           //LIDNR
           //REF.MND
         MDOCV307(CAAACD:CAAFNB:RMPAR:KBO:RSZ:HVAL6:HHAL6:HWKL82);
           ENDIF;
          // MINERVA OP QUEUE ZETTEN
          //                    MOVEL'A'       ADDDL   1
          //                    MOVEL##USR     GEBR10 10
          //                    CALL 'MDQUE01'
          //                    PARM           CAAACD
          //                    PARM           CAAFNB
          //                    PARM           RMPAR
          //                    PARM           ADDDL
          //                    PARM           GEBR10

     C                   MOVEA     UWIN          *IN(50)
          //----------------------------------------------------
         MDTW011(#1AACD:#1AFNB:RMPAR);
          // Add vorige geg.:betaalsch - Werkloze vorig geg  *
         WUXXXX = '0';            1
         If WUA167 <> CAAKDD; //LAATSTE STEM
           LLLLLL = WUA167;
           //AFD
           //LIDNR
         MDWKLVOR(CAAACD:CAAFNB:LLLLLL:##USR);
           Endif;
          // Inschrijvingsdat    RPGLE - Werkloze inschrijvingsdat  *
         CLEAR   AMRC;
     C                   MOVEL(P)  WUAPCF        AMR7CH                         Maandov INSZ
         AMPPDM = CAGWNB; //Maandov RM
         AMJ7ND = *ZERO; //Maandov volgnr
         CLEAR   ANRC;
     C                   MOVEL(P)  CAAACD        ANLNCJ                         werkloze inschr
     C                   MOVEL(P)  CAAFNB        ANLOCJ                         werkloze inschr
     C                   MOVEL(P)  CAN8CE        ANLPCJ                         werkloze inschr
     C                   MOVEL(P)  *BLANK        ANLQCJ                         werkloze inschr
         ANP9DM = CAA5DM; //Werkloze insch
     C                   MOVEL(P)  CACA01        ANOTCJ                         Werkloze insch

         WXPGM = 'MDBTLINS';            10
     EvalR   WXPGM = 'CH';
         //Inschrijvingsda
         //RCD: Maandoverz
         //RCD: Werkloze i
         //wrk action
         //ErrorCode

         XPG(AMRC:ANRC:WQ0366:WQ0367);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = 'MDBTLINS';           10
     EvalR   W0CLPG = 'CH';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
           *In99 = *On;
         Endif;
          // op queue gaan zetten - Wkl betaling  *
          // MINERVA OP QUEUE ZETTEN
          // GEBEURT IN L0O3UFR BIJ DE AFTER UPDATE MAAR HIER WERKVELDEN
          // AL INVULLEN
         ADDDL = 'A';             1
         GEBR10 = ##USR;           10
         AFDMIN = CAAACD;            2
         LIDMIN = CAAFNB;            6
         RMMIN = RMPAR;
          // HIER NIET MEER OP QUEUE ZETTEN MAAR PAS BIJ DA AFTER UPDATE
          //                    CALL 'MDQUE01'
          //                    PARM           CAAACD
          //                    PARM           CAAFNB
          //                    PARM           RMPAR
          //                    PARM           ADDDL
          //                    PARM           GEBR10

         //Afdeling nr
         //Lid nr
         //Datum achtersta
          // Check for duplicate primary key
         SETLL (CAAACD:CAAFNB:CAGWNB) @CACPGK;
       *in = %equal(); //*
         If *IN90 = '1';
         W0RTN = 'USR0218';             7
            // USER: Processing if Data record already exists
     C                   ROLBK
            // Send message 'Betaling wklh bestaat al]'
         ZAMSID = 'USR4020';
         ' = '*INFO;     ZAMSTP                         Message type
           EXSR ZASNMS;

     C                   GOTO      SJEXIT
         ENDIF;

         WRITE @CACPGK; //*

         If *IN91 = '1';
            // Write error detected
         W0RTN = 'Y2U0004';             7
         ELSE;
            // USER: Processing after Data update
            // op queue zetten na add - Wkl betaling  *
            // MINERVA OP QUEUE ZETTEN
            // VELDEN ZIJN OPGEVULD IN L0O3UFR OP'T EINDE VAN DE BEFORE UPDATE

     C                   COMMIT
         ENDIF;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR SKCHRC;
          //================================================================
          // Change object - Wkl betaling  *
          //================================================================
         W0RTN = *BLANK;             7
          // Move key fields to @CACPGK
     C                   MOVEL(P)  #1AACD        CAAACD                         Afdeling nr
     C                   MOVEL(P)  #1AFNB        CAAFNB                         Lid nr
         CAGWNB = #1GWNB; //Datum achtersta

         //Afdeling nr
         //Lid nr
         //Datum achtersta
         CHAIN (CAAACD:CAAFNB:CAGWNB) @CACPGK ;
       *in90 = (%found() = *Off);
       *in90 = %error(); //*

         If *IN90 = '1';
            // Record not found
         W0RTN = 'Y2U0009';             7
         MDPGM = ##PGM;
         MDACP = 'LVCACPL0';
         MDFMT = '@CACPGK';
         MDACT = '*CHG';
            // Record not found label: LBL001.
         MDLBL = 'LBL001';
            // Send message '*Record no longer on file'
         ZAMSID = 'Y2U0009';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = MD0009;                         Message data
           EXSR ZASNMS;
         MD0009 = *BLANKS;
     C                   GOTO      SKEXIT
         ENDIF;

         If *IN91 = '1';
            // Record locked
         W0RTN = 'Y2U0004';             7
            // Send message '*Database operation error'
         ZAMSID = 'Y2U0004';
         ZAMSGF = 'Y2USRMSG';
           EXSR ZASNMS;
     C                   GOTO      SKEXIT
         ENDIF;

          // Check for changed record
         If #1DBRC <> @1DBRC; //IF
         W0RTN = 'Y2U0007';             7
            // Send message '*Update not accepted'
         ZAMSID = 'Y2U0007';
         ZAMSGF = 'Y2USRMSG';
           EXSR ZASNMS;
            // Release record lock
           UNLOCK LVCACPL0; //*
     C                   GOTO      SKEXIT
         ENDIF; //FI #1DBRC
          // Move non-key fields to @CACPGK
     C                   MOVEL(P)  #1CLCD        CACLCD                         Kateg kode
         CAE9NB = #1E9NB; //Kateg jjmm
     C                   MOVEL(P)  #1ARNB        CAARNB                         Taal kode
     C                   MOVEL(P)  #1EGCD        CAEGCD                         C12 reden kode
     C                   MOVEL(P)  #1N8CE        CAN8CE                         Wkl bet. zone
     C                   MOVEL(P)  #1N9CE        CAN9CE                         Wkl bet. gewest
         CAGGNB = #1GGNB; //VD5
         CAGHNB = #1GHNB; //HD5
         CAGINB = #1GINB; //Uren ged.wkl.
     C                   MOVEL(P)  #1ISCD        CAISCD                         Geen uren ged.
         CAGJNB = #1GJNB; //Y
         CAGKNB = #1GKNB; //Yft
         CAGRNB = #1GRNB; //VW
         CAGSNB = #1GSNB; //Min
         CAGTNB = #1GTNB; //Z+A
         CAGUNB = #1GUNB; //C3.2
         CAJJNB = #1JJNB; //Volle BZ C3.2
         CAJKNB = #1JKNB; //Halve BZ C3.2
         CAGVNB = #1GVNB; //Uren BV
         CAGLNB = #1GLNB; //VD6
         CAGMNB = #1GMNB; //HD6
         CAGNNB = #1GNNB; //Volle dagen ver
         CAJLNB = #1JLNB; //Halve dagen ver
         CAGONB = #1GONB; //Volle dagen vor
         CAJMNB = #1JMNB; //Halve dagen vor
         CAGPNB = #1GPNB; //Volle dagen BZ
         CAJNNB = #1JNNB; //Halve dagen BZ
         CAMINB = #1MINB; //Volle dagen BZ2
         CAMJNB = #1MJNB; //Halve dagen BZ2
         CAG7NB = #1G7NB; //Volle dagen BV
         CAJONB = #1JONB; //Halve dagen BV
         CAGXNB = #1GXNB; //Dagen kbf sankt
         CAHPNB = #1HPNB; //Bedrag wkl
     C                   MOVEL(P)  #1BDST        CABDST                         Geen bedrag wkl
         CAGYNB = #1GYNB; //Bedrag BZ
     C                   MOVEL(P)  #1BCST        CABCST                         Geen dagen/bedr
         CAHCNB = #1HCNB; //Taks
         CAJQNB = #1JQNB; //X2
         CAJRNB = #1JRNB; //RWP
         CALPNB = #1LPNB; //BC aantal
         CALQNB = #1LQNB; //BC bedrag
         CAT4NB = #1T4NB; //Taks wkl
         CAT5NB = #1T5NB; //Taks BZ
         CAGQNB = #1GQNB; //Netto
         CAT6NB = #1T6NB; //Netto wkl
         CAT7NB = #1T7NB; //Netto BZ
     C                   MOVEL(P)  #1DVCD        CADVCD                         Afh1 kode
         CAGZNB = #1GZNB; //Afh1 bedrag
         CAG0NB = #1G0NB; //Afh1 datum
     C                   MOVEL(P)  #1OYCD        CAOYCD                         Afh1 kode TV
     C                   MOVEL(P)  #1O5CD        CAO5CD                         Afh1 laatste ma
     C                   MOVEL(P)  #1DWCD        CADWCD                         Afh2 kode
         CAG1NB = #1G1NB; //Afh2 bedrag
         CAG2NB = #1G2NB; //Afh2 datum
     C                   MOVEL(P)  #1OZCD        CAOZCD                         Afh2 kode TV
     C                   MOVEL(P)  #1O6CD        CAO6CD                         Afh2 laatste ma
     C                   MOVEL(P)  #1DXCD        CADXCD                         Afh3 kode
         CAG3NB = #1G3NB; //Afh3 bedrag
         CAG4NB = #1G4NB; //Afh3 datum
     C                   MOVEL(P)  #1O0CD        CAO0CD                         Afh3 kode TV
     C                   MOVEL(P)  #1O7CD        CAO7CD                         Afh3 laatste ma
     C                   MOVEL(P)  #1DYCD        CADYCD                         Afh4 kode
         CAG5NB = #1G5NB; //Afh4 bedrag
         CAG6NB = #1G6NB; //Afh4 datum
     C                   MOVEL(P)  #1O1CD        CAO1CD                         Afh4 kode TV
     C                   MOVEL(P)  #1O8CD        CAO8CD                         Afh4 laatste ma
     C                   MOVEL(P)  #1EDCD        CAEDCD                         Afh5 kode
         CAHDNB = #1HDNB; //Afh5 bedrag
         CAHENB = #1HENB; //Afh5 datum
     C                   MOVEL(P)  #1O2CD        CAO2CD                         Afh5 kode TV
     C                   MOVEL(P)  #1O9CD        CAO9CD                         Afh5 laatste ma
     C                   MOVEL(P)  #1EECD        CAEECD                         Afh6 kode
         CAHFNB = #1HFNB; //Afh6 bedrag
         CAHGNB = #1HGNB; //Afh6 datum
     C                   MOVEL(P)  #1O3CD        CAO3CD                         Afh6 kode TV
     C                   MOVEL(P)  #1PACD        CAPACD                         Afh6 laatste ma
         CAHJNB = #1HJNB; //DOK periode
     C                   MOVEL(P)  #1WUCD        CAWUCD                         DOK kategorie
         CAIYNB = #1IYNB; //BZ1 dagen
         CAJHNB = #1JHNB; //BZ1 bedrag
     C                   MOVEL(P)  #1L0CD        CAL0CD                         BZ1 kode
         CAIZNB = #1IZNB; //BZ2 dagen
         CAJGNB = #1JGNB; //BZ2 bedrag
     C                   MOVEL(P)  #1L8CD        CAL8CD                         BZ2 kode
         CAI0NB = #1I0NB; //BZ3 dagen
         CAJFNB = #1JFNB; //BZ3 bedrag
     C                   MOVEL(P)  #1L9CD        CAL9CD                         BZ3 kode
         CAI1NB = #1I1NB; //BZ4 dagen
         CAJENB = #1JENB; //BZ4 bedrag
     C                   MOVEL(P)  #1L1CD        CAL1CD                         BZ4 kode
         CAI2NB = #1I2NB; //BZ5 dagen
         CAI8NB = #1I8NB; //BZ5 bedrag
     C                   MOVEL(P)  #1L2CD        CAL2CD                         BZ5 kode
     C                   MOVEL(P)  #1A7ST        CAA7ST                         Zone vorig bare
     C                   MOVEL(P)  #1KBCD        CAKBCD                         Zone vorig bare
     C                   MOVEL(P)  #1KCCD        CAKCCD                         Zone vorig bare
     C                   MOVEL(P)  #1KDCD        CAKDCD                         Zone vorig bare
     C                   MOVEL(P)  #1KECD        CAKECD                         Zone vorig bare
         CAA5DM = #1A5DM; //RVA indieningsm
         CALONB = #1LONB; //RVA UI-afdeling
     C                   MOVEL(P)  #1BIST        CABIST                         RVA type C10
     C                   MOVEL(P)  #1MCCD        CAMCCD                         RVA Gewestelijk
         CAMNCD = #1MNCD; //RVA identificat
     C                   MOVEL(P)  #1MDCD        CAMDCD                         Nr betaler
     C                   MOVEL(P)  #1MBCD        CAMBCD                         Type werklooshe
     C                   MOVEL(P)  #1MECD        CAMECD                         Kode beroep
     C                   MOVEL(P)  #1RQCD        CARQCD                         Kode subberoep
     C                   MOVEL(P)  #1MFCD        CAMFCD                         Barema
         CAMGCD = #1MGCD; //Complement
     C                   MOVEL(P)  #1MOCD        CAMOCD                         Kode BZ
     C                   MOVEL(P)  #1T5CD        CAT5CD                         Wkl adres opdra
     C                   MOVEL(P)  #1T6CD        CAT6CD                         Wkl postnr opdr
     C                   MOVEL(P)  #1T7CD        CAT7CD                         Wkl lokaliteit
     C                   MOVEL(P)  #1T8CD        CAT8CD                         Wkl taal opdrac
     C                   MOVEL(P)  #1MICD        CAMICD                         Wkl naam beguns
     C                   MOVEL(P)  #1MJCD        CAMJCD                         Wkl adres begun
     C                   MOVEL(P)  #1MKCD        CAMKCD                         Wkl postnr begu
     C                   MOVEL(P)  #1VCCD        CAVCCD                         Wkl post subkod
     C                   MOVEL(P)  #1MLCD        CAMLCD                         Wkl lokaliteit
         CAMMCD = #1MMCD; //Wkl banknr begu
     C                   MOVEL(P)  #1MUCD        CAMUCD                         Wkl taalkode be
     C                   MOVEL(P)  #1V6CD        CAV6CD                         Wkl bankkode
         CALJNB = #1LJNB; //Wkl INDIR-indie
         CALKNB = #1LKNB; //Wkl INDIR-UI-af
     C                   MOVEL(P)  #1M4CD        CAM4CD                         Wkl INDIR-type
         CALLNB = #1LLNB; //Wkl INDIR-GWB-n
         CALMNB = #1LMNB; //Wkl INDIR-ident
         CALNNB = #1LNNB; //Wkl INDIR-maand
         CAAKDD = #1AKDD; //Wkl datum laats
         CABANR = #1BANR; //Wkl Yuur
         CABBNR = #1BBNR; //Wkl n-verg. n-g
     C                   MOVEL(P)  #1BKCE        CABKCE                         Wie heeft wklh
     C                   MOVEL(P)  #1BLCE        CABLCE                         Wie heeft BZ be
     C                   MOVEL(P)  #1BMCE        CABMCE                         Verlof 6 dagen
     C                   MOVEL(P)  #1BNCE        CABNCE                         Verlof 6 dagen
     C                   MOVEL(P)  #1BOCE        CABOCE                         Wkl vorstzone
         CABCNR = #1BCNR; //Wkl inhoudingsp
         CABDNR = #1BDNR; //Wkl dagbedrag
         CABENR = #1BENR; //Wkl gemiddeld m
         CABFNR = #1BFNR; //Wkl Q
         CABGNR = #1BGNR; //Wkl S
     C                   MOVEL(P)  #1BPCE        CABPCE                         Wkl verif.05/98
     C                   MOVEL(P)  #1BQCE        CABQCE                         Wkl C10bis
     C                   MOVEL(P)  #1BRCE        CABRCE                         Wkl vergoedbaar
     C                   MOVEL(P)  #1BSCE        CABSCE                         Wkl toelaatbaar
         CAM7DD = #1M7DD; //Wkl datum begin
         CAM8DD = #1M8DD; //Wkl laatst verg
         CAM9DD = #1M9DD; //Wkl laatst geco
     C                   MOVEL(P)  #1BTCE        CABTCE                         Wkl sanctiecode
         CANADD = #1NADD; //Wkl begindatum
         CANBDD = #1NBDD; //Wkl einddatum s
     C                   MOVEL(P)  #1BUCE        CABUCE                         Wkl sanctiecode
         CANCDD = #1NCDD; //Wkl begindatum
         CANDDD = #1NDDD; //Wkl einddatum s
     C                   MOVEL(P)  #1PICD        CAPICD                         Wkl add-user
         CAASDD = #1ASDD; //Wkl add-datum
         CAALTM = #1ALTM; //Wkl add-time
     C                   MOVEL(P)  #1CA01        CACA01                         Wkl bet betaald
         CAY4NB = #1Y4NB; //Wkl bet Uitv.da
         CAFXNR = #1FXNR; //Wkl bet NBR vri
         CAFYNR = #1FYNR; //Wkl bet NBR vri
         CAFZNR = #1FZNR; //Wkl bet NBR vri
         CAF0NR = #1F0NR; //Wkl bet NBR vri
         CAF1NR = #1F1NR; //Wkl bet NBR vri
     C                   MOVEL(P)  #1MOCE        CAMOCE                         Wkl bet CDE vri
     C                   MOVEL(P)  #1MPCE        CAMPCE                         Wkl bet CDE vri
     C                   MOVEL(P)  #1MQCE        CAMQCE                         Wkl bet CDE vri
     C                   MOVEL(P)  #1MRCE        CAMRCE                         Wkl bet CDE vri
         CAIVDM = #1IVDM; //Wkl bet DTM vri
         CAIWDM = #1IWDM; //Wkl bet DTM vri
         CAPWDD = #1PWDD; //Wkl bet DTD vri
         CAPXDD = #1PXDD; //Wkl bet DTD vri
     C                   MOVEL(P)  #1GDCE        CAGDCE                         Wkl betaling BE

         UPDATE @CACPGK; //*
         If *IN91 = '1';
            // Change error detected
         W0RTN = 'Y2U0004';             7
         ELSE;

            // Update saved record image
         #1DBRC = @1DBRC;
            // DBF change successful
            // USER: Processing after Data update
     C                   COMMIT
         ENDIF;
          //================================================================
       ENDSR;
       BEGSR SPBZH;
         TOTBOU = #1BDNB + #1BENB; //KR.BZ+KR.BZ2
         TOTBZ = HHBZ / 2; //HBZ-->VOL BZ
         TOTBZ = TOTBZ + HVBZ; //DGBZ&HDGBZ
         If TOTBZ > #1BDNB;
           HKRRES = TOTBZ - #1BDNB;
           HVBZ1B = #1BDNB;
     EvalR   HHBZHU = #1BDNB;
           If HHBZHU = 0;
             HHBZ1B = 0;
           ELSE;
             HHBZ1B = 1;
           Endif;
           If HKRRES > #1BENB;
             HVBZ2B = #1BENB;
     EvalR   HHBZHU = #1BENB;
             If HHBZHU = 0;
               HHBZ2B = 0;
             ELSE;
               HHBZ2B = 1;
             Endif;
           ELSE;
             HVBZ2B = HKRRES;
     EvalR   HHBZHU = HKRRES;
             If HHBZHU = 0;
               HHBZ2B = 0;
             ELSE;
               HHBZ2B = 1;
             Endif;
           ENDIF;
         ELSE;
           HVBZ1B = HVBZ;
           HHBZ1B = HHBZ;
           HVBZ2B = 0;
           HHBZ2B = 0;
         ENDIF;
         HVBZ = HVBZ1B + HVBZ2B;
         HHBZ = HHBZ1B + HHBZ2B;
         If #1A1CD = '03';
           EXSR GNVBZ;
         ENDIF;
       ENDSR;
        //------------------------------------------------------------------------
       BEGSR SPBZV;
         TOTBOU = #1BFNB + #1BGNB; //KR.BZ+KR.BZ2
         TOTBZ = HHBZ / 2; //HBZ-->VOL BZ
         TOTBZ = TOTBZ + HVBZ; //DGBZ&HDGBZ
         If TOTBZ > #1BFNB;
           HKRRES = TOTBZ - #1BFNB;
           HVBZ1B = #1BFNB;
     EvalR   HHBZHU = #1BFNB;
           If HHBZHU = 0;
             HHBZ1B = 0;
           ELSE;
             HHBZ1B = 1;
           Endif;
           If HKRRES > #1BGNB;
             HVBZ2B = #1BGNB;
     EvalR   HHBZHU = #1BGNB;
             If HHBZHU = 0;
               HHBZ2B = 0;
             ELSE;
               HHBZ2B = 1;
             Endif;
           ELSE;
             HVBZ2B = HKRRES;
     EvalR   HHBZHU = HKRRES;
             If HHBZHU = 0;
               HHBZ2B = 0;
             ELSE;
               HHBZ2B = 1;
             Endif;
           ENDIF;
         ELSE;
           HVBZ1B = HVBZ;
           HHBZ1B = HHBZ;
           HVBZ2B = 0;
           HHBZ2B = 0;
         ENDIF;
         HVBZ = HVBZ1B + HVBZ2B;
         HHBZ = HHBZ1B + HHBZ2B;
         If #1A1CD = '03';
           EXSR GNVBZ;
         ENDIF;
       ENDSR;
        //----------------------------------------------------------------------
       BEGSR TBTV;
         TELTV = 0;
         TELTBM = 0;
         PS1AF1 = #1DVCD;            1            TB- OF G1
         If #1DVCD <> *BLANK;
           EXSR COTVTV;
         Endif; //AFH1 INGEVUL
         If #1DVCD = 'TB-' OR #1DVCD = 'TG-';
           TELTBM = TELTBM + 1;
         ENDIF;
         PS1AF1 = #1DWCD;            1            TB- OF G1
         If #1DWCD <> *BLANK;
           EXSR COTVTV;
         Endif; //AFH2 INGEVUL
         If #1DWCD = 'TB-' OR #1DWCD = 'TG-';
           TELTBM = TELTBM + 1;
         ENDIF;
         PS1AF1 = #1DXCD;            1            TB- OF G1
         If #1DXCD <> *BLANK;
           EXSR COTVTV;
         Endif; //AFH3 INGEVUL
         If #1DXCD = 'TB-' OR #1DXCD = 'TG-';
           TELTBM = TELTBM + 1;
         ENDIF;
         PS1AF1 = #1DYCD;            1            TB- OF G1
         If #1DYCD <> *BLANK;
           EXSR COTVTV;
         Endif; //AFH4 INGEVUL
         If #1DYCD = 'TB-' OR #1DYCD = 'TG-';
           TELTBM = TELTBM + 1;
         ENDIF;
         PS1AF1 = #1EDCD;            1            TB- OF G1
         If #1EDCD <> *BLANK;
           EXSR COTVTV;
         Endif; //AFH5 INGEVUL
         If #1EDCD = 'TB-' OR #1EDCD = 'TG-';
           TELTBM = TELTBM + 1;
         ENDIF;
         PS1AF1 = #1EECD;            1            TB- OF G1
         If #1EECD <> *BLANK;
           EXSR COTVTV;
         Endif; //AFH6 INGEVUL
         If #1EECD = 'TB-' OR #1EECD = 'TG-';
           TELTBM = TELTBM + 1;
         ENDIF;

         If TELTBM = 0 AND TELTV > 0;
     EvalR   WUGDCD = '4';
         ENDIF;
       ENDSR;

       BEGSR TCHINH;
         If BZINH <= HBEDBZ;
           HBEDBZ = HBEDBZ - BZINH;
         ELSE;
           BZINH = HBEDBZ;
           HBEDBZ = 0;
         ENDIF;
       ENDSR;
       BEGSR TESTIN;
         POS6 = BARC10;              6            BAREMA RVA
         If POS6 = '..T...' OR POS6 = '..W...' OR POS6 = '..TN..' OR POS6 = '..WN..' OR POS6 = '..WN3.' OR POS6 = '..WN4.' OR POS6 = '..WP3.' OR POS6 = '..WP4.' OR POS6 = '..WB3.' OR POS6 = '..WB4.' OR POS6 = '..TP..' OR POS6 = '..WP..' OR POS6 = '..X...' OR POS6 = '..XN..' OR POS6 = '..XP..' OR POS6 = '..J...' OR POS6 = '..JN..' OR POS6 = '..JP..' OR POS6 = '..I...' OR POS6 = '..IN..' OR POS6 = '..IP..' OR POS6 = '..H...' OR POS6 = '..HN..' OR POS6 = '..HP..' OR POS6 = '..V...' OR POS6 = '..VN..' OR POS6 = '..VP..';
           If PD1AL <> *ZERO;
             LEEFTT = #1GWNB - PD1AL;
             LEEFT = LEEFTT / 100; //4793-->47JR
             If LEEFTT < 1500; //JONGER 16JR
         WUF0CD = '1';                         ERROR
             ELSE;
               If LEEFTT >= 2100;
                 LEEFT = 21; //            LE
               Endif; //>=2100
               If LEEFTT >= 2500;
                 If POS6 = '..TN..' OR POS6 = '..WN..' OR POS6 = '..WN3.' OR POS6 = '..WN4.' OR POS6 = '..XN..' OR POS6 = '..JN..' OR POS6 = '..IN..' OR POS6 = '..HN..' OR POS6 = '..VN..';
                   If #1GWNB >= 199907;
                     LEEFT = 25; //            LE
                   Endif; //VNF 199907
                 Endif; //TN/WN/XN
               Endif; //>=2500
             Endif; //<1600
              // VANAF 11/96 ENKEL OP OVERGANG BIJ BEDRAGEN BLOKKEREN:VOOR ALLEENSTAANDEN
              // IS DIT OP 18 EN 21 JAAR, VOOR SAMENWONENDEN IS DIT OP 18 JAAR
             If POS6 = '..T...' OR POS6 = '..W...' OR POS6 = '..X...' OR POS6 = '..J...' OR POS6 = '..TP..' OR POS6 = '..WP..' OR POS6 = '..WP3.' OR POS6 = '..WP4.' OR POS6 = '..WB3.' OR POS6 = '..WB4.' OR POS6 = '..XP..' OR POS6 = '..JP..' OR POS6 = '..I...' OR POS6 = '..H...' OR POS6 = '..V...' OR POS6 = '..IP..' OR POS6 = '..HP..' OR POS6 = '..VP..';
               If LEEFTT = 1800;
                 If #1BDST <> 'N';
         WUF2CD = '1';                         ERRORMESSAGE
                 Endif; //BEDRG WKL=N
               Endif; //=1800
             Endif; //=T,W,...
             If POS6 = '..TN..' OR POS6 = '..WN..' OR POS6 = '..WN3.' OR POS6 = '..WN4.' OR POS6 = '..XN..' OR POS6 = '..JN..' OR POS6 = '..IN..' OR POS6 = '..HN..' OR POS6 = '..VN..';
               If LEEFTT = 1800 OR LEEFTT = 2100 OR LEEFTT = 2500;
                 If #1BDST <> 'N';
         WUF2CD = '1';                         ERRORMESSAGE
                   If LEEFTT = 2500 AND #1GWNB >= 200009 AND #1GWNB < 200410;
         WUF2CD = '0';                         GEEN FOUT MEER
                   ENDIF; //25JR/VANAF09200
                   If LEEFTT = 2500;
                     If #1GWNB >= 200607;
         WUF2CD = '0';                         GEEN FOUT MEER
                     ENDIF; //VANAF072006
                   ENDIF; //25JR
                 Endif; //BEDRG WKL=N
               Endif; //=1800
             Endif; //=T,W,...
           Endif; //PENSNR NT 0
         Endif; //T,W,TN,WN,TP
       ENDSR;
       BEGSR TSTT10;
         LET1 = BOBQCD;              1
         If LET1 = 'S' AND BOMK01 = '10' AND BON5CE = '999' AND WUW297 = '0'; //S=BESLAG
         WUW297 = '1';                         ER IS EEN BE
           WAAR10 = BSLT10;
         ENDIF;
         If LET1 = 'S' AND BOMK01 = '20' AND WUW303 = '0'; //S=BESLAG
         WUW303 = '1';                         ER IS EEN BE
           WAAR20 = BSLT10;
         WUXMCF = BOBQCD;                         BESLAGCODE
         ENDIF;
       ENDSR; //=20=FBZ 10=BESCH.WER
        //-------------------------------------------------------------------------
       BEGSR T09DAG;
         SOM = HVTOT6 * #1DDNB;
         If HHTOT6 <> *ZERO;
           SOM3 = HHTOT6 * #1DDNB;
           If #1A1CD <> '10';
             EVAL(H) SOM2 = SOM3 / 2;
           ELSE;
             SOM2 = SOM3;
           ENDIF;
           SOM = SOM + SOM2; //+1 HALVE DAG
         ENDIF;
       ENDSR;
        // BEREKENEN VOLGENS DAGBEDRAG/BAREMABEDRAG VERMINDERD MET INH.%
       BEGSR T09HVB;
         SOM = HVTOT6 * HVBAR;
         If HHTOT6 <> *ZERO;
           SOM2 = HHTOT6 * HHBAR;
           SOM = SOM + SOM2; //+1 HALVE DAG
         Endif; //END DECIM
       ENDSR;
       BEGSR UDMBEG;
     EvalR   UDMMIS = '0';            1
         If UDTM1 < 18 OR UDTM1 > 20 OR UDTM3 = 0 OR UDTM3 > 12;
     EvalR   UDMMIS = '1';
         Endif;
       ENDSR;
       BEGSR UDDBEG;
     EvalR   UDDMIS = '0';            1
         If UDTD1 < 18 OR UDTD1 > 20;
     EvalR   UDDMIS = '1';
     C                   GOTO      UDDEND
         Endif;
         If UDTD3 < 1 OR UDTD3 > 12;
     EvalR   UDDMIS = '1';
     C                   GOTO      UDDEND
         Endif;
         If UDTD4 < 1 OR UDTD4 > DD(UDTD3);
     EvalR   UDDMIS = '1';
         Endif;
         If UDTD3 = 2;
           UDTD5 = UDTD2 / 4;
     C                   MVR                     UDTD6             3 0
           If UDTD6 <> *ZERO AND UDTD4 > 28;
     EvalR   UDDMIS = '1';
           Endif;
         Endif;
       ENDSR;
       BEGSR UITVDA;
         MAGBES = 'Y';                         ER IS EEN BE
         If BOMQDD > 0 AND BOMQDD > DT2BNK; //START UITVOERBAARHEI
         MAGBES = 'N';                         NOG NIET ACTIEF
           MAGBEN = MAGBEN + 1;
     C                   GOTO      STOCON                                       DUS NOG GEEN BESLAG
         ENDIF; //START UITVOERBRHEID

         If BOMQDD > 0 AND BOMQDD <= DT2BNK; //START UITVOERBAARHEI
           If BOMRDD = 0; //EINDDATUM ONEINDIG
         MAGBES = 'Y';                         MAG BESLAG AFHOUDEN
     C                   GOTO      STOCON
           ELSE; //EINDDTM INGEVULD
             If BOMRDD > DT2BNK; //EINDDTM>BETAALDTM BA
         MAGBES = 'Y';                         MAG BESLAG AFHOUDEN
     C                   GOTO      STOCON
             ELSE; //EINDDTM<=BETAALDTM B
         MAGBES = 'N';                         VERVALEN==>GN BESL A
               MAGBEN = MAGBEN + 1;
     C                   GOTO      STOCON
             ENDIF;
           ENDIF;
         ENDIF;
       ENDSR;
        //-------------------------------------------------------------------------
       /EJECT
       BEGSR VACKRL;
          //================================================================
          // Check reference to Werkloze
          //================================================================
         W0RTN = *BLANK;             7
          // If all low order keys not entered, exit
         If #1AFNB = *BLANK; //Lid nr
     C                   GOTO      VAEXIT
         Endif;

         //Afdeling nr
         //Lid nr
          // Setup key
         A1AACD = #1AACD;
         A1AFNB = #1AFNB;
         CHAIN (A1AACD:A1AFNB) @A1CPC0 ;
       *in90 = (%found() = *Off);
       *in90 = %error(); //*
         If *IN90 = '0';
            // Record found - move back any virtuals
           #1AEDD = A1AEDD; //Datum laatste b
         #1ADNA = A1ADNA;                         Lid adres
         #1AMTX = A1AMTX;                         Lid naam
         #1ADCD = A1ADCD;                         Post nr
         #1ABTX = A1ABTX;                         Lokaliteit
           #1AHNB = A1AHNB; //Ontsl jjmm
         #1AINB = A1AINB;                         Pensioennr jjmm
         #1AJNB = A1AJNB;                         Pensioennr d2
         #1AKNB = A1AKNB;                         Rijksreg d1
         #1FGNB = A1FGNB;                         Rijksreg d2
         #1FHNB = A1FHNB;                         Rijksreg d3
         #1BRNB = A1BRNB;                         Rekening d1
         #1FMNB = A1FMNB;                         Rekening d2
         #1FNNB = A1FNNB;                         Rekening d3
         #1AATX = A1AATX;                         Afd naam
         #1A2CD = A1A2CD;                         GWB nr
         #1BTNB = A1BTNB;                         Gemeente nr
         #1A3CD = A1A3CD;                         Betaler kode
         #1A4CD = A1A4CD;                         BZ kode
         #1A6CD = A1A6CD;                         Vrijstelling ko
         #1DOCD = A1DOCD;                         Barema RVAkode
         #1A1CD = A1A1CD;                         Type wklh. kode
           #1ADDT = A1ADDT; //Datum 40%
           #1AEDT = A1AEDT; //Datum OP-code
           #1BCNB = A1BCNB; //Datum C7
           #1AGDT = A1AGDT; //Datum C1verval
           #1AFDT = A1AFDT; //Datum verblijfs
           #1AHDT = A1AHDT; //Datum forfait
           #1AIDT = A1AIDT; //Datum arbeidsve
           #1AKDT = A1AKDT; //Datum begin wkl
           #1BDNB = A1BDNB; //Krediet BZ
           #1BENB = A1BENB; //Krediet BZ2
           #1BFNB = A1BFNB; //Krediet BZvj
           #1BGNB = A1BGNB; //Krediet BZ2vj
         #1A7CD = A1A7CD;                         Belasting kode
           #1DBNB = A1DBNB; //Q
           #1DCNB = A1DCNB; //S
           #1DDNB = A1DDNB; //Dagbedrag
           #1F4NB = A1F4NB; //BZ jaar
           #1F3NB = A1F3NB; //Qx4
           #1F5NB = A1F5NB; //Barema compl
         #1BITX = A1BITX;                         Wkl tekst
         #1AKST = A1AKST;                         W1zo
         #1ALST = A1ALST;                         W1ma
         #1AMST = A1AMST;                         W1di
         #1ANST = A1ANST;                         W1wo
         #1AOST = A1AOST;                         W1do
         #1APST = A1APST;                         W1vr
         #1AQST = A1AQST;                         W1za
         #1ARST = A1ARST;                         Vakbondsmandaat
         #1ASST = A1ASST;                         AnciÃ«nniteit
         #1ATST = A1ATST;                         C104 drukken
           #1DFNB = A1DFNB; //VW lm
           #1DGNB = A1DGNB; //GW lm
           #1DHNB = A1DHNB; //VW vm
           #1DINB = A1DINB; //GW vm
         #1A3NB = A1A3NB;                         Haven kategorie
         #1ATNB = A1ATNB;                         Geslacht kode
         #1BACD = A1BACD;                         Beroep kode
         #1BCCD = A1BCCD;                         Subberoep kode
           #1AMDT = A1AMDT; //Datum einde san
           #1ALDT = A1ALDT; //Datum begin san
           #1C9NB = A1C9NB; //Datum begin vri
           #1DANB = A1DANB; //Datum einde vri
         #1CMCD = A1CMCD;                         Betalingsw kode
         #1FVNB = A1FVNB;                         VSOA nr
         #1ABST = A1ABST;                         Invaliditeit 33
           #1A9NB = A1A9NB; //Beroepsverl jr
           #1BANB = A1BANB; //Beroepsverl dg
         #1MVCD = A1ARNB;                         Taal kode
           #1KZNB = A1KZNB; //Afd U.I.-kode
           #1FBNB = A1FBNB; //Kateg bedragA-l
         #1M5CD = A1CLCD;                         Kateg kode
           #1ANDM = A1E9NB; //Kateg jjmm
         #1AZCD = A1AZCD;                         Lid taal kode
           #1AJDT = A1AJDT; //Datum laatste s
         #1A5CD = A1A5CD;                         KBF nr
         #1AWCD = A1AWCD;                         KBF dossiernr
         #1ARCD = A1ARCD;                         Wkl rekening ko
         #1C8NB = A1C8NB;                         Wkl rekening d1
         #1F6NB = A1F6NB;                         Wkl rekening d2
         #1F7NB = A1F7NB;                         Wkl rekening d3
         #1A4NB = A1A4NB;                         Haven reg nr
         #1BYNB = A1BYNB;                         Haven reg digit
         #1BKCD = A1BKCD;                         VSOA groep kode
           #1ACDT = A1ACDT; //Datum aanvr ber
           #1A6DM = A1A6DM; //Datum vakbondsm
         #1TRCD = A1TRCD;                         Post subkode
           #1AGNB = A1AGNB; //Aansl jjmm
         #1VACD = A1VACD;                         Wkl-foutkode
         #1V8CD = A1V8CD;                         Pensioennr digi
         #1BBNB = A1BBNB;                         Zone vorst
         #1BVCE = A1BNCD;                         Sanktie kode
           #1ACNR = A1ACNR; //Sanctie1 aantal
           #1MBDD = A1MBDD; //Datum begin san
           #1MCDD = A1MCDD; //Datum einde san
           #1ADNR = A1ADNR; //Sanctie2 aantal
         #1AYCE = A1AYCE;                         vrijstelling2 V
         #1MJ01 = A1MJ01;                         Toelaatbaarheid
         #1MM01 = A1MM01;                         Vergoedbaarheid
         #1AWCE = A1AWCE;                         0-code Vergoedb
         #1NA01 = A1NA01;                         Code beslissing
           #1MDDD = A1MDDD; //Laatst gecontro
           #1MEDD = A1MEDD; //Laatst vergoede
           #1MFDD = A1MFDD; //Datum laatste s
           #1MHDD = A1MHDD; //Datum barema
           #1MIDD = A1MIDD; //Datum begin vri
           #1MJDD = A1MJDD; //Datum einde vri
           #1MLDD = A1MLDD; //Datum 0-code
           #1MMDD = A1MMDD; //Datum begin bij
           #1MNDD = A1MNDD; //Datum einde bij
           #1AENR = A1AENR; //Bedrag belast.
         #1NB01 = A1NB01;                         Code bijz. verg
         #1MJ02 = A1MJ02;                         Toelaatbaar cod
         #1ASCE = A1ASCE;                         Vergoedbaarheid
         #1BWCE = A1BWCE;                         0-code Vergoedb
         #1LJCE = A1LJCE;                         Lid SIS-kaartnr
           #1MGDD = A1MGDD; //Datum inschrijv
           #1NENB = A1NENB; //VSOA nr(nieuw)
         #1ECST = A1ECST;                         Meerdere part-t
           #1EVNR = A1EVNR; //Werkloze NBR vr
           #1EWNR = A1EWNR; //Werkloze NBR vr
           #1EXNR = A1EXNR; //Werkloze NBR vr
           #1EYNR = A1EYNR; //Werkloze NBR vr
           #1EZNR = A1EZNR; //Werkloze NBR vr
           #1E0NR = A1E0NR; //Werkloze NBR vr
           #1E1NR = A1E1NR; //Werkloze NBR vr
           #1IEDM = A1IEDM; //Werkloze DTM vr
           #1IFDM = A1IFDM; //Werkloze DTM vr
           #1O6DD = A1O6DD; //Werkloze DTD vr
           #1O7DD = A1O7DD; //Werkloze DTD vr
         #1KVCE = A1KVCE;                         Werkloze CDE vr
         #1KWCE = A1KWCE;                         Werkloze CDE vr
         #1KXCE = A1KXCE;                         Werkloze CDE vr
         #1KYCE = A1KYCE;                         Werkloze CDE vr
         #1KZCE = A1KZCE;                         Werkloze CDE vr
         #1K0CE = A1K0CE;                         Werkloze CDE vr
         #1NCCE = A1LX01;                         Zone code
         #1NDCE = A1LZ01;                         Gewest code
         #1FICE = A1FICE;                         Werkloze BEF/EU
         #1AUNB = A1AUNB;                         Arb-bed kode
         #1AXNB = A1AXNB;                         Burgerlijke sta
         #1AJST = A1AJST;                         Vrijstelling ei
         #1AXCE = A1AXCE;                         vrijstelling2 T
         #1AZCE = A1AZCE;                         sanctie1 Taal k
           #1AFNR = A1AFNR; //Maximum # weken
         #1PICE = A1PICE;                         sanctie2 Taal k
         #1PJCE = A1PJCE;                         sanctie2 Sankti
           #1IQNR = A1IQNR; //sanctie2 Maximu
         #1A9CD = A1A9CD;                         Arbeidsovk kode
         #1AVCE = A1AVCE;                         0-code Taal kod
           #1MKDD = A1MKDD; //Datum berek. be
         #1ATCE = A1ATCE;                         GeÃ¯ntegreerd
     C                   GOTO      VAEXIT
         Endif;
          // Send message 'Werkloze               NF'
         ZAMSID = 'USR0055';
         EXSR ZASNMS;
         W0RTN = 'USR0055';
          //================================================================
       ENDSR;
       /EJECT
       BEGSR VBCKRL;
          //================================================================
          // Check reference to Kateg suppl
          //================================================================
         W0RTN = *BLANK;             7
          // Name search required?
         WK1X01 = #1AACD;            1
         WK1X02 = #1CLCD;            1
         If WK1X01 = '?' OR WK1X02 = '?'; //Afdeling nr
            // Y2W0053 - One or more arguments defaulted to available contexts
            // Field '(DTL) #1AACD' defaulted for 'Afdeling nr'.
            // Field '(DTL) #1CLCD' defaulted for 'Kateg kode'.
            // Field '(DTL) #1E9NB' defaulted for 'Kateg jjmm'.
           //Select Kategori
           //Afdeling nr
           //Kateg kode
           //Kateg jjmm

           LVDISRR(W0RTN:WQ0361:WQ0362:WQ0363);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVDISRR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK AND W0RTN <> 'Y2U0016';
             *In99 = *On;
           Endif;
            // Defer confirm
         W0DCF = 'Y';             1
            // No value selected, exit
           If W0RTN <> *BLANK;
     C                   GOTO      VBEXIT
           Endif;
         Endif;
          //................................................................
          // If all low order keys not entered, exit
         If #1CLCD = *BLANK AND #1E9NB = *ZERO; //Kateg kode
     C                   GOTO      VBEXIT
         Endif;

         //Afdeling nr
         //Kateg kode
         //Kateg jjmm
          // Setup key
         B1AACD = #1AACD;
         B1CLCD = #1CLCD;
         B1E9NB = #1E9NB;
         CHAIN (B1AACD:B1CLCD:B1E9NB) @B1REEU ;
       *in90 = (%found() = *Off);
       *in90 = %error(); //*
         If *IN90 = '0';
            // Record found - move back any virtuals
     C                   GOTO      VBEXIT
         Endif;
          // Send message 'Kateg suppl            NF'
         ZAMSID = 'USR0134';
         EXSR ZASNMS;
         W0RTN = 'USR0134';
          //================================================================
       ENDSR;
       /EJECT
       BEGSR VCCKRL;
          //================================================================
          // Check reference to C12 reden
          //================================================================
         W0RTN = *BLANK;             7
          // Name search required?
         WK1X01 = #1ARNB;            1
         WK1X02 = #1EGCD;            1
         If WK1X01 = '?' OR WK1X02 = '?'; //Taal kode
            // Y2W0053 - One or more arguments defaulted to available contexts
            // Field '(DTL) #1ARNB' defaulted for 'Taal kode'.
            // Field '(DTL) #1EGCD' defaulted for 'C12 reden kode'.
           //Select C12 rede
           //Taal kode
           //C12 reden kode

           LVLRSRR(W0RTN:WQ0364:WQ0365);
             If *IN90 = '1';
              // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LVLRSRR';
              // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
             EXSR ZASNMS;
           Endif;
            // Error detected?
           If W0RTN <> *BLANK AND W0RTN <> 'Y2U0016';
             *In99 = *On;
           Endif;
            // Defer confirm
         W0DCF = 'Y';             1
            // No value selected, exit
           If W0RTN <> *BLANK;
     C                   GOTO      VCEXIT
           Endif;
         Endif;
          //................................................................
          // If all low order keys not entered, exit
         If #1ARNB = *BLANK AND #1EGCD = *BLANK; //Taal kode
     C                   GOTO      VCEXIT
         Endif;

         //Taal kode
         //C12 reden kode
          // Setup key
         CBARNB = #1ARNB;
         CBEGCD = #1EGCD;
         CHAIN (CBARNB:CBEGCD) @CBREGM ;
       *in90 = (%found() = *Off);
       *in90 = %error(); //*
         If *IN90 = '0';
            // Record found - move back any virtuals
         #1BRTX = CBBRTX;                         C12 reden tekst
     C                   GOTO      VCEXIT
         Endif;
          // Send message 'C12 reden              NF'
         ZAMSID = 'USR0221';
         EXSR ZASNMS;
         W0RTN = 'USR0221';
          //================================================================
       ENDSR;
       BEGSR VERWIS;
     EvalR   LET1 = #1DOCD;              1
         If WAAR10 < WAAR20;
           If #1A1CD = 'CA' AND LET1 = 'F';
             If WAAR10 = 1;
         SSSS10 = #1DVCD;            3
               BBBB10 = #1GZNB;
             ENDIF;
             If WAAR10 = 2;
         SSSS10 = #1DWCD;
               BBBB10 = #1G1NB;
             ENDIF;
             If WAAR10 = 3;
         SSSS10 = #1DXCD;
               BBBB10 = #1G3NB;
             ENDIF;
             If WAAR10 = 4;
         SSSS10 = #1DYCD;
               BBBB10 = #1G5NB;
             ENDIF;
             If WAAR10 = 5;
         SSSS10 = #1EDCD;
               BBBB10 = #1HDNB;
             ENDIF;
             If WAAR20 = 2;
         SSSS20 = #1DWCD;            3
               BBBB20 = #1G1NB;
             ENDIF;
             If WAAR20 = 3;
         SSSS20 = #1DXCD;
               BBBB20 = #1G3NB;
             ENDIF;
             If WAAR20 = 4;
         SSSS20 = #1DYCD;
               BBBB20 = #1G5NB;
             ENDIF;
             If WAAR20 = 5;
         SSSS20 = #1EDCD;
               BBBB20 = #1HDNB;
             ENDIF;
             If WAAR20 = 6;
         SSSS20 = #1EECD;
               BBBB20 = #1HFNB;
             ENDIF;
              // NU DE JUISTE WAARDEN OMKEREN VAN 20 NAAR 10
             If WAAR20 = 2;
         #1DWCD = SSSS10;
               #1G1NB = BBBB10;
             ENDIF;
             If WAAR20 = 3;
         #1DXCD = SSSS10;
               #1G3NB = BBBB10;
             ENDIF;
             If WAAR20 = 4;
         #1DYCD = SSSS10;
               #1G5NB = BBBB10;
             ENDIF;
             If WAAR20 = 5;
         #1EDCD = SSSS10;
               #1HDNB = BBBB10;
             ENDIF;
             If WAAR20 = 6;
         #1EECD = SSSS10;
               #1HFNB = BBBB10;
             ENDIF;
             If WAAR10 = 1;
         #1DVCD = SSSS20;
               #1GZNB = BBBB20;
             ENDIF;
             If WAAR10 = 2;
         #1DWCD = SSSS20;
               #1G1NB = BBBB20;
             ENDIF;
             If WAAR10 = 3;
         #1DXCD = SSSS20;
               #1G3NB = BBBB20;
             ENDIF;
             If WAAR10 = 4;
         #1DYCD = SSSS20;
               #1G5NB = BBBB20;
             ENDIF;
             If WAAR10 = 5;
         #1EDCD = SSSS20;
               #1HDNB = BBBB20;
             ENDIF;
           ENDIF; //F BAREMA
         ENDIF; //WAAR10<WAAR20
       ENDSR;
       BEGSR VERL21;
         If MNDACH = 1;
           DJFKNN = DJFKNN + TOTV; //VERLOF  V01
         ENDIF;
         If MNDACH = 2;
           DJFLNN = DJFLNN + TOTV; //VERLOF  V02
         ENDIF;
         If MNDACH = 3;
           DJFMNN = DJFMNN + TOTV; //VERLOF  V03
         ENDIF;
         If MNDACH = 4;
           DJFNNN = DJFNNN + TOTV; //VERLOF  V04
         ENDIF;
         If MNDACH = 5;
           DJFONN = DJFONN + TOTV; //VERLOF  V05
         ENDIF;
         If MNDACH = 6;
           DJFPNN = DJFPNN + TOTV; //VERLOF  V06
         ENDIF;
         If MNDACH = 7;
           DJFQNN = DJFQNN + TOTV; //VERLOF  V07
         ENDIF;
         If MNDACH = 8;
           DJFRNN = DJFRNN + TOTV; //VERLOF  V08
         ENDIF;
         If MNDACH = 9;
           DJFSNN = DJFSNN + TOTV; //VERLOF  V09
         ENDIF;
         If MNDACH = 10;
           DJFTNN = DJFTNN + TOTV; //VERLOF  V10
         ENDIF;
         If MNDACH = 11;
           DJFUNN = DJFUNN + TOTV; //VERLOF  V11
         ENDIF;
         If MNDACH = 12;
           DJFVNN = DJFVNN + TOTV; //VERLOF  V12
         ENDIF;
       ENDSR;
       /EJECT
       BEGSR Y0SET;
          //================================================================
          // Set cursor by *SET CURSOR data
          //================================================================
          //================================================================
       ENDSR;
       /EJECT
       BEGSR Y1SET;
          //================================================================
          // Set cursor by *SET CURSOR data
          //================================================================
         If *IN25 = '0';
            // Bypass when help done
           *In94 = *Off;
           If W0OVR1 = '1' OR W0OVR1 = '0' AND *IN99 = '0';
              // If override or no error
             *In94 = *On;
             ZZCSRW = W0ROW1;
             ZZCSCL = W0COL1;
           Endif;
         Endif;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR Y2SET;
          //================================================================
          // Set cursor by *SET CURSOR data
          //================================================================
          //================================================================
       ENDSR;
       /EJECT
       BEGSR Y8TST;
          //================================================================
          // Test cursor
          //================================================================
         If @#DFMT = '#RCDKEY';
            // KEY Screen
           ZINPOS = @#RWCL;
           W0CRW = ZINPOS / 256;
     C                   MVR                     W0CCL
         ENDIF;
         If @#DFMT = '#RCDDTL1';
            // DETAIL Screen
           ZINPOS = @#RWCL;
           W0CRW = ZINPOS / 256;
     C                   MVR                     W0CCL
         ENDIF;
         If @#DFMT = '#RCDDTL2';
            // DETAIL 2 Screen
           ZINPOS = @#RWCL;
           W0CRW = ZINPOS / 256;
     C                   MVR                     W0CCL
         ENDIF;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR Y9CLR;
          //================================================================
          // Clear *SET CURSOR data
          //================================================================
         *In94 = *Off;
         W0ROW1 = 0;
         W0COL1 = 0;
     EvalR   W0OVR1 = '2';            1
          //================================================================
       ENDSR;
       /EJECT
       BEGSR ZASNMS;
          //================================================================
          // Send message to program's message queue
          //================================================================
         If ZAPGMQ = *BLANK;
         ZAPGMQ = ##PGM;
         Endif;
          // If no message file specified, use default
         If ZAMSGF = *BLANK;
         ZAMSGF = ZADFMF;
         Endif;
         //Program queue
         //Rel queue
         //Message ID
         //Message file
         //Message data
         //Message type
          // Clear all fields for default mechanism next time
         ZAPGMQ = *BLANK;
         ZAPGRL = *BLANK;
         ZAMSID = *BLANK;
         ZAMSGF = *BLANK;
         ZAMSDA = *BLANK;
         ZAMSTP = *BLANK;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR ZHHPKY;
          //================================================================
          // Display HELP text
          //================================================================
          // Signal help request
         W0HLP = 'Y';             1

          // Extract cursor row and column
         ZHCSRW = @#RWCL / 256; //Row
     C                   MVR                     ZHCSCL            5 0          Column

          // Save cursor position for redisplay
         ZZCSRW = ZHCSRW; //Row
         ZZCSCL = ZHCSCL; //Column


         //Help text sourc
         //Help text file
         //Help text libra
         //Help label
         //Options
         //Row
         //Column
         //# of grps
         //Label grps

          // Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
         If NOT *In94;
           *In94 = *On;
         Endif;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR ZXEXPG;
          //================================================================
          // Cancel and exit from key screen
          //================================================================
          // USER: Exit program processing
          // DEL programma actief EEF - Programma Actief  *
         CLEAR   PWRC;
         PWA7NN = ##JNO; //Program Act - J
     C                   MOVEL(P)  ##PGM         PWRACO                         Program Act - P

         //DEL programma a
         //KEY: Programma

         LXBQXFR(W0RTN:PWRC);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXBQXFR';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
         Endif;
          // Error detected?
         If W0RTN <> *BLANK;
           *In99 = *On;
         Endif;
          // Schrappen van 1 user/bet - Wkl betaling  *
         JJUSER = ##USR;
         RMPAR = WUL6ND;
          // CASE: KEY.*CMD key is CF03
         MDBET308(#1AACD:#1AFNB:RMPAR:WUDONG:JJUSER);
           If *IN03 = '1';
            // kalender schrappen in dag - Wkl betaling  *
           RMPAR = #1GWNB;
         HISTCD = 'D';            1
            //                    CALL 'SCHMDKAL'
            //                    PARM           WUAPCF
            //                    PARM           RMPAR
            //                    PARM           HISTCD
            //                    CALL 'SCHMDKA2'
            //                    PARM           WUAPCF
            //                    PARM           RMPAR
            //                    PARM           HISTCD
           MDOCV304(#1AACD:#1AFNB:RMPAR);
         S44004(WUAPCF);
           Endif;
         P0RTN = *BLANK;
         EXSR ZYEXPG;
          //================================================================
       ENDSR;
       /EJECT
       BEGSR ZYEXPG;
          //================================================================
          // Exit program: Direct
          //================================================================
          // Copy any undisplayed messages back to caller

          // Terminate program
         Y2CPMSC(##PGM);
         *InLR = *On;

          // Exit program
         RETURN;

          //================================================================
       ENDSR;
       /EJECT
       BEGSR ZZINIT;
          //================================================================
          // Initialisation
          //================================================================
         If W0ICL = *BLANK;
         W0ICL = 'Y';             1            *Initial call
         ELSE;
         W0ICL = 'N';
         Endif;
     EvalR   P0RTN = *BLANK;
     EvalR   W0RTN = *BLANK;             7
         W0RSL = *BLANK;             1
         W0RSF = *BLANK;             1
         W0RTW = *ZEROS;             9 0
         W0ENV = '400';             3
          // Retrieve job attributes
          // Setup job date/time
         Y2RTJCR(PGMDS);
           ##JDT = ##SD7;
         ##JTM = %Time();
          // Update screen time
         ##TME = %Time();
          // Obtain default message file
     C     *DTAARA       DEFINE    Y2MGFLA       ZADFMF           10
         IN  ZADFMF;
          // Define work field Bedrag EP TW type51
         WUFANG = *ZERO;
          // Define work field barema coronapremie lage
         WUDSCN = *BLANK;            7
          // Define work field Wrk nog steeds error
         WUYBCM = *BLANK;            1
          // Define work field Wrk start F1
         WUHHCM = *BLANK;            1
          // Define work field Wrk RM key screen
         WUL6ND = *ZERO;
          // Define work field Wkl bet sleutel EC32
         WUO1CL = *BLANK;           20
          // Define work field Wrk bedrag alles bouw
         WUFZNE = *ZERO;
          // Define work field Wrk bedrag enkel BZ bouw
         WUF0NE = *ZERO;
          // Define work field Wrk bedrag enkel VO bouw
         WUF1NE = *ZERO;
          // Define work field Wrk verlof in min
         WUS3ND = *ZERO;
          // Define work field Wrk teller BD
         WUREND = *ZERO;
          // Define work field Wrk gebruik F1 simul.T12
         WUEWCH = *BLANK;            1
          // Define work field wrk switch metaal werkh
         WUTBCG = *BLANK;            1
          // Define work field Wrk teller cf01
         WUK7ND = *ZERO;
          // Define work field Wrk F1 record verplicht
         WUXICI = *BLANK;            1
          // Define work field Wrk f1 oproepen bis
         WUFBCK = *BLANK;            1
          // Define work field Wrk f24 gebruikt
         WUYBCJ = *BLANK;            1
          // Define work field Wrk BD old
         WUZGCJ = *BLANK;            2
          // Define work field Wrk teller BZINH
         WUE5NE = *ZERO;
          // Define work field Wrk teller inhoudingen
         WUGCNE = *ZERO;
          // Define work field C105 bestaat al oud
         WUTPCK = *BLANK;            1
          // Define work field C105 bestaat al nieuw
         WUTQCK = *BLANK;            1
          // Define work field C110A bestaat al oud
         WUTRCK = *BLANK;            1
          // Define work field C110A bestaat al nieuw
         WUTSCK = *BLANK;            1
          // Define work field Lansa of synon
         WUHQCG = *BLANK;            1
          // Define work field Wrk laatste betalingsdtm
         WUZYNM = *ZERO;
          // Define work field Wrk wijzigingsdtm INSZ
         WUZZNM = *ZERO;
          // Define work field Wrk wijzigingsdtm adres
         WUZ0NM = *ZERO;
          // Define work field Wrk wijzigingsdatum rekF7
         WUJLNC = *ZERO;
          // Define work field Wrk wijzigingsdatum rekF4
         WUJMNC = *ZERO;
          // Define work field Wrk eindmaand type53
         WUGENE = *ZERO;
          // Define work field S36 datum tot
         WUX8ND = *ZERO;
          // Define work field Wrk dtm 10 lang
         WUPYCK = *BLANK;           10
          // Define work field switch verg. betalen
         WUYZCG = *BLANK;            1
          // Define work field switch arbeidsvergunning
         WUCLCK = *BLANK;            1
          // Define work field switch mar51
         WUYHCM = *BLANK;            1
          // Define work field Documenten BD taal
         WUYXCJ = *BLANK;            1
          // Define work field wrk datum 6 lang AV VV
         WUH6NE = *ZERO;
          // Define work field switch marno
         WUYICM = *BLANK;            1
          // Define work field Wrk verblijfsvergunning
         WUW8CK = *BLANK;            1
          // Define work field Wrk uurtoeslag type 57
         WUZTNM = *ZERO;
          // Define work field Wrk dagtoeslag type 05
         WUZUNM = *ZERO;
          // Define work field Wrk bedrag Y na enter
         WUFDND = *ZERO;
          // Define work field switch type 29 computer?
         WUBGCG = *BLANK;            1
          // Define work field switch type 09-10
         WUPZCF = *BLANK;            1
          // Define work field Swicth BD input zetten
         WULECJ = *BLANK;            1
          // Define work field switch 114Â§7
         WULQCH = *BLANK;            1
          // Define work field Wrk ibo sanctie aan
         WUXBCG = *BLANK;            1
          // Define work field Wrk IBO positie 3 barema
         WUXACG = *BLANK;            1
          // Define work field Wrk sanctie begin
         WUXCCG = *BLANK;            2
          // Define work field Wrk sanctiecode
         WUOSCE = *BLANK;            9
          // Define work field wrk arb.ovk
         WUOTCE = *BLANK;            1
          // Define work field Wrk arb.ovk2
         WUOUCE = *BLANK;            1
          // Define work field Wrk taalkode afd
         WUUWCE = *BLANK;            1
          // Define work field jjmmdd
         WUHUNB = *ZERO;
          // Define work field Wrk veld 4 posities nbr
         WUA195 = *ZERO;
          // Define work field wrk veld 4 posities nbr 2
         WUYFNR = *ZERO;
          // Define work field Wrk veld 4 posities
         WUA197 = *BLANK;            4
          // Define work field WRK C2 dgn R6+V
         WUGK04 = *ZERO;
          // Define work field WRK C2 dgn R5
         WUGK05 = *ZERO;
          // Define work field WRK C2 dgn BV
         WUGK06 = *ZERO;
          // Define work field WRK C2 dgn KBF
         WUGK07 = *ZERO;
          // Define work field WRK C2 dgn nt-gec,nt-verg
         WUEMNR = *ZERO;
          // Define work field Switch sanctie voorbij
         WUYWCI = *BLANK;            1
          // Define work field Switch geen verlofscherm
         WUWUGV = *BLANK;            1
          // Define work field wrkf veld num 2 lng
         WUHFNG = *ZERO;
          // Define work field Wrk verlof JVU rest
         WUGDNN = *ZERO;
          // Define work field wrk indieningsmaand
         WUZKNR = *ZERO;
          // Define work field Wrk jaar achterstal nbr
         WUZDNR = *ZERO;
          // Define work field Wrk Beslag SINE-plus
         WUXMCF = *BLANK;            3
          // Define work field Switch beslag blokkeren
         WUZ4CM = *BLANK;            1
          // Define work field Switch297
         WUW297 = *BLANK;            1
          // Define work field switch401
         WUW401 = *BLANK;            1
          // Define work field Switch31
         WUJICO = *BLANK;            1
          // Define work field switch Fiducre
         WUDQCN = *BLANK;            1
          // Define work field Wrk UTF8 Parameter out
         WUFYCH = *BLANK;            1
          // Define work field Switch mag voorbarig staa
         WUZQCI = *BLANK;            1
          // Define work field Pr bedrag wklh
         WURACD = *BLANK;            1
          // Define work field Wrk betaalsch l.stempel
         WUBZNN = *ZERO;
          // Define work field Switch195
         WUW195 = *BLANK;            1
          // Define work field Wrk datum indieningsmaand
         WUI9DM = *ZERO;
          // Define work field WRK bet.sch. jr v achters
         WUJRJR = *ZERO;
          // Define work field WRK bet.sch. jr v indieni
         WUJRRR = *ZERO;
          // Define work field switch28
         WUHZCD = *BLANK;            1
          // Define work field switch29
         WUH0CD = *BLANK;            1
          // Define work field switch29B
         WUR8CG = *BLANK;            1
          // Define work field Wrk vrijstelling blink
         WUXOCD = *BLANK;            1
          // Define work field Wrk vrijstelling blinkB
         WUR9CG = *BLANK;            1
          // Define work field Wrk 1pos voor jongerenact
         WULCCF = *BLANK;            1
          // Define work field WRK jjmm begin 6,0
         WUB2NN = *ZERO;
          // Define work field Wrk jjmm einde 6,0
         WUB3NN = *ZERO;
          // Define work field Wrk swith vergoedbaar Y/N
         WUY1CG = *BLANK;            1
          // Define work field Switch bedrag Wklh
         WUPFCD = *BLANK;            1
          // Define work field Switch bedrag BZ
         WUPGCD = *BLANK;            1
          // Define work field Switch command F1
         WUHRCO = *BLANK;            1
          // Define work field Switch command F1 BZ
         WUHSCO = *BLANK;            1
          // Define work field wrk bedrag Wklh
         WUMLNB = *ZERO;
          // Define work field wrk bedrag BZ
         WUMMNB = *ZERO;
          // Define work field Wrk inh% BP
         WUBMND = *ZERO;
          // Define work field wrk-afh1
         WUPJCD = *BLANK;            3
          // Define work field wrk-afh2
         WUPKCD = *BLANK;            3
          // Define work field wrk-afh3
         WUPLCD = *BLANK;            3
          // Define work field wrk-afh4
         WUPMCD = *BLANK;            3
          // Define work field wrk-afh5
         WUPNCD = *BLANK;            3
          // Define work field wrk-afh6
         WUPOCD = *BLANK;            3
          // Define work field sw datum 40%
         WUXFCD = *BLANK;            1
          // Define work field sw datum forfait
         WUXGCD = *BLANK;            1
          // Define work field sw datum 0-kode
         WUXHCD = *BLANK;            1
          // Define work field sw datum C1verval
         WUXICD = *BLANK;            1
          // Define work field sw RI beg.dat wklh.
         WURIBD = *BLANK;            1
          // Define work field Wrk 1ste dag achterstal
         WUC8DE = *ZERO;
          // Define work field Wrk datum 6 lang
         WUB5NN = *ZERO;
          // Define work field Wrk posx van barema
         WUYPCH = *BLANK;            1
          // Define work field Wrk pos56 barema
         WUF1CH = *BLANK;            2
          // Define work field Wrk uren P
         WUW001 = *ZERO;
          // Define work field Wrk volle dagen bz
         WUA190 = *ZERO;
          // Define work field Wrk halve dagen bz
         WUA191 = *ZERO;
          // Define work field Wrk volle vorstdagen
         WUW004 = *ZERO;
          // Define work field Wrk halve vorstdagen
         WUW003 = *ZERO;
          // Define work field Wrk volle verlofdagen
         WUW023 = *ZERO;
          // Define work field Wrk halve verlofdagen
         WUW024 = *ZERO;
          // Define work field Wrk type 02, 2 uren P
         WUW002 = *BLANK;            1
          // Define work field Wrk laatste stempel 2
         WUA167 = *ZERO;
          // Define work field Wrk bedrag activeringASR
         WUINNU = *ZERO;
          // Define work field bedrag MFA
         WUILNU = *ZERO;
          // Define work field wrk aantal asr
         WUB1NM = *ZERO;
          // Define work field Wrk ASR ophalen th. mndln
         WUI7NC = *ZERO;
          // Define work field Wrk ASR ophalen Yuur
         WUDANM = *ZERO;
          // Define work field Wrk ASR ophalen Q
         WUDBNM = *ZERO;
          // Define work field Wrk ASR ophalen S
         WUDCNM = *ZERO;
          // Define work field Wrk ASR ophalen dagen Z+A
         WUDDNM = *ZERO;
          // Define work field Wrk ASR ophalen dagen C32
         WUDENM = *ZERO;
          // Define work field Wrk ASR ophalen urenASR32
         WUDFNM = *ZERO;
          // Define work field Wrk ASR ophalen dagen vol
         WUDGNM = *ZERO;
          // Define work field Wrk ASR ophalen dagen hal
         WUDHNM = *ZERO;
          // Define work field Wrk ASR ophalen href1 nbr
         WUW5CF = *BLANK;           20
          // Define work field Wrk ASR ophalen href2 nbr
         WUW6CF = *BLANK;           20
          // Define work field Wrk ASR ophalen href3 nbr
         WUW7CF = *BLANK;           20
          // Define work field wrk bedrag type 26
         WUMYNU = *ZERO;
          // Define work field Wrk switch type26 1ste ml
         WUJ1CF = *BLANK;            1
          // Define work field switch209
         WUW209 = *BLANK;            1
          // Define work field Veld 3 maal FFF
         WUESCL = *BLANK;            3
          // Define work field Wrk Begin wklh 6 lang
         WUHINM = *ZERO;
          // Define work field Switch bouw 102017
         WUS5CL = *BLANK;            1
          // Define work field Switch kaart gevonden
         WUHHCG = *BLANK;            1
          // Define work field Switch kaart naar rva
         WUHGCG = *BLANK;            1
          // Define work field Wrk number 2,0
         WUIQNE = *ZERO;
          // Define work field Wrk inh.pct
         WUG5NR = *ZERO;
          // Define work field Wrk zone
         WUPXCE = *BLANK;            2
          // Define work field Wrk gewest
         WUPYCE = *BLANK;            1
          // Define work field afdeling adres
         WUF1TL = *BLANK;           30
          // Define work field afdeling postnr
         WUF2TL = *BLANK;            4
          // Define work field afdeling lokaliteit
         WUF3TL = *BLANK;           25
          // Define work field Wrk UTF8 Parameter in
         WUFXCH = *BLANK;          100
          // Define work field SwitchBet
         WUURCC = *BLANK;            1
          // Define work field Bedrag type29
         WUC5NU = *ZERO;
          // Define work field Wrk teller type 05
         WUDJNU = *ZERO;
          // Define work field Veld bijpassing wklh 7,2
         WUQHNU = *ZERO;
          // Define work field Wrk bet.scherm 3 pos.Bijp
         WULBCF = *BLANK;            3
          // Define work field switch C10 type 2xbetaald
         WUKXCF = *BLANK;            1
          // Define work field switch bijdragen ontslag
         WUHSCG = *BLANK;            1
          // Define work field Wrk J RVA
         WURXNC = *ZERO;
          // Define work field wrk BV voor update
         WUS9NC = *ZERO;
          // Define work field Wrk datum C104 ind bet
         WUTCNC = *ZERO;
          // Define work field Wrk datum C104 limiet bet
         WUTDNC = *ZERO;
          // Define work field Wrk info bijz verg
         WUWBCH = *BLANK;            1
          // Define work field switch info overstappremi
         WUWFCH = *BLANK;            1
          // Define work field switch er zijn afhoudinge
         WUAJCJ = *BLANK;            1
          // Define work field Switch cmd12
         WUAKCJ = *BLANK;            1
          // Define work field Wrk type wklh oud
         WUW1CK = *BLANK;            2
          // Define work field Wrk taal
         WUFUCD = *BLANK;            1
          // Define work field bedrag bz 15
         WUTHNF = *ZERO;
          // Define work field switch LBB
         WUBDCN = *BLANK;            1
          // Define work field wrk barema kunst
         WUM0CN = *BLANK;            2
          // Define work field Wrk C3A verplicht
         WUM1CN = *BLANK;            1
          // Define work field wrk 60plus
         WUM3CN = *BLANK;            1
          // Define work field Href betaalscherm igu vw
         WURCCK = *BLANK;           20
          // Define work field Return code2
         WUEMCD = *BLANK;            1
          // Define work field Wrk achterstal niet999999
         WUYQND = *ZERO;
          // Define work field Wrk er is een fout
         WUX5CM = *BLANK;            1
          // Define work field WRK INSZ betaalscherm 9L
         WUKQCN = *BLANK;            9
          // Define work field RK INSZ betaalscherm 11L
         WUKRCN = *BLANK;           11
          // Define work field Switch S36 of S04
         WUWJCJ = *BLANK;            3
          // Define work field switch dossier 82C
         WUHQCN = *BLANK;            1
          // Define work field Switch toelating Y/N
         WUYOCI = *BLANK;            1
          // Define work field Wrk type wklh oudoud
         WUMZCH = *BLANK;            2
          // Define work field Wrk vorig UInr
         WUUKCE = *BLANK;            4
          // Define work field Controle ond.afd ok
         WUU1CE = *BLANK;            1
          // Define work field SwitchC10A
         WUUSCC = *BLANK;            2
          // Define work field SwitchC10B
         WUUTCC = *BLANK;            2
          // Define work field SwitchRSZ
         WUUQCC = *BLANK;            1
          // Define work field Aantal dgn R5 OCV te bet
         WUGINE = *ZERO;
          // Define work field Aantal dgn R6 OCV te bet
         WUGHNE = *ZERO;
          // Define work field Wrk ocv betalen mag?
         WUN3CK = *BLANK;            1
          // Define work field Switch ocv reeds betaald
         WUN0CK = *BLANK;            1
          // Define work field NAtionale gebruiker
         WUPZCK = *BLANK;            1
          // Define work field Wrk KBOnr
         WUKVCF = *BLANK;           10
          // Define work field S36 type
         WUWKCJ = *BLANK;            2
          // Define work field S36 barema
         WUWLCJ = *BLANK;            7
          // Define work field S36 dagbedrag
         WUX9ND = *ZERO;
          // Define work field S36 datum van
         WUX7ND = *ZERO;
          // Define work field Dagen R6 type 54/55
         WUH6NG = *ZERO;
          // Define work field switch 21 jaar
         WUZJCJ = *BLANK;            1
          // Define work field Fout meerdere barema's
         WUVNCJ = *BLANK;            1
          // Define work field S04 schermveld risico
         WUWVCJ = *BLANK;            1
          // Define work field Wrk 201211 type01
         WUTY01 = *BLANK;            2
          // Define work field Wrk 201211 barema01
         WUBR01 = *BLANK;            7
          // Define work field Wrk 201211 dagbedrag01
         WUBD01 = *ZERO;
          // Define work field Wrk 201211 datum01
         WUDA01 = *ZERO;
          // Define work field Wrk 201211 datum02
         WUDA02 = *ZERO;
          // Define work field Wrk 201211 datum03
         WUDA03 = *ZERO;
          // Define work field Wrk datum UA parameter
         WUXWND = *ZERO;
          // Define work field Wrk datum 201211 beginWKL
         WUYDND = *ZERO;
          // Define work field Wrk dtm geldigheid param
         WUXVND = *ZERO;
          // Define work field S04 schermveld conversie
         WUW1CJ = *BLANK;            1
          // Define work field error verg artikels
         WUVTCK = *BLANK;            1
          // Define work field Wrk 201211 complement
         WUCO01 = *BLANK;            3
          // Define work field Switch corona verg
         WUY9CM = *BLANK;            1
          // Define work field switch corona geen cov mr
         WUFNCN = *BLANK;            1
          // Define work field Wrk 201211 art verg01
         WUVE01 = *BLANK;            6
          // Define work field Wrk 201211 art verg02
         WUVE02 = *BLANK;            6
          // Define work field Wrk 201211 art verg03
         WUVE03 = *BLANK;            6
          // Define work field Wrk 201211 art verg04
         WUVE04 = *BLANK;            6
          // Define work field Wrk 201211 art verg05
         WUVE05 = *BLANK;            6
          // Define work field Wrk 201211 art verg06
         WUVE06 = *BLANK;            6
          // Define work field wrk veld 5 posities user
         WUDTCC = *BLANK;            5
          // Define work field Switch algemene stopperio
         WUHW99 = *BLANK;            1
          // Define work field Sw0101
         WUBQCF = *BLANK;            1
          // Define work field Lid naam2
         WUD0CD = *BLANK;           30
          // Define work field cf01
         WUGFCD = *BLANK;            1
          // Define work field cf02
         WUGGCD = *BLANK;            1
          // Define work field cf04
         WUGICD = *BLANK;            1
          // Define work field cf05
         WUGJCD = *BLANK;            1
          // Define work field cf06
         WUGKCD = *BLANK;            2
          // Define work field cf07
         WUGLCD = *BLANK;            1
          // Define work field cf08
         WUGMCD = *BLANK;            2
          // Define work field cf10
         WUGNCD = *BLANK;            1
          // Define work field wrk stopperiode
         WUR3CO = *BLANK;            1
          // Define work field WRK Betaaldag
         WUWUBE = *BLANK;            2
          // Define work field Betaaldag dagbestand code
         WUFACE = *BLANK;            2
          // Define work field wrk veld 1 positie barema
         WUTTCG = *BLANK;            1
          // Define work field Wrk veld 6 posities
         WUWRK6 = *BLANK;            6
          // Define work field switch type51corona
         WUDRCN = *BLANK;            1
          // Define work field switch RRNR 000000
         WUZKCM = *BLANK;            1
          // Define work field Wrk datum barema 1 vanaf
         WUETCK = *BLANK;           10
          // Define work field Wrk rijksregister+80:nbr
         WUZJNR = *ZERO;
          // Define work field Switch106
         WUFRCD = *BLANK;            1
          // Define work field Switch156
         WUWU56 = *BLANK;            1
          // Define work field Wrk datum euro 8 nbr
         WUBTNN = *ZERO;
          // Define work field Wrk datum Euro
         WUP2DD = *ZERO;
          // Define work field Wrk test bijpassing
         WUEUCO = *BLANK;            1
          // Define work field Wrk datum betaling 8 lang
         WUZQNR = *ZERO;
          // Define work field Switch61
         WUMQCD = *BLANK;            1
          // Define work field Wrk veld 8 posities nbr
         WUK750 = *ZERO;
          // Define work field WB recentste UA
         WUX8CM = *BLANK;            2
          // Define work field code59
         WUS6CG = *BLANK;            2
          // Define work field switch12
         WUGBCD = *BLANK;            1
          // Define work field wrk veld substring 1 pos
         WUDXCC = *BLANK;            1
          // Define work field wrk veld 6 posities nbr2
         WUYHNR = *ZERO;
          // Define work field Wrk veld 2 posities nbr
         WUA196 = *ZERO;
          // Define work field Switch148
         WUWU48 = *BLANK;            1
          // Define work field switch PWA toeslag
         WUA3CF = *BLANK;            1
          // Define work field Wrk switch dispo
         WUYLCF = *BLANK;            1
          // Define work field Wrk switch dispo testen
         WUYMCF = *BLANK;            1
          // Define work field Sw type wklh
         WUIQCD = *BLANK;            1
          // Define work field Pr VD6
         WUITCD = *BLANK;            1
          // Define work field Pr HD6
         WUIUCD = *BLANK;            1
          // Define work field Pr VD5
         WUIVCD = *BLANK;            1
          // Define work field Pr HD5
         WUIWCD = *BLANK;            1
          // Define work field Pr uren ged. wkl.
         WUIXCD = *BLANK;            1
          // Define work field Pr geen uren ged.wkl
         WUIYCD = *BLANK;            1
          // Define work field Pr volle BZ
         WUKMCD = *BLANK;            1
          // Define work field Pr halve BZ
         WUKNCD = *BLANK;            1
          // Define work field Pr bedrag BZ
         WUI1CD = *BLANK;            1
          // Define work field Pr geen dgn/bedr. BZ
         WUI2CD = *BLANK;            1
          // Define work field Pr volle verlof
         WUKQCD = *BLANK;            1
          // Define work field Pr halve verlof
         WUKRCD = *BLANK;            1
          // Define work field Pr volle BV
         WUKSCD = *BLANK;            1
          // Define work field Pr halve BV
         WUKTCD = *BLANK;            1
          // Define work field Pr volle vorst
         WUIZCD = *BLANK;            1
          // Define work field Pr halve vorst
         WUKPCD = *BLANK;            1
          // Define work field Wrk type activering
         WUMT08 = *BLANK;            2
          // Define work field wrk bedrag activering
         WUMT09 = *ZERO;
          // Define work field Wrk barema activering
         WUMT10 = *BLANK;            7
          // Define work field Wrk scherm activering
         WUSCHE = *BLANK;            1
          // Define work field Switch268
         WUW268 = *BLANK;            1
          // Define work field Switch269
         WUW269 = *BLANK;            1
          // Define work field Wrk switch type wklh 5/7
         WUCA10 = *BLANK;            3
          // Define work field switch betalen 05/07/24
         WUCA65 = *BLANK;            8
          // Define work field Wrk bedrag BZ M M1
         WULVND = *ZERO;
          // Define work field Switch64
         WUN3CD = *BLANK;            1
          // Define work field Sw wkl brugp gev.
         WUOWCE = *BLANK;            1
          // Define work field Wrk wrk code betalen
         WUOVCE = *BLANK;            1
          // Define work field sw brugp vanaf 1/5/94
         WUSWBP = *BLANK;            1
          // Define work field Switch275
         WUW275 = *BLANK;            1
          // Define work field Wrk veld 1 positie
         WUA199 = *BLANK;            1
          // Define work field Wrk datum sanctie vanaf
         WUESCK = *BLANK;           10
          // Define work field Wrk 3 t 5
         WUUDCK = *BLANK;            3
          // Define work field Wrk 1 t 2
         WUDQCL = *BLANK;            2
          // Define work field Wrk 3 t 4
         WUEGCL = *BLANK;            2
          // Define work field Switch vrijstelling 94
         WUEHCL = *BLANK;            1
          // Define work field Wrk switch114&6B
         WUFECL = *BLANK;            1
          // Define work field Switch type 21
         WUZ2CO = *BLANK;            1
          // Define work field Wrk zone code
         WUQZCE = *BLANK;            2
          // Define work field wrk zone code2
         WUUOCE = *BLANK;            2
          // Define work field Switch integr gevonden
         WUSOCF = *BLANK;            1
          // Define work field Switch integr eindmnd gev
         WUSPCF = *BLANK;            1
          // Define work field Switch integr beginmnd
         WUSQCF = *BLANK;            1
          // Define work field switch integr eindmnd
         WUSRCF = *BLANK;            1
          // Define work field wrk integratie beginmaand
         WUSSCF = *BLANK;            6
          // Define work field wrk integratie begindag
         WUSTCF = *BLANK;            2
          // Define work field wrk integratie eindmaand
         WUSUCF = *BLANK;            6
          // Define work field wrk integratie einddag
         WUSVCF = *BLANK;            2
          // Define work field wrk switch l500 vorige md
         WUS8CK = *BLANK;            1
          // Define work field Sl15 lang L500
         WUXDCG = *BLANK;           15
          // Define work field Switch type16173444
         WUFNCL = *BLANK;            1
          // Define work field Switch305
         WUW305 = *BLANK;            1
          // Define work field Wrk switch wkl.rek bestaa
         WUHPCG = *BLANK;            1
          // Define work field Switch J/N
         WUH0CG = *BLANK;            1
          // Define work field wrk ontsl 6 lang
         WUJNNC = *ZERO;
          // Define work field Wrk ASR F reden ingevuld?
         WURICG = *BLANK;            2
          // Define work field switch C32S
         WUD6CH = *BLANK;            1
          // Define work field Switch controles
         WUWUCJ = *BLANK;            1
          // Define work field WRK vergoedbaarh.artikel
         WUCQCE = *BLANK;            6
          // Define work field switch type29
         WUN4CH = *BLANK;            1
          // Define work field barema type29
         WUN5CH = *BLANK;            7
          // Define work field Pos04 van barema testen
         WUMTCH = *BLANK;            1
          // Define work field switch type50
         WUK8CH = *BLANK;            1
          // Define work field Bedrag type50
         WUTSNC = *ZERO;
          // Define work field barema type 50
         WUK9CH = *BLANK;            7
          // Define work field Wrk switcht51-2
         WUSFCH = *BLANK;            1
          // Define work field Wrk switchT51
         WUR9CH = *BLANK;            1
          // Define work field switch leeftijd 58 jaar
         WULKCH = *BLANK;            1
          // Define work field Switch sanctie
         WUK6CH = *BLANK;            1
          // Define work field Wrk pos5 barema - suffix
         WULLCH = *BLANK;            1
          // Define work field Switch iban betaalscherm
         WUMBCH = *BLANK;            1
          // Define work field switch a052
         WUOSCH = *BLANK;            1
          // Define work field Wrk maand1
         WUBRND = *ZERO;
          // Define work field Wrk maand 2
         WUBSND = *ZERO;
          // Define work field Wrk switch ipa2011
         WUKTCI = *BLANK;            1
          // Define work field switch inschakelings001
         WUQTCJ = *BLANK;            1
          // Define work field Doc BD meer dtm betaling
         WUQ4DE = *ZERO;
          // Define work field Switch WB foutief
         WUZICJ = *BLANK;            6
          // Define work field nbr 12, 0
         WUDONG = *ZERO;
          // Define work field switch betaling bezig
         WUX4CM = *BLANK;            1
          // Define work field Wrk barema positie5t6
         WUHVCN = *BLANK;            2
          // Define work field Wrk barema positie3
         WUJ6CJ = *BLANK;            1
          // Define work field Wrk verschil in WB
         WUO5CN = *BLANK;            1
          // Define work field Wrk fout in WB
         WUO6CN = *BLANK;            1
          // Define work field Wrk WBnr vr betaalscherm
         WUPJCN = *BLANK;            2
          // Define work field Wrk WBnr uit F4 vr betaal
         WUPKCN = *BLANK;            2
          // Define work field Return code
         WUDACD = *BLANK;            1
          // Define work field Wrk veld TB- macht. num
         WUC1NG = *ZERO;
          // Define work field Switch blanko opdracht
         WUKTCJ = *BLANK;            1
          // Define work field switch sancties
         WUYRCI = *BLANK;            1
          // Define work field Wrk F1 na F24
         WUERCK = *BLANK;            1
          // Define work field Wrk gekozen ASRnr
         WUUZCF = *BLANK;           20
          // Define work field Wrk veld 9 posities
         WUCACO = *BLANK;            9
          // Define work field Wrk veld 11 posities
         WUAPCF = *BLANK;           11
          // Define work field Switch type betaalkalende
         WURZCJ = *BLANK;            1
          // Define work field A950-INSS
         WUO3NC = *ZERO;
          // Define work field Wrk number 6 A950
         WURHNC = *ZERO;
          // Define work field Wrk code 6 lang RM A950
         WUICCH = *BLANK;            6
          // Define work field Wrk ASR soort
         WUW1CF = *BLANK;            7
          // Define work field Wrk veld 3 posities EC3-1
         WUBBCL = *BLANK;            3
          // Define work field Wrk veld 3 posities EC3-2
         WUBCCL = *BLANK;            3
          // Define work field wrk bedrag resultaat euro
         WUGVNR = *ZERO;
          // Define work field Wrk switch scherm bestaat
         WURTCJ = *BLANK;            1
          // Define work field Wrk s04 begindatum
         WUYEND = *ZERO;
          // Define work field Volgnr S04
         WUU4ND = *ZERO;
          // Define work field Wrk veld R6/HR6/V/HV/J/HJ
         WUX1CJ = *BLANK;           12
          // Define work field Wijziging na f24
         WUYCCJ = *BLANK;            1
          // Define work field Wrk hidden zetten calcul
         WUCA77 = *BLANK;            1
          // Define work field switch207
         WUW207 = *BLANK;            1
          // Define work field blanko
         WUC6CD = *BLANK;            1
          // Define work field Sw type 02/04
         WULNCD = *BLANK;            1
          // Define work field Sw type01/03/08/11/12
         WULOCD = *BLANK;            1
          // Define work field Sw type 09/10
         WULQCD = *BLANK;            1
          // Define work field Sw type 13/14
         WULPCD = *BLANK;            1
          // Define work field Switch type 18
         WUTY18 = *BLANK;            1
          // Define work field WRK controle 18 of 04
         WUCC18 = *BLANK;            2
          // Define work field Switch berekening
         WUPSCD = *BLANK;            1
          // Define work field Wrk switch hidden zetten
         WUCA75 = *BLANK;            1
          // Define work field Regime 6 - 5 BA
         WUCA40 = *BLANK;            1
          // Define work field WRK document BD bestaat
         WUZBCJ = *BLANK;            1
          // Define work field Switch205
         WUW205 = *BLANK;            1
          // Define work field Switch157
         WUWU57 = *BLANK;            1
          // Define work field Wrk delen halve dagen
         WUCA80 = *ZERO;
          // Define work field swIR
         WUW1CD = *BLANK;            1
          // Define work field swafh
         WUPRCD = *BLANK;            1
          // Define work field Wrk controle TV's
         WUWUTV = *BLANK;            1
          // Define work field switch18
         WUGZCD = *BLANK;            1
          // Define work field switch10
         WUF9CD = *BLANK;            1
          // Define work field switch11
         WUGACD = *BLANK;            1
          // Define work field switch13
         WUGCCD = *BLANK;            1
          // Define work field switch15
         WUGECD = *BLANK;            1
          // Define work field switch16
         WUGXCD = *BLANK;            1
          // Define work field switch17
         WUGYCD = *BLANK;            1
          // Define work field switch21
         WUG2CD = *BLANK;            1
          // Define work field switch24
         WUG5CD = *BLANK;            1
          // Define work field Wrk RM TEM nbr
         WUI7NG = *ZERO;
          // Define work field switch26
         WUHXCD = *BLANK;            1
          // Define work field Switch80
         WUOWCD = *BLANK;            1
          // Define work field Switch194
         WUW194 = *BLANK;            1
          // Define work field switch27
         WUHYCD = *BLANK;            1
          // Define work field Som BV/V
         WUF8NB = *ZERO;
          // Define work field rest deling
         WUJPNB = *ZERO;
          // Define work field Switch overgang barema
         WUR3CJ = *BLANK;            1
          // Define work field Wrk pos6 barema
         WUF4CH = *BLANK;            1
          // Define work field Wrk pos5 barema
         WUF3CH = *BLANK;            1
          // Define work field Maand om te testen
         WUQJNC = *ZERO;
          // Define work field Wrk datum 8 lang testen
         WUQKNC = *ZERO;
          // Define work field C98 bestaat
         WUACCK = *BLANK;            1
          // Define work field Switch C98
         WULDCJ = *BLANK;            1
          // Define work field MM van RM
         WUVPNE = *ZERO;
          // Define work field C3A bestaat
         WUM4CN = *BLANK;            1
          // Define work field Wrk veld 2 pos
         WUWRK2 = *BLANK;            2
          // Define work field Wrk F1 oproepen
         WUW8CI = *BLANK;            1
          // Define work field switch14
         WUGDCD = *BLANK;            1
          // Define work field Wrk BV/V ingevuld
         WUJYCH = *BLANK;            1
          // Define work field Sw type 05
         WUCA11 = *BLANK;            1
          // Define work field C105 bestaat al
         WUZDCJ = *BLANK;            1
          // Define work field C110A bestaat al
         WUAPCK = *BLANK;            1
          // Define work field Doc 250.1 bestaat al
         WUHUCN = *BLANK;            1
          // Define work field Switch102
         WUAGCD = *BLANK;            1
          // Define work field Switch241
         WUW241 = *BLANK;            1
          // Define work field Switch109
         WUF0CD = *BLANK;            1
          // Define work field Switch111
         WUF2CD = *BLANK;            1
          // Define work field switch23
         WUG4CD = *BLANK;            1
          // Define work field Wrk aantal s44 open
         WUK8NE = *ZERO;
          // Define work field Wrk volgnr s44
         WUK7NE = *ZERO;
          // Define work field Wrk add/update kalender
         WUW1CI = *BLANK;            1
          // Define work field Wrk volgnr kalender
         WUK6ND = *ZERO;
          // Define work field Wrk dagen 32 lang
         WUXJCI = *BLANK;           32
          // Define work field Wrk dtm laatste stempel
         WUXKCI = *BLANK;            8
          // Define work field Wrk 32 lang bis
         WUFACK = *BLANK;           32
          // Define work field wrk switch kalender ok
         WUW9CI = *BLANK;            1
          // Define work field wrk totaal R5
         WUR5R5 = *ZERO;
          // Define work field wrk totaal R6
         WUR6R6 = *ZERO;
          // Define work field Wrk totaalR6 zonderBV/KBF
         WUJYNG = *ZERO;
          // Define work field switch type53 bar ..ICL..
         WULQCN = *BLANK;            1
          // Define work field Switch laatste stempel RM
         WUKOCN = *BLANK;            1
          // Define work field Switch202
         WUW202 = *BLANK;            1
          // Define work field Switch252
         WUW252 = *BLANK;            1
          // Define work field Switch43
         WUJKCD = *BLANK;            1
          // Define work field Switch47
         WUKVCD = *BLANK;            1
          // Define work field Wrk bedrag beschutte cde
         WUCQCH = *BLANK;            7
          // Define work field Wrk bedrag TB cde
         WUCRCH = *BLANK;            7
          // Define work field Wrk 6 lang refertemaand c
         WUDHCH = *BLANK;            6
          // Define work field Wrk veld 8 posities
         WUKE03 = *BLANK;            8
          // Define work field wrk veld 14 posities
         WUU3CF = *BLANK;           14
          // Define work field Wrk veld 2 posities dl1
         WUDICH = *BLANK;            2
          // Define work field Wrk veld 2 posities dl2
         WUDJCH = *BLANK;            2
          // Define work field Wrk 4 lang dl1
         WUDKCH = *BLANK;            4
          // Define work field Wrk 4 lang dl2
         WUDLCH = *BLANK;            4
          // Define work field Wrk pos5 anc
         WUEXCH = *BLANK;            1
          // Define work field Switch42
         WUJJCD = *BLANK;            1
          // Define work field Switch333
         WUWPCI = *BLANK;            1
          // Define work field Switch c105
         WUAQCK = *BLANK;            1
          // Define work field switch501
         WUTLCG = *BLANK;            1
          // Define work field Switch87
         WUPTCD = *BLANK;            1
          // Define work field switchbz15
         WUH4CL = *BLANK;            1
          // Define work field Switch112
         WUF3CD = *BLANK;            1
          // Define work field Switch211
         WUW211 = *BLANK;            1
          // Define work field switch233
         WUW233 = *BLANK;            1
          // Define work field Switch235
         WUW235 = *BLANK;            1
          // Define work field Switch88
         WUQSCD = *BLANK;            1
          // Define work field Switch65
         WUN4CD = *BLANK;            1
          // Define work field Switch67
         WUN7CD = *BLANK;            1
          // Define work field Switch70
         WUOACD = *BLANK;            1
          // Define work field Switch90
         WUQ3CD = *BLANK;            1
          // Define work field wrk taalcode asr
         WUWJCF = *BLANK;            1
          // Define work field Wrk metaal afd nr
         WUWUME = *BLANK;            2
          // Define work field Wrk metaal lidnr
         WUWUMM = *BLANK;            6
          // Define work field Wrk metaal refertemaand
         WUMET2 = *ZERO;
          // Define work field wrk metaal ref.maand cde
         WUMET4 = *BLANK;            6
          // Define work field Wrk metaal ind.maand cde
         WUMET3 = *BLANK;            6
          // Define work field Wrk metaal indien.maand
         WUMET1 = *ZERO;
          // Define work field Wrk metaal kode BZ
         WUWUBZ = *BLANK;            2
          // Define work field WRk metaal bedrag BZ nbr
         WUWUB2 = *ZERO;
          // Define work field Wrk metaal bedrag BZ cde
         WUWUB1 = *BLANK;            5
          // Define work field Wrk metaal parameter
         WUPAPA = *BLANK;            1
          // Define work field Afh1 negatief
         WUQUCD = *BLANK;            1
          // Define work field Afh2 negatief
         WUQVCD = *BLANK;            1
          // Define work field Afh3 negatief
         WUQWCD = *BLANK;            1
          // Define work field Afh4 negatief
         WUQXCD = *BLANK;            1
          // Define work field Afh5 negatief
         WUQYCD = *BLANK;            1
          // Define work field Afh6 negatief
         WUQZCD = *BLANK;            1
          // Define work field Wrk bedrag parameter
         WUCUNN = *ZERO;
          // Define work field Switch84
         WUPECD = *BLANK;            1
          // Define work field Switch198
         WUW198 = *BLANK;            1
          // Define work field Switch73
         WUODCD = *BLANK;            1
          // Define work field Switch74
         WUOECD = *BLANK;            1
          // Define work field Switch75
         WUOFCD = *BLANK;            1
          // Define work field Switch204
         WUW204 = *BLANK;            1
          // Define work field switch206
         WUW206 = *BLANK;            1
          // Define work field Switch95
         WUWBCD = *BLANK;            1
          // Define work field Switch133
         WUWU33 = *BLANK;            1
          // Define work field wrk metaal type kaart
         WUIWCO = *BLANK;            2
          // Define work field Switch298
         WUIVCO = *BLANK;            1
          // Define work field Wrk veld 8 posities begin
         WUY7NR = *ZERO;
          // Define work field Wrk veld 8 posities eindd
         WUY6NR = *ZERO;
          // Define work field Wrk refertemaand
         WUZCNR = *ZERO;
          // Define work field Wrk jr/mnd achterstal-1
         WUZFNR = *ZERO;
          // Define work field Switch301
         WUJ1CO = *BLANK;            1
          // Define work field Switch302
         WUJ2CO = *BLANK;            1
          // Define work field Wrk categorie BC
         WUEFCO = *BLANK;            2
          // Define work field Wrk categorie JJJJMM
         WUKADM = *ZERO;
          // Define work field Wrk switch na komma
         WUM8CE = *BLANK;            1
          // Define work field Wrk na komma 01
         WUGJNR = *ZERO;
          // Define work field Wrk KB213 betaald
         WUFMCG = *BLANK;            1
          // Define work field Wrk datum KB213 8 lang
         WUVXNM = *ZERO;
          // Define work field Wrk datum KB213 10 lang
         WUFLCG = *BLANK;           10
          // Define work field Verlof jaar
         WUBWNB = *ZERO;
          // Define work field wrk veld 1 lang type12
         WUDMCH = *BLANK;            1
          // Define work field Wrk leeftijd 50 of ouder
         WUDNCH = *BLANK;            1
          // Define work field Wrk 1 positie S01
         WUDOCH = *BLANK;            1
          // Define work field Wrk 1 positie S02
         WUDPCH = *BLANK;            1
          // Define work field Wrk volgnr parameter
         WUXUND = *ZERO;
          // Define work field Wrk ACLVB RVA parameter
         WUVMCJ = *BLANK;            1
          // Define work field Switch 1ste maal RMbetaal
         WULECN = *BLANK;            1
          // Define work field switch bz 29 79
         WUMNCN = *BLANK;            1
          // Define work field sw Laatste stempel > RM
         WUNZCN = *BLANK;            1
          // Define work field Switch WB ongeldig
         WUNSCN = *BLANK;            1
          // Define work field Afdeling nr
         WUAACD = *BLANK;            2
          // Define work field Lid nr
         WUAFNB = *BLANK;            6
          // Define work field Datum achterstal
         WUGWNB = *ZERO;
          // Define work field switch inh%
         WUXBCH = *BLANK;            1
          // Define work field Href betaalscherm
         WUBPCF = *BLANK;           20
          // Define work field Aantal ASR betaalscherm
         WUIKNU = *ZERO;
          // Define work field Wrk refertemaand CDE
         WUBYCF = *BLANK;            6
          // Define work field Veld bijpassing wklh 7,0
         WUQGNU = *ZERO;
          // Define work field cf13
         WUGOCD = *BLANK;            1
          // Define work field cf14
         WUGPCD = *BLANK;            1
          // Define work field cf15
         WUGQCD = *BLANK;            1
          // Define work field jjmm
         WUHQNB = *ZERO;
          // Initialize *SET CURSOR data
     EvalR   YSETCS = 'Y';            1
         EXSR Y9CLR;
     EvalR   WCSRLC = *BLANK;            3
          // Define *Synon program work fields
         YRSW00 = *ZEROS; //*Synon (5,0) wo
         YRSW01 = *ZEROS; //*Synon (5,0) wo
         W0CFL = *BLANKS;            10            *Cursor field
         W0CRW = *ZEROS; //*Cursor row
         W0CCL = *ZEROS; //*Cursor column
          // Move main file information to JOB context
     EvalR   ZZFFL = @1FFL;            10            Main file name
     EvalR   ZZFLB = @1FLB;            10            Main file lib
     EvalR   ZZFMB = @1FMB;            10            Main file mbr
         //LIBRARY/FILE
          // Dummy move for compiler
     EvalR   @CN#(1) = '0';
         W0PMT = 'N';             1
          // Define local work field Dummy tekst1
         YL0001 = *BLANK;           80
          // Define local work field Dummy tekst2
         YL0002 = *BLANK;           80
          // Define local work field Dummy tekst3
         YL0003 = *BLANK;           80
          // Define local work field Dummy tekst4
         YL0004 = *BLANK;           80
          // Define local work field Dummy tekst5
         YL0005 = *BLANK;           80
          // Define local work field Dummy tekst6
         YL0006 = *BLANK;           80
          // Define local work field Dummy tekst7
         YL0007 = *BLANK;           80
          // Define local work field Dummy tekst8
         YL0008 = *BLANK;           80
          // Define local work field Dummy tekst9
         YL0009 = *BLANK;           80
          // Define local work field Dummy tekst10
         YL0010 = *BLANK;           80
          // Define local work field Dummy tekst11
         YL0011 = *BLANK;           80
          // Define local work field Dummy tekst12
         YL0012 = *BLANK;           80
          // Define local work field wrk field 11
         YL0013 = *BLANK;          256
          // Define local work field wrk error tekst
         YL0014 = *BLANK;          160
          // Define local work field wrk warning tekst
         YL0015 = *BLANK;          160
          // Define local work field Wrk refertemaand CDE
         YL0016 = *BLANK;            6
          // Define local work field Param256
         YL0017 = *BLANK;          256
          // Define local work field WRK record found
         YL0018 = *BLANK;            1
          // Define local work field Doc BD meer doctekst
         YL0019 = *BLANK;           70
          // Define local work field wrk return key C1
         YL0020 = *BLANK;            3
          // Define local work field WRK document BD bestaat
         YL0021 = *BLANK;            1
          // Define local work field ErrorCode
         YL0022 = *BLANK;           12
          // Initialise error memories
     EvalR   @@I1 = *ZERO;
     EvalR   @@I2 = *ZERO;
          // Set to *CHANGE mode
         W0PMD = 'CHG';             3
         W0GRP = *BLANK;             1
          // USER: Initialize program
         WUGFCD = 'Y';                         cf01
         WUGOCD = 'N';                         cf13
         WUGPCD = 'N';                         cf14
         WUGQCD = 'N';                         cf15
         WUHQNB = 2000 + ##JYY; //jjmm
         WUHQNB = WUHQNB * 100; //jjmm
         WUHQNB = WUHQNB + ##JMM; //jjmm
         WUHUNB = WUHQNB * 100; //jjmmdd
         WUHUNB = WUHUNB + ##JDD; //jjmmdd
         W0PMD = 'ADD';                          *Program mode
          // ADD programma actief EEF - Programma Actief  *
         CLEAR   AORC;
         AOA7NN = ##JNO; //Program Act - J
     C                   MOVEL(P)  ##PGM         AORACO                         Program Act - P

         //ADD programma a
         //KEY: Programma

         LXBPXFR(W0RTN:AORC);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXBPXFR';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
         Endif;
          // Error detected?
         If W0RTN <> *BLANK;
           *In99 = *On;
         Endif;
          // Taalcode grbruiker ophalen voor selectiescherm BD
          // Ophalen taal gebruiker - Gebruiker  *
         CLEAR   APRC;
     C                   MOVEL(P)  ##USR         APBLCD                         Gebruiker signo

         //Ophalen taal ge
         //KEY: Gebruiker
         //wrk taalcode as

         LXI2XFR(W0RTN:APRC:WQ0368);
           If *IN90 = '1';
            // Call to program ended in error
         W0RTN = 'Y2U0032';
         W0CLPG = *BLANKS;           10
         W0CLPG = 'LXI2XFR';
            // Send message '*Error occured on CALL...'
         ZAMSID = 'Y2U0032';
         ZAMSGF = 'Y2USRMSG';
         ZAMSDA = W0CLPG;                         Message data
           EXSR ZASNMS;
         Endif;
          // Error detected?
         If W0RTN <> *BLANK;
           *In99 = *On;
         Endif;
          //================================================================
       ENDSR;
** DD  DAGEN IN DE MAAND V
312931303130313130313031
** JJV MAANDEN VORIG JAAR
202401202402202403202404202405202406202407202408202409202410202411202412
** D6V DAGEN/MAAND VORIG JAAR : EERST R6 EN DAN R5
272325212621262227232520272327222521272326212622
** MAV LAATST GESTEMPELDE DAG INDIEN VOLLEDIGE MAAND GESTEMPELD R6/R5
313129293029303031312928313131303030313130293131
       Ctl-Opt MAANDEN HUIDIG JAAR;
202501202502202503202504202505202506202507202508202509202510202511202512
       Ctl-Opt DAGEN/MAAND HUIDIG JAAR : EERST R6 EN DAN R5;
272324202621262227222521272326212622272325202723
       Ctl-Opt LAATST GESTEMPELDE DAG INDIEN VOLLEDIGE MAAND GESTEMPELD R6/R5;
313128283131303031303030313130293030313129283131
** JJK MAANDEN VOLGEND(KOMEND) JAAR
202601202602202603202604202605202606202607202608202609202610202611202612
** D6K DAGEN/MAAND VOLGEND(KOMEND) JAAR : EERST R6 EN DAN R5
272224202622262226212622272326212622272225212723
** MAK LAATST GESTEMPELDE DAG INDIEN VOLLEDIGE MAAND GESTEMPELD R6/R5
313028273131303030293030313131313030313030303131
** @CN
00001 TYPE51
00002 TYPE5L
00003 ..ICLD.
00004 MARINF
00005 MARERR
00006 900000
00007 BETAAL
00008 ..ICL..
00009  126,1
00010 ..COV2.
00011 .......
00012 LVGSDFR
00013 LVKODFR
00014 LVLMDFR
00015 LVAEDFR
00016 LWIODFR
00017 LVEFD2R
00018 LVEDD1R
00019 LVI2E2R
00020 LVFLE1R
00021 000000
00022 05/07/25
00023 114&6B
00024 ..??...
00025 ..C....
00026 ..A....
00027 KARINA
00028 RVDSWKL
00029 WB1INF
00030 WB2INF
00031 ?X?X?X?
00032 WERKLOOSH
00033 WECH007
00034 DOCUMENTBD
00035 Y , Blanco
00036 C250.1

